diff --git a/libarchive/archive_read_support_format_zip.c b/libarchive/archive_read_support_format_zip.c
index 2055313..95983d5 100644
--- a/libarchive/archive_read_support_format_zip.c
+++ b/libarchive/archive_read_support_format_zip.c
@@ -69,6 +69,7 @@ struct zip_entry {
 
 struct zip {
 	/* Structural information about the archive. */
+	int64_t			end_of_central_directory_offset;
 	int64_t			central_directory_offset;
 	size_t			central_directory_size;
 	size_t			central_directory_entries;
@@ -264,6 +265,7 @@ archive_read_format_zip_seekable_bid(struct archive_read *a, int best_bid)
 	zip->central_directory_entries = archive_le16dec(p + 10);
 	zip->central_directory_size = archive_le32dec(p + 12);
 	zip->central_directory_offset = archive_le32dec(p + 16);
+	zip->end_of_central_directory_offset = filesize;
 
 	/* Just one volume, so central dir must all be on this volume. */
 	if (zip->central_directory_entries != archive_le16dec(p + 8))
@@ -300,10 +302,22 @@ static int
 slurp_central_directory(struct archive_read *a, struct zip *zip)
 {
 	unsigned i;
+	int64_t correction;
 	static const struct archive_rb_tree_ops rb_ops = {
 		&cmp_node, &cmp_key
 	};
 
+	/*
+	 * Consider the archive file we are reading may be SFX.
+	 * So we have to calculate a SFX header size to revise
+	 * ZIP header offsets.
+	 */
+	correction = zip->end_of_central_directory_offset -
+	    (zip->central_directory_offset + zip->central_directory_size);
+	/* The central directory offset is relative value, and so
+	 * we revise this offset for SFX. */
+	zip->central_directory_offset += correction;
+
 	__archive_read_seek(a, zip->central_directory_offset, SEEK_SET);
 	zip->offset = zip->central_directory_offset;
 	__archive_rb_tree_init(&zip->tree, &rb_ops);
@@ -339,7 +353,8 @@ slurp_central_directory(struct archive_read *a, struct zip *zip)
 		/* disk_start = archive_le16dec(p + 34); */ /* Better be zero. */
 		/* internal_attributes = archive_le16dec(p + 36); */ /* text bit */
 		external_attributes = archive_le32dec(p + 38);
-		zip_entry->local_header_offset = archive_le32dec(p + 42);
+		zip_entry->local_header_offset =
+		    archive_le32dec(p + 42) + correction;
 
 		/* If we can't guess the mode, leave it zero here;
 		   when we read the local file header we might get
