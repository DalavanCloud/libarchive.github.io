{
  "kind" : "projecthosting#user",
  "id" : "@VhhTR11SAhhNXgF8",
  "projects" : [ {
    "kind" : "projecthosting#project",
    "name" : "libarchive",
    "externalId" : "libarchive",
    "htmlLink" : "/p/libarchive/",
    "summary" : "C library and command-line tools for reading and writing tar, cpio, zip, ISO, and other archive formats",
    "description" : "= Ongoing Libarchive Development is now at Github =\r\n\r\nlibarchive's homepage is now at [http://www.libarchive.org].\r\n\r\nDevelopment is now done via git. The main git repository is at [https://github.com/libarchive/libarchive].\r\n\r\nThe wiki pages have migrated over to `GitHub` as well. See [https://github.com/libarchive/libarchive/wiki/_pages].\r\n\r\nDownloads are now found at [http://www.libarchive.org/downloads].\r\n\r\n= Issues should still be reported on !GoogleCode =\r\n\r\nThe issue tracker still remains at Google Code. See [http://code.google.com/p/libarchive/issues/list].\r\n\r\nTo report an issue, use the \"Issues\" tab above.\r\n\r\nOf course, code changes should be provided using `GitHub's` pull request feature. See [https://github.com/libarchive/libarchive/pulls].\r\n\r\n= Mailing Lists are still at !GoogleGroups =\r\n\r\nSee the sidebar to the left for links.",
    "labels" : [ "tar", "cpio", "iso", "zip", "archive", "C", "library", "gzip", "bzip2", "compress", "iso9660", "mtree", "ar", "lzma", "xz" ],
    "versionControlSystem" : "git",
    "repositoryUrls" : [ "https://libarchive.googlecode.com/git/" ],
    "issuesConfig" : {
      "kind" : "projecthosting#projectIssueConfig",
      "defaultColumns" : [ "ID", "Type", "Status", "Priority", "Milestone", "OpSys", "Owner", "Summary" ],
      "defaultSorting" : [ "" ],
      "statuses" : [ {
        "status" : "New",
        "meansOpen" : true,
        "description" : "Issue has not had initial review yet"
      }, {
        "status" : "Accepted",
        "meansOpen" : true,
        "description" : "Problem reproduced / Need acknowledged"
      }, {
        "status" : "Started",
        "meansOpen" : true,
        "description" : "Work on this issue has begun"
      }, {
        "status" : "Waiting",
        "meansOpen" : true,
        "description" : "Waiting on feedback or additional information"
      }, {
        "status" : "Fixed",
        "meansOpen" : false,
        "description" : "Developer made source code changes, QA should verify"
      }, {
        "status" : "Verified",
        "meansOpen" : false,
        "description" : "QA has verified that the fix worked"
      }, {
        "status" : "Invalid",
        "meansOpen" : false,
        "description" : "This was not a valid issue report"
      }, {
        "status" : "NotABug",
        "meansOpen" : false,
        "description" : "The reported behavior is the correct behavior"
      }, {
        "status" : "WorksForMe",
        "meansOpen" : false,
        "description" : "Unable to reproduce the issue"
      }, {
        "status" : "Duplicate",
        "meansOpen" : false,
        "description" : "This report duplicates an existing issue"
      }, {
        "status" : "WontFix",
        "meansOpen" : false,
        "description" : "We decided to not take action on this issue"
      }, {
        "status" : "Done",
        "meansOpen" : false,
        "description" : "The requested non-coding task was completed"
      } ],
      "labels" : [ {
        "label" : "Type-Defect",
        "description" : "Report of a software defect"
      }, {
        "label" : "Type-Enhancement",
        "description" : "Request for enhancement"
      }, {
        "label" : "Type-Task",
        "description" : "Work item that doesn't change the code or docs"
      }, {
        "label" : "Type-Review",
        "description" : "Request for a source code review"
      }, {
        "label" : "Type-Other",
        "description" : "Some other kind of issue"
      }, {
        "label" : "Priority-Critical",
        "description" : "Must resolve in the specified milestone"
      }, {
        "label" : "Priority-High",
        "description" : "Strongly want to resolve in the specified milestone"
      }, {
        "label" : "Priority-Medium",
        "description" : "Normal priority"
      }, {
        "label" : "Priority-Low",
        "description" : "Might slip to later milestone"
      }, {
        "label" : "Priority-None",
        "description" : "No immediate plans to work on this"
      }, {
        "label" : "OpSys-All",
        "description" : "Affects all operating systems"
      }, {
        "label" : "OpSys-Windows",
        "description" : "Affects Windows users"
      }, {
        "label" : "OpSys-Linux",
        "description" : "Affects Linux users"
      }, {
        "label" : "OpSys-FreeBSD",
        "description" : "Affects FreeSD users"
      }, {
        "label" : "OpSys-Unix",
        "description" : "Affects all Unix-like systems"
      }, {
        "label" : "OpSys-OSX",
        "description" : "Affects Mac OS X users"
      }, {
        "label" : "OpSys-Other",
        "description" : "Affects users of some other specific OS"
      }, {
        "label" : "Milestone-2.8",
        "description" : "libarchive 2.8 (expected Jan 2010)"
      }, {
        "label" : "Milestone-3.0",
        "description" : "libarchive 3.0 (expected late 2010)"
      }, {
        "label" : "Milestone-Later",
        "description" : "Someday"
      }, {
        "label" : "Component-bsdtar",
        "description" : "Issue relates to bsdtar command-line program"
      }, {
        "label" : "Component-bsdcpio",
        "description" : "Issue relates to bsdcpio command-line program"
      }, {
        "label" : "Component-libarchive",
        "description" : "Issue relates to libarchive library"
      }, {
        "label" : "Component-Build",
        "description" : "Issue relates to build and installation scripts"
      }, {
        "label" : "Component-Docs",
        "description" : "Issue relates to documentation"
      }, {
        "label" : "Security",
        "description" : "Security risk to users"
      }, {
        "label" : "Performance",
        "description" : "Performance issue"
      }, {
        "label" : "Usability",
        "description" : "Affects program usability"
      }, {
        "label" : "Maintainability",
        "description" : "Hinders future changes"
      } ],
      "prompts" : [ {
        "name" : "Defect report from user",
        "title" : "Enter one-line summary",
        "description" : "What steps will reproduce the problem?\n1.\n2.\n3.\n\nWhat is the expected output? What do you see instead?\n\n\nWhat version are you using?\n\n\nOn what operating system?\n\n\nHow did you build?  (cmake, configure, or pre-packaged binary)\n\n\nWhat compiler or development environment (please include version)?\n\n\nPlease provide any additional information below.",
        "titleMustBeEdited" : true,
        "status" : "New",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "defaultToMember" : true
      }, {
        "name" : "Defect report from developer",
        "title" : "Enter one-line summary",
        "description" : "What steps will reproduce the problem?\n1.\n2.\n3.\n\nWhat is the expected output? What do you see instead?\n\n\nPlease use labels and text to provide additional information.",
        "titleMustBeEdited" : true,
        "status" : "Accepted",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "membersOnly" : true,
        "defaultToMember" : true
      }, {
        "name" : "Review request",
        "title" : "Code review request",
        "description" : "Purpose of code changes on this branch:\n\n\nWhen reviewing my code changes, please focus on:\n\n\nAfter the review, I'll merge this branch into:\n/trunk",
        "status" : "New",
        "labels" : [ "Type-Review", "Priority-Medium" ],
        "membersOnly" : true,
        "defaultToMember" : true
      } ],
      "defaultPromptForMembers" : 1,
      "defaultPromptForNonMembers" : 0,
      "usersCanSetLabels" : false
    },
    "role" : "owner",
    "members" : [ {
      "kind" : "projecthosting#issuePerson",
      "name" : "a.henriksson",
      "htmlLink" : "https://code.google.com/u/111568587401827597992/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "amejia004",
      "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "amsibamsi",
      "htmlLink" : "https://code.google.com/u/101545234769302286350/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "bjacke",
      "htmlLink" : "https://code.google.com/u/105615513010390325516/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "brad.king@kitware.com",
      "htmlLink" : "https://code.google.com/u/102839248117834776361/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "cperciva",
      "htmlLink" : "https://code.google.com/u/111651052415732908555/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "cwilso11",
      "htmlLink" : "https://code.google.com/u/117665019939735155099/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "ferringb",
      "htmlLink" : "https://code.google.com/u/ferringb/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "ggcueroad",
      "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "joerg.sonnenberger",
      "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "kientzle",
      "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
    }, {
      "kind" : "projecthosting#issuePerson",
      "name" : "neuhauser@sigpipe.cz",
      "htmlLink" : "https://code.google.com/u/111417087111685676403/"
    } ],
    "issues" : {
      "kind" : "projecthosting#issueList",
      "totalResults" : 416,
      "items" : [ {
        "kind" : "projecthosting#issue",
        "id" : 1,
        "title" : "#undef'ing archive types at end of archive.h breaks callbacks",
        "summary" : "#undef'ing archive types at end of archive.h breaks callbacks",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ryanleeschneider",
          "htmlLink" : "https://code.google.com/u/105337071578156011972/"
        },
        "updated" : "2008-12-31T07:08:58.000Z",
        "published" : "2008-12-30T16:55:00.000Z",
        "closed" : "2008-12-31T07:08:58.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ryanleeschneider",
              "htmlLink" : "https://code.google.com/u/105337071578156011972/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Implement a read callback in 2.5.5:\r\n\r\n__LA_SSIZE_T LibArchiveReadCallback(struct archive* a, void* client_data, \r\nconst void **buffer)\r\n{\r\n //...\r\n}\r\n\r\n2. Upgrade from 2.5.5 to 2.6.0.\r\n3. Compiler errors because __LA_SSIZE_T is no longer defined.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI'd expect __LA_SSIZE_T to still be defined.  Or alternatively, a new \r\n#define like __LA_USING_CALLBACKS, which if #define'd will prevent the \r\n#undefs at the end of the header file.\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\n\r\n2.6.0 on Linux, OSX, and Win32.\r\n\r\n\r\n\r\n\r\n",
            "published" : "2008-12-30T16:55:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in libarchive/trunk revision 343.\r\n",
            "published" : "2008-12-31T07:05:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in release/2.6 revision 344 in SVN.\r\nWill be included in libarchive 2.6.1 release (likely in another week or two).\r\n",
            "published" : "2008-12-31T07:08:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 2,
        "title" : "please add support for zisofs",
        "summary" : "please add support for zisofs",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "Milestone-2.9" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "davide.cavalca",
          "htmlLink" : "https://code.google.com/u/104127855180621048810/"
        },
        "updated" : "2009-09-03T01:47:09.000Z",
        "published" : "2009-01-05T12:35:50.000Z",
        "closed" : "2009-09-03T01:47:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "davide.cavalca",
              "htmlLink" : "https://code.google.com/u/104127855180621048810/"
            },
            "content" : "zisofs is an extension to the ISO 9660 file system that adds transparent\r\ncompression support. It would be nice if libarchive supported unpacking\r\nimages created with zisofs-tools. For more information see\r\nhttp://en.wikipedia.org/wiki/Zisofs",
            "published" : "2009-01-05T12:35:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-01-05T17:08:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "klik.atekon.de",
              "htmlLink" : "https://code.google.com/u/102698207263479263350/"
            },
            "content" : "I second this!",
            "published" : "2009-02-03T03:42:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Patches are always appreciated.  The Zip reader demonstrates how to handle compressed\r\nbodies.\r\n",
            "published" : "2009-02-03T06:52:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-09T23:38:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.8" ]
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This could still happen for 2.8 if someone sends patches, but noone has shown\r\ninterest so far.\r\n",
            "published" : "2009-07-24T03:27:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Milestone-2.8", "Milestone-2.9" ]
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I've just committed in r1414.",
            "published" : "2009-09-03T01:47:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 3,
        "title" : "bsdtar fails on extracting .zip archives with empty files ",
        "summary" : "bsdtar fails on extracting .zip archives with empty files ",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "xiong.chiamiov",
          "htmlLink" : "https://code.google.com/u/107541055937377042293/"
        },
        "updated" : "2009-01-09T06:59:33.000Z",
        "published" : "2009-01-09T01:53:35.000Z",
        "closed" : "2009-01-09T06:59:33.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "xiong.chiamiov",
              "htmlLink" : "https://code.google.com/u/107541055937377042293/"
            },
            "content" : "Bsdtar, which is provided by libarchive, fails when attempting to extract a\r\nzip archive that contains empty files, as is often seen in Python packages\r\nwith init.py files.\r\n\r\n<b>What steps will reproduce the problem?</b>\n1. Download MyghtyUtils 0.52 package\r\n(http://pypi.python.org/packages/source/M/MyghtyUtils/)\r\n2. bsdtar -x -f MyghtyUtils-0.52.zip\r\n\r\nFails with messages:\r\nMyghtyUtils-0.52/lib/myghtyutils/__init__.py: Attempt to write to an empty file\r\nMyghtyUtils-0.52/lib/myghtyutils/ext/__init__.py: Attempt to write to an\r\nempty file\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\nlibarchive 2.6.0-1 on i386 Arch Linux",
            "published" : "2009-01-09T01:53:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Do you know which Zip program created these files?  I'd like to create some other\r\nexamples that exercise this problem, but I haven't been able to convince Info-Zip to\r\ncreate a Zip file with empty files encoded in this particular fashion.\r\n",
            "published" : "2009-01-09T06:41:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in trunk r407 and in release/2.6 r408.  The fix will be in the upcoming 2.6.1\r\nrelease.\r\n\r\nThe root problem here is pretty funny, actually:\r\n\r\nApparently, some Zip programs actually compress zero-length files.  This is a silly\r\nthing to do, as it only makes the file larger.  Such programs should be fixed.  (I\r\nhaven't found a program that actually does this, but I've seen archives created by it.)\r\n\r\nLibarchive's zip reader produces a fairly silly response when it tries to read such\r\nan entry:  It decompresses and returns a zero-byte block, then returns end-of-entry\r\non the second call.  This probably should be changed to just return end-of-entry\r\nimmediately.  (Actually, libarchive should be able to avoid initializing the\r\ndecompression machinery if it knows the result will be empty.  Of course, this\r\ndoesn't work for the length-at-end case; it's not quite as trivial as it sounds.)\r\n\r\nLibarchive's write-to-disk logic produces an error if you try to create a zero-byte\r\nfile and then write to it.  I changed this to always accept zero-byte write requests,\r\nwhich fixes the immediate problem.\r\n",
            "published" : "2009-01-09T06:59:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "codecaster",
              "htmlLink" : "https://code.google.com/u/codecaster@gmail.com/"
            },
            "content" : "One of the causes for this is php5-zip-5.2.9 (and earlier versions). When this module\r\nis installed, one can execute this script:\r\n\r\nif (file_put_contents(\"empty.txt\", \"\") === false) {\r\n  die(\"Cannot write files\");\r\n}\r\n\r\n$zip = new ZipArchive();\r\n$zip->open(\"corrupt.zip\", ZIPARCHIVE::CREATE);\r\n$zip->addFile(\"empty.txt\");\r\n$zip->close();\r\n\r\nWhen the file is extracted with bsdtar prior to version 2.6 the error \"Attempt to\r\nwrite to an empty file\" will be displayed, but at least the empty file will be created.\r\n\r\nI updated to libarchive 2.7 and the error disappeared, thanks. :-)",
            "published" : "2009-04-22T14:27:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 5,
        "title" : "Can't extract .tar.gz archives with C:\\",
        "summary" : "Can't extract .tar.gz archives with C:\\",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rosenfield.albert",
          "htmlLink" : "https://code.google.com/u/117240754853497489692/"
        },
        "updated" : "2009-03-09T23:24:23.000Z",
        "published" : "2009-02-17T14:43:15.000Z",
        "closed" : "2009-03-09T23:24:23.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nCreate an archive using MKS tar or any of a multitude of other tar/gzip \r\nutilities for Windows.  Some archives are created containing the full path \r\nof the compressed files; when extracting, libarchive tar chokes on these:\r\n\r\nExample:\r\n==============================================\r\nC:\\Windows\\Temp&gt; bsdtar -xvf d:\\some_file.tar\r\n\r\nx C:/agent/backup/: Failed to create dir 'C:': No such file or \r\ndirectoryCan't create 'C:/agent/backup': No such file or directory\r\nx C:/agent/backup/progress.log: Failed to create dir 'C:': No such file or \r\ndirectoryCan't create 'C:/agent/backup/progress.log': No such file or \r\ndirectory\r\n\r\n... snip ...\r\n\r\nbsdtar: Error exit delayed from previous errors.\r\n\r\nC:\\Windows\\Temp&gt;\r\n==============================================\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nWell..  GnuWin32 tar.exe has a conditional in the source code that looks \r\nat the second character of the filename, and if it's &quot;:&quot; then skips two \r\ncharacters.  The fix is only compiled in sometimes, so may or may not work \r\ndepending on the build environment used, unfortunately.\r\n\r\nI think a better solution is to just convert characters that will not \r\nsurvive WinAPI.  NTFS itself don't care what you throw at it, but WinAPI \r\ndoes not allow fx &quot;:&quot;.\r\n\r\nIn the interest of making stuff work as fast and effortlessly as possible, \r\nsilently converting all &quot;:&quot; to &quot;_&quot; in filenames (when extracting on \r\nWindows) would work just fine.\r\n\r\n(I don't have a need to force files to go into C:\\ when the archive says \r\nso, in fact I prefer tar to stay in the local filesystem.  I can always go \r\nto C:\\ myself if that's what I want.  Which it's not ;-))\r\n\r\n",
            "published" : "2009-02-17T14:43:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "GnuWin32 tar creates archives with C:\\ too, by the way.",
            "published" : "2009-02-17T14:46:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Better patch by kientzle in comment #6 of issue #6.\r\n",
            "published" : "2009-02-19T12:25:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r682 commits the change to tar to strip Windows drive letters if -P is not specified.\r\n\r\n",
            "published" : "2009-02-21T06:14:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed the winfs_naming_fix.patch from Issue 6 as r702.\r\n\r\nProper -P support for paths that include drive letters is still pending.\r\n",
            "published" : "2009-02-23T03:08:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm going to close this for now; the support for drive letters with -P seems low\r\nenough priority to be deferred.\r\n",
            "published" : "2009-03-09T23:24:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 6,
        "title" : "Feature request: docs",
        "summary" : "Feature request: docs",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rosenfield.albert",
          "htmlLink" : "https://code.google.com/u/117240754853497489692/"
        },
        "updated" : "2009-02-22T07:58:19.000Z",
        "published" : "2009-02-17T21:43:26.000Z",
        "closed" : "2009-02-22T07:58:19.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 15,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Want to real-world test a patch for bug #5 before I submit it.\r\n\r\nFollowed the build instructions at:\r\nhttp://code.google.com/p/libarchive/wiki/BuildInstructions\r\n\r\nThat is, I pulled down rHEAD with Subversion, installed CMake and tried to \r\ngenerate Visual Studio project files.\r\n\r\nCMake doesn't work, it croaks with the message &quot;YACC-NOTFOUND&quot;.  What the \r\nhell is a yacc, and why would I need one?\r\n\r\nIt would be nice if you could include working .csproj files in the source \r\npackage.\r\n\r\nOr alternatively enhance the build instructions at the above URL to show \r\nhow you can actually get a complete build instead of a half way there \r\none ;-)...\r\n",
            "published" : "2009-02-17T21:43:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "(Also, it'd be nice if you could configure the issue tracker so that non-admins can \r\ncreate Type-Enhancement items, currently it's only possible to create Type-Defect.)",
            "published" : "2009-02-17T21:44:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"...configure the issue tracker...\"\r\n\r\nDone.\r\n",
            "published" : "2009-02-18T05:08:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"What the hell is a yacc, and why would I need one?\"\r\n\r\nYacc is a tool for converting parsers described in \".y\" files into C source code. \r\nThe trunk development version requires this; the release versions will include\r\npre-built versions of the C source for those who lack a yacc.  I don't think the\r\ngetdate.y file that requires this has changed in some time; you should be able to\r\ncopy getdate.c and getdate.h from release/2.6 to get it working.\r\n\r\n\"It would be nice if you could include working .csproj files ...\"\r\n\r\nVolunteers?\r\n",
            "published" : "2009-02-18T05:12:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "\"Yacc ...\"\r\n\r\nThanks for the explanation! Could you put a link to the correct vendor/application \r\nto download and use for Windows into the build instructions?\r\n\r\n\"... copy getdate.c and getdate.h from release/2.6 to get it working.\"\r\n\r\nby \"work\" I guess you you mean to make the thing compile had I had an otherwise \r\nworking build environment, but I'm at an earlier step trying to make CMake do it's \r\nthing, so I guess that's not going to help.\r\n\r\n\"Volunteers?\"\r\n\r\nIf only I had a clue.  Anybody else?\r\n",
            "published" : "2009-02-18T12:09:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Uhm, sounds like finding volunteers and getting the build environment to a point \r\nwhere it's newbie friendly to setup might take a couple of months/years ;-)..  In \r\nthe mean time, could you test this patch (attached) and do opinions?\r\n\r\nUnable to build & test means I'm not sure if the code is in the correct spot.  Did \r\nmy best though!\r\n\r\nAttached: proposed fix for issue #5 \"Can't extract .tar.gz archives with C:\\\".\r\n",
            "published" : "2009-02-18T12:29:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "6927116650169896629",
              "fileName" : "winfs_naming_fix.patch",
              "fileSize" : 808,
              "mimetype" : "text/x-c++; charset=us-ascii"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I think I have a better fix for the immediate problem:  This patch extends the\r\ndefault \"strip leading /\" behavior of bsdtar to also strip leading drive letters. \r\n(I've done this on all platforms in case someone wants to extract a Windows tarfile\r\non Linux, for example).\r\n\r\nI think your patch is a good idea to cover cases of extracting non-Windows tar files\r\non Windows.  I'll commit it as well.\r\n\r\nBut there's still one remaining bit:  If you're on Windows and use bsdtar with the\r\n\"-P\" option, then drive letters should actually be obeyed.  This will require some\r\nwork in archive_write_disk.",
            "published" : "2009-02-18T19:39:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-7437165423162040078",
              "fileName" : "googlecode-issue5.patch",
              "fileSize" : 1090,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Sorry; that comment should have gone with Issue 5; let's keep this discussion about\r\nbetter documenting the Windows build process.\r\n\r\nUnfortunately, I don't have a Windows machine handy at the moment, but the procedure\r\nshould be something like:\r\n * Download and install a recent cmake binary from cmake.org\r\n * Run cmake:  You'll need to specify a \"generator\" (which development system you are\r\nusing) and the directory where the libarchive source code is located (the directory\r\ncontaining the CMakeLists.txt file).  I believe the default generator is for some\r\nversion of Visual Studio; there are also generators for MinGW, NMake, and others.\r\n * The result should be a usable project file, solution file, and/or Makefile for\r\nyour environment.\r\n\r\nI regularly test this on Unix and occasionally test it on MacOS/XCode.  There are a\r\ncouple of other folks around here using Windows, though; perhaps we should ask on the\r\ndiscuss mailing list and see if someone can clarify.",
            "published" : "2009-02-18T19:49:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Re comment #7:\r\n\r\nExactly what I did - it's the CMake generator that dies, complaining about \r\nYACC_something ;-).\r\n\r\nI'll go find the \"discuss\" list, see if I can join it and ask there.  Thanks!\r\n",
            "published" : "2009-02-19T12:07:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Re comment #6:\r\n\r\nEven better!  Looking forward to trying out the fixed version.  Is there a nightly \r\nbuild server, or do I need to get my own build environment running..\r\n\r\n",
            "published" : "2009-02-19T12:11:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Re the -P option:\r\n\r\nTo heck with that...\r\n\r\nDifficult to implement.\r\n----------\r\nFx if libarchive is compiled with Cygwin, C:\\ changes to /cygdrive/c.  Only on a \r\ndefault install though, it can be changed in the registry.  C:\\ might not \r\nnecessarily even be mounted.\r\n\r\nMINGW compilations would work with Windows-style paths, I guess, but in the MSYS \r\nshell it's called /c for C:\\, for what it's worth.\r\n\r\nOther emulators like MKS, Unix Services for Windows, etc probably have their own \r\npath conventions.\r\n\r\nWants to be exploited.\r\n----------\r\n-P seems like a nice way of opening up gaping security holes, by allowing the \r\ncreator of the extracted archive power over the entire filesystem.  I can't imagine \r\nmany people use it?  They probably shouldn't ;-).\r\n\r\nEasy to workaround.\r\n----------\r\nA simple \"cd /\" or \"cd /d c:\\\" before extracting the archive, and you've got the \r\nfeature of -P covered.\r\n\r\nHo hum.  If you decide to skip the feature, I can write up a paragraph for the \r\nmanual documenting that it would be a security risk and what the workaround is.\r\n",
            "published" : "2009-02-19T12:23:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe r696 (which eliminates the need for YACC entirely) and recent changes to\r\nthe build docs in the Wiki have addressed this.  Please let me know if you see ways\r\nto improve the documentation.\r\n",
            "published" : "2009-02-22T07:58:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Looked it over.  Besides for all the XXX's, looks reasonable at first glance.\r\n\r\n(Build instructions really needs to be tested though, from a blank machine, to see \r\nif the instructions actually work.)\r\n\r\nThe source package under \"downloads\" still contains the yacc stuff.  A new source \r\npackage would be nice!\r\n\r\nAlso, the Windows download package:\r\nhttp://gnuwin32.sourceforge.net/packages/libarchive.htm\r\n\r\nis horribly old, I think it's a 2.4 version.  A new Windows package would also be \r\nnice!\r\n",
            "published" : "2009-03-25T10:30:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Can't edit the wiki, but here are complete, working build instructions for building \r\non Windows.\r\n\r\n0. Install Subversion command line client.\r\n\r\n1. Get the source code with:\r\n   svn checkout -rHEAD http://libarchive.googlecode.com/svn/trunk C:/libarchive\r\n\r\n   (Prints \"At revision 842.\")\r\n\r\n2. Install CMake 2.6.\r\n\r\n3. Run CMake.\r\n\r\n4. Point source code parameter to C:/libarchive.\r\n\r\n5. Point build output parameter to C:/libarchive.\r\n   Choosing something else doesn't work.  Takes some figuring out.\r\n\r\n6. Click 'Configure'.  Wait for a long time.\r\n\r\n7. Get a screen with a lot of uninteresting red stuff.\r\n   Stuff that might interest you (enabling zlib and bzip2) are nowhere to see (?).\r\n\r\n8. Click 'Configure' again, which takes some figuring out.  Bad user interface.\r\n\r\n9. Click 'OK'.\r\n\r\n10. Open the generated C:/libarchive/libarchive.sln file in Visual Studio 9.\r\n\r\n11. Click 'Rebuild Solution'.\r\n\r\n12. Build succeeds!  Good work, guys.\r\n",
            "published" : "2009-03-25T11:49:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've updated the build instructions in the Wiki with some of this additional information.\r\n\r\nI expect to have a libarchive-2.6.990a.tar.gz package available for download in the\r\nnext couple of days.\r\n\r\nIt would be nice to get additional clarification on the Cmake issues you found.",
            "published" : "2009-03-25T21:41:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 7,
        "title" : "Crashes when call archive_read_open_filename for an file that not exists",
        "summary" : "Crashes when call archive_read_open_filename for an file that not exists",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "takashi@lans-tv.com",
          "htmlLink" : "https://code.google.com/u/takashi@lans-tv.com/"
        },
        "updated" : "2009-02-18T05:49:15.000Z",
        "published" : "2009-02-18T03:07:23.000Z",
        "closed" : "2009-02-18T05:49:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "takashi@lans-tv.com",
              "htmlLink" : "https://code.google.com/u/takashi@lans-tv.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nint main(){\r\nstruct archive* a = archive_read_new();\r\narchive_read_support_format_all(a);\r\narchive_read_open_filename(a, &quot;C:\\\\notexistent.tar&quot;, 512);\r\nreturn 0;\r\n}\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nActual Results:\r\nThe program crashes.\r\n\r\nExpected Results:\r\nThe program exits silently.\r\n\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\nlibarchive trunk r656\r\nVisual C++ 2008\r\nWindows XP SP3\r\n\r\n<b>Please provide any additional information below.</b>\narchive_read_open2 calls client_closer when opening file have been failed.\r\n",
            "published" : "2009-02-18T03:07:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "5080585716857332969",
              "fileName" : "file_close.patch",
              "fileSize" : 793,
              "mimetype" : "text/x-c; charset=utf-8"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "takashi@lans-tv.com",
              "htmlLink" : "https://code.google.com/u/takashi@lans-tv.com/"
            },
            "content" : "I have read r624 and r628.\r\nThe patch is inadequate.",
            "published" : "2009-02-18T04:55:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in r658.  I've also added the example code as a new test case.  Please verify.\r\n\r\n",
            "published" : "2009-02-18T05:49:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 8,
        "title" : "archive_compression_name returns NULL",
        "summary" : "archive_compression_name returns NULL",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "takashi@lans-tv.com",
          "htmlLink" : "https://code.google.com/u/takashi@lans-tv.com/"
        },
        "updated" : "2009-02-18T06:00:15.000Z",
        "published" : "2009-02-18T05:11:38.000Z",
        "closed" : "2009-02-18T06:00:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "takashi@lans-tv.com",
              "htmlLink" : "https://code.google.com/u/takashi@lans-tv.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nint main(){\r\n\tarchive* a = archive_read_new();\r\n\tarchive_read_support_compression_all(a);\r\n\tarchive_read_support_format_all(a);\r\n\tarchive_read_open_filename(a, &quot;D:\\\\desktop\\\\desktop.tar&quot;, 512);\r\n\tconst char* name = archive_compression_name(a);\r\n\tputs(name ? name : &quot;NULL&quot;);\r\n\treturn 0;\r\n}\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nActual Results:\r\n&quot;NULL&quot;\r\nExpected Results: \r\n&quot;none&quot;\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\nlibarchive trunk r656\r\nVisual C++ 2008\r\nWindows XP SP3\r\n\r\n<b>Please provide any additional information below.</b>\nbuild_stream overwrites a-&gt;archive.compression_name and\r\na-&gt;archive.compression_code in line 346-347 in archive_read.c.\r\nlibarchive 2.6.1 doesn't have this issue.",
            "published" : "2009-02-18T05:11:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in r659.\r\n",
            "published" : "2009-02-18T06:00:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 9,
        "title" : "compiler warnings in test suite",
        "summary" : "compiler warnings in test suite",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "Milestone-2.7", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rosenfield.albert",
          "htmlLink" : "https://code.google.com/u/117240754853497489692/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-04-13T22:56:47.000Z",
        "published" : "2009-02-19T15:25:09.000Z",
        "closed" : "2009-04-13T22:56:47.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "I think I have a different build environment from everyone else, so \r\nreporting these just in case they go unnoticed elsewhere.\r\n\r\nThis code:\r\n\r\n[test_tar_large.c line 202+]\r\n-----------\r\nDEFINE_TEST(test_tar_large)\r\n{\r\n\t/* The sizes of the entries we're going to generate. */\r\n\tstatic off_t tests[] = {\r\n\t\t/* Test for 32-bit signed overflow. */\r\n\t\t2 * GB - 1, 2 * GB, 2 * GB + 1,\r\n\t\t/* Test for 32-bit unsigned overflow. */\r\n\t\t4 * GB - 1, 4 * GB, 4 * GB + 1,\r\n\t\t/* 8GB is the &quot;official&quot; max for ustar. */\r\n\t\t8 * GB - 1, 8 * GB, 8 * GB + 1,\r\n\t\t/* Bend ustar a tad and you can get 64GB (12 octal \r\ndigits). */\r\n\t\t64 * GB - 1, 64 * GB,\r\n\t\t/* And larger entries that require non-ustar extensions. */\r\n\t\t256 * GB, 1 * TB, 0 };\r\n-----------\r\n\r\ncauses these warnings:\r\n\r\nC4307: '*' : integral constant overflow\tline 207\r\nC4307: '-' : integral constant overflow\tline 207\r\nC4307: '*' : integral constant overflow\tline 207\r\nC4307: '*' : integral constant overflow\tline 207\r\nC4307: '*' : integral constant overflow\tline 209\r\nC4307: '*' : integral constant overflow\tline 209\r\nC4307: '*' : integral constant overflow\tline 209\r\nC4307: '*' : integral constant overflow\tline 211\r\nC4307: '*' : integral constant overflow\tline 211\r\nC4307: '*' : integral constant overflow\tline 211\r\nC4307: '*' : integral constant overflow\tline 213\r\nC4307: '*' : integral constant overflow\tline 213\r\nC4307: '*' : integral constant overflow\tline 215\r\nC4307: '*' : integral constant overflow\tline 215\r\n\r\nThis code:\r\n\r\n[test_read_pax_truncated.c]\r\n-----------\r\n\tsize_t i;\r\n\tssize_t filedata_size;\r\n[...]\r\n\tfor (i = 0; i &lt; filedata_size; i++)\r\n-----------\r\n\r\nCauses these warnings:\r\n\r\nC4018: '&lt;' : signed/unsigned mismatch\tline 51\r\nC4018: '&lt;' : signed/unsigned mismatch\tline 85\r\nC4018: '&lt;' : signed/unsigned mismatch\tline 100\r\nC4018: '&lt;' : signed/unsigned mismatch\tline 134\r\nC4018: '&lt;' : signed/unsigned mismatch\tline 147\r\n\r\nin Visual Studio.\r\n",
            "published" : "2009-02-19T15:25:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try changing \"static off_t tests\" to \"static int64_t tests\" and let me know if\r\nthat fixes the first problem here.  Someone recently pointed out to me that Visual\r\nStudio declares off_t as a 32-bit integer type.  Let me know what other problems this\r\ncauses.\r\n\r\nI believe the second issue here is fixed by r690.\r\n\r\n",
            "published" : "2009-02-21T22:44:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-09T23:38:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.7" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-09T23:40:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-09T23:49:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "The second issue does seem to be fixed.  The suggestion almost but not quite fixed \r\nthe first issue.  off_t needs to be changed in two places:\r\n\r\nIndex: libarchive/test/test_tar_large.c\r\n===================================================================\r\n--- libarchive/test/test_tar_large.c    (revision 842)\r\n+++ libarchive/test/test_tar_large.c    (working copy)\r\n\r\n /* The following size definitions simplify things below. */\r\n-#define KB ((off_t)1024)\r\n-#define MB ((off_t)1024 * KB)\r\n-#define GB ((off_t)1024 * MB)\r\n-#define TB ((off_t)1024 * GB)\r\n+#define KB ((int64_t)1024)\r\n+#define MB ((int64_t)1024 * KB)\r\n+#define GB ((int64_t)1024 * MB)\r\n+#define TB ((int64_t)1024 * GB)\r\n\r\n...\r\n\r\n DEFINE_TEST(test_tar_large)\r\n {\r\n        /* The sizes of the entries we're going to generate. */\r\n-       static off_t tests[] = {\r\n+       static int64_t tests[] = {\r\n===================================================================\r\n\r\nWith the above changes, the truncation warnings disappear.\r\n\r\n(Proper unified diff attached!)\r\n",
            "published" : "2009-03-25T11:46:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "7501979098402163547",
              "fileName" : "issue9.patch",
              "fileSize" : 954,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I just committed r844, which is a slightly more ambitious version of this.\r\nPlease let me know...",
            "published" : "2009-03-25T21:12:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this has been fixed now, so I'm going to close it.\r\nPlease let me know if you still see any problems.",
            "published" : "2009-04-13T22:56:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Thanks for fixing!\r\n(Haven't got a suitable build environment for testing right now, sorry.)\r\n",
            "published" : "2009-10-01T13:48:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 10,
        "title" : "simplify build process with optional yacc parser",
        "summary" : "simplify build process with optional yacc parser",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rosenfield.albert",
          "htmlLink" : "https://code.google.com/u/117240754853497489692/"
        },
        "updated" : "2009-02-22T07:56:03.000Z",
        "published" : "2009-02-20T10:36:39.000Z",
        "closed" : "2009-02-22T07:56:03.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "The main objective of this issue is to simplify the build process.  With \r\nthe following patch, a build can be successful even with a broken or \r\nmissing yacc.\r\n\r\nAny calls to the missing functionality gives a nice error message.\r\n\r\n(See also: relevant messages on libarchive-discuss.)\r\n",
            "published" : "2009-02-20T10:36:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-229113879668576003",
              "fileName" : "yacc_optional.patch",
              "fileSize" : 3633,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r696 solves this problem completely.  yacc is no longer needed on any platform.",
            "published" : "2009-02-22T07:56:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rosenfield.albert",
              "htmlLink" : "https://code.google.com/u/117240754853497489692/"
            },
            "content" : "Nice !!!",
            "published" : "2009-03-25T10:30:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 11,
        "title" : "Document options",
        "summary" : "Document options",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "Milestone-2.7", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-03-26T07:06:32.000Z",
        "published" : "2009-03-09T23:20:02.000Z",
        "closed" : "2009-03-26T07:06:32.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The libarchive-formats man page needs to document the options supported by\r\neach format.\r\n\r\nThe bsdtar man page needs to document the --options command line argument\r\nand refer to the libarchive-formats man page for details.\r\n\r\nThe archive_read.3 and archive_write.3 man pages need to document the\r\noptions functions.\r\n",
            "published" : "2009-03-09T23:20:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-09T23:23:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-09T23:39:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.7" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-09T23:56:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "OpSys-All" ]
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've updated archive-read.3 and archive-write.3 with details about the new calls and\r\nlists of currently-supported options.\r\n\r\nStill need to update the bsdtar.1 manpage.\r\n",
            "published" : "2009-03-25T21:42:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Added --options documentation to bsdtar.1.",
            "published" : "2009-03-26T07:06:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 12,
        "title" : "Fix error handling for external programs",
        "summary" : "Fix error handling for external programs",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "Milestone-2.7" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-03-22T17:03:50.000Z",
        "published" : "2009-03-09T23:22:48.000Z",
        "closed" : "2009-03-22T17:03:50.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "If you invoke --use-compress-program with a nonexistent\r\nfilter program, no error is returned from libarchive.\r\nSimilarly, there is no error if the filter program\r\ncrashes.\r\n\r\n$ tar -tvf test.tar --use-compress-program /nonexistent\r\n$ echo $?\r\n0\r\n",
            "published" : "2009-03-09T23:22:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-09T23:39:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.7" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r790 and r791 fix the specific case described above.  The error is only reported at\r\narchive_close(), which is less than ideal.  I'm going to see if I can find a clean\r\nway to reap the child earlier in these cases.\r\n\r\n\r\n",
            "published" : "2009-03-18T10:04:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-18T10:04:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This could be improved, but it's good enough for now.",
            "published" : "2009-03-22T17:03:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 13,
        "title" : "Cmake install target",
        "summary" : "Cmake install target",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Priority-Medium", "Type-Enhancement", "Milestone-2.7" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2009-03-19T20:05:19.000Z",
        "published" : "2009-03-09T23:30:15.000Z",
        "closed" : "2009-03-19T20:05:19.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The cmake build process should support at least\r\na basic install target for Linux/Unix systems.\r\n",
            "published" : "2009-03-09T23:30:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-09T23:39:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.7" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-16T18:11:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I've commited about this issue at r775.\r\nIt's tested on FreeBSD stable and Windows.\r\nI'll test it on Ubuntu. I believe it works on other platforms.",
            "published" : "2009-03-16T19:40:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Good work!\r\n",
            "published" : "2009-03-16T21:13:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I've tested the installation on Ubuntu and it works fine.",
            "published" : "2009-03-19T20:05:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 14,
        "title" : "bsdcpio_test failed on Windows",
        "summary" : "bsdcpio_test failed on Windows",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows", "Component-bsdcpio", "Milestone-2.7" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2009-03-16T12:58:23.000Z",
        "published" : "2009-03-10T17:33:47.000Z",
        "closed" : "2009-03-16T12:58:23.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Many tests of bsdcpio_test are faild on Windows.\r\nThere is a serious error which invoke Visual Studio.\r\n\r\nThese tests are not passed:\r\n  test_option_a\r\n  test_option_c\r\n  test_option_d\r\n  test_option_f\r\n  test_option_m\r\n  test_option_t\r\n  test_option_version\r\n  test_option_y\r\n  test_owner_parse\r\n  test_passthrough_dotdot\r\n  test_passthrough_reverse\r\n",
            "published" : "2009-03-10T17:33:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Now all cpio tests passed by r773 and other changes(from r579 to r772).",
            "published" : "2009-03-16T12:58:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 15,
        "title" : "Recent win32 portability changes break cygwin",
        "summary" : "Recent win32 portability changes break cygwin",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows", "Milestone-2.7" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "cwilso11",
          "htmlLink" : "https://code.google.com/u/117665019939735155099/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "cwilso11",
          "htmlLink" : "https://code.google.com/u/117665019939735155099/"
        },
        "updated" : "2009-03-21T14:36:00.000Z",
        "published" : "2009-03-16T03:53:13.000Z",
        "closed" : "2009-03-21T14:36:00.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 14,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cwilso11",
              "htmlLink" : "https://code.google.com/u/117665019939735155099/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. checkout svn rev 772\r\n2. bootstrap and (try to) build\r\n3. see glorious errors...\r\n\r\nOn cygwin, it is possible for _WIN32 to be defined -- which disables a lot\r\nof unix-oriented code and enables w32-specific workarounds. But, on cygwin,\r\nthat's the job of the cygwin runtime; in almost all cases, the proper\r\nchoice is to use the &quot;unix&quot; code and let cygwin do its thing.\r\n\r\nMost of this patch is mechanical:\r\n\r\n#ifdef _WIN32  --&gt; #if defined(_WIN32) &amp;&amp; !defined(__CYGWIN__)\r\n#ifndef _WIN32 --&gt; #if !defined(_WIN32) || defined(__CYGWIN__)\r\n\r\nbut not *always*. I also created new files \r\n\r\ncpio/cpio_cygwin.c\r\ncpio/cpio_cygwin.h\r\ntar/bsdtar_cygwin.c\r\ntar/bsdtar_cygwin.h\r\n\r\nby copying the relevant portions of the _windows files (cygwin doesn't\r\nprovide a mechanism to determine whether a user is privileged or not, so\r\nyou have to use the w32api to do so...)\r\n\r\nFinally, I revised the Makefile.am to add the new files to the _SOURCES as\r\nappropriate, and updated configure.ac to supply the necessary\r\nAM_CONDITIONALS and AC_DEFINES.  I tried to also update CMakeLists\r\nsimilarly, but I'm not a CMake guru so I'm not sure if I did that part\r\nright; it's untested.\r\n\r\nThe rest, though, is tested: I maintain the cygwin libarchive package\r\nhttp://cygwin.com/ml/cygwin-announce/2009-03/msg00057.html\r\nhttp://cygwin.com/ml/cygwin-announce/2009-03/msg00054.html\r\n\r\nand with these changes it once again passes all of the tests in the\r\ntestsuite (and actually builds, too...)\r\n\r\nI'm fairly sure that these changes do not impact other platforms at all,\r\nsince they are all guarded by #ifdefs or AM_CONDITIONALs, but I'm not set\r\nup to easily verify that.  If you like, I can break this relatively large\r\npatch into smaller chunks, complete with ChangeLog entries, but I'm not\r\nsure how you prefer to operate on this project.\r\n\r\nThe attached patch is against rev 722.\r\n\r\n CMakeLists.txt                                        |   58 ++++---\r\n Makefile.am                                           |   68 ++++++++\r\n configure.ac                                          |   22 ++\r\n cpio/cpio.c                                           |   26 ++-\r\n cpio/cpio_cygwin.c                                    |  139 +++++++++++++++++\r\n cpio/cpio_cygwin.h                                    |   41 +++++\r\n cpio/cpio_platform.h                                  |    4 \r\n cpio/cpio_windows.c                                   |    3 \r\n cpio/test/main.c                                      |   10 -\r\n cpio/test/test.h                                      |   18 +-\r\n cpio/test/test_0.c                                    |    2 \r\n cpio/test/test_basic.c                                |   14 -\r\n cpio/test/test_format_newc.c                          |   14 +\r\n cpio/test/test_gcpio_compat.c                         |   10 -\r\n cpio/test/test_option_L.c                             |   10 -\r\n cpio/test/test_option_a.c                             |    2 \r\n cpio/test/test_option_c.c                             |   12 -\r\n cpio/test/test_option_f.c                             |    4 \r\n cpio/test/test_option_u.c                             |    2 \r\n cpio/test/test_option_version.c                       |    2 \r\n cpio/test/test_owner_parse.c                          |   56 +++++--\r\n cpio/test/test_passthrough_dotdot.c                   |    2 \r\n cpio/test/test_passthrough_reverse.c                  |    4 \r\n libarchive/archive.h                                  |    4 \r\n libarchive/archive_check_magic.c                      |    4 \r\n libarchive/archive_entry.c                            |    2 \r\n libarchive/archive_entry.h                            |    4 \r\n libarchive/archive_read_disk_set_standard_lookup.c    |    6 \r\n libarchive/archive_read_support_compression_program.c |    2 \r\n libarchive/archive_string.c                           |   16 +-\r\n libarchive/archive_windows.c                          |    5 \r\n libarchive/archive_write_disk.c                       |   21 +-\r\n libarchive/archive_write_disk_set_standard_lookup.c   |    4 \r\n libarchive/archive_write_set_compression_program.c    |    2 \r\n libarchive/archive_write_set_format_mtree.c           |    6 \r\n libarchive/config_windows.h                           |    2 \r\n libarchive/filter_fork_windows.c                      |    4 \r\n libarchive/test/main.c                                |   12 -\r\n libarchive/test/test.h                                |   11 -\r\n libarchive/test/test_read_disk.c                      |    6 \r\n libarchive/test/test_read_extract.c                   |    6 \r\n libarchive/test/test_write_disk.c                     |   18 +-\r\n libarchive/test/test_write_disk_failures.c            |    2 \r\n libarchive/test/test_write_disk_hardlink.c            |    2 \r\n libarchive/test/test_write_disk_perms.c               |    4 \r\n libarchive/test/test_write_disk_secure.c              |    4 \r\n tar/bsdtar.c                                          |   13 +\r\n tar/bsdtar.h                                          |    1 \r\n tar/bsdtar_cygwin.c                                   |  141\r\n++++++++++++++++++\r\n tar/bsdtar_cygwin.h                                   |   44 +++++\r\n tar/bsdtar_platform.h                                 |    4 \r\n tar/bsdtar_windows.c                                  |    3 \r\n tar/cmdline.c                                         |    1 \r\n tar/read.c                                            |    2 \r\n tar/test/main.c                                       |   10 -\r\n tar/test/test.h                                       |    9 -\r\n tar/test/test_0.c                                     |    2 \r\n tar/test/test_basic.c                                 |   14 -\r\n tar/test/test_copy.c                                  |    4 \r\n tar/test/test_patterns.c                              |    2 \r\n tar/test/test_strip_components.c                      |    2 \r\n tar/test/test_symlink_dir.c                           |   12 -\r\n tar/test/test_windows.c                               |    8 -\r\n tar/tree.c                                            |   14 -\r\n tar/write.c                                           |    2 \r\n 65 files changed, 764 insertions(+), 194 deletions(-)\r\n\r\n\r\n\r\n",
            "published" : "2009-03-16T03:53:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-6701058638004250065",
              "fileName" : "libarchive-rev722-cygwin.patch",
              "fileSize" : 85309,
              "mimetype" : "text/x-patch"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you very much.  I've read through this once and it looks really quite good,\r\nalthough I did notice a few stylistic nits.  It will take me another day or two to\r\nread through this again and decide how best to handle it.\r\n",
            "published" : "2009-03-16T04:51:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "It's nice. I like it.",
            "published" : "2009-03-16T11:53:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cwilso11",
              "htmlLink" : "https://code.google.com/u/117665019939735155099/"
            },
            "content" : "I agree there are a few warts, and stuff that you probably don't want in the official\r\nrepo:\r\n\r\n(1) AC_PROG_LIBTOOL -> LT_INIT implies requiring libtool-2.2.x or better. Are you\r\nready to do that?\r\n\r\n(1a) I haven't tested my configure.ac changes with anything older than autoconf-2.63.\r\nI don't know what version of autoconf you prefer. I don't THINK I did anything that\r\nrequires newer than 2.59.\r\n\r\n(2) I'm pretty sure you omitted the GNU tar \"--same-owner\" option for a reason; I\r\nadded it back because it's sometimes useful on cygwin. (\"I don't care if tar can't\r\nfigure out that I actually have privileges; I just want it to go ahead a TRY to\r\nchown; it'll work or it'll fail...\")\r\n\r\n(3) explicitly linking against /usr/lib/binmode.o -- even if restricted to cygwin\r\n$hosts only -- is not portable.  What if you're cross-building (e.g. $build !=\r\ncygwin, so /usr/lib/ contains linux stuff?).  I'll ask on the cygwin list if there is\r\na better way to do this (e.g. a cygwin analogue to _set_fmode()). Otherwise, a\r\nconfigure option to add user-specified \"EXTRA_APP_LDOBS\" to the link commands of all\r\napplications, but not the library, might be a better choice. Then, it could default\r\nto empty everywhere except on $host=cygwin where it defaults to /usr/lib/binmode.o\r\n(and, configure could check if $host=cygwin but $build!=cygwin, and error out if the\r\noption is not specified).\r\n\r\n(4) There are other ways than using AM_CONDITIONALS to include additional sources.\r\nFor instance, you could have a \"bsdtar_platform_extra.c\" that is always built, but it\r\nuses #defines to control #including bsdtar_cygwin.c (yes, .c) or bsdtar_windows.c or\r\n<nothing>, just like bsdtar_platform.h uses #defines to control loading the specific\r\n.h files.  However, that sometimes causes linker warnings because if you #include\r\nnothing -- then the .c file is effectively empty, the .o contains no symbols, and\r\nsome linkers don't like that. This is why I went the AM_CONDITIONAL route. Besides,\r\nyou already do something similar in the CMakeList, so I figured that was the way to go.\r\n\r\n(5) I have *no* idea if the changes I made to the CMakeList are correct.\r\n\r\n(6) I haven't yet tested if 'make dist' creates a full and completely buildable\r\narchive. It should be a lot closer than before; previously Makefile.am was missing a\r\nlot of stuff that I've added to the various EXTRA_DIST_* vars.\r\n\r\nHowever, if the bulk of the patch is acceptable (e.g. and is verified not break other\r\nplatforms) -- especially the mechanical bits -- that'd be good to get into the repo\r\nbefore the 2.7.0 release.\r\n\r\nBTW, is it possible to fix the typo in the Issue title? cygiwn -> cygwin?",
            "published" : "2009-03-16T16:23:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "(1) libtool version ... autoconf version\r\n\r\n    As long as those changes are separate commits we retain the option of backing\r\nthem out.  It would be good to make sure we get those requirements documented,\r\nthough.  Perhaps the INSTALLING description should be updated.\r\n\r\n(2) I'm pretty sure you omitted the GNU tar \"--same-owner\" option for a reason...\r\n\r\n    The reason:  Nobody asked.  bsdtar was never intended to be a GNU tar clone; I\r\nhonestly believe that a fair number of GNU tar options may have been good ideas at\r\nthe time but are mostly useless now, so I've taken the stance that bsdtar will adopt\r\noptions from GNU tar (and other tar implementations) when people ask for those\r\nspecific options.\r\n\r\n(3) cygwin, cross-building\r\n\r\n    Platform esoterica like this is tedious to work out.  Your idea of\r\nEXTRA_APP_LDOBS sounds like a reasonable approach.  Although it also sounds like\r\nanother nudge towards breaking libarchive apart from bsdtar and bsdcpio.  I don't\r\nthink I'm personally ready for that yet, but it might be getting closer.\r\n\r\n(4) handling platform specific code\r\n\r\n  I want to spend the 2.8 cycle looking at this issue.  We've hacked up a lot of\r\nstuff to get the Windows builds working at all; there's definitely room for\r\nimprovement.  If we really need specific platform support for that many platforms,\r\nthen I'd rather simply fork archive_write_disk and archive_read_disk_entry_from_file,\r\nwhich are the two API entries that hold almost all of the platform-specific code. \r\n(Almost all of libarchive is clean, portable code with no platform dependencies at\r\nall.)  Platform-specific code in bsdtar and bsdcpio should be carefully pushed down\r\ninto the library.\r\n\r\n(5) CmakeList updates\r\n\r\n   I'm hoping to start the 2.7 pre-release testing in another week or so.\r\n\r\n(6) 'make dist'\r\n\r\n   'make dist' has worked well for years; I'll let you know if you've broken it.  ;-)\r\n\r\nBefore 2.7 --- absolutely.\r\n\r\nFix the title --- done.",
            "published" : "2009-03-16T17:15:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Recent win32 portability changes break cygwin",
              "labels" : [ "Milestone-2.7" ]
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Re: libtool and autoconf versions.\r\n\r\nOne of my sanity checks for version acceptance is the FreeBSD ports tree, which\r\ncurrently ships libtool 1.5.26 and autoconf 2.62.  I'd prefer to not require anything\r\nlater than those versions unless we get some significant benefit from doing so.\r\n",
            "published" : "2009-03-16T17:26:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cwilso11",
              "htmlLink" : "https://code.google.com/u/117665019939735155099/"
            },
            "content" : "Okay, I've committed the first three chunks. These are the mechanical modifications\r\nto the #defines for the libarchive, tar, and cpio subdirectories.\r\n\r\nWith those three, I can't yet build on cygwin (need the rest of the patchset, for\r\nthat), but building on linux works and passes all tests, both before and after -- so\r\nat least I didn't do anything silly.\r\n\r\nRemaining chunks:\r\n\r\nThese four should be uncontroversial, assuming it is ok to add the --same-owner option.\r\nbsdtar_02_cygwin_extra_files.patch\r\ncpio_02_cygwin_extra_files.patch\r\ncpio_04_test_nlinks.patch\r\nbsdtar_04_option_same_owner.patch\r\n\r\nThese will need a little reworking, to accommodate previous comments and recent svn\r\nchanges...\r\nlibarchive_02_other.patch\r\nbsdtar_03_other.patch\r\ncpio_03_other.patch\r\nbuild_system.patch\r\n\r\nBut the mechanical ones were the bulk of the changes.\r\n\r\n[*] I needed the following patch to cpio/test/test.h to build on linux; otherwise I\r\ngot a warning (-Werror) about 'time' function not defined, assuming int..\r\n\r\n@@ -63,6 +63,17 @@\r\n #endif\r\n #include <wchar.h>\r\n \r\n+#ifdef TIME_WITH_SYS_TIME \r\n+# include <sys/time.h> \r\n+# include <time.h> \r\n+#else \r\n+# ifdef HAVE_SYS_TIME_H \r\n+#  include <sys/time.h> \r\n+# else \r\n+#  include <time.h> \r\n+# endif \r\n+#endif \r\n+\r\n #ifdef USE_DMALLOC\r\n #include <dmalloc.h>\r\n #endif\r\n",
            "published" : "2009-03-18T04:40:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Seems to still build fine on FreeBSD as well.\r\n",
            "published" : "2009-03-18T10:01:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-18T10:05:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "cwilso11"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cwilso11",
              "htmlLink" : "https://code.google.com/u/117665019939735155099/"
            },
            "content" : "Just committed parts 4-7:\r\nbsdtar_02_cygwin_extra_files.patch\r\ncpio_02_cygwin_extra_files.patch\r\ncpio_04_test_nlinks.patch\r\nbsdtar_04_option_same_owner.patch\r\n\r\nStill passes all tests on linux.\r\n\r\nOne comment: my version of [bsdtar|cpio]_cygwin.c retains the local #define\r\n_WIN32_WINNT (plus an extra #define WINVER; both are necessary when using the mingw\r\nw32api headers as cygwin/mingw do, rather then the official MS api headers).\r\n\r\nThis is contrary to the change in r786, which moves this #define from\r\n[bsdtar|cpio]_windows.c to config.h (effectively) -- but only when building with\r\ncmake.  Since my comment on r786 in which I expressed no opinion, I now think r786\r\nshould be reverted -- for two reasons. (1) These sorts of #defines -- WINVER,\r\nPOSIX_SOURCE, GNU_SOURCE, etc -- are specific to the translation unit being compiled,\r\nnot the entire package. You're indicating that THIS file needs certain declarations\r\n-- not that everything in the package needs those declarations.  Really, these sorts\r\nof #defines should *never* be in .h files -- because then some .c that, perhaps down\r\nthe road, needs stuff from POSIX2 rather than POSIX1e, or from WinXP rather than\r\nWin2k, must do the #undef dance. This is bad. (2) Secondly, of course, r786 breaks\r\nmingw builds that are hosted on msys or cygwin, where you might actually run\r\nconfigure, instead of using cmake.\r\n\r\nThe remaining four chunks need a little more work. I've had a conversation on the\r\ncygwin lists about the binmode.o issue; see this thread:\r\nhttp://cygwin.com/ml/cygwin/2009-03/msg00599.html\r\n",
            "published" : "2009-03-19T03:14:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm not sufficiently versed in Windows development to debate whether WINVER and\r\n_WIN32_WINNT should be defined per-translation unit or per-application.  (And I know\r\nexamples of \"these sorts of #defines\" that must be set consistently across an\r\napplication, so your argument from general principle isn't very convincing.) \r\nCertainly we need to ensure that both configure-based and cmake-based builds work\r\ncorrectly.  So it does make sense to put such knowledge into .h and .c source files\r\nwhere feasible instead of putting it into the build framework since knowledge in the\r\nbuild framework will need to be duplicated.\r\n",
            "published" : "2009-03-19T03:38:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cwilso11",
              "htmlLink" : "https://code.google.com/u/117665019939735155099/"
            },
            "content" : "I've now committed all but the build system changes to svn, although part 12 (r819)\r\ndid include a small piece of the build system changes.  So far, still continues to\r\nbuild and pass all tests on linux [*].\r\n\r\n[*] I included in part 8 (r815) a variant of the patch posted above in comment #6, as\r\nwell a the related parts of the original big cygwin patch). Also, r808 fixed Ubuntu\r\n-- but broke Mandriva; it's an order-of-inclusion thing; fixed in r815. I hope this\r\nway works also for Ubuntu...\r\n",
            "published" : "2009-03-20T08:01:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cwilso11",
              "htmlLink" : "https://code.google.com/u/117665019939735155099/"
            },
            "content" : "Part 14 (build system changes) is committed at r827. This is the last bit; libarchive\r\nnow compiles and passes all tests on cygwin. Also tested on linux with autoconf-2.61,\r\nautomake-1.10, and libtool-1.5.22, and passes all tests.\r\n\r\nI didn't need to add a configure option for binmode.o; itstead, I borrowed a page\r\nfrom libtool and extracted the library search path from the compiler, and then\r\nsearched that path for binmode.o if $host is cygwin.  This should work even if\r\ncross-building.\r\n\r\nFinally, I updated all of the *_EXTRA_DIST variables as necessary. My final tarball\r\nwas still missing the following files:\r\n\r\nbuild/autogen.sh\r\nbuild/release.sh\r\ncontrib/shar/Makefile\r\ncpio/Makefile\r\ncpio/test/Makefile\r\nexamples/minitar/Makefile\r\nlibarchive/Makefile\r\nlibarchive/test/.cvsignore\r\nlibarchive/test/Makefile\r\nPROJECTS\r\ntar/Makefile\r\ntar/test/Makefile\r\n\r\nBut I wasn't sure whether any of those should be included, anyway.",
            "published" : "2009-03-21T14:30:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cwilso11",
              "htmlLink" : "https://code.google.com/u/117665019939735155099/"
            },
            "content" : "",
            "published" : "2009-03-21T14:36:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 16,
        "title" : "There are no documents on Windows platform.",
        "summary" : "There are no documents on Windows platform.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows", "Milestone-2.7", "Component-Docs" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-03-22T17:03:26.000Z",
        "published" : "2009-03-22T12:13:48.000Z",
        "closed" : "2009-03-22T17:03:26.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "A user who uses libarchive on Windows platform cannot read Unix style man\r\npages.\r\n\r\nWe need at least ascii text documents(pdf is better) for Windows platform.\r\nThat documents can be generated by\r\n  groff -man -T ascii &lt;man-file&gt; &gt; &lt;man-file&gt;.txt\r\n  or\r\n  groff -man -T ps &lt;man-file&gt; | ps2pdf - &lt;man-file&gt;.pdf\r\n",
            "published" : "2009-03-22T12:13:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "",
            "published" : "2009-03-22T12:14:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The \"make dist\" process already does this; it creates text documents and places them\r\nin doc/text.  PDF is a good idea; I'll add that.\r\n",
            "published" : "2009-03-22T16:53:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"make dist\" now creates PDF versions of the documentation as well.\r\n",
            "published" : "2009-03-22T17:03:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 17,
        "title" : "Build fails under 64-bit Interix 6.1",
        "summary" : "Build fails under 64-bit Interix 6.1",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "lostfreeman",
          "htmlLink" : "https://code.google.com/u/106253897947231885443/"
        },
        "updated" : "2009-04-13T22:57:22.000Z",
        "published" : "2009-04-01T00:02:11.000Z",
        "closed" : "2009-04-13T22:57:22.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lostfreeman",
              "htmlLink" : "https://code.google.com/u/106253897947231885443/"
            },
            "content" : "1. ./configure\r\n2. make\r\n\r\nIn file included from libarchive/archive_entry.c:69:\r\nlibarchive/archive_entry_private.h:121: error: parse error \r\nbefore &quot;uint64_t&quot;\r\nlibarchive/archive_entry_private.h:121: warning: no semicolon at end of \r\nstruct or union\r\nlibarchive/archive_entry_private.h:121: warning: no semicolon at end of \r\nstruct or union\r\nlibarchive/archive_entry_private.h:139: error: parse error before '}' token\r\nlibarchive/archive_entry_private.h:139: warning: data definition has no \r\ntype or storage class\r\nlibarchive/archive_entry_private.h:177: error: parse error before '}' token\r\nlibarchive/archive_entry.c: In function `archive_entry_clear':\r\nlibarchive/archive_entry.c:365: error: dereferencing pointer to incomplete \r\ntype\r\nlibarchive/archive_entry.c:366: error: dereferencing pointer to incomplete \r\ntype\r\nlibarchive/archive_entry.c:367: error: dereferencing pointer to incomplete \r\ntype\r\n\r\nthen many &quot;error: dereferencing pointer to incomplete type&quot; follow for \r\neach dereference of any struct archive_entry* variable.\r\n\r\nWhat version of the product are you using?\r\n2.6.0 and 2.6.2 are affected\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2009-04-01T00:02:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "8580180402049056207",
              "fileName" : "config.h",
              "fileSize" : 15888,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try the attached patch and let me know if this fixes it for you.\r\n\r\nIt looks like \"uint64_t\" isn't being defined.  According to config.h, your system has\r\nboth inttypes.h and stdint.h, so I'm going to guess that inttypes.h doesn't define\r\nuint64_t.  If I'm right, then this patch should fix it.\r\n",
            "published" : "2009-04-01T03:11:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "29246812921269970",
              "fileName" : "interix64bit.proposed.patch",
              "fileSize" : 514,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lostfreeman",
              "htmlLink" : "https://code.google.com/u/106253897947231885443/"
            },
            "content" : "Well, now the other error appears:\r\n\r\ngcc -DHAVE_CONFIG_H -I.  -I./libarchive -I./libarchive   -g -O2 -MT tar/bsdtar-r\r\nead.o -MD -MP -MF tar/.deps/bsdtar-read.Tpo -c -o tar/bsdtar-read.o `test -f 'ta\r\nr/read.c' || echo './'`tar/read.c\r\ntar/read.c: In function `list_item_verbose':\r\ntar/read.c:379: error: `uintmax_t' undeclared (first use in this function)\r\ntar/read.c:379: error: (Each undeclared identifier is reported only once\r\ntar/read.c:379: error: for each function it appears in.)\r\ntar/read.c:379: error: parse error before \"st\"",
            "published" : "2009-04-01T07:54:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Joerg Sonnenberger just committed a change to trunk that should fix this.  Could you\r\ntake a look at r897?\r\n",
            "published" : "2009-04-01T18:37:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe Joerg Sonnenberger's r897 has fixed this, so I'm going to close it.",
            "published" : "2009-04-13T22:57:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 18,
        "title" : "XZ/LZMA writer fails if compression-level option is set > 6",
        "summary" : "XZ/LZMA writer fails if compression-level option is set > 6",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2012-12-28T11:30:44.000Z",
        "published" : "2009-04-01T20:01:56.000Z",
        "closed" : "2009-04-02T00:33:23.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "To see this, apply the following patch and re-run the test suite:\r\n\r\nIndex: libarchive/test/test_write_compress_lzma.c\r\n===================================================================\r\n--- libarchive/test/test_write_compress_lzma.c  (revision 898)\r\n+++ libarchive/test/test_write_compress_lzma.c  (working copy)\r\n@@ -120,7 +120,7 @@\r\n        assertEqualIntA(a, ARCHIVE_WARN,\r\n            archive_write_set_compressor_options(a, &quot;compression-level=99&quot;));\r\n        assertEqualIntA(a, ARCHIVE_OK,\r\n-           archive_write_set_compressor_options(a, &quot;compression-level=6&quot;));\r\n+           archive_write_set_compressor_options(a, &quot;compression-level=9&quot;));\r\n        assertA(0 == archive_write_open_memory(a, buff, buffsize, &amp;used2));\r\n        for (i = 0; i &lt; 100; i++) {\r\n                sprintf(path, &quot;file%03d&quot;, i);\r\n\r\nPlaying with the values here, the test passes with compression-level set to\r\n6 or less, but 7 or higher seems to consistently fail.  I've looked through\r\nthe docs for liblzma and it looks like this should work for\r\ncompression-level=9.\r\n\r\nSame issue for test_write_compress_xz\r\n",
            "published" : "2009-04-01T20:01:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm inclined to just edit the XZ/LZMA options handler as follows, but I'd like for\r\nsomeone else to take a look at this and see if they can figure out what the real\r\nproblem is before we do that.\r\n\r\nIndex: trunk/libarchive/archive_write_set_compression_xz.c\r\n===================================================================\r\n--- trunk/libarchive/archive_write_set_compression_xz.c (revision 898)\r\n+++ trunk/libarchive/archive_write_set_compression_xz.c (working copy)\r\n@@ -236,6 +236,8 @@\r\n                    value[1] != '\\0')\r\n                        return (ARCHIVE_WARN);\r\n                config->compression_level = value[0] - '0';\r\n+               if (config->compression_level > 6)\r\n+                       config->compression_level = 6;\r\n                return (ARCHIVE_OK);\r\n        }\r\n \r\n",
            "published" : "2009-04-01T20:04:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I committed the last patch here in r904 so that \"compression-level=9\" doesn't break\r\nanything.  I'd still like to know why presets larger than 6 break the writer, though.\r\n\r\n",
            "published" : "2009-04-02T00:33:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vanav@vanav.org",
              "htmlLink" : "https://code.google.com/u/vanav@vanav.org/"
            },
            "content" : "\"xz\" command uses the same lzma_lzma_preset() and works correctly for presets > 6. Is there still any reason for this hack?",
            "published" : "2012-12-28T11:30:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 19,
        "title" : "Prefer getpwnam_r/getgrnam_r in archive_write_disk_set_standard_lookup",
        "summary" : "Prefer getpwnam_r/getgrnam_r in archive_write_disk_set_standard_lookup",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "Milestone-2.7" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-04-02T00:31:42.000Z",
        "published" : "2009-04-01T20:07:59.000Z",
        "closed" : "2009-04-02T00:31:42.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "getpwnam_r and getgrnam_r are thread-safe, so\r\narchive_write_disk_set_standard_lookup should use those when they're available.\r\n\r\narchive_read_disk_set_standard_lookup has example code that uses getpwuid_r\r\nand getgrgid_r\r\n",
            "published" : "2009-04-01T20:07:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Implemented in r905.\r\n",
            "published" : "2009-04-02T00:31:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 20,
        "title" : "Fix Zip Writer",
        "summary" : "Fix Zip Writer",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "amsibamsi",
          "htmlLink" : "https://code.google.com/u/101545234769302286350/"
        },
        "updated" : "2009-05-27T15:40:51.000Z",
        "published" : "2009-04-13T22:55:49.000Z",
        "closed" : "2009-05-27T15:40:51.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've committed the last draft of a Zip writer for libarchive, including a\r\nnumber of test cases.\r\n\r\nThis still needs some work to complete.\r\n",
            "published" : "2009-04-13T22:55:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-04-13T22:57:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amsibamsi",
              "htmlLink" : "https://code.google.com/u/101545234769302286350/"
            },
            "content" : "",
            "published" : "2009-04-15T19:35:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted",
              "owner" : "amsibamsi"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "",
            "published" : "2009-05-27T15:40:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 21,
        "title" : "test_option_tnv.stdout.uu is wrong",
        "summary" : "test_option_tnv.stdout.uu is wrong",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "timothy.redaelli",
          "htmlLink" : "https://code.google.com/u/timothy.redaelli/"
        },
        "updated" : "2009-04-20T18:24:09.000Z",
        "published" : "2009-04-16T10:56:49.000Z",
        "closed" : "2009-04-20T18:24:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "timothy.redaelli",
              "htmlLink" : "https://code.google.com/u/timothy.redaelli/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. make check\r\n\r\nWhat is the expected output?\r\nPASS\r\nWhat do you see instead?\r\n1 of 25 tests reported failures\r\n Total of 796 assertions checked.\r\n Total of 1 assertions failed.\r\n Total of 1 assertions skipped.\r\nFAIL: bsdcpio_test\r\n=====================================\r\n1 of 3 tests failed\r\nPlease report to kientzle@freebsd.org\r\n=====================================\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\n2.6.992a on Linux and FreeBSD\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2009-04-16T10:56:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-849313349347835117",
              "fileName" : "libarchive-2.6.992a-test_option_t.patch",
              "fileSize" : 387,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What timezone are you in?  <sigh>\r\n",
            "published" : "2009-04-16T17:21:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-04-16T17:21:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.7" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The archive has a timestamp of 1, which is indeed Dec 31, 1969 west of Greenwich but\r\nJan 1, 1970 east of Greenwich.\r\n\r\n< -rw-r--r--   1 1000     1000            0 Dec 31  1969 file\r\n---\r\n> -rw-r--r--   1 1000     1000            0 Jan  1  1970 file\r\n\r\nChanging the reference file will just break it in different timezones.\r\nI've disabled this check in r1004 until I can come up with something more robust.\r\n",
            "published" : "2009-04-16T17:44:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "timothy.redaelli",
              "htmlLink" : "https://code.google.com/u/timothy.redaelli/"
            },
            "content" : "Why cannot you use TZ=UTC?",
            "published" : "2009-04-16T18:37:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-8567809247148387653",
              "fileName" : "UTC.patch",
              "fileSize" : 499,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Windows doesn't have /usr/bin/env.\r\n",
            "published" : "2009-04-16T22:55:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "What about just using setenv()?",
            "published" : "2009-04-16T22:59:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"What about just using setenv()?\"\r\n\r\nThat might work.  Let's try that in trunk and see what happens.  I'd rather not put\r\nthis change into 2.7 until we get thorough test coverage of it.\r\n",
            "published" : "2009-04-17T01:21:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Milestone-2.7", "Milestone-2.8" ]
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "After thinking about it some, I'm not enthusiastic about setenv():  the code to set\r\nand then restore the TZ value is a little tedious, and I don't want to leave the\r\ntimezone set to UTC for every test, since we have seen bugs in the past that only\r\nappeared in certain timezones.\r\n\r\nSince we're testing a single line of output that has only two possible values,\r\nI found it easier to just hardcode the two possibilities in the C source.\r\nThis should work on all platforms.  Implemented in r1037.\r\n",
            "published" : "2009-04-20T18:24:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 22,
        "title" : "Conditionally disable openssl requirement for mtree format in 2.7.0",
        "summary" : "Conditionally disable openssl requirement for mtree format in 2.7.0",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "xtraeme",
          "htmlLink" : "https://code.google.com/u/106812073015308749022/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "cc" : [ {
          "kind" : "projecthosting#issuePerson",
          "name" : "brad.king.kitware",
          "htmlLink" : "https://code.google.com/u/106779169582588935788/"
        } ],
        "updated" : "2010-01-03T19:11:59.000Z",
        "published" : "2009-04-17T04:00:03.000Z",
        "closed" : "2010-01-03T19:11:59.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "xtraeme",
              "htmlLink" : "https://code.google.com/u/106812073015308749022/"
            },
            "content" : "<b>What version of the product are you using? On what operating system?</b>\n\r\nlibarchive-2.7.0. GNU/Linux.\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nHi,\r\n\r\nI've just downloaded latest released version (2.7.0) and noticed that\r\nunconditionally libarchive was linked to libcrypto (openssl), therefore I\r\ninvestigated why. It seems that the mtree write support uses some openssl\r\nhash algorithms; it's ok but I'd like to see this optional, i.e personally\r\nI don't need this part and I don't want libarchive to detect openssl and\r\nlink to it because that means another dependency.\r\n\r\nI made a patch that adds &quot;--with(out)-openssl&quot; flag to the configure\r\nscript, respecting current behaviour (use them if available).\r\n\r\nI'd really like to see this in next version, if possible! thanks.\r\n",
            "published" : "2009-04-17T04:00:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1157764870675711404",
              "fileName" : "libarchive_without_openssl.diff",
              "fileSize" : 3927,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed as r1047 in trunk, r1048 in release/2.7 branch.  It will be in 2.7.1.\r\n\r\nStill remains to add a similar switch to the cmake build system.\r\n\r\n",
            "published" : "2009-04-20T21:25:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-04-20T21:26:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Brad:  Do you have time to take a look at this?\r\n",
            "published" : "2009-12-13T23:37:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "cc" : [ "brad.k...@kitware.com" ]
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-12-13T23:37:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.8" ]
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king.kitware",
              "htmlLink" : "https://code.google.com/u/106779169582588935788/"
            },
            "content" : "I've committed CMake build support as r1750:\r\n\r\n  cmake -DENABLE_OPENSSL=OFF ...\r\n",
            "published" : "2009-12-16T13:33:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I think this is completely resolved now.\r\n",
            "published" : "2010-01-03T19:11:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 23,
        "title" : "Build problems on MinGW",
        "summary" : "Build problems on MinGW",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-10-29T03:41:35.000Z",
        "published" : "2009-04-18T22:30:53.000Z",
        "closed" : "2009-10-29T03:41:35.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 13,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "From Christian Ehrlicher:\r\n\r\nI've some problems compiling libarchive with mingw:\r\n\r\n- I've an old libarchive installed therefore you've to make sure cmake\r\nadds ${CMAKE_CURRENT_SOURCE_DIR}/libarchive o include directories before\r\nall others (line 557) - otherwise the old headers will be used for the\r\ntest program\r\n- ino_t is short on windows (unsigned short for msvc, short for mingw)\r\nwhich will result in a warning at archive_write_set_format_cpio.c:128\r\nand because -Werror is defined... :)\r\n- HCRYPTPROV and friends (archive_windows.h:270) are defined in\r\nwincrypt.h which needs to be included (see\r\nhttp://msdn.microsoft.com/en-us/library/aa382471(VS.85).aspx )\r\n- fileno is already defined (archive_windows.h:90) for mingw - simply\r\nadd an ifndef to work around this\r\n- wcsncpy_s isn't available on mingw - those crappy _s functions are\r\nmsvc8 and up only\r\n- isalpha(), toupper() are defined in ctype.h (archive_windows.c)\r\n- WriteFile() takes a DWORD as 4th parameter (archive_windows.c:1065)\r\n- CryptHashData() needs a (BYTE*) as 2nd parameter (not const BYTE* -\r\ncrappy winapi --&gt; http://msdn.microsoft.com/en-us/library/aa380202.aspx )\r\n\r\nAnd now a very annoying thing: _dosmaperr() is not available for mingw -\r\nit was added with the msvc runtime version 7.1 (afaik) but mingw is\r\nstill using msvc runtime 6.0 ...\r\nI'm looking for a way to work around this - iirc postgres or mysql have\r\nan own implementation of this function. But don't know if you will\r\naccept such an implementation because of possible copyright things...\r\n",
            "published" : "2009-04-18T22:30:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe the attached patch addresses the second item in this list.\r\n",
            "published" : "2009-04-18T22:52:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-5423291472449006246",
              "fileName" : "archive_write_set_format_cpio.patch",
              "fileSize" : 672,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Regarding \"copyright things\":  Copying code from other projects is easy if that code\r\nis public domain or BSD licensed; please talk to me before copying code that uses\r\nother licenses.  In all cases, existing license and copyright notices should be very\r\ncarefully preserved.\r\n",
            "published" : "2009-04-18T22:55:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Regarding the fourth item (\"fileno already defined\"), please try the attached patch\r\nand let me know if this fixes it in this case.\r\n",
            "published" : "2009-04-18T22:57:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-7767626543924917250",
              "fileName" : "archive_windows.h.patch",
              "fileSize" : 416,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Here's a candidate patch that may fix the 2nd, 3rd, 4th, 7th, and 8th items lists\r\nhere.  Untested as yet...",
            "published" : "2009-04-18T23:09:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2938659691947999239",
              "fileName" : "issue23.patch",
              "fileSize" : 1875,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Here are some sources from PostgreSQL that Christian found that should be useful:",
            "published" : "2009-04-19T17:05:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-8801787450376820522",
              "fileName" : "COPYRIGHT",
              "fileSize" : 1192,
              "mimetype" : "text/plain, English; charset=us-ascii"
            }, {
              "attachmentId" : "8160207653445390475",
              "fileName" : "win32error.c",
              "fileSize" : 3716,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Here's a slightly edited version of the above files that should be suitable for\r\ninclusion in libarchive.",
            "published" : "2009-04-19T17:06:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-2497841324640965843",
              "fileName" : "windows_dosmaperr.c",
              "fileSize" : 3716,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've committed fixes for most of this in libarchive/trunk r1082 and r1083.\r\nI've verified that it now mostly builds under MinGW; there's still the _dosmaperr\r\nissue to work through.",
            "published" : "2009-05-15T00:13:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r1084 and r1085 substituted a custom dosmaperr().\r\n\r\nlibarchive per se now builds cleanly on MinGW; the test suite doesn't build yet,\r\nthough.  There's still some more work to do there.\r\n",
            "published" : "2009-05-15T04:56:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "For reference, here are the build problems in libarchive_test:\r\n\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c:37:20:\r\ncrtdbg.h: No such file or directory\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c: In\r\nfunction `get_refdir':\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c:974:\r\nwarning: implicit declaration of function `sprintf_s'\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c: In\r\nfunction `main':\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c:1034:\r\nwarning: implicit declaration of function `_set_invalid_parameter_handler'\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c:1036:\r\nwarning: implicit declaration of function `_set_fmode'\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c:1038:\r\nwarning: implicit declaration of function `_CrtSetReportMode'\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c:1038:\r\nerror: `_CRT_ASSERT' undeclared (first use in this function)\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c:1038:\r\nerror: (Each undeclared identifier is reported only once\r\nC:\\Documents and Settings\\Tim\\Desktop\\libarchive\\trunk\\libarchive\\test\\main.c:1038:\r\nerror: for each function it appears in.)",
            "published" : "2009-05-15T04:58:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-06-12T04:31:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I had hoped to fix this for 2.7.1, but it's turning out to be trickier than I\r\nthought.  I'm going to defer it until 2.8.\r\n",
            "published" : "2009-06-12T04:32:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.8" ]
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This has been fixed in libarchive/trunk.  The very few remaining test failures are\r\ncommon to Visual Studio and MinGW and are being handled as separate bugs.",
            "published" : "2009-10-29T03:41:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 24,
        "title" : "Memory leak and blocked function call reading truncated ISO",
        "summary" : "Memory leak and blocked function call reading truncated ISO",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ieatlint",
          "htmlLink" : "https://code.google.com/u/114524400367676591527/"
        },
        "updated" : "2009-04-20T06:11:09.000Z",
        "published" : "2009-04-19T16:18:09.000Z",
        "closed" : "2009-04-20T06:11:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ieatlint",
              "htmlLink" : "https://code.google.com/u/114524400367676591527/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Read a truncated ISO using any input method (tested with\r\narchive_read_open, archive_read_open_FILE, archive_read_open_filename).\r\n2. Traverse till the last partial file is reached (skip as desired).\r\n3. Attempting to read the last file will work until the EOF is reached. \r\nOnce EOF is reached, the call archive_read_data will block, and the program\r\nwill consume memory at around 100MBps on my system until RAM and swap are\r\nfilled.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpected it to error out or otherwise fail (gracefully, but even segfault\r\nis better than this).\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\nConfirmed on 2.6.2 and on 2.7.0.\r\nLinux lintux 2.6.29-gentoo-r1 #1 SMP Thu Apr 9 08:04:40 PDT 2009 x86_64\r\nIntel(R) Core(TM)2 Extreme CPU X9650 @ 3.00GHz GenuineIntel GNU/Linux\r\ngcc version 4.3.3 (Gentoo 4.3.3-r2 p1.1, pie-10.1.5)\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nhttp://tehinterweb.com/test.iso (12MB) is the offending iso file (which is\r\npart of an ubuntu iso, nothing illicit).\r\nhttp://tehinterweb.com/test.c is an example of code that produces the above\r\nresults on my system.  (The file mentioned in it, install/initrd.gz, is the\r\nlast file which will hang.)\r\n\r\nI have also confirmed this on other truncated iso files.\r\nI would classify this as a dangerous vulnerability, as it will very quickly\r\noverwhelm a system.\r\n\r\nIf more information is desired, I should be readily available for contact.",
            "published" : "2009-04-19T16:18:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Try this patch and let me know if it fixes it for you.\r\n\r\nI'll also add a test to the test suite to guard against this kind of error in the future.",
            "published" : "2009-04-19T18:06:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "8705940942191529623",
              "fileName" : "libarchive-archive_read_support_format_iso9660.c.patch",
              "fileSize" : 524,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ieatlint",
              "htmlLink" : "https://code.google.com/u/114524400367676591527/"
            },
            "content" : "Confirm that the patch indeed fixes the issue.\r\n\r\nThanks much for the quick action!",
            "published" : "2009-04-19T18:29:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed to trunk as r1028, to 2.7 as r1029.  It will be in the 2.7.1 release.\r\n\r\nI'm marking this as fixed, even though I'd like to get a good test for it into\r\nlibarchive_test, one that verifies handling of truncated archives for all formats,\r\nnot just ISO, and which doesn't require a 12MB reference file.  Unfortunately, the\r\nbug doesn't seem to be triggered by truncated compressed archives.\r\n",
            "published" : "2009-04-20T06:11:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 25,
        "title" : "Failure reading body of first regular file in mtree archive",
        "summary" : "Failure reading body of first regular file in mtree archive",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "Milestone-2.7" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-04-20T06:23:06.000Z",
        "published" : "2009-04-20T06:21:31.000Z",
        "closed" : "2009-04-20T06:23:06.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "When reading an mtree archive, attempting to read the body is supposed to\r\npull bytes from the corresponding file on disk.  This enables a powerful\r\nidiom for controlling metadata when building tar or cpio archives:\r\n\r\ntar cf - --format=mtree .\r\n   | sed 's/uid=[0-9]*/uid=0/'\r\n   | tar cf archive.tar @-\r\n\r\nUnfortunately, there is an error that causes the body of the first regular\r\nfile to be dropped, resulting in zero bytes for the body in the final tar\r\narchive.",
            "published" : "2009-04-20T06:21:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in trunk r1033; merged to 2.7 branch in r1036.",
            "published" : "2009-04-20T06:23:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 26,
        "title" : "bsdcpio tests fail on linux x86_64",
        "summary" : "bsdcpio tests fail on linux x86_64",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ingmar.vanhassel",
          "htmlLink" : "https://code.google.com/u/106906209881109011005/"
        },
        "updated" : "2009-04-21T16:29:06.000Z",
        "published" : "2009-04-21T11:53:49.000Z",
        "closed" : "2009-04-21T16:29:06.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ingmar.vanhassel",
              "htmlLink" : "https://code.google.com/u/106906209881109011005/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. ./configure --prefix=/usr --host=x86_64-pc-linux-gnu --\r\nsysconfdir=/etc --localstatedir=/var/lib --disable-dependency-tracking --\r\nbsdcpio=shared --with-zlib --with-bz2lib --with-lzma --without-lzmadec --\r\n2. make\r\n3. make check\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nRunning tests in: /tmp/bsdcpio_test.2009-04-21T13.50.57-000\r\nReference files will be read from:\r\n/home/ingmar/development/git/libarchive/cpio/test\r\nRunning tests on: /home/ingmar/development/git/libarchive/bsdcpio                   \r\nExercising: bsdcpio 2.7.0 -- libarchive 2.7.0                                       \r\n\r\n0: test_0\r\n1: test_basic\r\n2: test_cmdline\r\n3: test_format_newc\r\ncpio/test/test_format_newc.c:209: Assertion failed: Ints not equal\r\n      0x41fd=16893\r\n      from_hex(e + 14, 8)=17917\r\n4: test_gcpio_compat\r\n5: test_option_a\r\n *** SKIPPING: Cannot verify -a option\r\n      Your system appears to not support atime.\r\n6: test_option_B_upper\r\n7: test_option_c\r\ncpio/test/test_option_c.c:188: Assertion failed: memory not equal\r\n      size 6 = 6\r\n      Dump of e + 18\r\n0000 30 34_32_37 37 35                               042775\r\n      Dump of &quot;040775&quot;\r\n0000 30 34_30_37 37 35                               040775\r\n\r\n8: test_option_C_upper\r\n9: test_option_d\r\n10: test_option_f\r\n11: test_option_help\r\n12: test_option_l\r\n13: test_option_L_upper\r\n14: test_option_m\r\n15: test_option_t\r\n16: test_option_u\r\n17: test_option_version\r\n18: test_option_y\r\n19: test_option_z\r\n20: test_option_Z_upper\r\n21: test_owner_parse\r\nIgnore this message: Couldn't look up group ``nonexistentgroup''\r\nIgnore this message: Couldn't look up group ``nonexistentgroup''\r\nIgnore this message: Couldn't lookup user ``nonexistentuser''\r\n22: test_passthrough_dotdot\r\n23: test_passthrough_reverse\r\n24: test_pathmatch\r\n\r\n2 of 25 tests reported failures\r\n Total of 796 assertions checked.\r\n Total of 2 assertions failed.\r\n Total of 1 assertions skipped.\r\nFAIL: bsdcpio_test\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\n\r\nlibarchive 2.7.0 on Linux x86_64\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nAttaching the entire build log...",
            "published" : "2009-04-21T11:53:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3984601439224568837",
              "fileName" : "1240314380-install-app-arch_libarchive-2.7.0:0::arbor.out",
              "fileSize" : 320742,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you for the report.  This has been fixed in SVN: r1049 in trunk, r1050 in\r\nrelease/2.7.  It will be included in the 2.7.1 point release.\r\n\r\nDiagnosis:  You have sgid set on /tmp and are using a filesystem that propagates sgid\r\nbits to subdirectories.  I've modified the affected tests to ignore extraneous sgid\r\nbits in these cases.\r\n",
            "published" : "2009-04-21T16:29:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ingmar.vanhassel",
              "htmlLink" : "https://code.google.com/u/106906209881109011005/"
            },
            "content" : "That was fast, thanks!",
            "published" : "2009-04-21T16:52:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 27,
        "title" : "Add UDF support",
        "summary" : "Add UDF support",
        "stars" : 7,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Low", "OpSys-All", "Milestone-Later" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hadessuk",
          "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
        },
        "updated" : "2015-03-07T02:49:53.000Z",
        "published" : "2009-05-09T00:56:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 13,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hadessuk",
              "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
            },
            "content" : "libarchive-based programs such as gvfs' archive backend cannot access UDF\r\ndata on ISO9660 images, such as Microsoft Windows 7 RC's ISO images.",
            "published" : "2009-05-09T00:56:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "",
            "published" : "2009-05-26T09:22:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This would be nice to have but will require someone to step up and do a significant\r\namount of work, starting with researching UDF and figuring out if it's possible to\r\nread UDF images in a streaming fashion.\r\n",
            "published" : "2009-07-24T03:31:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-Later" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-10-29T03:42:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Priority-Medium", "Priority-Low" ]
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allsymes",
              "htmlLink" : "https://code.google.com/u/102760579770417280561/"
            },
            "content" : "I made a UDF ISO that doesn't work with gvfs's archive mounter, but it does work with\r\nfuseiso... fuseiso may already have done the hard work.",
            "published" : "2009-11-23T23:33:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "markg85",
              "htmlLink" : "https://code.google.com/u/115178530551802636285/"
            },
            "content" : "Just FYI. http://www.gnu.org/software/libcdio/ supports UDF so perhaps that is easier to get UDF support.. Not exactly sure though.",
            "published" : "2011-04-28T14:26:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zeenix",
              "htmlLink" : "https://code.google.com/u/109973678654056732542/"
            },
            "content" : "I mounted the windows (XP, 2008 and 7) ISOs using fuseiso using fuseiso but I didn't see any content at the mount point so even they don't have proper support for it.",
            "published" : "2011-09-22T11:46:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "markg85",
              "htmlLink" : "https://code.google.com/u/115178530551802636285/"
            },
            "content" : "I did a bit more research on this. It turns out that http://www.gnu.org/software/libcdio/ is supporting both UDF and ISO9660 and sound cd's but i'm guessing that part isn't very useful for libarchive.\r\n\r\nSo, in other words: add libcdio as dependency and start using it for UDF and ISO9660 reads then we \"finally\" can open iso files in both formats without the need to mount them or use fuse.\r\n\r\nI will make a separate issue for this.",
            "published" : "2011-09-22T13:31:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zeenix",
              "htmlLink" : "https://code.google.com/u/109973678654056732542/"
            },
            "content" : "Out of pure coincidence, I just wrote a sample app using libcdio/libiso9660 to list directories out of ISOs. It worked for normal (fedora, RHEL installer/live etc) ISOs and some of the UDFs that libarchive fails on but not all of them. It was able to read windows XP ISO but not windows 7 one.\r\n\r\nSo my advice would be to test cdio with various UDFs out there (different windows installer ISOs should be enough) before concluding that that will solve the problem.",
            "published" : "2011-09-22T13:44:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "markg85",
              "htmlLink" : "https://code.google.com/u/115178530551802636285/"
            },
            "content" : "#8, cdio is the only one (that i know if) that has UDF support. If anything is broken there then you should really send them a bug report. Would be nice :)",
            "published" : "2011-09-22T13:57:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zeenix",
              "htmlLink" : "https://code.google.com/u/109973678654056732542/"
            },
            "content" : "Done! http://savannah.gnu.org/bugs/index.php?34358",
            "published" : "2011-09-22T14:39:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "markg85",
              "htmlLink" : "https://code.google.com/u/115178530551802636285/"
            },
            "content" : "#10, responding in here now since i don't have an account there yet. I really do wonder why you use iso9660_ functions when you are actually testing UDF images... use the udf_ functions and it _might_ just work for you.\r\n\r\nJust the first thing i noticed in your example code ^_-",
            "published" : "2011-09-22T14:48:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "babam.yes",
              "htmlLink" : "https://code.google.com/u/104264523847067707915/"
            },
            "content" : "I really want Libarchive able to read UDF File System.",
            "published" : "2015-03-07T02:49:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 28,
        "title" : "Add a python wrapper",
        "summary" : "Add a python wrapper",
        "stars" : 6,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "pombredanne",
          "htmlLink" : "https://code.google.com/u/113962389681351850095/"
        },
        "updated" : "2011-12-31T05:42:40.000Z",
        "published" : "2009-05-13T00:43:22.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pombredanne",
              "htmlLink" : "https://code.google.com/u/113962389681351850095/"
            },
            "content" : "Having a python wrapper for libarchive would be awesome!\r\nEither a ctypes or swig wrapper",
            "published" : "2009-05-13T00:43:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ferringb",
              "htmlLink" : "https://code.google.com/u/ferringb/"
            },
            "content" : "bzr co http://pkgcore.org/~ferringb/pyarchive # may be of interest.\r\n\r\nThe intention of these bindings is to expose libarchives stream design, while being\r\nable to provide a tarfile equivalent api (where sane... since tarfile is mostly\r\ninsane).  What's there provides a very *basic* api matching that; it probably\r\nsegfaults like a mother also, although the blatantly obvious ones I've snagged thus far.\r\n\r\nNo tests, mostly since I've been mangling the design pretty heavily feeling out which\r\nfits best for the intentions- tests will be added in the near future (fairly happy w/\r\nthe current design although it'll be mangled).\r\n\r\nRe: usage of bzr, may proxy it into git; I'm just using what I started with\r\noriginally, if folks scream loudly enough I'll convert the underlying repo over.\r\n\r\nCheers-",
            "published" : "2009-05-20T05:53:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pombredanne",
              "htmlLink" : "https://code.google.com/u/113962389681351850095/"
            },
            "content" : "Brian:\r\nThanks!\r\nvery nice!\r\nI am going to play with that puppy and report here",
            "published" : "2009-05-21T23:34:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "",
            "published" : "2009-05-26T09:23:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "txtoth",
              "htmlLink" : "https://code.google.com/u/108522678439959184660/"
            },
            "content" : "I'd like to be able to access the extended attributes (xattr) if you could implement\r\naccess to them.",
            "published" : "2009-07-22T18:12:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "btimby",
              "htmlLink" : "https://code.google.com/u/btimby@gmail.com/"
            },
            "content" : "I just wanted to let folks know that I needed a complete wrapper for libarchive, so I implemented one.\r\n\r\nhttp://code.google.com/p/python-libarchive/\r\n\r\nI would love to hear feedback about the work I have done on this wrapper. I tried to make it as simple as possible, but also I wanted to provide a compatibility layer for the zipfile (and later tarfile) stdlib modules.\r\n\r\nThanks.",
            "published" : "2011-12-31T05:42:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 29,
        "title" : "Minor build problem on QNX",
        "summary" : "Minor build problem on QNX",
        "stars" : 2,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Low", "OpSys-Other" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "david.pontbriand@polymtl.ca",
          "htmlLink" : "https://code.google.com/u/david.pontbriand@polymtl.ca/"
        },
        "updated" : "2009-12-13T23:35:48.000Z",
        "published" : "2009-06-08T17:15:38.000Z",
        "closed" : "2009-12-13T23:35:48.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "david.pontbriand@polymtl.ca",
              "htmlLink" : "https://code.google.com/u/david.pontbriand@polymtl.ca/"
            },
            "content" : "Version: libarchive 2.7.0 release\r\nOS: QNX (Posix real-time OS)\r\nCompiler: gcc 3.3.5\r\n\r\nCompilation failed.\r\n\r\nI made it compile by adding '#define wchar_t unsigned long' to 'config.h'.\r\n\r\nOn my system, sizeof(wchar_t) gives 4 bytes.\r\nAdding -fshort-wchar to gcc did not resolve the problem.\r\n\r\n\r\nThis is the output:\r\n\r\n...\r\n gcc -DHAVE_CONFIG_H -I. -I ./libarchive -Wall -Werror -g -O2 -MT \r\nlibarchive/libarchive_la-archive_entry.lo -MD -MP -MF \r\nlibarchive/.deps/libarchive_la-archive_entry.Tpo -c \r\nlibarchive/archive_entry.c  -fPIC -DPIC -o libarchive/.libs/libarchive_la-\r\narchive_entry.o\r\nlibarchive/archive_entry.c: In function `archive_entry_acl_text_w':\r\nlibarchive/archive_entry.c:1486: warning: assignment from incompatible \r\npointer type\r\nlibarchive/archive_entry.c: In function `append_entry_w':\r\nlibarchive/archive_entry.c:1535: warning: passing arg 2 of `wcscpy' from \r\nincompatible pointer type\r\n...\r\nlibarchive/archive_entry.c: In function `__archive_entry_acl_parse_w':\r\nlibarchive/archive_entry.c:1648: warning: passing arg 2 of `wmemcmp' from \r\nincompatible pointer type\r\nlibarchive/archive_entry.c:1654: warning: passing arg 3 of `prefix_w' from \r\nincompatible pointer type\r\n...\r\nmake[1]: *** [libarchive/libarchive_la-archive_entry.lo] Error 1\r\nmake[1]: Leaving directory\r\nmake: *** [all] Error 2",
            "published" : "2009-06-08T17:15:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please compile and run the following program on your system\r\nand let me know the output.  Also, please let me know\r\nwhat version of QNX you're running.  I did a quick web search\r\nand saw a couple of reports of conflicting wchar_t definitions\r\nin system headers on QNX; you might take a look at the system\r\nheaders to see if there are multiple definitions of wchar_t\r\nin the system headers.\r\n\r\n#include <stdio.h>\r\n#include <wchar.h>\r\nint\r\nmain(int argc, char **argv)\r\n{\r\n        printf(\"sizeof(wchar_t) = %d\\n\", sizeof(wchar_t));\r\n        printf(\"sizeof(L\\\"abc\\\"[0]) = %d\\n\", sizeof(L\"abc\"[0]));\r\n        return (0);\r\n}\r\n",
            "published" : "2009-06-09T04:11:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Priority-Medium", "-OpSys-All", "Priority-Low", "OpSys-Other" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "david.pontbriand@polymtl.ca",
              "htmlLink" : "https://code.google.com/u/david.pontbriand@polymtl.ca/"
            },
            "content" : "$ gcc test.c -o test\r\n$ ./test\r\n\tsizeof(wchar_t) = 4\r\n\tsizeof(L\"abc\"[0]) = 4\r\n\r\n$ gcc -fshort-wchar test.c -o test\r\n$ ./test\r\n\tsizeof(wchar_t) = 4\r\n\tsizeof(L\"abc\"[0]) = 2\r\n\r\n$ uname -a\r\n\tQNX BlackQNX 6.3.2 2006/03/16-14:20:03EST x86pc x86\r\n\r\n$ qconfig\r\n\tQNX Installations\r\n\r\n\t  Installation Name: QNX Momentics Development Suite 6.3.2\r\n\t            Version: 6.3.2\r\n\t     Base Directory: /usr/qnx632/\r\n\t           QNX_HOST: /usr/qnx632/host/qnx6/x86/\r\n\t         QNX_TARGET: /usr/qnx632/target/qnx6/\r\n\r\n\tAdditional Packages\r\n\r\nI verified where the compiler passes in header files got what is written below.\r\nFinally, it seems like 'wchar_t' is 'unsigned', but libarchive only compiles when \r\ndefining it to 'unsigned long'.\r\n\r\ninclude dir: /usr/qnx632/target/qnx6/usr/include\r\n<wchar.h>\r\n\t...\r\n\t#include <sys/platform.h>\r\n\t...\r\n\t#if defined(__WCHAR_T)\r\n\ttypedef __WCHAR_T wchar_t;\r\n\t#undef __WCHAR_T\r\n\t#endif\r\n\t...\r\n<sys/platform.h>\r\n\t...\r\n\t#elif defined(__GNUC__)\r\n\t\t#include _NTO_HDR_(sys/compiler_gnu.h)\r\n\t...\r\n\t#include _NTO_HDR_(sys/target_nto.h)\r\n\t...\r\n\t#ifdef __WCHAR_T\r\n\t\ttypedef __WCHAR_T _Wchart;\r\n\t\t#undef __WCHAR_T\r\n\t\t#if !defined(__cplusplus)\r\n\t\t\t#define __WCHAR_T _Wchart\r\n\t\t#endif\r\n\t#endif\r\n\t...\r\n<sys/target_nto.h>\r\n\t...\r\n\t#undef __WCHAR_T\r\n\t#if defined (__cplusplus)\r\n\t\t#define __WCHAR_T\twchar_t\r\n\t#else\r\n\t\t#define __WCHAR_T\t_Uint32t\r\n\t#endif\r\n\t...\r\n<sys/compiler_gnu.h>\r\n\t...\r\n\t#if __INT_BITS__ == 32\r\n\t\t// **** LIBARCHIVE GETS HERE ****\r\n\t\ttypedef unsigned _GCC_ATTR_ALIGN_u32t;\r\n\t\ttypedef _GCC_ATTR_ALIGN_u32t _Uint32t \r\n__attribute__((__aligned__(4)));\r\n\t\t...\r\n\t#elif __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)\r\n\t\ttypedef unsigned int _GCC_ATTR_ALIGN_u32t \r\n__attribute__((__mode__(__SI__)));\r\n\t\ttypedef _GCC_ATTR_ALIGN_u32t _Uint32t  \r\n__attribute__((__aligned__(4)));\r\n\t\t...\r\n\t#else\r\n\t\ttypedef unsigned long _GCC_ATTR_ALIGN_u32t;\r\n\t\ttypedef _GCC_ATTR_ALIGN_u32t _Uint32t \r\n__attribute__((__aligned__(4)));\r\n\t\t...\r\n\t...\r\n",
            "published" : "2009-06-09T14:45:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is not so broken as I feared.  The key problem:  For some reason, your compiler\r\nis using a type for wide-character string literals (written L\"abc\") that is not the\r\nsame as wchar_t.  This is basically a mismatch between the compiler and the system\r\nheaders.  Fortunately, both L\"...\"[0] and wchar_t are 32 bits wide, so you should be\r\nable to work around it with a simple cast.  Find the few wide-character literals in\r\nthe libarchive sources (search for uppercase 'L' followed by a double-quote) and add\r\nan explicit cast to each one, so that\r\n     L\"this is a wide string\"\r\nbecomes\r\n     (const wchar_t *)L\"this is a wide string\"\r\n\r\nPlease try this and let me know if it fixes it for you.\r\n",
            "published" : "2009-06-12T04:29:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Waiting for feedback; marking this issue as \"Waiting\"",
            "published" : "2009-10-31T18:24:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Since it has been a few months, I'm going to close this as \"WontFix\".\r\nI'll happily reopen it if there's additional information.\r\n",
            "published" : "2009-12-13T23:35:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 30,
        "title" : "Autodetection of some but not all xz-compressed tarballs fails",
        "summary" : "Autodetection of some but not all xz-compressed tarballs fails",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "tilman2",
          "htmlLink" : "https://code.google.com/u/111478677428206626845/"
        },
        "updated" : "2009-06-12T03:27:18.000Z",
        "published" : "2009-06-11T15:06:20.000Z",
        "closed" : "2009-06-12T03:27:18.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tilman2",
              "htmlLink" : "https://code.google.com/u/111478677428206626845/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. run &quot;bsdtar xf coreutils-7.4.tar.xz&quot;\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expect bsdtar to uncompress the archive.\r\nInstead, I get the following output:\r\n   bsdtar: Unrecognized archive format\r\n   bsdtar: Error exit delayed from previous errors.\r\n\r\n\r\n<b>What version of the product are you using? On what operating system?</b>\nlibarchive-2.7.0 on Linux 2.6 using the current tip of xz's master branch\r\n(commit 1735d31ea347210e914df038eeea4b2626e76e42) so I only have liblzma\r\nbut not liblzmadec.\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI can properly extract the tarball using\r\n   bsdtar x --use-compress-program=unxz -f ~/sourcen/coreutils-7.4.tar.xz\r\nAlso, libarchive's autodetection works great with another xz-compressed\r\ntarball, m4-1.4.13.tar.xz.\r\n\r\nURLs for those two tarballs:\r\nftp://ftp.gnu.org/gnu/coreutils/coreutils-7.4.tar.xz\r\nftp://ftp.gnu.org/gnu/m4/m4-1.4.13.tar.xz",
            "published" : "2009-06-11T15:06:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Both of those tarballs work for me using the current tip of libarchive's development\r\nbranch; I note that the XZ support code is unchanged since 2.7.0.  To be sure we're\r\ntesting the same files, here are the MD5s for the tarballs I downloaded from the\r\nlinks you provided:\r\n\r\nMD5 (/tmp/coreutils-7.4.tar.xz) = e8d906c153f271430e3efb2b9a35a35f\r\nMD5 (/tmp/m4-1.4.13.tar.xz) = 206b13cb45e95cd2ba60bf401900ab2d\r\n",
            "published" : "2009-06-11T15:28:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tilman2",
              "htmlLink" : "https://code.google.com/u/111478677428206626845/"
            },
            "content" : "The md5sums match.\r\n\r\nI'll try libarchive's trunk.",
            "published" : "2009-06-11T15:35:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tilman2",
              "htmlLink" : "https://code.google.com/u/111478677428206626845/"
            },
            "content" : "Switching to the trunk didn't help, so I debugged the problem:\r\nApparently the 10 MB decompression buffer that we're giving to liblzma isn't large\r\nenough. For the coreutils tarball, liblzma requires a ~64 MB buffer apparently (the\r\nvariable memusage is 67174292 in stream_decoder.c:207).\r\n\r\nFor the m4 tarball, liblzma wants a ~8 MB buffer so this works with the current 10 MB\r\nbuffer libarchive specifies.",
            "published" : "2009-06-11T20:12:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I patched the release/2.7 branch to use a very large value for the memory limit.  I\r\nhaven't yet found any information that suggests this is inappropriate.\r\n\r\nPlease try the tip of the release/2.7 branch and let me know if that works for you.\r\n",
            "published" : "2009-06-12T03:27:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tilman2",
              "htmlLink" : "https://code.google.com/u/111478677428206626845/"
            },
            "content" : "Yes, release/2.7 works nicely for me. Thanks.",
            "published" : "2009-06-12T09:20:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 31,
        "title" : "[PATCH] Replace call to bsdtar_errc to lafe_errc in tar/siginfo.c",
        "summary" : "[PATCH] Replace call to bsdtar_errc to lafe_errc in tar/siginfo.c",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "tilman2",
          "htmlLink" : "https://code.google.com/u/111478677428206626845/"
        },
        "updated" : "2009-06-12T04:19:27.000Z",
        "published" : "2009-06-11T15:46:42.000Z",
        "closed" : "2009-06-12T04:19:27.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tilman2",
              "htmlLink" : "https://code.google.com/u/111478677428206626845/"
            },
            "content" : "libarchive's trunk doesn't build for me:\r\n\r\n  cc1: warnings being treated as errors\r\n  tar/siginfo.c: In function 'siginfo_init':\r\n  tar/siginfo.c:94: error: implicit declaration of function 'bsdtar_errc'\r\n\r\nI believe it should try to call lafe_errc() instead.",
            "published" : "2009-06-11T15:46:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-372457619892688188",
              "fileName" : "dont_use_bsdtar_errc.diff",
              "fileSize" : 659,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed.  Thanks for the report and the patch.",
            "published" : "2009-06-12T04:19:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-06-12T04:19:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 32,
        "title" : "Directories with spaces",
        "summary" : "Directories with spaces",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-10-10T04:09:01.000Z",
        "published" : "2009-06-26T05:18:03.000Z",
        "closed" : "2009-10-10T04:09:01.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "There seem to be some lingering problems with directories containing\r\nspaces, especially on Windows.\r\n\r\nIn particular, bsdtar_test fails badly on Windows if the TMPDIR environment\r\nvariable points to a directory that has spaces in the pathname.  I\r\nexperimented with quoting arguments when building up command strings, but\r\nthat seems insufficient.\r\n\r\nI've also seen some odd behavior on FreeBSD if I try to build and run the\r\ntests in a directory where the path has spaces in it.\r\n",
            "published" : "2009-06-26T05:18:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I have partial fix for this in trunk and expect it to be fully addressed for 2.8.  It\r\nmostly impacts Windows users building in their home directory (the infamous\r\n\"C:\\Documents and Settings\\\").\r\n",
            "published" : "2009-07-24T03:29:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.8" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is fully fixed in trunk.  I've been running the full test suite out of\r\ndirectories on my Desktop with the temp directory set to \"C:\\Documents and\r\nSettings\\tim\\Local Settings\\Temp\" and it all seems to work fine.\r\n",
            "published" : "2009-10-10T04:09:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 33,
        "title" : "C++ wrapper",
        "summary" : "C++ wrapper",
        "stars" : 5,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Low", "OpSys-All", "Milestone-Later" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2014-09-23T16:44:34.000Z",
        "published" : "2009-06-26T05:21:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It seems feasible to include very basic C++ wrapper classes directly in\r\narchive_entry.h and archive.h, using something like the following:\r\n\r\n   #ifdef __cplusplus\r\n   class CArchiveEntry {\r\n     struct archive_entry *ae;\r\n     ...\r\n   };\r\n   #endif\r\n\r\n",
            "published" : "2009-06-26T05:21:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-06-26T05:21:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm not going to have time to work on this anytime soon.\r\nIf anyone else is interested, please feel free...\r\n",
            "published" : "2009-09-03T15:08:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "New",
              "owner" : "---"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2010-01-03T21:52:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Priority-Medium", "Priority-Low", "Milestone-Later" ]
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Does this really give any new functionality? I can't even imagine a useful case for\r\ninheritance here.",
            "published" : "2010-02-20T00:56:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Inheritance isn't the point, really.  I've talked to a few folks doing extensive C++\r\nwork who would find this convenient primarily because of the memory management.  In\r\nparticular, the ability to do things like:\r\n\r\n {\r\n    CArchiveRead a();\r\n \r\n    ... do stuff ...\r\n\r\n } // No explicit close or cleanup needed at end of block.\r\n",
            "published" : "2010-02-20T04:41:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pelle%morth.org@gtempaccount.com",
              "htmlLink" : "https://code.google.com/u/109583489966404770694/"
            },
            "content" : "Inheritance is useful for filtering the files returned when the archive is scanned, so it does have a purpose.  I've \r\nused it in my Obj-C wrapper (http://bazaar.launchpad.net/%7Epelle-\r\nmorth/modazipin/trunk/annotate/head%3A/ArchiveWrapper.m and .h if anyone is interested). The filtering is in \r\nthe DazipArchive subclass though.",
            "published" : "2010-06-02T15:33:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nina.burns",
              "htmlLink" : "https://code.google.com/u/116989842622807355887/"
            },
            "content" : "What would be great is if we could wrap this for use as an istream and ostream.  The istream can then function as a universal decompressor.  We would want to select the compression scheme to use for the ostream.\r\n\r\nI think the best way to implement boost's Filter interface (see http://www.boost.org/doc/libs/1_43_0/libs/iostreams/doc/concepts/filter.html) it would give C++ developers a lot of power and could help to raise more awareness of this project.  Currently there is only support for gzip and bzip2 so we could really use all the schemes supported by libarchive.",
            "published" : "2010-07-14T00:29:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Domen.Vrankar",
              "htmlLink" : "https://code.google.com/u/112948932735667211826/"
            },
            "content" : "I wrote a C++ wrapper that simplifies the interface with streams, iterators and RAII.\r\n\r\nhttps://github.com/do-m-en/libarchive_cpp_wrapper/tree/develop\r\n\r\nIt was written for C++11 and above.",
            "published" : "2014-09-23T16:44:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 34,
        "title" : "bsdtar handling of tarfiles with individually gzipped blocks",
        "summary" : "bsdtar handling of tarfiles with individually gzipped blocks",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ttwelve",
          "htmlLink" : "https://code.google.com/u/106036458882611132030/"
        },
        "updated" : "2009-06-28T17:56:24.000Z",
        "published" : "2009-06-28T16:32:24.000Z",
        "closed" : "2009-06-28T17:56:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ttwelve",
              "htmlLink" : "https://code.google.com/u/106036458882611132030/"
            },
            "content" : "If a tar file is assembled via concatenation of individual gz files, bsdtar\r\nappears to only read the first concatenated chunk when decompressing with -z. \r\n\r\nThis is somewhat subtle and weird, and I don't know if any specification\r\nactually defines this behavior for tar.gz files, or if anyone will even\r\nconsider this a bug.\r\n\r\nI figure its a bug because I would expect the behaviors of gzip -cd\r\nfile.tar.gz | tar -xvf - to be exactly the same as tar -zxvf file.tar.gz .\r\n\r\nwith bsdtar (freebsd 7.0):\r\n\r\n$ touch file1 file2\r\n$ tar -cvf base.tar file1 file2\r\na file1\r\na file2\r\n$ split -b512 base.tar\r\n$ gzip xa?\r\n$ cat xa?.* &gt; combined.tar.gz\r\n$ tar -zxvf combined.tar.gz\r\nx file1\r\n$ gzip -cd combined.tar.gz | tar -xvf -\r\nx file1\r\nx file2\r\n\r\nlinux gnutar (centos 5.3):\r\n# touch file1 file2\r\n# tar -cvf base.tar file1 file2\r\nfile1\r\nfile2\r\n# split -b512 base.tar\r\n# gzip xa?\r\n# cat xa?.* &gt; combined.tar.gz\r\n# tar -zxvf combined.tar.gz\r\nfile1\r\nfile2\r\n# gzip -cd combined.tar.gz | tar -xvf -\r\nfile1\r\nfile2",
            "published" : "2009-06-28T16:32:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is completely fixed in later versions of libarchive.\r\n",
            "published" : "2009-06-28T17:56:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 35,
        "title" : "Support extracting archive already in memory to disk without intermediate file",
        "summary" : "Support extracting archive already in memory to disk without intermediate file",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jeremytregunna",
          "htmlLink" : "https://code.google.com/u/111480656721956911857/"
        },
        "updated" : "2009-08-13T03:53:12.000Z",
        "published" : "2009-08-13T02:44:50.000Z",
        "closed" : "2009-08-13T03:53:12.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jeremytregunna",
              "htmlLink" : "https://code.google.com/u/111480656721956911857/"
            },
            "content" : "This is a feature request more than anything else.\r\n\r\nI have recently started using libarchive in an embedded hardware project\r\nwhere space is tight (64 MB) or NAND flash. As a result, I don't want to\r\nhave to write to it if at all possible. Memory however, is fair game and I\r\nhave room to spare there.\r\n\r\nWhat would be nice, and it doesn't just apply to the above scenario, is\r\nreading in an archive, storing the contents in memory, and extracting the\r\ncontents out without having to store the data back to disk. This may sound\r\na little silly, but it's required in a case such as the following:\r\n\r\nFirmware image format.\r\n&lt;Header&gt;\r\n&lt;Compressed Tar archive&gt;\r\n\r\nLet's say the Header is 200 to 1000 bytes long. I have to open the file,\r\nread that header to find the offset of where the payload data unit starts\r\n(in this case, a compressed tar archive) and how big it is, as the firmware\r\nimage file may support loading more than one PDU. This means, I have to\r\neither read the contents of the archive starting at let's say 200 bytes\r\nfrom the start of the file (fseek to it) then read from there, to the end\r\nof the file, storing it in a byte array only to flush it out to disk so I\r\ncan open it again and let libarchive extract the data.",
            "published" : "2009-08-13T02:44:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jeremytregunna",
              "htmlLink" : "https://code.google.com/u/111480656721956911857/"
            },
            "content" : "I should not have labeled this a defect, my apologies. It should be labeled as an\r\nEnhancement. I do not know how to change it now.",
            "published" : "2009-08-13T02:45:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The scenario you describe has always been very well supported.  In fact, libarchive\r\nwas designed in part specifically to support such use cases.\r\n\r\nThe most general way to open an archive is to use archive_read_open2(), although for\r\nyour use, I would recommend the slightly simpler archive_read_open().  That call\r\naccepts three function pointers.  By implementing those functions, you can read data\r\nfrom any data source, including memory, offsets within files, network sockets,\r\nliterally anything you can write code to access.\r\n\r\nThe other archive_read_open_XXXX() are all convenience functions around\r\narchive_read_open2().  Most of the documentation refers to\r\narchive_read_open_filename(), which is the one that seems to be most useful to most\r\npeople, but there are several others and it's easy to write your own.\r\n\r\nThree in particular may be of interest to you:  archive_read_open_memory() accepts a\r\npointer and size of a block of memory, which is useful if you have data in memory and\r\nwant to extract from it; archive_read_open_fd() can be used to read from an opened\r\nfile descriptor, which is very useful if you need to skip the first part of a file\r\nbefore asking libarchive to read the rest; and archive_read_open_FILE() is similar to\r\narchive_read_open_fd() but accepts a FILE * instead of a file descriptor.\r\n\r\nSo, in your case, assuming your embedded OS supports open()/lseek()/read()/close()\r\nsystem calls, you can simply:\r\n   struct archive * a = archive_read_new();\r\n   int fd = open(\"myfile\", O_READ);\r\n   lseek(fd, offset);\r\n   archive_read_open_fd(fd, 512);\r\nwith additional error checking, of course, which I've omitted here.  In particular,\r\narchive_read_open_fd() does return an error code and you should check it.\r\n\r\nAs I said, this has all been very well-supported since libarchive's earliest\r\nprototypes.  If you're having trouble with it, feel free to post your questions to\r\nthe libarchive-discuss@googlegroups.com mailing list.\r\n",
            "published" : "2009-08-13T03:53:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "On further reflection, this may really be a documentation bug.\r\n\r\nI've added an \"Examples\" page to the Wiki area, linked from the home page of the project.\r\nFor now, it demonstrates how to extract archive data from files, memory, or other\r\nsources; please let me know what other examples would be helpful.\r\n",
            "published" : "2009-08-13T04:35:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 36,
        "title" : "Cmake does not work on linux",
        "summary" : "Cmake does not work on linux",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "yannicklm1337",
          "htmlLink" : "https://code.google.com/u/109542595634235826555/"
        },
        "updated" : "2009-08-16T00:22:57.000Z",
        "published" : "2009-08-15T16:52:53.000Z",
        "closed" : "2009-08-16T00:22:57.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "yannicklm1337",
              "htmlLink" : "https://code.google.com/u/109542595634235826555/"
            },
            "content" : "First, please not that autotools work fine on my machine.\r\n(so you can see this as a non-issue)\r\n\r\n<b>What steps will reproduce the problem?</b>\n1. Type cmake . at project's root\r\n2. Type make\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nInstead of compiling successfully (as it does when using ./configure; make)\r\nwe got this:\r\n\r\n  -- Looking for acl_get_perm\r\n  -- Looking for acl_get_perm - not found.\r\n  -- Looking for acl_get_perm_np\r\n  -- Looking for acl_get_perm_np - not found.\r\n\r\n(neither acl_get_perm nor acl_get_perm_np are found)\r\nSo, when compiling:\r\n\r\narchive_read_disk_entry_from_file.c: In function ‘setup_acl_posix1e’:\r\narchive_read_disk_entry_from_file.c:264: error: implicit declaration of\r\nfunction ‘ACL_GET_PERM’\r\n\r\n<b>What version are you using?</b>\nTrunk: revision 1365\r\n\r\n<b>On what operating system?</b>\nArch linux. \r\nacl version 2.2.47-2\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n * Attached patch fixed the problem on my desktop. Warning: I could not\r\ntest if I did not break something for other OS...\r\n\r\nThe patch does two things:\r\n\r\n1. look for acl_get_perm in acl/libacl.h (where it is on my machine)\r\n2. link with acl library\r\n(finding an adding acl at the ADDITIONAL_LIBARARIES if ACL_ENABLE is true)\r\n\r\n\r\n * I can test this patch on ubuntu if you want.\r\n\r\n\r\n\r\nPS:\r\n  Good to know: pacman, the awesome package manager of arch linux use your\r\nlib :)\r\n\r\n",
            "published" : "2009-08-15T16:52:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-2461135392317105558",
              "fileName" : "0001-Make-CMake-works-on-linux.patch",
              "fileSize" : 1454,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Should be fixed in r1376.\r\n\r\nUnfortunately, the patch as provided broke acl_get_perm_np() testing on FreeBSD\r\nbecause FreeBSD has different acl headers.  I generalized the existing header checks\r\nto provide what should be a general solution to this sort of problem.\r\n",
            "published" : "2009-08-16T00:22:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "yannicklm1337",
              "htmlLink" : "https://code.google.com/u/109542595634235826555/"
            },
            "content" : "\r\n>> Unfortunately, the patch as provided broke acl_get_perm_np() testing on FreeBSD\r\n>> because FreeBSD has different acl headers.\r\n\r\nDamned! Sorry about that. I was feeling something like this would happen. \r\n\r\n\r\n>> I generalized the existing header checks to provide what should be a general \r\n>> solution to this sort of problem.\r\n\r\nGood idea :)\r\n\r\nKeep up good work !",
            "published" : "2009-08-16T00:28:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 37,
        "title" : "Passing files with CRLF line endings to --files-from/-T",
        "summary" : "Passing files with CRLF line endings to --files-from/-T",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "matt.chambers42",
          "htmlLink" : "https://code.google.com/u/113936825687981871102/"
        },
        "updated" : "2009-08-23T04:56:53.000Z",
        "published" : "2009-08-20T20:29:11.000Z",
        "closed" : "2009-08-23T04:56:53.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "matt.chambers42",
              "htmlLink" : "https://code.google.com/u/113936825687981871102/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. On Windows, pass a file with CRLF line endings with the -T option.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe CR (\\r) should probably be an non-inclusive delimiter on any platform\r\n(so that DOS files work on *nix), but certainly on Windows it's common to\r\nhave CRLF line endings in text files.\r\n\r\n\r\n<b>What version are you using?</b>\nBoth 2.7 and 2.71 should have this problem.\r\n\r\n\r\n<b>On what operating system?</b>\nWindows\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nIt's caused by this logic:\r\nseparator = bsdtar-&gt;option_null ? '\\0' : '\\n';\r\n\r\nThis line doesn't appear to be in trunk. Has it been fixed in 2.8? How\r\nstable is trunk?",
            "published" : "2009-08-20T20:29:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try the attached patch for tar/util.c.  I believe this will fix the issue with\r\nlibarchive 2.7.x.\r\n\r\nIt looks like trunk has the same problem, actually, so that's probably not an option\r\nfor you.\r\n\r\n",
            "published" : "2009-08-21T04:38:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1829421220872601582",
              "fileName" : "bsdtar_CRLF_option_T.patch",
              "fileSize" : 1057,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "matt.chambers42",
              "htmlLink" : "https://code.google.com/u/113936825687981871102/"
            },
            "content" : "while (line_end < buff_end) {\r\n\tif (bsdtar->option_null && *line_end == '\\0') {\r\n\t\t*line_end = '\\0';\r\n\t\tif ((*process)(bsdtar, line_start) != 0)\r\n\t\t\tret = -1;\r\n\t\tline_start = line_end + 1;\r\n\t\tline_end = line_start;\r\n        } else if (!bsdtar->option_null && (*line_end == '\\r' || *line_end == '\\n')) {\r\n            separator = *line_end;\r\n            *line_end = '\\0';\r\n            if ((*process)(bsdtar, line_start) != 0)\r\n\t\t\tret = -1;\r\n            line_start = line_end + (separator == '\\r' && *(line_end + 1) == '\\n' ? 2\r\n: 1);\r\n\t\tline_end = line_start;\r\n        } else\r\n\t\tline_end++;\r\n}",
            "published" : "2009-08-21T14:48:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "matt.chambers42",
              "htmlLink" : "https://code.google.com/u/113936825687981871102/"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "matt.chambers42",
              "htmlLink" : "https://code.google.com/u/113936825687981871102/"
            },
            "content" : "Just eyeballing that patch I think it would break the null-terminated mode and it\r\nwouldn't skip the LF after a terminating CR in a CRLF pair. I used this loop instead:\r\n\r\nwhile (line_end < buff_end) {\r\n\tif (bsdtar->option_null && *line_end == '\\0') {\r\n\t\t*line_end = '\\0';\r\n\t\tif ((*process)(bsdtar, line_start) != 0)\r\n\t\t\tret = -1;\r\n\t\tline_start = line_end + 1;\r\n\t\tline_end = line_start;\r\n        } else if (!bsdtar->option_null && (*line_end == '\\r' || *line_end == '\\n')) {\r\n            separator = *line_end;\r\n            *line_end = '\\0';\r\n            if ((*process)(bsdtar, line_start) != 0)\r\n\t\t\tret = -1;\r\n            line_start = line_end + (separator == '\\r' && *(line_end + 1) == '\\n' ? 2\r\n: 1);\r\n\t\tline_end = line_start;\r\n        } else\r\n\t\tline_end++;\r\n}",
            "published" : "2009-08-21T14:49:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "After more extensive testing, I've committed a fix for this in\r\nlibarchive 2.7 at r1384 and a very different fix to libarchive/trunk\r\nat r1385.  With these fixes, tar seems to correctly handle varying\r\nline endings (including CRLF and NL) and properly handle null-terminated\r\nlines with --null (including filenames that have NL characters in them).\r\n",
            "published" : "2009-08-23T04:56:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-08-23T04:56:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 38,
        "title" : "Truncated archive extraction error message",
        "summary" : "Truncated archive extraction error message",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "tomi.ollila@iki.fi",
          "htmlLink" : "https://code.google.com/u/102718164831621128819/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-12-13T23:33:25.000Z",
        "published" : "2009-09-03T12:48:27.000Z",
        "closed" : "2009-12-13T23:33:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tomi.ollila@iki.fi",
              "htmlLink" : "https://code.google.com/u/102718164831621128819/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n1. extract libarchive-2.7.1.tar.gz\r\n2. cd there, then ./configure &amp;&amp; make\r\n3. head -c 1M ../librachive.tar.gz | ./bsdtar -t -f -\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nLast lines of output are:\r\n\r\nlibarchive-2.7.1/libarchive/test/test_compat_zip_1.zip.uu\r\nlibarchive-2.7.1/libarchive/test/test_fuzz_1.iso.uu\r\nbsdtar: (Empty error message)\r\nbsdtar: Error exit delayed from previous errors.\r\nzsh: done       head -c 1M ../libarchive-2.7.1.tar.gz | \r\n\r\n\r\nwhat we should see is that there is something else than\r\n(Empty error message) at the output (something like truncated archive)\r\nGnu tar says:\r\nzip: stdin: unexpected end of file\r\ntar: Unexpected EOF in archive\r\ntar: Error is not recoverable: exiting now\r\n\r\n\r\n\r\n\r\n\r\n\r\n<b>What version are you using?</b>\n\r\n2.7.1\r\n\r\n<b>On what operating system?</b>\n\r\nLinux x86 (fedora 11)\r\n\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2009-09-03T12:48:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This has already been fixed in libarchive/trunk and will be fixed in libarchive 2.8.\r\n\r\nI'll take a look and see if there's an easy patch for 2.7.\r\n",
            "published" : "2009-09-03T15:07:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.8" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-09-03T15:07:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "With 2.8 coming out soon, I'm going to just close this.\r\n",
            "published" : "2009-12-13T23:33:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 39,
        "title" : "libarchive cannot properly handle Rock Ridge Extention's deeper level directories",
        "summary" : "libarchive cannot properly handle Rock Ridge Extention's deeper level directories",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "Component-libarchive" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2009-10-20T06:25:37.000Z",
        "published" : "2009-09-27T15:41:55.000Z",
        "closed" : "2009-10-20T06:25:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "-- How to make a iso image.\r\n%mkdir -p dir/dir2/dir3/dir4/dir5/dir6/dir7/dir8/dir9/dir10/dir11\r\n%mkisofs -r -o test.iso dir\r\n\r\n-- Current bsdtar lists contents of the iso image.\r\n%bsdtar tvf test.iso \r\ndrwx------  0 0      0        2048  9 27 20:18 .\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 rr_moved\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 rr_moved/dir9\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 rr_moved/dir9/dir10\r\ndr-xr-xr-x  2 0      0        2048  9 27 20:18 rr_moved/dir9/dir10/dir11\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2/dir3\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2/dir3/dir4\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2/dir3/dir4/dir5\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2/dir3/dir4/dir5/dir6\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 \r\ndir2/dir3/dir4/dir5/dir6/dir7\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 \r\ndir2/dir3/dir4/dir5/dir6/dir7/dir8\r\ndr-xr-xr-x  3 0      0           0  9 27 20:18 \r\ndir2/dir3/dir4/dir5/dir6/dir7/dir8/dir9\r\n\r\nThe bsdtar has showed me &quot;rr_moved&quot; directory. Basically, this directory\r\nis only visible on systems that dot not support RRIP.\r\n\r\n-- I've expected bsdtar outputs as follows.\r\n%bsdtar tvf test.iso \r\ndrwx------  0 0      0        2048  9 27 20:18 .\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2/dir3\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2/dir3/dir4\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2/dir3/dir4/dir5\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 dir2/dir3/dir4/dir5/dir6\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 \r\ndir2/dir3/dir4/dir5/dir6/dir7\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 \r\ndir2/dir3/dir4/dir5/dir6/dir7/dir8\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 \r\ndir2/dir3/dir4/dir5/dir6/dir7/dir8/dir9\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 \r\ndir2/dir3/dir4/dir5/dir6/dir7/dir8/dir9/dir10\r\ndr-xr-xr-x  3 0      0        2048  9 27 20:18 \r\ndir2/dir3/dir4/dir5/dir6/dir7/dir8/dir9/dir10/dir11\r\n\r\n",
            "published" : "2009-09-27T15:41:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "",
            "published" : "2009-10-09T12:25:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "",
            "published" : "2009-10-20T06:25:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 40,
        "title" : "Support for RAR",
        "summary" : "Support for RAR",
        "stars" : 14,
        "starred" : false,
        "status" : "Accepted",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-None", "OpSys-All", "Milestone-Later", "Component-libarchive" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ondra.pelech",
          "htmlLink" : "https://code.google.com/u/108617826911678138867/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "amejia004",
          "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
        },
        "updated" : "2014-08-29T09:32:15.000Z",
        "published" : "2009-10-05T16:05:49.000Z",
        "blockedOn" : [ {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 166
        } ],
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 47,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondra.pelech",
              "htmlLink" : "https://code.google.com/u/108617826911678138867/"
            },
            "content" : "Hi,\r\n\r\nit would be great if libarchive supported the RAR format; even if it would\r\nbe passworded archive.\r\n\r\nThis is just a wish/enhancement, not a bug; and I know it's probably not\r\neasy to implement and may take a long time. And thanks for this great\r\nproject, I use it through GNOME's gvfs-mount.",
            "published" : "2009-10-05T16:05:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cwilso11",
              "htmlLink" : "https://code.google.com/u/117665019939735155099/"
            },
            "content" : "I'm pretty sure that won't happen. The RAR format decoders are free-as-in-beer but\r\nnot free-as-in-speech AND if you use the \"free\" decoder you are agreeing never to try\r\nto reverse-engineer and create your own encoder.  Needless to say (but I'll say it\r\nanyway) the RARlabs encoders are not free in any sense.\r\n\r\nNow, libarchive is BSDish, not GPLish, so maybe that's of less concern to Tim...\r\n",
            "published" : "2009-10-06T02:10:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The deeper problem is that the existing RAR code almost certainly will not integrate\r\ncleanly into libarchive.  So RAR support would probably require at least refactoring\r\nthe existing RAR code and may require rewriting parts of it more-or-less from\r\nscratch.  This hasn't been a problem for well-documented open formats such as ZIP and\r\nISO9660 but could be a problem for RAR.\r\n\r\nMy suggestion:  Talk to the RAR developers and ask them if they would help with such\r\na project.  If they don't want to build a libarchive module themselves (libarchive's\r\ninternal API is pretty stable at this point, so this could be a reasonable approach),\r\nthey may be willing to provide enough documentation for someone else to implement\r\nsuch a module.  It never hurts to ask!\r\n\r\nNote: The distribution of such a module would also be a little tricky.  I've tried to\r\nkeep the libarchive distribution entirely BSD-licensed.  If the RAR developers insist\r\non a more restrictive license, they could either distribute their own fork of\r\nlibarchive or I could try to come up with a way to organize the libarchive\r\ndistribution so that there was a well-defined area for code with different licenses.\r\n I have no objection at all to someone distributing their own fork and would be\r\nentirely open to discussing the latter approach.\r\n",
            "published" : "2009-10-06T03:14:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondra.pelech",
              "htmlLink" : "https://code.google.com/u/108617826911678138867/"
            },
            "content" : "I knew it won't be easy... :)\r\nthe idea came from VLC, that's capable of playing movies inside RAR archive(s), and\r\nmy wish of Totem being able to do this too. One way of doing this was through\r\nmounting the RAR(s) with gvfs (with libarchive) and than playing it. The other way is\r\nwriting a special plugin for GStreamer. Both ways are pretty difficult... I will\r\nprobably try to takl to GStreamer guys too.\r\nAnyway, I will contact RARlabs and track the progress of the negotiation here...",
            "published" : "2009-10-06T10:24:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondra.pelech",
              "htmlLink" : "https://code.google.com/u/108617826911678138867/"
            },
            "content" : "reply:\r\nEugene Roshal\r\n\t\r\nHello,\r\n\r\nSorry, we do not plan to make such libarchive module and we do not\r\nhave any additional documentation about RAR format. All what we have\r\nnow is the brief archive headers description in technote.txt\r\nand unrar source code available in \"RAR extras\" on www.rarlab.com.\r\n\r\nIf libarchive team will decide to make such module, I can answer to\r\ntheir questions related to any unclear parts of unrar source code\r\nby email.\r\n\r\nEugene",
            "published" : "2009-10-09T22:28:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondra.pelech",
              "htmlLink" : "https://code.google.com/u/108617826911678138867/"
            },
            "content" : "package containing \"technote.txt\": http://www.rarlab.com/rar/rarlinux-3.9.0.tar.gz\r\nunrar source code: http://www.rarlab.com/rar/unrarsrc-3.9.6.tar.gz\r\nemail: roshal(at)rarlab.com",
            "published" : "2009-10-09T22:45:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The unrar sources are not useful.  Because of the unusual license restrictions on\r\nthem, we cannot use any part of them in libarchive.  In fact, anyone who has read\r\nthem carefully cannot be allowed to work on RAR support for libarchive.  (I myself\r\ndownloaded, skimmed the readme, technote, and copyright notices, then deleted them\r\nfrom my local system.)\r\n\r\nThe format described in the technote.txt is relatively simple to implement in\r\nlibarchive from scratch.  Anyone who has worked with libarchive even a little should\r\nbe able to use that technote to implement a reader for the RAR format.\r\n\r\nThe decompression is trickier.  Because of the license terms, we can't copy any of\r\nthe unrar source code.  Which means libarchive would have to link against a separate\r\nlibrary that implemented the RAR decompression algorithm.  As far as I know, no such\r\nlibrary exists.   Without that, there's very little that could be done.",
            "published" : "2009-10-10T03:59:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "-Priority-Medium", "Type-Enhancement", "Priority-None" ]
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "azuwis",
              "htmlLink" : "https://code.google.com/u/111847809283684948912/"
            },
            "content" : "[7zip][1] has a rar module make it able to extract RAR files. But it's certainly not\r\na library.\r\n\r\nThe source code is in p7zip_9.04_src_all.tar.bz2/CPP/7zip/Archive/Rar, can this code\r\nbe reused?\r\n\r\n[1]: http://p7zip.sourceforge.net/",
            "published" : "2009-10-14T08:04:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-10-29T03:44:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-Later", "Component-libarchive" ]
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "p7zip seems to have bundled the (non-free) unrar source code, so it's probably not\r\nany help.",
            "published" : "2009-12-21T12:43:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondra.pelech",
              "htmlLink" : "https://code.google.com/u/108617826911678138867/"
            },
            "content" : "VLC media player has support for playing files inside RAR archive(s), so maybe\r\nlooking at it's code might help.\r\n\r\nmodules/stream_filter/rar.c from\r\nhttp://download.videolan.org/pub/videolan/vlc/1.0.4/vlc-1.0.4.tar.bz2\r\n\r\nor quick look into the git repository\r\nhttp://git.videolan.org/?p=vlc.git;a=blob;f=modules/stream_filter/rar.c",
            "published" : "2010-01-05T14:45:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "arne@rfc2549.org",
              "htmlLink" : "https://code.google.com/u/arne@rfc2549.org/"
            },
            "content" : "The VLC rar.c only handles *uncompressed* files inside a rar file. Might be okay for a \r\nvideo program but not so useful for libarchive.",
            "published" : "2010-02-20T14:21:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "The author of the program \"The Unarchiver\" wrote his own implementation of a RAR decompressor from scratch. The relevant code can be found in his hg repository in googlecode.\r\nhttp://code.google.com/p/theunarchiver/\r\n\r\nYou can browse from http://code.google.com/p/theunarchiver/source/browse/XADMaster?r=tip.\r\n\r\nThe relavant RAR files don't show up in the above link for some reason. Here's another link with his code plus some of my own work (for license clarification and a C wrapper for his project).\r\nhttp://gitorious.org/theunarchiver/theunarchiver/trees/master/XADMaster\r\n\r\nThe relevant code is written from scratch, as he notes in a log message in an hg commit. He's stated he's willing to relicense his work under BSD license (it's currently LGPL).\r\nhttp://wakaba.c3.cx/sup/kareha.pl/1151796773/852\r\n\r\nI've volunteered to port his implementation to libarchive. His code is written in Objective-C and would need some major work to remove parts of the code that are only useful for The Unarchiver.\r\n",
            "published" : "2010-11-05T19:38:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "As long as the code is suitably licensed (ideally using exactly the same license as the other core libarchive files), I have no objections to this.\r\n\r\nI presume you're planning to adapt the code to plain C rather than Objective-C?\r\n\r\nI would suggest you start with the bare format (without the compression) to understand the libarchive interfaces.  You should be able to get support for uncompressed RAR archives working fairly quickly.  That would also give a chance for one of the folks with a lot of libarchive experience (myself, Joerg, or Michihiro, for example) to give you some feedback on the project style.  That's how we got Zip support working:  First by implementing the archive format without compression, getting that fully working and tested, then adding the compression.  (Fortunately, we could just use zlib for the Zip compression.)\r\n\r\nI'm looking forward to seeing your first contribution!\r\n",
            "published" : "2010-11-07T00:44:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "walmis",
              "htmlLink" : "https://code.google.com/u/113770751800872524370/"
            },
            "content" : "If someone is interested, I made a gvfs backend for uncompressed multipart rar files a while ago.\r\n\r\nThe source patch is here:\r\nhttp://bugzilla.gnome.org/show_bug.cgi?id=569126\r\n\r\n64bit Ubuntu package (should work on 10.04, 10.10) available here:\r\nhttp://walmis.balticum-tv.lt/share/gvfs-rar_1.6.0-1ubuntu2_amd64.deb\r\nMount option should appear by right clicking the rar file in nautilus.",
            "published" : "2011-01-26T15:38:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Here's my first attempt at getting something implemented for RAR support. This applies against current SVN.\r\n\r\nSome notes follow.\r\n\r\nThis implementation of RAR support only reads uncompressed files. There is no support for compressed files, multivolume RAR files, or files encrypted with a password.\r\n\r\nThis implementation will only read RAR files whose host OS has been set as WIN32 or UNIX. In other words, it will only read RAR files created on Windows or UNIX machines. This is because of how RAR file headers store the file attributes of the host OS. I only have access to Linux and Windows machines and thus could only work with file attributes from both machines.\r\n\r\nThe new C source code file was formatted using 'astyle --style=bsd -c -s2'.\r\n\r\nI tested RAR files with directories, regular files, and symlinks. I've tested large file support. I implemented support for UTF8 encoded filenames though I could not properly test this. Also, I could not properly test parsing arctime from the EXTTIME structure in a RAR header.\r\n\r\nI am subscribed to libarchive-discuss so feel free to send feedback/comments there and I will read them at my leisure.\r\n",
            "published" : "2011-06-22T23:00:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400015000",
              "fileName" : "rar-implementation.patch",
              "fileSize" : 21644,
              "mimetype" : "text/x-diff; charset=us-ascii",
              "isDeleted" : true
            } ]
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Here's a new patch to improve RARv3 support, in particular, the parsing of sub-blocks (comments).",
            "published" : "2011-06-24T01:04:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400016000",
              "fileName" : "rar-implementation.patch",
              "fileSize" : 22794,
              "mimetype" : "text/x-diff; charset=us-ascii",
              "isDeleted" : true
            } ]
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This does look like a very good start!\r\n\r\nBefore I commit this, could you please add a basic test:  You can copy libarchive/test/test_read_format_ar.c to get started.  This just opens a sample file (a RAR file that is UUencoded in your case) and reads the entries and verifies basic properties of the entries.  After you get a basic test working, it's easy to extend it to verify that you properly read different kinds of RAR files (such as files from different host platforms).\r\n\r\nI also suggest you add your sample file to the list of files used by test_fuzz.c.  The \"fuzz test\" tries to crash your code by randomly altering a sample file.  It has been very helpful in finding common programming errors.\r\n",
            "published" : "2011-06-26T00:08:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 18,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "andres.mejia1",
              "htmlLink" : "https://code.google.com/u/105182419686074482919/"
            },
            "content" : "Here is an updated patch adding tests.\r\n\r\nAlso, there is a fix for a renamed file in the tests directory (libarchive/test/test_archive_read_support.c > libarchive/test/archive_read_support.c). I included that fix in this patch. I can update the patch again once the renaming is fixed.",
            "published" : "2011-06-26T21:04:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "andres.mejia1",
              "htmlLink" : "https://code.google.com/u/105182419686074482919/"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400018000",
              "fileName" : "rar-implementation.patch",
              "fileSize" : 35320,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 19,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Here is an updated patch adding tests.\r\n\r\nAlso, there is a fix for a renamed file in the tests directory (libarchive/test/test_archive_read_support.c > libarchive/test/archive_read_support.c). I included that fix in this patch. I can update the patch again once the renaming is fixed.",
            "published" : "2011-06-26T21:05:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400019000",
              "fileName" : "rar-implementation.patch",
              "fileSize" : 35320,
              "mimetype" : "text/x-diff; charset=us-ascii",
              "isDeleted" : true
            } ]
          }, {
            "id" : 20,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've committed your patch.  (I also fixed the renaming issue; thanks for pointing that out.)\r\n\r\nI've left the RAR support out of archive_read_support_format_all() until the test failures are fixed.  Specifically, both test_fuzz and test_read_format_rar are consistently crashing here with this message:\r\n\r\nlibarchive_test(78034) malloc: *** error for object 0x104209250: incorrect checksum for freed object - object was probably modified after being freed.\r\n\r\nHere's the backtrace that shows where malloc() is detecting the failure; it probably happened somewhat earlier than this:\r\n#0  0x00007fff88f5576d in malloc_error_break ()\r\n#1  0x00007fff88f568c4 in szone_error ()\r\n#2  0x00007fff88e82c83 in tiny_free_list_remove_ptr ()\r\n#3  0x00007fff88e801ee in szone_free_definite_size ()\r\n#4  0x00000001000d3267 in archive_string_free (as=0x10482bbf0) at /Users/tim/projects/libarchive/trunk/libarchive/archive_string.c:238\r\n#5  0x00000001000d8d46 in archive_mstring_clean (aes=0x10482bbf0) at /Users/tim/projects/libarchive/trunk/libarchive/archive_string.c:3654\r\n#6  0x000000010009b693 in archive_entry_clear (entry=0x10482ba00) at /Users/tim/projects/libarchive/trunk/libarchive/archive_entry.c:161\r\n#7  0x00000001000a110e in _archive_read_next_header2 (_a=0x10482b200, entry=0x10482ba00) at /Users/tim/projects/libarchive/trunk/libarchive/archive_read.c:406\r\n#8  0x00000001000a1318 in _archive_read_next_header (_a=0x10482b200, entryp=0x7fff5fbfec90) at /Users/tim/projects/libarchive/trunk/libarchive/archive_read.c:465\r\n#9  0x00000001000da67a in archive_read_next_header (a=0x10482b200, entry=0x7fff5fbfec90) at /Users/tim/projects/libarchive/trunk/libarchive/archive_virtual.c:133\r\n#10 0x000000010004a1a1 in test_basic () at /Users/tim/projects/libarchive/trunk/libarchive/test/test_read_format_rar.c:77\r\n#11 0x000000010004afbf in test_read_format_rar () at /Users/tim/projects/libarchive/trunk/libarchive/test/test_read_format_rar.c:171\r\n#12 0x00000001000072ae in test_run (i=96, tmpdir=0x7fff5fbff360 \"/var/folders/64/64A1HgeYHKW11UT3X70fok+++TI/-Tmp-//libarchive_test.2011-06-26T17.43.56-000\") at /Users/tim/projects/libarchive/trunk/libarchive/test/main.c:2038\r\n#13 0x0000000100008430 in main (argc=3, argv=0x7fff5fbff4a0) at /Users/tim/projects/libarchive/trunk/libarchive/test/main.c:2455\r\n",
            "published" : "2011-06-27T00:47:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 21,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Ok. Here's a new patch fixing the above issues. I suppose this was a matter of using CFLAGS=\"-g -O0\". I tested this without adding CFLAGS.\r\n\r\nI've also added a test for one of the RAR files I forgot to add in the previous patch. This lead to finding a problem with test fuzz, where it would fail when the size was less than 100. This patch fixes that as well.",
            "published" : "2011-06-27T01:39:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400021000",
              "fileName" : "rar-implementation.patch",
              "fileSize" : 2724,
              "mimetype" : "text/x-diff; charset=us-ascii",
              "isDeleted" : true
            } ]
          }, {
            "id" : 22,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "I'm seeing this on the tests as well:\r\n\r\nTotals:\r\n  Tests run:                1\r\n  Tests failed:             1\r\n  Assertions checked:      90\r\n  Assertions failed:       65\r\n  Skips reported:           0\r\n\r\nFailing tests:\r\n  96: test_read_format_rar (65 failures)\r\n\r\nDetails for failing tests: /tmp/libarchive_test.2011-06-27T10.41.15-000\r\n\r\n$ ls -R /tmp/libarchive_test.2011-06-27T10.45.09-000\r\n/tmp/libarchive_test.2011-06-27T10.45.09-000:\r\ntest_read_format_rar  test_read_format_rar.log\r\n\r\n/tmp/libarchive_test.2011-06-27T10.45.09-000/test_read_format_rar:\r\ntest_read_format_rar_noeof.rar  test_read_format_rar.rar  test_read_format_rar_subblock.rar\r\n\r\nLooks like the test doesn't properly #ifdef on RAR support being enabled or something?",
            "published" : "2011-06-27T15:47:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400022000",
              "fileName" : "test_read_format_rar.log",
              "fileSize" : 11529,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 23,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "I'm not getting any issues running the tests (using the last patch I submitted). Could you try cleaning and rebuilding libarchive? Would you mind telling me what system your building/running on?\r\n\r\nThere's no #ifdef or configure switch that disables rar support. It's basically an implementation for rar support written from scratch with no external dependencies, so I didn't see the need to have the option to disable rar support.",
            "published" : "2011-06-27T21:01:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 24,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I've committed your latest patch but test_read_format_rar still fails.\r\nall of failures were caused by the test of time stamps. \r\n",
            "published" : "2011-06-28T05:36:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400024000",
              "fileName" : "test_read_format_rar.log",
              "fileSize" : 4963,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 25,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Looks like the RAR code converts Y/M/D/H/M/S time values into a timestamp using mktime(), which is locale-sensitive.  If RAR really stores times in the local time zone, you might not be able to do any better; you'll just have to either not test the time values returned or do some sloppier testing (test that the values returned are within 24 hours of the expected value, for instance).\r\n\r\nIf RAR times are supposed to be stored in GMT or UTC, you can copy the following portable function that I developed for the ISO9660 reader:\r\n\r\n\r\nstatic time_t\r\ntime_from_tm(struct tm *t)\r\n{\r\n#if HAVE_TIMEGM\r\n        /* Use platform timegm() if available. */\r\n        return (timegm(t));\r\n#elif HAVE__MKGMTIME64\r\n        return (_mkgmtime64(t));\r\n#else\r\n        /* Else use direct calculation using POSIX assumptions. */\r\n        /* First, fix up tm_yday based on the year/month/day. */\r\n        mktime(t);\r\n        /* Then we can compute timegm() from first principles. */\r\n        return (t->tm_sec + t->tm_min * 60 + t->tm_hour * 3600\r\n            + t->tm_yday * 86400 + (t->tm_year - 70) * 31536000\r\n            + ((t->tm_year - 69) / 4) * 86400 -\r\n            ((t->tm_year - 1) / 100) * 86400\r\n            + ((t->tm_year + 299) / 400) * 86400);\r\n#endif\r\n}\r\n",
            "published" : "2011-06-28T05:56:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 26,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "When I ran test_read_format_rar on Windows, I got a following error (except about time stamps):\r\n\r\n..\\..\\..\\libarchive\\libarchive\\test\\test_read_format_rar.c(67): \"testdir/test.txt\" != archive_entry_pathname(ae)\r\n              \"testdir/test.txt\" = \"testdir/test.txt\" (length 16)\r\n      archive_entry_pathname(ae) = \"testdir\\test.txt\" (length 16)\r\n\r\nThat means the RAR reader does not replace  a '\\' character by a '/' character on\r\nWindows platform.\r\nOther format readers replace it or add '/' as a path separator on every platform,\r\nso you should do the replacement on every platform.\r\n",
            "published" : "2011-06-28T07:06:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 27,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "A new patch to address the latest issues. RAR files are stored with localtime I'm afraid, so the test is changed to simply check that {a,c,m}time is set.\r\n\r\nAlso, I had thought '\\' were not converted on Windows.",
            "published" : "2011-06-28T16:56:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400027000",
              "fileName" : "rar-implementation.patch",
              "fileSize" : 4963,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 28,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've just committed this.  All of the tests seem are now passing for me.  Nice work!\r\n\r\nLibarchive's interfaces always use '/' for the path separator, regardless of platform.",
            "published" : "2011-06-29T04:49:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 29,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "When I made the RAR archive which had files whose name was non ASCII,\r\nI got empty file names.\r\n\r\nThe result was:\r\n$ bsdtar.exe tvf test_jp2.rar\r\n-rw-r--r--  0 0      0           8 3 19 03:27 (null)\r\n-rw-r--r--  0 0      0           4 3 19 03:28 (null)\r\n\r\nI made this patch and applied it.\r\n$ svn diff\r\nIndex: libarchive/archive_read_support_format_rar.c\r\n===================================================================\r\n--- libarchive/archive_read_support_format_rar.c        (revision 3447)\r\n+++ libarchive/archive_read_support_format_rar.c        (working copy)\r\n@@ -489,8 +489,8 @@\r\n   {\r\n     if (filename_size != strlen(filename))\r\n     {\r\n-      memcpy(filename, p + strlen(filename), filename_size - strlen(filename));\r\n\r\n-      filename[filename_size - strlen(filename)] = '\\0';\r\n+      memcpy(filename, p + strlen(filename) +1, filename_size - strlen(filename\r\n) -1);\r\n+      filename[filename_size - strlen(filename) -1] = '\\0';\r\n     }\r\n     sconv = archive_string_conversion_from_charset(&a->archive, \"UTF-8\", 1);\r\n     if (sconv == NULL)\r\n\r\nResult after patched:\r\n$ bsdtar.exe tvf test_jp2.rar\r\n-rw-r--r--  0 0      0           8 3 19 03:27 o`\"W[.t\r\nbsdtar.exe: Pathname cannot be converted from UTF-8 to current locale.\r\n-rw-r--r--  0 0      0           4 3 19 03:28 (null)\r\nbsdtar.exe: Error exit delayed from previous errors.\r\n\r\nI got incorrect file names and some conversion errors.\r\n\r\n\r\nFollowing text is the dump data of the RAR file.\r\n$ hexdump -C test_jp2.rar\r\n00000000  52 61 72 21 1a 07 00 cf  90 73 00 00 0d 00 00 00  |Rar!.....s......|\r\n00000010  00 00 00 00 a4 b6 74 20  92 38 00 08 00 00 00 08  |......t .8......|\r\n00000020  00 00 00 02 3f 9b 1b c3  7a 1b 73 3e 14 30 13 00  |....?...z.s>.0..|\r\n00000030  20 00 00 00 8a bf 8e 9a  2e 74 78 74 00 6f 60 22  | ........txt.o`\"|\r\n00000040  57 5b 2e 74 00 78 74 00  f0 f4 0f 51 8a bf 8e 9a  |W[.t.xt....Q....|\r\n00000050  82 a9 82 c8 52 98 74 20  92 34 00 04 00 00 00 04  |....R.t .4......|\r\n00000060  00 00 00 02 18 f8 c8 44  86 1b 73 3e 14 30 0f 00  |.......D..s>.0..|\r\n00000070  20 00 00 00 95 5c 2e 74  78 74 00 88 40 68 2e 74  | ....\\.txt..@h.t|\r\n00000080  78 00 74 00 b0 a0 25 26  6c 69 73 74 c4 3d 7b 00  |x.t...%&list.={.|\r\n00000090  40 07 00                                          |@..|\r\n00000093\r\n\r\nthe byte sequence of a first file \"漢字.txt\":\r\n8a bf 8e 9a  2e 74 78 74 00 6f 60 22 57 5b 2e 74 00 78 74   (19 bytes)\r\n\r\nthe byte sequence of a second file \"表.txt\":\r\n95 5c 2e 74  78 74 00 88 40 68 2e 74 78 00 74 (15 bytes)\r\n\r\nThose file names seems to be split by zero, and its first half is\r\na file name in natural character-set(in this case it is CP932), and\r\nits second half is a unicode file name, but it does not seems that\r\nthe unicode file name is a natural unicode, not UTF-8 nor UTF-16!\r\n\r\nI compared several forms of that files.   \r\n\"漢字.txt\":\r\nUTF-8 form     : e6 bc a2 e5 ad 97 2e 74  78 74\r\nUTF-16BE form  : 6f 22 5b 57 00 2e 00 74  00 78 00 74\r\nthe second half: 6f 60 22 57 5b 2e 74 00 78 74\r\n\r\n\"表.txt\":\r\nUTF-8 form     : e8 a1 a8 2e 74 78 74\r\nUTF-16BE form  : 88 68 00 2e 00 74 00 78  00 74\r\nthe second half: 88 40 68 2e 74 78 00 74\r\n\r\nSo I think those were converted from its UTF-16 string in some rules\r\nso as to trim 0x00 from the UTF-16 string as much as they can.\r\n\r\nIf my guess is right, the handling of file names should be:\r\n\r\n    if (filename_size != (fn_bytes = strlen(filename)))\r\n    {\r\n      memcpy(xxfilename, p + fn_bytes +1, filename_size - fn_bytes -1);\r\n      /* decode rar's unicode. */\r\n      fn_bytes = decode_rarunicode_to_utf16be(filename, xxfilename, filename_size - fn_bytes -1);\r\n      sconv = archive_string_conversion_from_charset(&a->archive, \"UTF-16BE\", 1);\r\n    } else\r\n      sconv = archive_string_conversion_from_charset(&a->archive, \"UTF-8\", 1);\r\n  .......  \r\n  .......  \r\n  if (archive_entry_copy_pathname_l(entry, filename, fn_bytes, sconv))\r\n  .......  \r\n\r\n",
            "published" : "2011-06-30T08:42:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400029000",
              "fileName" : "test_jp2.rar",
              "fileSize" : 147,
              "mimetype" : "application/x-rar; charset=binary"
            } ]
          }, {
            "id" : 30,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "This attached RAR file, which was broken by test_fuzz, caused a infinity loop on at least both FreeBSD and Cygwin.\r\n\r\n\r\n(gdb) run tf inf.rar\r\nStarting program: /usr/proj/libarchive/cab/bsdtar tf inf.rar\r\ntest.txt\r\ntestlink\r\ntestdir/test.txt\r\n\\314cw\\332>dw^C\r\nProgram received signal SIGINT, Interrupt.\r\n0x285e475f in read () from /lib/libc.so.7\r\n(gdb) bt\r\n#0  0x285e475f in read () from /lib/libc.so.7\r\n#1  0x285e4596 in lseek () from /lib/libc.so.7\r\n#2  0x08060150 in file_skip_lseek (a=0x28725400, client_data=0x2871d060, \r\n    request=1073741824) at libarchive/archive_read_open_filename.c:288\r\n#3  0x08060283 in file_skip (a=0x28725400, client_data=0x2871d060, \r\n    request=1073741824) at libarchive/archive_read_open_filename.c:322\r\n#4  0x0805896a in client_skip_proxy (self=0x28704060, request=8390552989898637251)\r\n    at libarchive/archive_read.c:195\r\n#5  0x0805a5f2 in advance_file_pointer (filter=0x28704060, \r\n    request=8391162079611977667) at libarchive/archive_read.c:1228\r\n#6  0x0805a378 in __archive_read_filter_consume (filter=0x28704060, \r\n    request=8391162079611977728) at libarchive/archive_read.c:1175\r\n#7  0x0805a321 in __archive_read_consume (a=0x28725400, request=8391162079611977728)\r\n    at libarchive/archive_read.c:1163\r\n#8  0x0807cb20 in archive_read_format_rar_read_data_skip (a=0x28725400)\r\n    at libarchive/archive_read_support_format_rar.c:377\r\n#9  0x08059605 in archive_read_data_skip (_a=0x28725400)\r\n    at libarchive/archive_read.c:651\r\n#10 0x0805004a in read_archive (bsdtar=0xbfbfe4c4, mode=116 't', writer=0x0)\r\n    at tar/read.c:299\r\n#11 0x0804f8d1 in tar_mode_t (bsdtar=0xbfbfe4c4) at tar/read.c:84\r\n#12 0x0804cdbe in main (argc=3, argv=0xbfbfe5e4) at tar/bsdtar.c:658\r\n(gdb) q\r\n",
            "published" : "2011-06-30T10:36:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400030000",
              "fileName" : "inf.rar",
              "fileSize" : 336,
              "mimetype" : "application/x-rar; charset=binary"
            } ]
          }, {
            "id" : 31,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "andres.mejia1",
              "htmlLink" : "https://code.google.com/u/105182419686074482919/"
            },
            "content" : "Would you mind if I added the test_jp2.rar file to the test suite? I have been trying to generate a rar file with unicode file names, but had no success.",
            "published" : "2011-06-30T10:58:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "andres.mejia1",
              "htmlLink" : "https://code.google.com/u/105182419686074482919/"
            },
            "canDelete" : true
          }, {
            "id" : 32,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Would you mind if I added the test_jp2.rar file to the test suite? I haven't been able to generate a rar file with unicode file names.",
            "published" : "2011-06-30T11:01:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 33,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Of course not.\r\n",
            "published" : "2011-06-30T15:23:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 34,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "The unicode file names are encoded in the rar file in some form. Could you provide another rar with longer unicode file names, to include some inside a unicode directory?\r\n",
            "published" : "2011-06-30T16:06:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 35,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Here is an additional sample file which has two files in Russian.\r\ntest_ru.rar can be tested on Windows platform in variety of countries\r\nmore than test_jp2.rar can, but I'd like you to use both files. \r\n\r\nFirst file \"ПРИВЕТ\":\r\nUTF-8 form   : d0 9f d0 a0 d0 98 d0 92 d0 95 d0 a2\r\nUTF-16BE form: 04 1f 04 20 04 18 04 12 04 15 04 22\r\n\r\nSecond file \"привет\":\r\nUTF-8 form   : d0 bf d1 80 d0 b8 d0 b2 d0 b5 d1 82\r\nUTF-16BE form: 04 3f 04 40 04 38 04 32 04 35 04 42\r\n\r\nAnd you can copy test_read_format_cpio_filename.c and modify it for tests for\r\nthe unicode file names.\r\n",
            "published" : "2011-06-30T16:29:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400035000",
              "fileName" : "test_ru.rar",
              "fileSize" : 147,
              "mimetype" : "application/x-rar; charset=binary"
            } ]
          }, {
            "id" : 36,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Here is a new sample file which has long file names.\r\n\r\nThe file includes two files :\r\n表だよ\\新しいフォルダ\\新規テキスト ドキュメント.txt\r\n表だよ\\漢字長いファイル名long-filename-in-漢字.txt\r\n",
            "published" : "2011-07-01T04:26:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400036000",
              "fileName" : "longname_jp.rar",
              "fileSize" : 461,
              "mimetype" : "application/x-rar; charset=binary"
            } ]
          }, {
            "id" : 37,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "I decided to work on the compression first before tackling the unicode support or test_fuzz issues. This patch will implement read support for RAR's lzss compression (normal, fast, and fastest compression).\r\n\r\nI've been using theunarchiver to help with getting the lzss compression working. The author wrote the RAR implementation from scratch. There isn't much code reused from theunarchiver in use in libarchive, primarily because theunarchiver is written in Objective-C and is not a library. In any case, I have received permission to use code from theunarchiver and relicense code for the RAR implementation in theunarchiver in BSD. See http://wakaba.c3.cx/sup/kareha.pl/1151796773/852.\r\n\r\nThis implementation took some time, and I would like to submit what I have so far. I believe there is still much room for improvement. Even so, this implementation is already surpassing the official \"unrar\" program in terms of performance. The two log files show basic stats for time runs on bsdtar and unrar on my system. bsdtar was built using default optimizations and unrar is from whatever unrar package that is available in Debian.",
            "published" : "2011-07-15T01:42:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400037000",
              "fileName" : "rar-lzss.patch",
              "fileSize" : 86130,
              "mimetype" : "text/x-diff; charset=us-ascii"
            }, {
              "attachmentId" : "400037001",
              "fileName" : "bsdtar_extract.log",
              "fileSize" : 715,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "400037002",
              "fileName" : "unrar_extract.log",
              "fileSize" : 610,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 38,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "BTW, I am interested in getting commit access solely for the purpose of working on the RAR implementation for libarchive.",
            "published" : "2011-07-15T01:43:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 39,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Nice work!\r\n\r\nI've committed your patch.\r\n\r\nContact me directly at kientzle@freebsd.org to discuss getting commit access.\r\n",
            "published" : "2011-07-16T06:55:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 40,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "test_fuzz often stalls at reading RAR files at least on both Linux and FreeBSD.\r\n\r\nAndres, You should execute a following script for one or two hours in order\r\nto eliminate these sort of test_fuzz failure caused by the RAR reader.\r\n#!/bin/sh\r\nwhile true\r\ndo\r\n  echo -n \".\"\r\n  ./libarchive_test test_fuzz > /dev/null\r\n  sleep 1\r\ndone\r\n",
            "published" : "2011-07-27T07:54:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 41,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "I'll handle this one.",
            "published" : "2011-08-13T18:55:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted",
              "owner" : "mcitadel"
            },
            "canDelete" : true
          }, {
            "id" : 42,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "",
            "published" : "2011-08-13T18:57:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "blockedOn" : [ "166" ]
            },
            "canDelete" : true
          }, {
            "id" : 43,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "There are some memory access error when reading a broken file.\r\nPlease see an attached log file.",
            "published" : "2011-08-15T02:30:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "400043000",
              "fileName" : "rar-mem.log",
              "fileSize" : 44791,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 44,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "",
            "published" : "2012-01-16T04:18:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "amejia004"
            },
            "canDelete" : true
          }, {
            "id" : 45,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "renenglish",
              "htmlLink" : "https://code.google.com/u/renenglish/"
            },
            "content" : "How is the rar support now ? Can libarchive support compressed rar files ?",
            "published" : "2014-06-04T11:20:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 46,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hadessuk",
              "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
            },
            "content" : "RAR is supported since libarchive 3.0:\r\nhttps://github.com/libarchive/libarchive/wiki/ReleaseNotes#libarchive-302\r\n\r\nmulti-volume RAR is apparently planned for the 3.1.x release.",
            "published" : "2014-08-29T09:32:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 41,
        "title" : "Support for 7z",
        "summary" : "Support for 7z",
        "stars" : 4,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Enhancement", "Priority-None", "OpSys-All", "Milestone-Later", "Component-libarchive" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ondra.pelech",
          "htmlLink" : "https://code.google.com/u/108617826911678138867/"
        },
        "updated" : "2011-12-26T03:17:53.000Z",
        "published" : "2009-10-08T15:40:17.000Z",
        "closed" : "2011-12-26T03:17:53.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 10,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondra.pelech",
              "htmlLink" : "https://code.google.com/u/108617826911678138867/"
            },
            "content" : "7z is a very good archive format designed to work well with also very good\r\nLZMA compress format and hence is a direct competitor to evil proprietary\r\nRAR (and beats it in all ways).\r\nsupport for this would be cool\r\nagain, thanks very much",
            "published" : "2009-10-08T15:40:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Can you point us to documentation for this format?\r\n\r\n\r\n",
            "published" : "2009-10-09T06:05:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondra.pelech",
              "htmlLink" : "https://code.google.com/u/108617826911678138867/"
            },
            "content" : "does this satisfy your needs? http://www.7-zip.org/sdk.html",
            "published" : "2009-10-09T10:54:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The summary information I've found for 7z list the compression methods used but\r\nnothing about the format.  I presume it's related to the Zip format but documentation\r\nwould help.\r\n\r\nThe compression algorithms used don't present much of an obstacle:  lzma, lzma2, xz,\r\nbzip2, and deflate are all well-supported via compression/decompression libraries,\r\nand libarchive already uses those libraries in conjunction with other formats.  I\r\ndon't know much about \"BCJ\" coding, though.\r\n\r\nIn short, this seems pretty doable.  The next problem is finding someone who actually\r\nhas time and interest to do the work.  Please remember that libarchive is a volunteer\r\nproject.  If you're interested in working on this, I'm happy to answer questions. \r\nI've also written up several articles in the Wiki area about libarchive internals,\r\nincluding a couple of step-by-step guides to implementing certain types of new features.\r\n",
            "published" : "2009-10-10T04:07:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "-Priority-Medium", "Type-Enhancement", "Priority-Low" ]
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-10-29T03:43:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-Later", "Component-libarchive" ]
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "arne@rfc2549.org",
              "htmlLink" : "https://code.google.com/u/arne@rfc2549.org/"
            },
            "content" : "I looked into the 7z format.\r\n\r\nAs I understood libarchive has been designed to be able to work with file \r\nstreams. \r\n\r\nThe 7z files I looked at had the header informationen at the end of the file. I \r\nexactly know after reading the first few bytes where the header is located in \r\nterms of file position, so I could say look ahed for this number of bytes but \r\nthat would need huge amount of memory.\r\n\r\nAm I correct that I cannot implement 7z with the current libarchive architecture \r\nor am I missing something?",
            "published" : "2010-02-20T22:51:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Libarchive does rely on streaming very heavily.  However, the Zip support in\r\nlibarchive might be worth investigating.  Zip format has a directory at the end of\r\nthe archive.  Most Zip readers start by reading this directory.  But it turns out\r\nthat there is just enough duplicate information stored with each entry that\r\nlibarchive can successfully read most Zip archives without reading the directory first.\r\n\r\nI don't know enough about 7z to know whether this is possible there, but it is\r\ncertainly worth investigating.",
            "published" : "2010-02-21T00:06:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "arne@rfc2549.org",
              "htmlLink" : "https://code.google.com/u/arne@rfc2549.org/"
            },
            "content" : "I think not. The file structure from the files I found looks like this:\r\n\r\nHeader\r\npointer to next header (which is at the end of the file)\r\ncompressed files*\r\nheader (which has been pointed at the beginning of the file\r\nend of file\r\n\r\n\r\n* If you compress with no compression you see that there is really only data with no \r\nheader/seperators at all\r\n\r\n\r\nFrom the documentation I found in the 7zip sdk (7zFormat.txt iirc) it might be \r\npossible to write a 7z archive with libarchive but I wanted with uncompressing these \r\narchives :(",
            "published" : "2010-02-21T02:06:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Based on the discussion so far, this sounds like it might not be feasible.",
            "published" : "2010-03-06T19:00:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Priority-Low", "Priority-None" ]
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I added 7-Zip reader and writer. Those has been released as a part of libarchive 3.0.2.\r\nThe reader can extract several compression types, copy, deflate, bzip2, lzma1, lzma2 and\r\nPPMd, and few filter types, BCJ and BCJ2 with all those compression types, DELTA with \r\nlzma1 and lzma2.\r\nThe writer can use several compression types, copy, deflate, bzip2, lzma1, lzma2 and PPMd\r\nto create a 7-Zip archive file, but not support any filter types. The default compression\r\ntype is lzma1 if liblzma is available. you can choose a compression type by\r\ncompression option like this, for example,\r\nbsdtar -cf foo.7z --format 7zip --options 7zip:compression=lzma2 foo/\r\n",
            "published" : "2011-12-26T03:17:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 42,
        "title" : "write example can' work",
        "summary" : "write example can' work",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Linux" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "djszapi2",
          "htmlLink" : "https://code.google.com/u/106326258837823123664/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-10-12T00:28:27.000Z",
        "published" : "2009-10-11T05:32:10.000Z",
        "closed" : "2009-10-12T00:28:27.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "djszapi2",
              "htmlLink" : "https://code.google.com/u/106326258837823123664/"
            },
            "content" : "Hello!\r\n\r\nYour example can't work from here:\r\nhttp://code.google.com/p/libarchive/wiki/ManPageArchiveWrite3\r\n\r\nIt creates a tarball with undefined/random name, with empty contents,\r\nplease correct it!\r\n\r\nBest Regards,\r\nLaszlo Papp\r\n",
            "published" : "2009-10-11T05:32:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "djszapi2",
              "htmlLink" : "https://code.google.com/u/106326258837823123664/"
            },
            "content" : "The debugging message from me after archive_write_header:\r\nRETVAL: -25, ERRORSTR: File size out of range, SIZE: 17592186048964 \r\n\r\nI think your API function, named archive_write_header, is wrong, it can't copy the\r\nsize quantity.\r\n\r\nI've attached the working example, please consider to apply it.\r\n\r\n",
            "published" : "2009-10-11T07:55:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "424083448523454929",
              "fileName" : "example.c",
              "fileSize" : 1945,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 43 has been merged into this issue.",
            "published" : "2009-10-11T23:33:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "You are using Linux.  Linux has two different \"struct stat\" and you need to compile\r\nwith the right options to use the same \"struct stat\" that libarchive uses:\r\n\r\ngcc -D_FILE_OFFSET_BITS=64\r\n\r\nIt should be possible to change libarchive to work correctly with either \"struct\r\nstat\" definition, but no one has yet offered to do the necessary work.\r\n\r\nI'll edit the example in the manpage to clarify this point.",
            "published" : "2009-10-11T23:41:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted",
              "owner" : "kientzle",
              "labels" : [ "-OpSys-All", "OpSys-Linux" ]
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Updated the example as of r1506 (Wiki), r1507 (libarchive/trunk), and r1508\r\n(libarchive/release/2.7).\r\n",
            "published" : "2009-10-12T00:28:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "djszapi2",
              "htmlLink" : "https://code.google.com/u/106326258837823123664/"
            },
            "content" : "Thanks, works.",
            "published" : "2009-10-12T01:10:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 43,
        "title" : "write example can' work",
        "summary" : "write example can' work",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "djszapi2",
          "htmlLink" : "https://code.google.com/u/106326258837823123664/"
        },
        "updated" : "2009-10-11T23:33:32.000Z",
        "published" : "2009-10-11T05:56:10.000Z",
        "closed" : "2009-10-11T23:33:32.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 42
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "djszapi2",
              "htmlLink" : "https://code.google.com/u/106326258837823123664/"
            },
            "content" : "Hello!\r\n\r\nYour example can't work from here:\r\nhttp://code.google.com/p/libarchive/wiki/ManPageArchiveWrite3\r\n\r\nIt creates a tarball with undefined/random name, with empty contents,\r\nplease correct it!\r\n\r\nBest Regards,\r\nLaszlo Papp\r\n",
            "published" : "2009-10-11T05:56:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-10-11T23:33:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "42"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 44,
        "title" : "test_pax_filename_encoding failed on Windows",
        "summary" : "test_pax_filename_encoding failed on Windows",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-High", "OpSys-Windows", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-12-07T00:23:22.000Z",
        "published" : "2009-10-15T12:26:45.000Z",
        "closed" : "2009-12-07T00:23:22.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Please see attached log file.",
            "published" : "2009-10-15T12:26:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2112095920076682029",
              "fileName" : "test_pax_filename_encoding.log",
              "fileSize" : 0,
              "mimetype" : "application/x-empty"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "attach log file again.",
            "published" : "2009-10-15T13:33:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-3650633891744797639",
              "fileName" : "test_pax_filename_encoding.log",
              "fileSize" : 3259,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "As near as I tell, the problem with this test (and test_entry) has to do with how the\r\ntest programs try to set the Windows default character encoding for the current\r\nthread (specifically, the code page implied by CP_THREAD_ACP).\r\n\r\nToday, the tests all use setlocale() to try to force the default character encoding\r\nto UTF-8.  They then feed some invalid UTF-8 into libarchive to verify the correct\r\nerror handling.\r\n\r\nSo far, I've found a few forum posts that suggest that SetThreadLocale() can be used\r\nto set the code page used by CP_THREAD_ACP.  Unfortunately the MSDN documentation\r\nflatly contradicts this:  the argument to SetThreadLocale() is a language code that\r\ndoes not specify a character encoding.  (I suspect the MSDN docs are wrong somehow.)\r\n",
            "published" : "2009-10-18T20:18:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "After doing some more research, I now believe that:\r\n 1) We should be using CP_ACP instead of CP_THREAD_ACP.\r\n 2) The tests that try to force conversion errors will have to simply be disabled on\r\nWin32.  Apparently Win32's UTF-8 support is very limited and I cannot find an\r\nappropriate mechanism to set the code page just for this process or thread.\r\n",
            "published" : "2009-11-01T02:51:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is fixed now; I've made the changes described in comment 3 above.",
            "published" : "2009-12-07T00:23:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "kientzle"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 45,
        "title" : "HFS+ and dmg support",
        "summary" : "HFS+ and dmg support",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Low", "OpSys-All", "Milestone-Later", "Component-libarchive" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hadessuk",
          "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
        },
        "updated" : "2009-10-29T03:42:37.000Z",
        "published" : "2009-10-28T16:52:27.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hadessuk",
              "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
            },
            "content" : "Opening a DMG file from MacOS X, requires:\r\n- bzip2 support\r\n- HFS+ support\r\n\r\nThe former is already supported in libarchive, libguestfs could be used to handle the HFS+ part.\r\n\r\nhttp://rwmj.wordpress.com/2009/10/25/unpack-a-mac-dmg-installer-using-guestfish/",
            "published" : "2009-10-28T16:52:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Give it a try; let us know how it goes!",
            "published" : "2009-10-29T03:38:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "-Priority-Medium", "Type-Enhancement", "Priority-Low" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-10-29T03:42:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-Later", "Component-libarchive" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rransom.8774",
              "htmlLink" : "https://code.google.com/u/106249933430002364785/"
            },
            "content" : "libguestfs does not contain any code to read HFS+ filesystems; it starts a Linux VM \r\nwith access to the filesystem, then mounts the filesystem in the VM and uses the Linux \r\nkernel's HFS+ driver to access its contents.  This approach is completely incompatible \r\nwith libarchive's design.\r\n\r\nIt may be possible to implement a streaming HFS+ reader for libarchive, but that would \r\nrequire documentation of the HFS+ format.",
            "published" : "2010-04-23T07:54:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 46,
        "title" : "[patch] add support for Haiku OS",
        "summary" : "[patch] add support for Haiku OS",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Other", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "cpr420",
          "htmlLink" : "https://code.google.com/u/101202632221865297512/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-12-13T23:32:16.000Z",
        "published" : "2009-10-31T04:46:27.000Z",
        "closed" : "2009-12-13T23:32:16.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 18,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cpr420",
              "htmlLink" : "https://code.google.com/u/101202632221865297512/"
            },
            "content" : "I'm attaching a patch which allows building on Haiku OS.\r\nLet me know if I need to correct anything or if you have questions.\r\n\r\nThanks",
            "published" : "2009-10-31T04:46:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-4190328551865135307",
              "fileName" : "libarchive.haiku.diff",
              "fileSize" : 5640,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I think I see a couple of ways to reduce the number of places where we need to put\r\nHaiku-specific conditionals.  Could you try the attached patch (instead of yours) and\r\nlet me know.  Thanks!",
            "published" : "2009-10-31T06:04:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-3681575852442916260",
              "fileName" : "libarchive.haiku.diff-v2",
              "fileSize" : 4591,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Adjust labels.",
            "published" : "2009-10-31T06:05:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "kientzle",
              "labels" : [ "-OpSys-All", "OpSys-Other", "Milestone-2.8" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cpr420",
              "htmlLink" : "https://code.google.com/u/101202632221865297512/"
            },
            "content" : "Yes, it builds and runs well.\r\n\r\nStill a lot of failures in the cpio and tar tests due to the fact that Haiku doesn't\r\nhave hard links on BFS, and because st_atime doesn't really work(it just uses the\r\ncurrent time).\r\n\r\nAs far as the libarchive tests, all but two are successful.  I haven't figured out\r\nwhy they are failing though.  Related to st_mode and sparse writes.  Attaching the\r\nlogs in case you have any ideas, but, it's definitely not a high priority.\r\n\r\nThanks for looking into adding Haiku support!\r\n",
            "published" : "2009-10-31T06:23:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-7340230264745024321",
              "fileName" : "test_write_disk.log",
              "fileSize" : 667,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "-4723015418128740732",
              "fileName" : "test_write_disk_sparse.log",
              "fileSize" : 338,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've committed a couple of changes that should enable libarchive/trunk to build for\r\nyou.  It should also suppress the atime tests for libarchive, cpio, and tar.\r\n\r\nThe test_write_disk failure is a test that asks libarchive to create a directory,\r\nthen  fails to verify the directory because the st_mode value read back from disk\r\ndoesn't match.  There's an extra bit set in the st_mode coming from disk for some\r\nreason.  The st_mode value from disk is 0100040555 (octal).  The lower 9 bits are the\r\npermissions (which agree with what the test expects), the 040000 marks it as a\r\ndirectory (this should match S_IFDIR on your system), but the additional bit is a\r\nmystery.  If you could tell me why that bit is set, that will tell me the best way to\r\naddress this.\r\n\r\nI'm still looking into the test_write_disk_sparse failure.",
            "published" : "2009-10-31T18:18:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cpr420",
              "htmlLink" : "https://code.google.com/u/101202632221865297512/"
            },
            "content" : "I hope you'll forgive my ignorance when it comes to the stat() call.  I generally\r\ndon't have a need to use it in my software.  BeOS and Haiku do have extra bits in\r\nst_mode.  I assume it's getting S_ATTR_DIR since that is automatically added to\r\ndirectories on bfs.  From sys/stat.h:\r\n\r\n/* extended file types */\r\n#define S_ATTR_DIR\t\t\t01000000000\t/* attribute directory */\r\n#define S_ATTR\t\t\t\t02000000000\t/* attribute */\r\n#define S_INDEX_DIR\t\t\t04000000000\t/* index (or index directory) */\r\n#define S_STR_INDEX\t\t\t00100000000\t/* string index */\r\n#define S_INT_INDEX\t\t\t00200000000\t/* int32 index */\r\n#define S_UINT_INDEX\t\t00400000000\t/* uint32 index */\r\n#define S_LONG_LONG_INDEX\t00010000000\t/* int64 index */\r\n#define S_ULONG_LONG_INDEX\t00020000000\t/* uint64 index */\r\n#define S_FLOAT_INDEX\t\t00040000000\t/* float index */\r\n#define S_DOUBLE_INDEX\t\t00001000000\t/* double index */\r\n#define S_ALLOW_DUPS\t\t00002000000\t/* allow duplicate entries (currently unused) */\r\n\r\n/* link types */\r\n#define\tS_LINK_SELF_HEALING\t00001000000\t/* link will be updated if you move its target */\r\n#define S_LINK_AUTO_DELETE\t00002000000\t/* link will be deleted if you delete its\r\ntarget */\r\n\r\n\r\n\r\nI did have to make a small change to tar/test/test.h similar to the ifdef in\r\ncpio/test/test.h.  I'll attach the patch if you want to incorporate it.\r\n\r\n\r\n\r\nBesides the sparse test and the mode problem I think the only test failures are from\r\ncpio and tar not being able to create hard links.  These are not critical in my\r\nopinion.  I believe the tests would succeed if I were to mount a partition with\r\nhardlink support.  The vfs layer does support hardlinks, just not on bfs.\r\n\r\n\r\n\r\n\r\nOn a side note:\r\nYou've already done so much that I hate to bring this up.  Are you interested in\r\nsupporting legacy compilers?  libarchive builds properly on gcc2. cpio and tar would\r\nneed a couple of changes.\r\n\r\nThis would involve not using 'j' in the format string of various *printf calls, and\r\nalso adding __HAIKU__ to the '#ifdef __FreeBSD__' in tar/bsdtar_platform.h,\r\ncpio/cpio_platform.h and libarchive/archive_platform.h.  Haiku uses some portions of\r\nFreeBSD and does actually have 'sys/cdefs.h' which confuses gcc2(but not gcc4 for\r\nsome reason).\r\n\r\n",
            "published" : "2009-10-31T22:06:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "75697832743106666",
              "fileName" : "libarchive.tar_test.diff",
              "fileSize" : 439,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r1560 should fix the test_write_disk failure you're seeing.\r\n\r\nr1561 adds the additional header to tar/test/test.h and libarchive/test/test.h\r\n\r\nLet me know the status after these changes.\r\n\r\nRe: hardlink tests.  I would prefer to pursue the same approach we've used for\r\nsymlink tests.  Look at canSymlink() in test/main.c for details:  The basic idea is\r\nthat the test framework actually probes the local disk (by creating files and testing\r\nthem) to see if symlinks are supported on the current OS and filesystem.  Individual\r\ntests can then use the result of this check to avoid running tests that are certain\r\nto fail.  (Even better, run the tests anyway and verify that they return correct\r\nerror codes if the underlying filesystem doesn't support hardlinks.)\r\n\r\nRe: gcc2.  I'm always interested in seeing patches.  I have on occasion rejected\r\npatches that I deemed too intrusive, of course.\r\n\r\nNote that generally, I'm trying to reduce the platform checks (such as \"#ifdef\r\n__FreeBSD__\") and use capability tests (\"#if HAVE_SYS_CDEFS_H\") instead.  There's\r\nalready configuration logic that is supposed to only use 'j' format specifiers if\r\nthey're available in bsdtar_platform.h.  Clearly, that's not quite sufficient.  If\r\nyou have ideas for how to improve that, I'm very interested.  One possibility is to\r\nalter configure.ac to explicitly test for printf modifier support.  Another\r\npossibility would be to write a simple i64toa that formats int64 arguments and use\r\nthat instead of trying to determine the correct printf modifiers for the current\r\nplatform.\r\n",
            "published" : "2009-10-31T23:05:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The attached patch eliminates use of %j modifier for bsdtar.  Let me know if this\r\nworks for you.\r\n",
            "published" : "2009-10-31T23:33:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "5984244920251908151",
              "fileName" : "bsdtar_noprintfj.diff",
              "fileSize" : 5612,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cpr420",
              "htmlLink" : "https://code.google.com/u/101202632221865297512/"
            },
            "content" : "yes, the patch works on gcc2 for bsdtar.  I did need to add __HAIKU__ to the '#ifdef\r\n__FreeBSD__' part, but as you said, this should probably be changed in the build\r\nscripts to detect the presence of sys/cdefs.h.\r\n\r\nSomething similar would be needed for cpio...\r\n\r\n[ 90%] Building C object cpio/CMakeFiles/bsdcpio.dir/cpio.c.o\r\ncc1: warnings being treated as errors\r\n/boot/home/libarchive.cmake/cpio/cpio.c: In function `list_item_verbose':\r\n/boot/home/libarchive.cmake/cpio/cpio.c:962: warning: unknown conversion type\r\ncharacter `j' in format\r\n/boot/home/libarchive.cmake/cpio/cpio.c:962: warning: too many arguments for format\r\n/boot/home/libarchive.cmake/cpio/cpio.c:965: warning: unknown conversion type\r\ncharacter `j' in format\r\n/boot/home/libarchive.cmake/cpio/cpio.c:965: warning: too many arguments for format\r\n/boot/home/libarchive.cmake/cpio/cpio.c:986: warning: unknown conversion type\r\ncharacter `j' in format\r\n/boot/home/libarchive.cmake/cpio/cpio.c:986: warning: too many arguments for format\r\nmake[2]: *** [cpio/CMakeFiles/bsdcpio.dir/cpio.c.o] Error 1\r\nmake[1]: *** [cpio/CMakeFiles/bsdcpio.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n\r\n\r\n\r\nI will definitely look into modifying the hardlink tests for tar and cpio as you\r\nsuggested.\r\n",
            "published" : "2009-10-31T23:54:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"Something similar would be needed for cpio...\"\r\n\r\nDone in r1563.\r\n\r\nAt this point, it sounds like you're capable of working up patches for the remaining\r\nissues.  Let me know if you need any help.\r\n",
            "published" : "2009-11-01T02:42:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "P.S. You should also subscribe to libarchive-announce if you're not already.  In\r\nparticular, I'm hoping to start the release process for libarchive 2.8 in about a\r\nmonth and will be asking there for people to test the release candidate on different\r\nsystems.",
            "published" : "2009-11-01T02:45:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cpr420",
              "htmlLink" : "https://code.google.com/u/101202632221865297512/"
            },
            "content" : "I have the first patch ready for your consideration.  It adjusts the build scripts\r\nand headers so that __FBSDID is searched for.  I'm assuming that this macro will\r\nalways be in sys/cdefs.h.  I think that is a safe assumption.\r\n",
            "published" : "2009-11-01T04:04:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3463390764343294303",
              "fileName" : "la.fbsdid.diff",
              "fileSize" : 6769,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cpr420",
              "htmlLink" : "https://code.google.com/u/101202632221865297512/"
            },
            "content" : "There were a couple places were it was used that I was not aware of.  Fixed the patch\r\nto include those as well.  The only place that isn't fixed is in contrib/shar.  But\r\nat the moment, it looks as though that will only build on FreeBSD so I'm hesitant to\r\nchange that one.",
            "published" : "2009-11-01T04:29:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "7383934363061513259",
              "fileName" : "la.fbsdid.diff2",
              "fileSize" : 9848,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cpr420",
              "htmlLink" : "https://code.google.com/u/101202632221865297512/"
            },
            "content" : "Maybe I should quadruple check before submitting :)\r\nThe changes in the second patch would have broken tar/getdate.c.\r\n\r\nSorry for the noise.",
            "published" : "2009-11-01T04:41:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "805376163518953580",
              "fileName" : "la.fbsdid.diff3",
              "fileSize" : 9890,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It seems the code below would be a little more straightforward if it works.  As a\r\nbonus, it only requires the configure checks to test for sys/cdefs.h.  I also have\r\ntwo other requests for you:\r\n  * Please don't touch getdate.c unless you absolutely have to.  Because it's a\r\nrewrite of public domain source, I'm leaving it as public domain and trying to keep\r\nit separate from everything else so people can easily reuse it.\r\n  * Please avoid gratuitous whitespace changes in your diffs (your last patch has a\r\nbunch of unnecessary changed lines in CMakeLists.txt).\r\n\r\n/* Get a real definition for __FBSDID if we can. */\r\n#if HAVE_SYS_CDEFS_H\r\n#include <sys/cdefs.h>\r\n#endif\r\n\r\n/* If not, define it so as to avoid dangling semicolons. */\r\n#ifndef __FBSDID\r\n#define\t__FBSDID(a)     struct _undefined_hack\r\n#endif\r\n",
            "published" : "2009-11-01T05:57:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cpr420",
              "htmlLink" : "https://code.google.com/u/101202632221865297512/"
            },
            "content" : "I hadn't even noticed that getdate.c was under a different license.  I apologize for\r\nthat.  I debated about the whitespace change, but the addition would have put that\r\nline out of step with the rest of the lines in that section.  I had just assumed that\r\nyou would like to keep the arguments columnized.  This addition is no longer in there\r\nso the point is moot.\r\n\r\nI have altered the patch to use your suggested methods, and tested it on\r\nOSX(10.4-ppc) as well.  I may submit a patch for OSX some time in the future as one\r\nof the files fails to build because of an unrelated issue.\r\n\r\n",
            "published" : "2009-11-01T06:32:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3469397059438846721",
              "fileName" : "la.fbsdid.diff4",
              "fileSize" : 6624,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Looks good.  Committed as r1565.",
            "published" : "2009-11-01T06:56:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe all of the issues raised here have been addressed, so I'm closing this as\r\n\"Fixed.\"  Please let me know if there are any further issues.\r\n",
            "published" : "2009-12-13T23:32:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 47,
        "title" : "cygwin 1.7 cmake build problems",
        "summary" : "cygwin 1.7 cmake build problems",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dm.lua%math2.org@gtempaccount.com",
          "htmlLink" : "https://code.google.com/u/113713503587059456490/"
        },
        "updated" : "2009-11-11T07:52:06.000Z",
        "published" : "2009-11-10T08:41:07.000Z",
        "closed" : "2009-11-11T07:52:06.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dm.lua%math2.org@gtempaccount.com",
              "htmlLink" : "https://code.google.com/u/113713503587059456490/"
            },
            "content" : "CMake building on Cygwin 1.7 isn't currently working.\r\n\r\nThe first problem is that HAVE_CYGWIN_CONV_PATH (required by\r\ntar/test/test_copy.c) isn't defined anywhere.  Here's a patch for CMake\r\n(something similar should also be added for autoconf).\r\n\r\n===================================================================\r\n--- a/tar/CMakeLists.txt      (revision 1628)\r\n+++ b/tar/CMakeLists.txt      (working copy)\r\n@@ -33,6 +33,14 @@\r\n     LIST(APPEND bsdtar_SOURCES bsdtar_windows.h)\r\n   ENDIF(WIN32 AND NOT CYGWIN)\r\n\r\n+  IF(CYGWIN)\r\n+    INCLUDE(CheckSymbolExists)\r\n+    CHECK_SYMBOL_EXISTS(cygwin_conv_path  sys/cygwin.h HAVE_CYGWIN_CONV_PATH)\r\n+    IF(HAVE_CYGWIN_CONV_PATH)\r\n+      ADD_DEFINITIONS(-DHAVE_CYGWIN_CONV_PATH)\r\n+    ENDIF(HAVE_CYGWIN_CONV_PATH)\r\n+  ENDIF(CYGWIN)\r\n+\r\n   # bsdtar documentation\r\n   SET(bsdtar_MANS bsdtar.1)\r\n\r\n\r\nAfter making this change, bsdtar and bsdcpio still have some linking problems:\r\n\r\nCMakeFiles/bsdtar.dir/bsdtar.c.o:bsdtar.c:(.text+0xf4b): undefined reference to\r\n`__imp__archive_version'\r\nCMakeFiles/bsdtar.dir/read.c.o:read.c:(.text+0xec): undefined reference to\r\n`__im\r\np__archive_position_compressed'\r\n...\r\n\r\nI can investigate that more later if needed.",
            "published" : "2009-11-10T08:41:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed a slight variation of this patch as r1629.\r\n\r\nPlease let us know what else you find.  The configure-based build works on Cygwin\r\n1.7, so there should be no more than minor issues with the Cmake-based build.\r\n",
            "published" : "2009-11-11T07:52:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dm.lua%math2.org@gtempaccount.com",
              "htmlLink" : "https://code.google.com/u/113713503587059456490/"
            },
            "content" : "The below patch fixes the above linking errors on Cygwin.\r\n\r\nIndex: tar/CMakeLists.txt\r\n===================================================================\r\n--- tar/CMakeLists.txt  (revision 1647)\r\n+++ tar/CMakeLists.txt  (working copy)\r\n@@ -42,11 +42,13 @@\r\n     TARGET_LINK_LIBRARIES(bsdtar archive ${ADDITIONAL_LIBS})\r\n   ELSE(ENABLE_TAR_SHARED)\r\n     TARGET_LINK_LIBRARIES(bsdtar archive_static ${ADDITIONAL_LIBS})\r\n+    SET_TARGET_PROPERTIES(bsdtar PROPERTIES COMPILE_DEFINITIONS\r\n+      LIBARCHIVE_STATIC)\r\n   ENDIF(ENABLE_TAR_SHARED)\r\n   # On Windows, DLL must end up in same dir with EXEs\r\n   IF(WIN32 AND NOT CYGWIN)\r\n\r\nIndex: cpio/CMakeLists.txt\r\n===================================================================\r\n--- cpio/CMakeLists.txt (revision 1647)\r\n+++ cpio/CMakeLists.txt (working copy)\r\n@@ -35,11 +35,13 @@\r\n     TARGET_LINK_LIBRARIES(bsdcpio archive ${ADDITIONAL_LIBS})\r\n   ELSE(ENABLE_CPIO_SHARED)\r\n     TARGET_LINK_LIBRARIES(bsdcpio archive_static ${ADDITIONAL_LIBS})\r\n+    SET_TARGET_PROPERTIES(bsdcpio PROPERTIES COMPILE_DEFINITIONS\r\n+      LIBARCHIVE_STATIC)\r\n   ENDIF(ENABLE_CPIO_SHARED)\r\n   # On Windows, DLL must end up in same dir with EXEs\r\n   IF(WIN32 AND NOT CYGWIN)\r\n",
            "published" : "2009-11-12T07:53:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed as r1653.\r\n",
            "published" : "2009-11-16T06:27:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 48,
        "title" : "Use CMAKE_CURRENT_SOURCE_DIR",
        "summary" : "Use CMAKE_CURRENT_SOURCE_DIR",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dm.lua%math2.org@gtempaccount.com",
          "htmlLink" : "https://code.google.com/u/113713503587059456490/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "cc" : [ {
          "kind" : "projecthosting#issuePerson",
          "name" : "brad.king.kitware",
          "htmlLink" : "https://code.google.com/u/106779169582588935788/"
        } ],
        "updated" : "2010-01-03T21:26:14.000Z",
        "published" : "2009-11-12T07:57:46.000Z",
        "closed" : "2010-01-03T21:26:14.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dm.lua%math2.org@gtempaccount.com",
              "htmlLink" : "https://code.google.com/u/113713503587059456490/"
            },
            "content" : "The attached patch allows libarchive to be built as a subdirectory\r\n(subproject) of another project under CMake.  It replaces\r\nCMAKE_(SOURCE|BINARY)_DIR with CMAKE_CURRENT_(SOURCE|BINARY)_DIR.",
            "published" : "2009-11-12T07:57:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3836903172136654794",
              "fileName" : "patch",
              "fileSize" : 6374,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king.kitware",
              "htmlLink" : "https://code.google.com/u/106779169582588935788/"
            },
            "content" : "Nice!  I was planning to submit a similar patch with the same goal.  Here are some\r\ncomments on your patch.\r\n\r\n1.) The hunk in CMakeLists.txt looks good.\r\n\r\n2.) The RUNTIME_OUTPUT_DIRECTORY properties can be set to ${libarchive_BINARY_DIR},\r\nwhich is defined by the project(libarchive) command at the top of libarchive:\r\n\r\n  http://www.cmake.org/cmake/help/cmake2.6docs.html#command:project\r\n\r\nThis avoids the need for \"..\" in the paths, and IMO is more readable too.\r\n\r\n3.) The modules that need to look for .c files next to them can do this:\r\n\r\n  +get_filename_component(_selfdir \"${CMAKE_CURRENT_LIST_FILE}\" PATH)\r\n  ...\r\n  -${CMAKE_SOURCE_DIR}/build/cmake/CheckFileOffsetBits.c\r\n  +${_selfdir}/CheckFileOffsetBits.c\r\n  ...\r\n\r\n4.) Hunks like this:\r\n\r\n  - FILE(APPEND ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log\r\n  + FILE(APPEND ${CMAKE_CURRENT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeOutput.log\r\n\r\nare not necessary.  It is preferred that all logging be done in the top level's\r\nCMakeOutput.log and CMakeError.log so that there is only one place to look when a\r\ntry-compile goes bad.\r\n",
            "published" : "2009-11-16T13:51:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "> 2.) The RUNTIME_OUTPUT_DIRECTORY properties can be set to ${libarchive_BINARY_DIR},\r\n\r\nIt would be nice to allow individual directories here to be incorporated into other\r\nprojects, so relying on libarchive_BINARY_DIR within those directories would be\r\nwrong.  Why wouldn't we just leave those as ${CMAKE_BINARY_DIR}, putting the output\r\ninto the top level of the incorporating project, whatever that might be.\r\n\r\n> 4.) Hunks like this ... are not necessary.\r\n\r\nDo you mean the change isn't needed or the logging itself isn't needed?",
            "published" : "2009-12-13T22:28:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Use CMAKE_CURRENT_SOURCE_DIR",
              "status" : "Accepted",
              "owner" : "kientzle",
              "cc" : [ "brad.k...@kitware.com" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I committed some of these changes as r1733.\r\n",
            "published" : "2009-12-13T23:30:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Changing status to \"Started\" since some work has been committed.\r\n",
            "published" : "2009-12-13T23:36:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-12-13T23:37:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-2.8" ]
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king.kitware",
              "htmlLink" : "https://code.google.com/u/106779169582588935788/"
            },
            "content" : ">> 4.) Hunks like this ... are not necessary.\r\n> Do you mean the change isn't needed or the logging itself isn't needed?\r\n\r\nThe logging is necessary, the change isn't.  Logging to the top level is fine.\r\n",
            "published" : "2009-12-14T14:19:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king.kitware",
              "htmlLink" : "https://code.google.com/u/106779169582588935788/"
            },
            "content" : ">> 2.) The RUNTIME_OUTPUT_DIRECTORY properties can be set to ${libarchive_BINARY_DIR},\r\n> It would be nice to allow individual directories here to be incorporated into other\r\n> projects, so relying on libarchive_BINARY_DIR within those directories would be\r\n> wrong.  Why wouldn't we just leave those as ${CMAKE_BINARY_DIR}, putting the output\r\n> into the top level of the incorporating project, whatever that might be.\r\n\r\nThe best approach is to let the outside projects configure the output location.\r\nPerhaps:\r\n\r\n  if(NOT libarchive_RUNTIME_OUTPUT_DIRECTORY)\r\n    set(libarchive_RUNTIME_OUTPUT_DIRECTORY ${libarchive_BINARY_DIR})\r\n  endif()\r\n\r\nthen use ${libarchive_RUNTIME_OUTPUT_DIRECTORY} to set the property.\r\n\r\nAnother approach is\r\n\r\n  if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY)\r\n    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${libarchive_BINARY_DIR})\r\n  endif()\r\n\r\nat the top, and then do *not* set the property.  CMake will use this as the property\r\ndefault when it creates the target.  If an outside user project sets the value first,\r\nlibarchive simply won't override it.  This approach is a little simpler but provides\r\nslightly less flexibility.\r\n",
            "published" : "2009-12-14T14:30:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I committed this final change as r1800.  Let me know if you see any problems with this.",
            "published" : "2010-01-03T21:26:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 49,
        "title" : "\"Pathname too long: File name too long\" on amd64, but not on i386",
        "summary" : "\"Pathname too long: File name too long\" on amd64, but not on i386",
        "stars" : 2,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "j2u44u",
          "htmlLink" : "https://code.google.com/u/107825475897076576369/"
        },
        "updated" : "2009-12-13T22:41:12.000Z",
        "published" : "2009-11-24T06:13:29.000Z",
        "closed" : "2009-12-13T22:41:12.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "j2u44u",
              "htmlLink" : "https://code.google.com/u/107825475897076576369/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. create a file with a long pathname (&gt;150 characters), with a long \r\nfilename (&gt;100 chars)\r\n2. using ustar, _set_pathname() and _write_header()\r\n3. compile and test on i386, everything works as expected, with a valid \r\ntarball created.\r\n4. compile and test on amd64, &quot;Pathname too long: File name too long&quot; \r\nwill be returned by archive_error_string() when _write_header() fails.\r\n\r\n<b>What version are you using?</b>\n2.6.2\r\n\r\n<b>On what operating system?</b>\ndebian etch\r\n\r\n<b>Please provide any additional information below.</b>\nThis was also present with version 1.2.53, which is the default available \r\nwith etch. Upgrading to 2.6.2 didn't fix.\r\n\r\nI can provide sample code if that will help.",
            "published" : "2009-11-24T06:13:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "j2u44u",
              "htmlLink" : "https://code.google.com/u/107825475897076576369/"
            },
            "content" : "I mischaracterized this. It has to do with filenames that contain certain escapes \r\ninstead. Please close this issue.",
            "published" : "2009-11-25T21:06:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm closing this as \"Invalid\" as requested by the original reporter.\r\n\r\nIf you're still having problems, please provide additional detail and I'll take\r\nanother look.",
            "published" : "2009-12-13T22:41:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 50,
        "title" : "error in zip decompression",
        "summary" : "error in zip decompression",
        "stars" : 1,
        "starred" : false,
        "status" : "WorksForMe",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dardoguidobono",
          "htmlLink" : "https://code.google.com/u/105073204392664842201/"
        },
        "updated" : "2009-12-13T22:39:06.000Z",
        "published" : "2009-11-25T05:28:04.000Z",
        "closed" : "2009-12-13T22:39:06.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. use the file Optik.wmz\r\n2. list contents (see seek_thumb_03.gif) \r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nexpected:\r\nlog.txt:09/11/24-14:08:54  0.0620 DEBUG process file into compressed file:\r\n'seek_thumb_02.gif'\r\nlog.txt:09/11/24-14:08:54  0.0620 DEBUG process file into compressed file:\r\n'seek_thumb_03.gif'\r\n\r\ni get:\r\nexpected:\r\nlog.txt:09/11/24-14:08:54  0.0620 DEBUG process file into compressed file:\r\n'seek_thumb_02.gif'\r\nlog.txt:09/11/24-14:08:54  0.0620 DEBUG process file into compressed\r\nfile: 'seek_th'Žä¨\u0018^Z(#’'\r\n\r\n\r\n<b>What version are you using?</b>\nlatest svn\r\n\r\n<b>On what operating system?</b>\nwindows xp\r\n\r\n<b>Please provide any additional information below.</b>\n\r\ni read the file twice (no rewind support yet) in this case i got this error:\r\n\r\nINTERNAL ERROR: Function 'archive_read_data_block' invoked with archive\r\nstructure in state 'eof', should be in state 'data'\r\ni got no errors with other files\r\n\r\nThanks",
            "published" : "2009-11-25T05:28:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "6264427726428682404",
              "fileName" : "Optik.wmz",
              "fileSize" : 86160,
              "mimetype" : "application/zip"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I tried this with the current svn trunk and haven't yet been able to reproduce it. \r\nI'm going to close it as \"WorksForMe\" for now.\r\n\r\nIf you're still having problems, please add more information to this bug and I'll\r\ntake another look.",
            "published" : "2009-12-13T22:39:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WorksForMe"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 51,
        "title" : "@foo.mtree fails with Empty error message [+patch]",
        "summary" : "@foo.mtree fails with Empty error message [+patch]",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vincent@zweije.nl",
          "htmlLink" : "https://code.google.com/u/104382464385980181797/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-12-13T20:07:48.000Z",
        "published" : "2009-12-02T10:22:27.000Z",
        "closed" : "2009-12-13T20:07:48.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vincent@zweije.nl",
              "htmlLink" : "https://code.google.com/u/104382464385980181797/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. echo '#mtree' | bsdtar -cf foo.tar @-\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nExpected result: tar created without error. Actual result: tar created, but\r\nerror reported &quot;(Empty error message)&quot;\r\n\r\n<b>What version are you using?</b>\n\r\ntrunk revision 1693\r\n\r\n<b>On what operating system?</b>\n\r\nlinux-i386\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nCaused by incorrect error status check in append_archive_filename in\r\ntar/write.c: it should check the return code of append_archive, but instead\r\nit checks the error code in the archive. This error code has been set\r\nbefore by archive_read_support_compression_all /\r\narchive_read_support_compression_lzma et al.\r\narchive_read_support_compression_all clears the error string in the archive\r\nbut not the error number.\r\n\r\nAttaching a patch which fixes the problem.",
            "published" : "2009-12-02T10:22:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-562755110384512789",
              "fileName" : "empty-error.patch",
              "fileSize" : 390,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks!  Committed as r1715.\r\n\r\nI'm going to leave this bug open until there's a regression test for this issue...\r\n",
            "published" : "2009-12-07T00:12:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-12-07T00:12:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Regression test committed as r1732.",
            "published" : "2009-12-13T20:07:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 52,
        "title" : "Invalid use of printf format strings",
        "summary" : "Invalid use of printf format strings",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vincent@zweije.nl",
          "htmlLink" : "https://code.google.com/u/104382464385980181797/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-12-07T00:16:16.000Z",
        "published" : "2009-12-02T14:35:21.000Z",
        "closed" : "2009-12-07T00:16:16.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vincent@zweije.nl",
              "htmlLink" : "https://code.google.com/u/104382464385980181797/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. add attribute((format(printf,X,Y))) to lafe_vwarnc, lafe_warnc, and\r\nlafe_errc\r\n2. compile with gcc and -Wformat (included in -Wall)\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nExpect no warnings, but calls to lafe_warnc and lafe_errc pass a\r\nnon-literal string as the format string. This is a problem because the\r\ncomputed string could contain %-format-specifiers from user-supplied data,\r\nif not right now, then perhaps in the future, which might be a security\r\nproblem.\r\n\r\nAdditionally a few true format errors were found.\r\n\r\n<b>What version are you using?</b>\n\r\ntrunk revision 1693\r\n\r\n<b>On what operating system?</b>\n\r\nlinux-i386\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nAttaching patch.",
            "published" : "2009-12-02T14:35:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-2130998325199027589",
              "fileName" : "format.patch",
              "fileSize" : 8317,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you again!\r\n\r\nCommitted as r1716.",
            "published" : "2009-12-07T00:16:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "kientzle"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 53,
        "title" : "Build failure on Ubuntu 9.10",
        "summary" : "Build failure on Ubuntu 9.10",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "macintyrelp@ornl.gov",
          "htmlLink" : "https://code.google.com/u/114369083550597773909/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-12-07T00:22:14.000Z",
        "published" : "2009-12-03T16:19:56.000Z",
        "closed" : "2009-12-07T00:22:14.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "macintyrelp@ornl.gov",
              "htmlLink" : "https://code.google.com/u/114369083550597773909/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.Install libarchive 2.7.1 on Ubuntu 9.10\r\n<b>2.</b>\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expect success.  However, there are a lot of files where the expected\r\nreturn value is ignored (typically write() and chdir()).  The makefile is\r\nconfigured to treat warnings as errors, so the build fails.\r\n\r\n<b>What version are you using?</b>\n2.7.1\r\n\r\n<b>On what operating system?</b>\nUbuntu 9.10\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI have created a patch to pretend to check the return values.  I don't\r\nactually check them, so the program works as before.  It will, however,\r\nbuild successfully.  These changes should not affect the operation of the\r\nprogram.",
            "published" : "2009-12-03T16:19:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-6341650506452473272",
              "fileName" : "libarchive-2.7.1-1.diff",
              "fileSize" : 24058,
              "mimetype" : "text/x-patch"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you!\r\n\r\nSince 2.7.1 is a production release, I instead merely removed -Werror in commit r1717.\r\nI believe these issues are already fixed in trunk; I expect we'll begin early testing\r\nfor the libarchive 2.8 release soon and would appreciate if you could repeat your\r\ntests at that time.\r\n",
            "published" : "2009-12-07T00:22:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "kientzle"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 54,
        "title" : "cpio extraction: hardlink detection isn't careful enough",
        "summary" : "cpio extraction: hardlink detection isn't careful enough",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "crazyscot",
          "htmlLink" : "https://code.google.com/u/113704350200371031038/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2009-12-08T06:19:20.000Z",
        "published" : "2009-12-07T17:44:15.000Z",
        "closed" : "2009-12-08T06:19:20.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "crazyscot",
              "htmlLink" : "https://code.google.com/u/113704350200371031038/"
            },
            "content" : "I have a (newc-format) cpio archive, which I attach for your convenience,\r\nwhich contains two files whose inode numbers on-disk happen to match in the\r\nlower 18 bits, i.e. they have identical inode numbers in the archive.\r\n\r\nMy test program is calling archive_read_extract() on each entry in turn;\r\nrecord_hardlink() is only comparing the device and inode numbers from the\r\narchive and unconditionally linking these two files together - despite both\r\nentries containing valid file data of different lengths and mtimes.\r\n\r\nThe GNU cpio tool doesn't have this issue with the same archive. That tool\r\nonly considers files for hardlinkage when a file has a link count more than\r\n1, and a size of 0; I suspect that similar logic would be the right answer\r\nhere.\r\n\r\nI am using a static build of libarchive 2.6.2 on Ubuntu, though comparing\r\nwith release 2.7.1 archive_read_support_format_cpio.c seems to not have\r\nchanged.",
            "published" : "2009-12-07T17:44:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1271523658855266102",
              "fileName" : "clash.cpio.bz2",
              "fileSize" : 11864,
              "mimetype" : "application/x-bzip2"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Very timely!  A couple of us have recently been discussing\r\nthis exact issue (ino collisions leading to false hardlink\r\ndetection) and the possibility of addressing it from the\r\nwriting side.  But you're right that we should also be\r\na little more careful on the reading side.\r\n\r\nI've altered the hardlink detection logic in r1718 to\r\nignore entries with a link count less than 2.  That seems\r\nto address the issue you found.",
            "published" : "2009-12-08T06:18:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2009-12-08T06:19:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "kientzle",
              "labels" : [ "Milestone-2.8" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "crazyscot",
              "htmlLink" : "https://code.google.com/u/113704350200371031038/"
            },
            "content" : "This fixes it for me, and is in fact remarkably similar to the fix I had cooked up\r\nfor myself. Thank you :-)",
            "published" : "2009-12-08T10:37:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 55,
        "title" : "FreeBSD 6 build failure",
        "summary" : "FreeBSD 6 build failure",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-FreeBSD", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "updated" : "2010-02-21T14:25:28.000Z",
        "published" : "2009-12-14T03:06:30.000Z",
        "closed" : "2010-02-21T14:25:28.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "FreeBSD 6.4 has an older version of OpenSSL that lacks the SHA256, SHA384,\r\nand SHA512 implementations but does have a sha.h header.\r\n\r\nThe configure.ac needs to explicitly test for SHA256, SHA384, and SHA512\r\nsupport (as documented in a TODO in that file).\r\n",
            "published" : "2009-12-14T03:06:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Can you try the attached patch?",
            "published" : "2010-02-20T00:54:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting",
              "owner" : "joerg.sonnenberger"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4485061105694790223",
              "fileName" : "configure.ac.diff",
              "fileSize" : 2344,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Should be fixed.",
            "published" : "2010-02-21T14:25:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 56,
        "title" : "Crash on mtree archive with contents=.",
        "summary" : "Crash on mtree archive with contents=.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vincent@zweije.nl",
          "htmlLink" : "https://code.google.com/u/104382464385980181797/"
        },
        "updated" : "2009-12-16T07:10:51.000Z",
        "published" : "2009-12-16T00:01:38.000Z",
        "closed" : "2009-12-16T07:10:51.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vincent@zweije.nl",
              "htmlLink" : "https://code.google.com/u/104382464385980181797/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. { echo '#mtree';echo 'd type=dir content=.';}|bsdtar cf d.tar @-\r\n\r\nWhat is the expected output?\r\nd.tar created without error containing single directory called d\r\n\r\nWhat do you see instead?\r\nSegmentation violation\r\n\r\n<b>What version are you using?</b>\nsubversion trunk revision 1737\r\n\r\n<b>On what operating system?</b>\nGNU/linux, Debian testing\r\n\r\n<b>Please provide any additional information below.</b>\nSpecial handling of contents=. is missing a NULL check.\r\nAttaching a patch with fix and regression test.\r\nPlease notice added file in patch:\r\ntar/test/test_mtree_cwd.c",
            "published" : "2009-12-16T00:01:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-3398003505642652785",
              "fileName" : "mtree_cwd.patch",
              "fileSize" : 3359,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in r1741.  I used the fix provided as-is.  I put the regression test in\r\nlibarchive_test since this is a libarchive bug and not a tar bug.\r\n\r\nThank you!",
            "published" : "2009-12-16T07:10:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 57,
        "title" : "mingw : redefinition of \"typedef int pid_t;\"",
        "summary" : "mingw : redefinition of \"typedef int pid_t;\"",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "gabrielnn77",
          "htmlLink" : "https://code.google.com/u/102564686710909468535/"
        },
        "updated" : "2010-03-06T18:57:13.000Z",
        "published" : "2009-12-17T21:55:00.000Z",
        "closed" : "2010-03-06T18:57:13.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "gabrielnn77",
              "htmlLink" : "https://code.google.com/u/102564686710909468535/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.cmake -G &quot;MSYS Makefiles&quot; -DCMAKE_PREFIX_PATH=/mingw /opt/src/libarchive-svn\r\n2.make\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n$ make\r\nScanning dependencies of target archive\r\n[  0%] Building C object\r\nlibarchive/CMakeFiles/archive.dir/archive_check_magic.c.obj\r\nIn file included from\r\nc:/msys/1.0/opt/src/libarchive-svn/libarchive/archive_platform.h:60,\r\n                 from\r\nc:/msys/1.0/opt/src/libarchive-svn/libarchive/archive_check_magic.c:26:\r\nc:/msys/1.0/opt/src/libarchive-svn/libarchive/archive_windows.h:302: error:\r\nredefinition of typedef 'pid_t'\r\nc:/MinGW/include/sys/types.h:75: error: previous declaration of 'pid_t' was\r\nhere\r\nmake[2]: *** [libarchive/CMakeFiles/archive.dir/archive_check_magic.c.obj]\r\nError 1\r\nmake[1]: *** [libarchive/CMakeFiles/archive.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n\r\n\r\n\r\n\r\n<b>What version are you using?</b>\nsvn, 2009-12-17\r\n\r\n<b>On what operating system?</b>\nwindows, mingw, msys\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2009-12-17T21:55:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try the attached patch and let me know if this fixes the problem for you.\r\n",
            "published" : "2010-01-03T21:40:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1552190820324050605",
              "fileName" : "libarchive_pid_t_probe.patch",
              "fileSize" : 1442,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Waiting on feedback from original reporter.",
            "published" : "2010-01-03T21:42:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2010-02-01T02:19:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Noone has complained about this in some time, so I'm going to presume that it got fixed.\r\n",
            "published" : "2010-03-06T18:57:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 58,
        "title" : "error compiling in windows + mingw + msys",
        "summary" : "error compiling in windows + mingw + msys",
        "stars" : 1,
        "starred" : false,
        "status" : "WorksForMe",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "gabrielnn77",
          "htmlLink" : "https://code.google.com/u/102564686710909468535/"
        },
        "updated" : "2010-03-06T18:59:04.000Z",
        "published" : "2009-12-17T22:37:05.000Z",
        "closed" : "2010-03-06T18:59:04.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "gabrielnn77",
              "htmlLink" : "https://code.google.com/u/102564686710909468535/"
            },
            "content" : "version of svn, compiling in mingw+msys, using cmake\r\n$ make\r\n....\r\n[ 46%] Building C object\r\nlibarchive/test/CMakeFiles/libarchive_test.dir/test_read_format_cpio_svr4_bzip2_rpm.c.obj\r\nc:/msys/1.0/opt/src/libarchive-svn/libarchive/test/test_read_format_cpio_svr4_bzip2_rpm.c:\r\nIn function `test_read_format_cpio_svr4_bzip2_rpm':\r\nc:/msys/1.0/opt/src/libarchive-svn/libarchive/test/test_read_format_cpio_svr4_bzip2_rpm.c:100:\r\nwarning: implicit declaration of function\r\n`archive_read_support_compression_rpm'\r\nmake[2]: ***\r\n[libarchive/test/CMakeFiles/libarchive_test.dir/test_read_format_cpio_svr4_bzip2_rpm.c.obj]\r\nError 1\r\nmake[1]: *** [libarchive/test/CMakeFiles/libarchive_test.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n\r\n",
            "published" : "2009-12-17T22:37:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please check that your sources are up-to-date.\r\nThe archive_read_support_compression_rpm() function is declared in archive.h; it\r\nsounds as though you may have an out-of-date version of that file.\r\n",
            "published" : "2009-12-28T07:41:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Waiting on feedback from original reporter.\r\n",
            "published" : "2010-01-03T21:41:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "gabrielnn77",
              "htmlLink" : "https://code.google.com/u/102564686710909468535/"
            },
            "content" : "yes, sources are up-to-date , from svn, and i can see in archive.h that\r\narchive_read_support_compression_rpm() function is declared, but the error is here",
            "published" : "2010-01-04T02:14:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please check to see if you have another copy of archive.h somewhere on your system.\r\n\r\nPlease try building with \"make -k\" and see if other tests show similar errors.  In\r\nparticular, I'm curious about the other rpm test and the xar tests (xar support was\r\nadded after rpm support; if you do have an out-of-date archive.h somewhere that's\r\nmissing rpm functions, it should also be missing xar functions).\r\n",
            "published" : "2010-01-04T04:17:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2010-02-01T02:20:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "No way to diagnose this any further without more information; I'm going to close this\r\nuntil we have more details.",
            "published" : "2010-03-06T18:59:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WorksForMe"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 59,
        "title" : "test_option_r failure on Fedora 12",
        "summary" : "test_option_r failure on Fedora 12",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Linux", "Milestone-2.8" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2010-01-05T16:50:47.000Z",
        "published" : "2010-01-05T06:40:25.000Z",
        "closed" : "2010-01-05T16:50:47.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "One of bsdtar_test failed on Fedora 12.\r\nPlease see the log file which is attached.\r\n",
            "published" : "2010-01-05T06:40:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3186823217251510976",
              "fileName" : "test_option_r.log",
              "fileSize" : 1717,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This broke because the test does format-dependent verification.\r\nOn some systems, tar was adding pax extended attributes, which broke\r\nthe verification.\r\n\r\nFixed by adding --format=ustar to the test commands to ensure that\r\nthe created file was the right format.",
            "published" : "2010-01-05T16:50:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 60,
        "title" : "memory initialization in archive_write_set_format_zip.c, patch included",
        "summary" : "memory initialization in archive_write_set_format_zip.c, patch included",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "gordon_durand@yahoo.com",
          "htmlLink" : "https://code.google.com/u/103456555403144657602/"
        },
        "updated" : "2010-01-06T06:04:54.000Z",
        "published" : "2010-01-06T01:47:52.000Z",
        "closed" : "2010-01-06T06:04:54.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "gordon_durand@yahoo.com",
              "htmlLink" : "https://code.google.com/u/103456555403144657602/"
            },
            "content" : "Working with the test version of libarchive (2.7.902a) that supports zip with deflate compression, \r\ntrying to create a archive containing a single directory will crash in deflate().  Problem is that the \r\n&quot;zip&quot; structure allocated in archive_write_set_format_zip() needs to be initialized (the avail_in field \r\nwas garbage).  Included is a patch file to clear the struct using memset().  Thanks.\r\n\r\n(btw, great library, many thanks!)\r\n\r\n-- gordon\r\n",
            "published" : "2010-01-06T01:47:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4873914447747137330",
              "fileName" : "zipMemset_All.patch",
              "fileSize" : 454,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks!  I've committed a slightly different fix as r1807.",
            "published" : "2010-01-06T06:04:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 61,
        "title" : "Compilation fail on OpenSolaris",
        "summary" : "Compilation fail on OpenSolaris",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Other" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "lukc.gunray",
          "htmlLink" : "https://code.google.com/u/110734208904543010638/"
        },
        "updated" : "2010-02-18T06:16:26.000Z",
        "published" : "2010-01-18T07:29:09.000Z",
        "closed" : "2010-02-18T06:16:26.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 18,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lukc.gunray",
              "htmlLink" : "https://code.google.com/u/110734208904543010638/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. (install Opensolaris)\r\n2. ./configure\r\n3. make\r\n\r\nWhat is the expected output?\r\n⇒ Hum… the result of a successfully compilation ? :)\r\nWhat do you see instead?\r\n⇒ It fails. (see the errors at the last question)\r\n\r\n<b>What version are you using?</b>\n2.7.1\r\n\r\n<b>On what operating system?</b>\nOpenSolaris\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc (GCC) 3.4.3 (csl-sol210-3_4-20050802)\r\n\r\n<b>Please provide any additional information below.</b>\n gcc -DHAVE_CONFIG_H -I. -I ./libarchive -Wall -Werror -g -O2 -MT\r\nlibarchive/libarchive_la-archive_read_disk_set_standard_lookup.lo -MD -MP\r\n-MF\r\nlibarchive/.deps/libarchive_la-archive_read_disk_set_standard_lookup.Tpo -c\r\nlibarchive/archive_read_disk_set_standard_lookup.c  -fPIC -DPIC -o\r\nlibarchive/.libs/libarchive_la-archive_read_disk_set_standard_lookup.o\r\nlibarchive/archive_read_disk_set_standard_lookup.c: In function\r\n`lookup_uname_helper':\r\nlibarchive/archive_read_disk_set_standard_lookup.c:199: error: too many\r\narguments to function `getpwuid_r'\r\nlibarchive/archive_read_disk_set_standard_lookup.c:199: warning: assignment\r\nmakes integer from pointer without a cast\r\nlibarchive/archive_read_disk_set_standard_lookup.c: In function\r\n`lookup_gname_helper':\r\nlibarchive/archive_read_disk_set_standard_lookup.c:247: error: too many\r\narguments to function `getgrgid_r'\r\nlibarchive/archive_read_disk_set_standard_lookup.c:247: warning: assignment\r\nmakes integer from pointer without a cast\r\n*** Error code 1\r\nmake: Fatal error: Command failed for target\r\n`libarchive/libarchive_la-archive_read_disk_set_standard_lookup.lo'\r\nCurrent working directory /home/lukc/libarchive-2.7.1\r\n*** Error code 1\r\nmake: Fatal error: Command failed for target `all'",
            "published" : "2010-01-18T07:29:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "A fix for this was put into 'trunk' a few months ago.\r\n\r\nPlease try the current development snapshot and let us know if that fixes it.\r\n",
            "published" : "2010-01-18T16:46:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lukc.gunray",
              "htmlLink" : "https://code.google.com/u/110734208904543010638/"
            },
            "content" : "http://pastealacon.com/12505\r\n ⇒ Same error…",
            "published" : "2010-01-19T05:53:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It appears that OpenSolaris and Solaris both still default to a non-standard version\r\nof getpwuid_r and getgrgid_r.  According to Sun's documentation:\r\n\r\nhttp://docs.sun.com/app/docs/doc/816-5168/getpwuid-r-3c?a=view\r\n\r\n\"For POSIX.1c-conforming applications, the _POSIX_PTHREAD_SEMANTICS and _REENTRANT\r\nflags are automatically turned on by defining the _POSIX_C_SOURCE flag with a value\r\n≥199506L.\"\r\n\r\nSo it looks like you should be able to fix this by adding _POSIX_C_SOURCE=199506L to\r\nthe C compiler flags for this platform.  Please try that and let us know.",
            "published" : "2010-01-19T06:34:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lukc.gunray",
              "htmlLink" : "https://code.google.com/u/110734208904543010638/"
            },
            "content" : "Can you say me wich commands to use ? I really don't know how to modify my CFLAGS… :s",
            "published" : "2010-01-19T19:22:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lukc.gunray",
              "htmlLink" : "https://code.google.com/u/110734208904543010638/"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lukc.gunray",
              "htmlLink" : "https://code.google.com/u/110734208904543010638/"
            },
            "content" : "Can you say me which commands to use ? I really don't know how to modify my CFLAGS… :s",
            "published" : "2010-01-19T19:23:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "For adding compiler definitions such as this, the easiest approach is to provide the\r\nextra information when running configure:\r\n\r\n$ CPPFLAGS='-D_POSIX_C_SOURCE=199506L' ./configure\r\n$ make\r\n$ make check\r\n\r\nPlease also provide the result of running this command:\r\n\r\n$ build/autoconf/config.guess\r\n",
            "published" : "2010-01-20T05:54:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lukc.gunray",
              "htmlLink" : "https://code.google.com/u/110734208904543010638/"
            },
            "content" : "make:\r\nhttp://pastealacon.com/pastebin.php?dl=12517\r\n\r\nbuild/autoconf/config.guess:\r\ni386-pc-solaris2.11\r\n",
            "published" : "2010-01-20T07:40:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Seems I didn't get there fast enough: \"Pastebin entry 12517 is not available\"",
            "published" : "2010-01-21T07:10:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lukc.gunray",
              "htmlLink" : "https://code.google.com/u/110734208904543010638/"
            },
            "content" : "http://pastealacon.com/12595\r\nThis past should be ok.",
            "published" : "2010-01-22T17:23:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I tried it and got this error:\r\n\r\nlibarchive/archive_entry_xattr.c: In function `archive_entry_xattr_add_entry':\r\nlibarchive/archive_entry_xattr.c:104: warning: implicit declaration of function `strdup'\r\n*** Error code 1\r\n\r\n`strdup' defined by :\r\n/usr/include/string.h\r\n\r\n#if defined(__EXTENSIONS__) || \\\r\n         (!defined(_STRICT_STDC) && !defined(__XOPEN_OR_POSIX)) || \\\r\n         defined(_XPG4_2)\r\nextern char *strdup(const char *);\r\n#endif \r\n\r\nAnd so I've tried this:\r\n$./configure CPPFLAGS='-D_POSIX_C_SOURCE=199506L -D__EXTENSIONS__'\r\n$make\r\n\r\nIt's OK. no error, no warning.\r\nbut we have some problems with `make check'.\r\n\r\n1. test_read_format_xar was failed.\r\n   I retried with:\r\n   $TZ=UTC make check  -- this was no failure.\r\n\r\n2. some shell script caused error(please see attached file).\r\n\r\n",
            "published" : "2010-01-28T01:50:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-3462083557019036957",
              "fileName" : "log",
              "fileSize" : 13074,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I believe the problem test_read_format_xar failure has gone through trunk/r1844 and \r\nrelease/2.8/r1845.",
            "published" : "2010-01-28T02:55:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Tim, I think we should use AC_USE_SYSTEM_EXTENSIONS for __EXTENSIONS__\r\nand _POSIX_C_SOURCE=199506L is unneeded.\r\n\r\n--- a/configure.ac\tSat Jan 23 04:22:58 2010 +0900\r\n+++ b/configure.ac\tThu Jan 28 12:30:00 2010 +0900\r\n@@ -92,6 +92,7 @@\r\n AC_LIBTOOL_WIN32_DLL\r\n AC_PROG_LIBTOOL\r\n AC_CHECK_TOOL([STRIP],[strip])\r\n+AC_USE_SYSTEM_EXTENSIONS\r\n \r\n #\r\n # Options for building bsdtar.\r\n\r\n",
            "published" : "2010-01-28T04:03:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Sorry, The previous patch caused some warnings on autoconf.\r\nAC_USE_SYSTEM_EXTENSIONS moves forward.\r\n\r\n--- a/configure.ac\tSat Jan 23 04:22:58 2010 +0900\r\n+++ b/configure.ac\tThu Jan 28 13:14:02 2010 +0900\r\n@@ -89,6 +89,7 @@\r\n # Checks for programs.\r\n AC_PROG_CC\r\n AM_PROG_CC_C_O\r\n+AC_USE_SYSTEM_EXTENSIONS\r\n AC_LIBTOOL_WIN32_DLL\r\n AC_PROG_LIBTOOL\r\n AC_CHECK_TOOL([STRIP],[strip])\r\n\r\n",
            "published" : "2010-01-28T04:40:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle@google.com",
              "htmlLink" : "https://code.google.com/u/100552676031588179362/"
            },
            "content" : "The \"shell script\" in the log files is being printed by OpenSolaris 'make' because\r\nthe test failed.  It is not a problem.\r\n\r\nAC_USE_SYSTEM_EXTENSIONS sounds like a good idea.  Please commit that to trunk and\r\nrelease/2.8.\r\n",
            "published" : "2010-01-28T07:20:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Trunk as of r1847 and releases/2.8 should now have this fixed, thanks to Michihiro's\r\nrecent work.  Please try again and let us know.\r\n",
            "published" : "2010-02-01T02:19:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2010-02-01T02:20:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Other" ]
            },
            "canDelete" : true
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm closing this as \"fixed\", since Michihiro's commits should have addressed all of\r\nthe issues.  If you're still having any problems, please let us know right away.\r\n",
            "published" : "2010-02-18T06:16:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 62,
        "title" : "Cannot unzip this file",
        "summary" : "Cannot unzip this file",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dardoguidobono",
          "htmlLink" : "https://code.google.com/u/105073204392664842201/"
        },
        "updated" : "2010-02-02T05:49:46.000Z",
        "published" : "2010-01-31T19:20:22.000Z",
        "closed" : "2010-02-02T05:49:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Create a simple test program that unzip a file\r\n2. Use the file i attached created with winrar \r\n\r\n<b>What version are you using?</b>\n Svn\r\n\r\n\r\n<b>On what operating system?</b>\nwinxp\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake &amp; mingw\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nfile created with winrar (at least v1 to extract)\r\n\r\nunzip 5.51 unzips this file ok.\r\n\r\n",
            "published" : "2010-01-31T19:20:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1454485821999382539",
              "fileName" : "tito.zip",
              "fileSize" : 143,
              "mimetype" : "application/zip"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Have you tried unzipping the file with bsdtar?  \"bsdtar xvf tito.zip\" should work.\r\n\r\nCould you provide the source for your \"simple test program\"?\r\n\r\nWhat errors are you seeing?\r\n",
            "published" : "2010-02-01T02:15:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "please close this as invalid (mi bad) i was using custom callbacks and the problem\r\nwas in it.\r\n\r\nThanks !",
            "published" : "2010-02-02T00:59:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "As requested, closing this as invalid.",
            "published" : "2010-02-02T05:49:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 63,
        "title" : "libarchive does not support writing GNUTAR archives",
        "summary" : "libarchive does not support writing GNUTAR archives",
        "stars" : 2,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "glenn.washburn",
          "htmlLink" : "https://code.google.com/u/100560813697305325117/"
        },
        "updated" : "2010-02-18T06:15:13.000Z",
        "published" : "2010-02-16T01:07:34.000Z",
        "closed" : "2010-02-18T06:15:13.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "glenn.washburn",
              "htmlLink" : "https://code.google.com/u/100560813697305325117/"
            },
            "content" : "The array &quot;codes&quot; from libarchive/archive_write_set_format.c has no entry\r\nfor ARCHIVE_FORMAT_GNUTAR, so this file type cannot be written.  This is\r\nalso contrary to one of the wiki pages which lists supported formats where\r\n&quot;tar (with GNU extensions)&quot; is listed.\r\n\r\nIt would be great if this would get supported.  It would seem to easily be\r\ndone via gnu's libtar, however the license is incompatible with this one. \r\nHow much more work would it be to write in the gnu specific stuff?  I think\r\nthis would be a great feature.",
            "published" : "2010-02-16T01:07:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Libarchive reads many legacy tar formats, including the old GNU tar extensions.  The\r\n\"pax\" format---which libarchive supports very well---is displacing the old GNU tar\r\nextensions for most applications.\r\n\r\nWhat application are you working with that specifically requires GNU tar extensions?\r\n",
            "published" : "2010-02-16T03:45:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "glenn.washburn",
              "htmlLink" : "https://code.google.com/u/100560813697305325117/"
            },
            "content" : "Actually, I realized that I could just move to the pax format.  However, I was having\r\nproblems reading extended attributes from a GNU-style tar.  I don't need this right\r\nnow, so won't look into it further.  This issue can be closed.",
            "published" : "2010-02-17T21:21:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "muzazzi",
              "htmlLink" : "https://code.google.com/u/117250764590430523216/"
            },
            "content" : "It would be nice to suppress some of the extended pax header keywords that confuse \r\ngnutar (SCHILY.*).  This is mainly useful to avoid confusion in certain environments.  In \r\nsome old linux environments (namely RHEL), old versions of gnutar exit with failure \r\nstatus when reading these :-\\  You can work around it by using --pax-\r\noption=\"delete=SCHILY.*\", but that can be problematic if you don't have control of the \r\ntarget environment.\r\n",
            "published" : "2010-02-18T00:34:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'll close this issue now.  Thanks for the feedback.\r\nPlease do let us know as much as you can about your \"problems reading extended\r\nattributes from a GNU-style tar.\"  Compatibility with other tar\r\nimplementations--including GNU tar--is very important to us.\r\n\r\nI also encourage you to mention some of your issues to the GNU tar maintainers.  It\r\nwould be nice if GNU tar would simply recognize and ignore those additional keywords\r\nyou mentioned.\r\n",
            "published" : "2010-02-18T06:15:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 64,
        "title" : "bsdtar --exclude-from doesn't work",
        "summary" : "bsdtar --exclude-from doesn't work",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "updated" : "2010-02-20T22:56:52.000Z",
        "published" : "2010-02-20T03:27:08.000Z",
        "closed" : "2010-02-20T22:56:52.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "See http://gnats.netbsd.org/35257 for a test case. The matching code\r\ndoesn't remove the trailing \\n.",
            "published" : "2010-02-20T03:27:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Solved by r1922.\r\nNeeds to be merged into 2.8 branch.",
            "published" : "2010-02-20T22:56:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 65,
        "title" : "build failure on os x 10.4",
        "summary" : "build failure on os x 10.4",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "msporleder",
          "htmlLink" : "https://code.google.com/u/msporleder@gmail.com/"
        },
        "updated" : "2010-02-21T14:24:01.000Z",
        "published" : "2010-02-21T13:00:14.000Z",
        "closed" : "2010-02-21T14:24:01.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "msporleder",
              "htmlLink" : "https://code.google.com/u/msporleder@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. attempt an install (./configure or pkgsrc) on os x 10.4/ppc\r\n\r\n/bin/sh ./libtool --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.   -\r\nI/usr/include/libxml2  -g -O2 -MT libarchive/archive_read_support_format_xar.lo -MD -MP -MF \r\n$depbase.Tpo -c -o libarchive/archive_read_support_format_xar.lo \r\nlibarchive/archive_read_support_format_xar.c &amp;&amp;\\\r\nmv -f $depbase.Tpo $depbase.Plo\r\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/usr/include/libxml2 -g -O2 -MT \r\nlibarchive/archive_read_support_format_xar.lo -MD -MP -MF \r\nlibarchive/.deps/archive_read_support_format_xar.Tpo -c \r\nlibarchive/archive_read_support_format_xar.c  -fno-common -DPIC -o \r\nlibarchive/.libs/archive_read_support_format_xar.o\r\nIn file included from libarchive/archive_read_support_format_xar.c:56:\r\nlibarchive/archive_hash.h:128: error: parse error before 'archive_sha256_ctx'\r\nlibarchive/archive_hash.h:128: warning: data definition has no type or storage class\r\nlibarchive/archive_hash.h:157: error: parse error before 'archive_sha384_ctx'\r\nlibarchive/archive_hash.h:157: warning: data definition has no type or storage class\r\nlibarchive/archive_hash.h:186: error: parse error before 'archive_sha512_ctx'\r\nlibarchive/archive_hash.h:186: warning: data definition has no type or storage class\r\nmake[1]: *** [libarchive/archive_read_support_format_xar.lo] Error 1\r\nmake: *** [all] Error 2\r\n\r\n\r\n<b>What version are you using?</b>\n2.8.0\r\n\r\n<b>On what operating system?</b>\nos x 10.4\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n./configure &amp;&amp; make\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nxcode/developer tools 2.5 (gcc version 4.0.1 (Apple Computer, Inc. build 5370))\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2010-02-21T13:00:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "msporleder",
              "htmlLink" : "https://code.google.com/u/msporleder@gmail.com/"
            },
            "content" : "Attached if my config.log",
            "published" : "2010-02-21T13:57:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1728771581279042308",
              "fileName" : "config.log",
              "fileSize" : 399142,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Patch from #55 works for this too and I have committed it.",
            "published" : "2010-02-21T14:24:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 66,
        "title" : "Invalid assumptions about wchar_t",
        "summary" : "Invalid assumptions about wchar_t",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Critical", "OpSys-All", "Milestone-3.0" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "updated" : "2011-09-04T16:42:10.000Z",
        "published" : "2010-02-21T22:17:14.000Z",
        "closed" : "2011-09-04T16:42:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "__archive_string_utf8_w assumes UCS2/UCS4 for wchar_t, which is only valid\r\nif __STDC_ISO_10646__ is defined.\r\n\r\nIf this macro is not defined and iconv is present, it should be used to\r\nconvert to the current character set first, followed by mbtowc.",
            "published" : "2010-02-21T22:17:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Any guesses about what should happen if __STDC_ISO_10646__ is not defined and iconv\r\nis not present?\r\n",
            "published" : "2010-02-21T23:43:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Best effort is just assume the locale is compatible to UCS. I am not aware of a\r\nportable alternative.",
            "published" : "2010-02-22T02:02:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I have a patch for this issue.\r\nbut I think my patch needs more work or to be rewritten.\r\n",
            "published" : "2010-02-22T08:02:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3022890461531826469",
              "fileName" : "iconv.diff",
              "fileSize" : 11610,
              "mimetype" : "text/x-patch"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This needs to be solved for libarchive 3.0.\r\n\r\nThere is some more discussion in Issue 132.  I think Michihiro's patch is going to be insufficient.\r\n",
            "published" : "2011-03-05T06:18:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Priority-Medium", "Priority-Critical", "Milestone-3.0" ]
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please test libarchive/trunk r2993, which I believe fixes this problem.\r\n",
            "published" : "2011-03-07T06:05:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe the work that has been done recently (mostly by Michihiro) to change the text interfaces has fully addressed this issue.  Any objection to my closing this bug?\r\n",
            "published" : "2011-06-27T00:48:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "As Tim mentioned, recent libarchive/trunk does not have this issue.\r\nUnfortunately, fixing this has made the incompatibility that we cannot read UTF-8\r\nfile names in the PAX file made by older version of libarchive or bsdtar in non-UTF-8\r\nlocale with a locale dependent file name, which is non ASCII, for the entry files.\r\nThose who made that sort of PAX files may need tar:compat-2x option so as to properly\r\ndecode the file names. When the option is specified, libarchive 3.0 and\r\nlater treat the UTF-8 file names as libarchive 2.x does, but using the option\r\nrequires the same locale that the PAX file was made in for correct reading.\r\nThe option works only on read side. A test for the option is test_compat_pax_libarchive_2x.\r\n",
            "published" : "2011-07-17T17:10:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I beleive the iconv work has completely addressed this, so I'm going to close it.\r\n",
            "published" : "2011-09-04T16:42:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 67,
        "title" : "archive_clear_error fails to clear archive_errno",
        "summary" : "archive_clear_error fails to clear archive_errno",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "updated" : "2010-03-01T16:52:38.000Z",
        "published" : "2010-02-23T18:43:42.000Z",
        "closed" : "2010-03-01T16:52:38.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "After trying to upgrade libarchive 2.8.0 in Debian gvfsd-archive started\r\ncrashing. Many wasted hours of debugging later I found out that someone\r\nelse had already tracked down the problem, please see:\r\n\r\nhttp://bugs.gentoo.org/289260\r\n\r\nApplying the patch in the gentoo bug report fixed the issue.",
            "published" : "2010-02-23T18:43:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is a gvfs bug.  According to the gentoo bug report, gvfs ignores the\r\nreturn code from archive_read_next_header() and instead checks archive_errno() to see\r\nif an error occurred.  Archive_errno() is not meaningful except immediately after an\r\nerror is returned from an API call.\r\n\r\nI'll update the documentation to try to make this clearer.\r\n\r\nI won't object if someone wants to change archive_clear_error(), but it won't really\r\nfix broken clients like this, as there are still plenty of libarchive API calls that\r\ndon't call archive_clear_error() on entry.  (There may even be some cases where\r\narchive_errno() is zero after an error does occur.  Again, archive_errno() wasn't\r\nintended to indicate whether an error happened; it's intended only to provide\r\nadditional detail after an error does happen.)",
            "published" : "2010-02-24T05:11:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "FYI:\r\nI've opened a bug against gvfsd-archive at:\r\nhttps://bugzilla.gnome.org/show_bug.cgi?id=611057\r\n",
            "published" : "2010-02-25T10:37:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I committed this change despite my misgivings.",
            "published" : "2010-03-01T16:52:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 68,
        "title" : "Debian 530301:  build problems on HURD",
        "summary" : "Debian 530301:  build problems on HURD",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Other" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2010-03-01T16:52:09.000Z",
        "published" : "2010-02-25T06:31:50.000Z",
        "closed" : "2010-03-01T16:52:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Filed on Debian bug tracker against libarchive 2.6.2:\r\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=530301\r\n\r\nIncludes condidate patch for two issues:\r\n * HURD does have st_flags field in struct stat but doesn't have UF_NODUMP;\r\ncode in tar needs more accurate guard\r\n * HURD does not have PATH_MAX.  I'm unsure whether that means that open()\r\nhas no limits on the path argument or whether HURD supports some other\r\nmechanism for determining that limit.\r\n",
            "published" : "2010-02-25T06:31:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed now.",
            "published" : "2010-03-01T16:52:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 69,
        "title" : "Debian #546185: problems with username failures after --chroot",
        "summary" : "Debian #546185: problems with username failures after --chroot",
        "stars" : 2,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2010-03-15T05:23:41.000Z",
        "published" : "2010-02-25T07:02:06.000Z",
        "closed" : "2010-03-15T05:23:41.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Another bug reported to Debian:\r\n\r\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=546185\r\n\r\nSummary:  If you use &quot;tar -x --chroot&quot; and the chroot doesn't have\r\nuser/group lookup support, then uname/gname lookups will fail and the\r\nextraction will use the uids/gids.\r\n",
            "published" : "2010-02-25T07:02:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm a little unsure whether to consider this a bug or not.  I can certainly envision\r\nscenarios where a user would expect uname/gname lookups to occur against the chroot\r\nenvironment.  (Although admittedly, you could use \"chroot tar\" in that case.)\r\n\r\nThe solution originally requested isn't really feasible because libarchive doesn't\r\nknow that a library failed to load:  It asks libc for a user lookup and is told by\r\nlibc that the user in question couldn't be found.\r\n\r\nIt might work to do a gratuitous user and group lookup (maybe lookup the current user\r\nand group names?) before processing the --chroot flag, with the expectation that any\r\nrequired dynamic libraries and/or system files would be loaded before the chroot was\r\nexecuted.\r\n",
            "published" : "2010-02-25T07:15:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "I agree that --chroot should not try to deal with /etc/passwd and /etc/group from\r\noutside the chroot. In fact, it would partially defeat the purpose of using it in\r\nfirst place.\r\n\r\nTim: chroot tar is different, as it requires the chroot to be compatible with the\r\noutside system. On of the uses for the option is dealing with embedded systems.\r\n\r\nNote that I will likely add some code to make it easy to implement something like -N\r\nof NetBSD's pax, so that tar can use a custom file for the translation.",
            "published" : "2010-02-25T13:28:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Reading the original Debian PR, I would consider the main issue here is a glibc bug.\r\nIt is not the fault of bsdtar if getpwnam and friends are broken due to missing\r\nfallbacks in glibc.",
            "published" : "2010-03-14T20:29:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It seems that there are three different possible uses here:\r\n 1) Use tar from outside the chroot and user info from outside.\r\n 2) Use tar from outside and user info from inside.\r\n 3) Use tar from inside and user info from inside.\r\n\r\nUse case #3 here is handled by \"chroot tar\", of course.  For the other two, I'm not\r\nsure I see how we can reasonably force either one in a completely consistent fashion.\r\n Libc can do user info lookup however it wants and the mechanism it chooses may or\r\nmay not obey chroot boundaries.  On some systems, you may have to do some basic\r\nconfiguration of the chroot environment before you can perform certain operations.\r\n\r\nI'm going to close this as \"Won't Fix\" for now, unless someone has a convincing\r\nargument otherwise.\r\n",
            "published" : "2010-03-15T05:23:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 70,
        "title" : "On windows, O_BINARY is required for open() in tar/write.c",
        "summary" : "On windows, O_BINARY is required for open() in tar/write.c",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "CamaradeTux",
          "htmlLink" : "https://code.google.com/u/109614977970127858474/"
        },
        "updated" : "2010-03-06T18:54:06.000Z",
        "published" : "2010-03-01T11:23:45.000Z",
        "closed" : "2010-03-06T18:54:06.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "CamaradeTux",
              "htmlLink" : "https://code.google.com/u/109614977970127858474/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. On windows, use notepad.exe to create a file with &quot;test\\r\\nfile&quot;\r\n2. bsdtar cf test.tar test.txt\r\n3. The file in test.tar had its line endings changed\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\\r\\n is replaced with \\n\r\n\r\n<b>What version are you using?</b>\n2.8\r\n\r\n<b>On what operating system?</b>\nWindows\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nBinary cross-compiled with mingw-w64's 32bit toolchain.\r\nSame problem in the mingw.org package.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nmingw / mingw-w64\r\n\r\n<b>Please provide any additional information below.</b>\nThe patch attached fixes the problem but is not really mergeable: it would\r\nbe better to surround the open calls with #if defined(_WIN32) &amp;&amp;\r\n!defined(__CYGWIN__).\r\nI'm ready to make a cleaner patch and test it on a bunch of platforms\r\n(linux, cygwin, win32/64) but I'd like to know first if I'm completely\r\nmissing something or if the idea and the approach are good.",
            "published" : "2010-03-01T11:23:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-5348619261444178954",
              "fileName" : "0001-Open-files-as-binary-in-tar-write.c.patch",
              "fileSize" : 1651,
              "mimetype" : "text/x-patch"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is very good; thanks for catching this.  What we did elsewhere was to use\r\nexactly the code you gave here without any conditionals and put the following at the\r\ntop of the file:\r\n\r\n#ifndef O_BINARY\r\n#define O_BINARY 0\r\n#endif\r\n",
            "published" : "2010-03-01T16:51:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "CamaradeTux",
              "htmlLink" : "https://code.google.com/u/109614977970127858474/"
            },
            "content" : "This is a complete patch (yeah, took me five days...). Made it against HEAD but it\r\napplies against 2.8.0 just as well. It's extracted from a git-svn of libarchive btw.\r\n\r\nAs a sidenote, I compiled with almost everything but bsdtar disabled because I would\r\nrun into other errors at compile. I'll try to make other patchs for windows.",
            "published" : "2010-03-06T12:39:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-2927462235342272600",
              "fileName" : "0001-bsdtar-write.c-open-the-files-with-O_BINARY-on-windo.patch",
              "fileSize" : 2276,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Applied patch to both trunk and 2.8 release branch.\r\n\r\nFeel free to post the errors you're seeing to libarchive-discuss.",
            "published" : "2010-03-06T18:54:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 71,
        "title" : "archive_crc32 missing in 2.8 release package",
        "summary" : "archive_crc32 missing in 2.8 release package",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mlaenz",
          "htmlLink" : "https://code.google.com/u/106007959105992158821/"
        },
        "updated" : "2010-03-06T18:51:39.000Z",
        "published" : "2010-03-06T18:13:02.000Z",
        "closed" : "2010-03-06T18:51:39.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mlaenz",
              "htmlLink" : "https://code.google.com/u/106007959105992158821/"
            },
            "content" : "For some reason archive_crc32.h is missing in the libarchive-2.8.0 packages \r\nprovided in the Downloads section. This results in a build error for the \r\nfiles archive_read_support_format_zip.c and archive_write_set_format_zip.c \r\nwhen compiling without zlib.",
            "published" : "2010-03-06T18:13:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Ouch.  I've fixed the distribution-building scripts in trunk and in the 2.8 branch. \r\nWhen I roll the 2.8.1 distribution in a few days, this will be fixed.\r\n",
            "published" : "2010-03-06T18:51:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 72,
        "title" : "Need a logo",
        "summary" : "Need a logo",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Task", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-07-29T09:40:37.000Z",
        "published" : "2010-03-06T19:04:20.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Libarchive project could use a logo.\r\n\r\nI tried to create one but my artistic skills aren't quite\r\nup to the challenge.  Right now, libarchive.googlecode.com\r\njust has some Google-provided default icon.\r\n",
            "published" : "2010-03-06T19:04:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Here are the specs for custom logos on Google Code:\r\n* The image file should be in PNG, JPG or GIF format and a maximum of 153 x 55\r\npixels. Larger images will be scaled automatically.\r\n* The logo will be shown on the upper left of every page in your project, instead of\r\nthe default Google Code logo.\r\n* Do not include any Google trademarks.\r\n",
            "published" : "2010-03-06T19:06:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "antoniovazquezblanco",
              "htmlLink" : "https://code.google.com/u/101260858284408058989/"
            },
            "content" : "As I don't have any artistic skill I've managed to find a site where to find logos under GPL license. Here is an example of logo that you could use http://www.iconfinder.com/icondetails/8818/128/archive_box_inventory_zip_icon .\r\n\r\nHope it helps :)",
            "published" : "2011-07-28T21:16:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "A GPL-licensed icon is not really appropriate (since the software is BSD licensed; it would be awkward if there were many people who could distribute the software but not the icon. :-)\r\n\r\nBut there are some interesting ideas in there.  I've long thought that a suitable logo or icon for libarchive would somehow incorporate a box idea and some idea of \"construction or building\", since libarchive is a software library for building tools that manipulate archives.  Possibly a wooden crate with one side missing and a hammer next to it, or a box drawn so that part of it is incomplete (low resolution or pencil sketch) while the rest is smoothly rendered.\r\n",
            "published" : "2011-07-29T05:50:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "antoniovazquezblanco",
              "htmlLink" : "https://code.google.com/u/101260858284408058989/"
            },
            "content" : "I'm sorry as I can't do it because of my low skills in this area, but thought the icon search engine was useful :).",
            "published" : "2011-07-29T09:40:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 73,
        "title" : "[PATCH] Simplify and improve digest function checks",
        "summary" : "[PATCH] Simplify and improve digest function checks",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "flameeyes",
          "htmlLink" : "https://code.google.com/u/flameeyes/"
        },
        "updated" : "2010-05-09T23:48:15.000Z",
        "published" : "2010-03-07T18:36:22.000Z",
        "closed" : "2010-05-09T23:48:15.000Z",
        "blocking" : [ {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 86
        } ],
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 10,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "flameeyes",
              "htmlLink" : "https://code.google.com/u/flameeyes/"
            },
            "content" : "The attached patch makes it possible to avoid the repetitive code and uses\r\ninstead autoconf macros to do the same thing. It also makes it simpler to\r\ndeal with multiple implementations in the C library (by mean of stopping if\r\nSHA1Init, as an example, is found rather than always trying SHA1Init _and_\r\nSHA1_Init).\r\n\r\nHTH!\r\nDiego\r\n",
            "published" : "2010-03-07T18:36:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-6039764085686088335",
              "fileName" : "0001-Create-a-custom-macro-to-check-for-the-various-messa.patch",
              "fileSize" : 4063,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "I disklike this patch as it hides the important point of what is taken from OpenSSL\r\nand what not. Completely ignoring the question of whether using more m4 is helping or\r\nnot...",
            "published" : "2010-03-07T18:42:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "flameeyes",
              "htmlLink" : "https://code.google.com/u/flameeyes/"
            },
            "content" : "Uh? How does it hide it?\r\n\r\nchecking for MD5Init... no\r\nchecking for MD5_Init... no\r\nchecking for MD5_Init in -lcrypto... yes\r\nchecking for RMD160Init... no\r\nchecking for RMD160_Init... no\r\nchecking for RMD160_Init in -lcrypto... no\r\nchecking for SHA1Init... no\r\nchecking for SHA1_Init... no\r\nchecking for SHA1_Init in -lcrypto... yes\r\nchecking for SHA256Init... no\r\nchecking for SHA256_Init... no\r\nchecking for SHA256_Init in -lcrypto... yes\r\nchecking for SHA384Init... no\r\nchecking for SHA384_Init... no\r\nchecking for SHA384_Init in -lcrypto... yes\r\nchecking for SHA512Init... no\r\nchecking for SHA512_Init... no\r\nchecking for SHA512_Init in -lcrypto... yes\r\n",
            "published" : "2010-03-07T18:44:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Because it is no longer easy to figure out from the *code* where it comes from.\r\nEspecially the part of what is used when no OpenSSL is desired at all.",
            "published" : "2010-03-07T19:10:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "flameeyes",
              "htmlLink" : "https://code.google.com/u/flameeyes/"
            },
            "content" : "Uhm I guess it subjective, and probably because we both wrote the respective code, I\r\nfind this much more readable…\r\n",
            "published" : "2010-03-07T19:12:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I agree with Joerg that this could probably be made a little clearer, but I like the\r\noverall approach.  It's certainly eliminates a lot of duplication in the current code.\r\n\r\nWhat if we used two macro calls for each probe, so the usage looked like this:\r\n\r\nMD_CHECK_INIT([MD5], [MD5Init, MD5_Init])\r\nMD_CHECK_INIT([MD5], [MD5_Init], [openssl/md5.h])\r\n\r\nArgument #1: name of the feature, used to synthesize MD5_found variable name to\r\nsuppress redundant checks\r\nArgument #2: list of function names to probe\r\nArgument #3: optional list of headers to probe\r\n\r\nWould that make it sufficiently clear that we're first looking for MD5Init or\r\nMD5_Init in the default libraries, then (if that fails) looking for MD5_Init in the\r\nopenssl library?  I think it's just a small change to Flameeyes' patch to get this\r\nkind of behavior.\r\n",
            "published" : "2010-03-12T06:11:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "More along the lines of\r\n\r\nMD_CHECK_INIT([SHA512], [SHA512_Init, SHA512Init], [sha2.h], [SHA512_Init],\r\n[openssl/sha.h])\r\n\r\nE.g. Hash, Candidate functions in libc, libc header, OpenSSL function, OpenSSL header.\r\nPreferable it actually tries a real test case with the proper types etc and not just\r\nchecking for linkage.",
            "published" : "2010-03-12T15:51:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "New patch which deals with the issues on Linux with cyrus-sasl installed and on\r\nOpenBSD 4.6+. This needs changes for the cmake code and Windows.",
            "published" : "2010-04-26T20:29:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "6022876867429821241",
              "fileName" : "archive_hash.diff",
              "fileSize" : 12409,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "New version of the patch, now including the necessary cmake stuff.\r\n\r\nThis needs careful testing at the very least on Windows, FreeBSD and OpenBSD.\r\n\r\nWhat is the proper way to recreate build/cmake/config.h.in?",
            "published" : "2010-05-02T20:24:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-8674694857989537782",
              "fileName" : "archive_hash.diff",
              "fileSize" : 22166,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "This issue was closed by revision r2375.",
            "published" : "2010-05-09T23:48:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 74,
        "title" : "bsdcpio cannot produce ‘restricted pax’ archives",
        "summary" : "bsdcpio cannot produce ‘restricted pax’ archives",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rransom.8774",
          "htmlLink" : "https://code.google.com/u/106249933430002364785/"
        },
        "updated" : "2010-03-12T05:59:24.000Z",
        "published" : "2010-03-09T07:11:07.000Z",
        "closed" : "2010-03-12T05:59:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rransom.8774",
              "htmlLink" : "https://code.google.com/u/106249933430002364785/"
            },
            "content" : "Because bsdcpio sets the format name to ‘odc’ if the user does not specify \r\none, and libarchive's default ‘restricted pax’ format has no name, there is \r\nno way to ask bsdcpio to produce a ‘restricted pax’ archive.\r\n\r\nPlease add the following lines to the ‘names’ array in \r\nlibarchive/archive_write_set_format_by_name.c:\r\n\r\n\t{ &quot;bsdtar&quot;,\tarchive_write_set_format_pax_restricted },\r\n\t{ &quot;paxr&quot;,\tarchive_write_set_format_pax_restricted },\r\n\t{ &quot;rpax&quot;,\tarchive_write_set_format_pax_restricted },\r\n",
            "published" : "2010-03-09T07:11:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rransom.8774",
              "htmlLink" : "https://code.google.com/u/106249933430002364785/"
            },
            "content" : "I have attached a patch to make this change in libarchive 2.8.1; I don't know whether \r\nit will apply to the current sources correctly.",
            "published" : "2010-03-09T07:25:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2125828114727469587",
              "fileName" : "libarchive-2.8.1-paxr.patch",
              "fileSize" : 965,
              "mimetype" : "text/x-patch"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rransom.8774",
              "htmlLink" : "https://code.google.com/u/106249933430002364785/"
            },
            "content" : "Here's another patch, this time against the Subversion sources.",
            "published" : "2010-03-09T08:24:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "5641029458697912630",
              "fileName" : "libarchive-svn2024-paxr.patch",
              "fileSize" : 1072,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "A nice, clean patch.  Thanks for taking such care.\r\n\r\nCommitted to trunk at r2026.\r\n",
            "published" : "2010-03-12T05:59:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 75,
        "title" : "[PATCH] incorrect permissions stored for symlinks on Linux",
        "summary" : "[PATCH] incorrect permissions stored for symlinks on Linux",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rransom.8774",
          "htmlLink" : "https://code.google.com/u/106249933430002364785/"
        },
        "updated" : "2010-03-12T05:55:31.000Z",
        "published" : "2010-03-12T02:05:33.000Z",
        "closed" : "2010-03-12T05:55:31.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rransom.8774",
              "htmlLink" : "https://code.google.com/u/106249933430002364785/"
            },
            "content" : "In libarchive SVN trunk r2024 on my Fedora 12 system, bsdcpio tests \r\n‘test_format_newc’ and ‘test_option_c’ fail, because libarchive writes the \r\npermission bits of a symlink's target instead of the permission bits of the \r\nlink itself.  \r\n\r\nThe underlying problem is that, on Linux, archive_read_disk_entry_from_file \r\nuses acl_get_file(3) to look for an ACL on *every* entry read from disk, \r\neven if it is a symlink, and acl_get_file dereferences symlinks.  \r\narchive_read_disk_entry_from_file then sets the permission bits in the \r\nentry's mode based on the ACL.\r\n\r\nThe attached patch fixes this problem.",
            "published" : "2010-03-12T02:05:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-8429213285087503458",
              "fileName" : "libarchive-patch-no-symlink-acls.diff",
              "fileSize" : 628,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Excellent work!  Thanks.\r\n\r\nCommitted to trunk at r2025.\r\nDoes this need to be merged to the 2.8 branch as well?\r\n",
            "published" : "2010-03-12T05:55:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rransom.8774",
              "htmlLink" : "https://code.google.com/u/106249933430002364785/"
            },
            "content" : "> Does this need to be merged to the 2.8 branch as well?\r\n\r\nIt probably should be.  This bug is present in libarchive 2.8.1, and in modern archive \r\nformats (including ‘pax restricted’), it can leak the entire ACL (with user and group \r\nnames and IDs) of a symlink's target.",
            "published" : "2010-03-12T14:30:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Merged to releases/2.8 at r2027.  I expect there will be a 2.8.2 release in the next\r\nweek or two.\r\n",
            "published" : "2010-03-13T06:22:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 76,
        "title" : "archive_read_support_format_zip bid error",
        "summary" : "archive_read_support_format_zip bid error",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dardoguidobono",
          "htmlLink" : "https://code.google.com/u/105073204392664842201/"
        },
        "updated" : "2010-03-13T06:46:55.000Z",
        "published" : "2010-03-12T17:14:37.000Z",
        "closed" : "2010-03-13T06:46:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "File: archive_read_support_format_zip.c\r\nFunction: static int archive_read_format_zip_bid(struct archive_read *a)\r\n\r\nafter \r\nbuff = __archive_read_ahead(a, offset + 4096,\r\n              &amp;bytes_avail);\r\nthe function doesn't control if buff is null.\r\n\r\nthis is breaking some usage of libarchive that i am doing.\r\n\r\nPlease apply\r\n\r\n          buff = __archive_read_ahead(a, offset + 4096,\r\n              &amp;bytes_avail);\r\n+            if (!buff) return -1;\r\n          if (bytes_avail &lt; offset + 1)\r\n              break;\r\n\r\nthanks.",
            "published" : "2010-03-12T17:14:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Can you please tell what you are doing? This sounds like a bug in your application.",
            "published" : "2010-03-12T19:48:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It looks like this usage of __archive_read_ahead() didn't get updated when I changed\r\nit's return convention; that function used to return non-NULL if any data was\r\navailable but now returns NULL unless it can satisfy the full request.\r\n\r\nSo if you have a file that is less than 128k, then __archive_read_ahead will return\r\nNULL at some point even though bytes_avail indicates that there is some data\r\navailable (but not the full offset+4096 that was requested).  This will happen only\r\nif the Zip bidder sees a file that begins with 'MZ' (the signature for PE-format\r\nexecutables used by self-extracting Zip archives) that is less than 128k long.\r\n\r\nI've committed a slight variation of this fix as r2028 to trunk and r2029 to the\r\nrelease/2.8 branch.  Please let me know if you have any further problems.\r\n",
            "published" : "2010-03-13T06:46:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 77,
        "title" : "zip64 write support",
        "summary" : "zip64 write support",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "updated" : "2014-04-07T01:09:57.000Z",
        "published" : "2010-03-14T20:30:25.000Z",
        "closed" : "2014-04-07T01:09:57.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Figure out if the streaming write works for zip64, too. If yes, add support\r\nfor it.",
            "published" : "2010-03-14T20:30:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2014-04-07T01:09:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 78,
        "title" : "Encrypted zip support",
        "summary" : "Encrypted zip support",
        "stars" : 10,
        "starred" : false,
        "status" : "Accepted",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "updated" : "2014-12-04T19:21:20.000Z",
        "published" : "2010-03-14T20:32:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 11,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Encrypted entries should be have the same flags in the entry as in the\r\ndirectory. It should therefore be possible to supported encrypted entries.\r\n\r\nThis needs extensions to the libarchive API for passing down / querying the\r\npassword.",
            "published" : "2010-03-14T20:32:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I would suggest handling passwords through an option, e.g.,\r\n  --option password=357X8&4z\r\nThat will easily extend to other formats.  Though we may need to rethink the options\r\nAPI somewhat; the current API wouldn't allow commas in passwords.  Maybe the internal\r\nAPI should only permit a single option at a time instead of trying to support\r\ncomma-separated lists of options?  If we need to make that change, 3.0 is our chance.\r\n",
            "published" : "2010-03-14T21:23:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "An option is bad as it is visible to other users on many systems. I also don't think\r\nit makes sense from a user-perspective to require knowing in advance that something\r\nin an archive is encrypted.\r\n\r\nI can think of two interface extensions to deal with this kind of problem:\r\n\r\narchive_read_set_password(struct archive *, void *, size_t)\r\narchive_read_set_password_callback(struct archive *, int (*)(void *, struct\r\narchive_entry *, void **, size_t *), void *)\r\n\r\nThe former would cover the case of an explicit --password option (or\r\n--password-file), the latter would allow a callback for interactive use.",
            "published" : "2010-03-14T21:48:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rransom.8774",
              "htmlLink" : "https://code.google.com/u/106249933430002364785/"
            },
            "content" : "To properly support Zip archives with encrypted entries, the archive read API must \r\nsupport multiple cryptographic keys:\r\n\r\nstruct archive_key {\r\n  void *key;\r\n  size_t *key_bytes;\r\n  int key_type;\r\n};\r\n\r\n#define ARCHIVE_KEY_TYPE_RAW_KEY 0\r\n#define ARCHIVE_KEY_TYPE_PASSWORD 1\r\n\r\nint archive_read_add_key(struct archive *, struct archive_key *);\r\n\r\n\r\n\r\nWhen writing an archive, encryption keys may need to be directed to specific archive \r\nentries (in the Zip format) or filters (with any archive format).",
            "published" : "2010-03-14T23:11:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "I'm not concerned about writing them ATM -- at least for zip files the default\r\nencryption mechanism is more about obscurity than security and not something I really\r\nconsider useful.\r\n\r\nFor reading the common case of a single password is covered by the first approach and\r\nif you need anything more complex, use the callback. I think that's fine. Policies\r\nlike asking at most three times for the same entry can be implemented in the callback\r\neasily.",
            "published" : "2010-03-14T23:43:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "> archive_read_set_password(struct archive *, void *, size_t)\r\n\r\nThis can be handled as\r\n  archive_read_set_options(struct archive *, \"password=XXXX\");\r\nthere's no need for another option.\r\nBeing able to set an option value from a file might be an interesting\r\ngeneral feature.\r\n\r\nI'm not a big fan of the callback approach (despite evidence\r\nto the contrary ;-).  If libarchive had better error management,\r\nwe could maybe handle password requirements by returning a\r\n\"PASSWORD_REQUIRED\" error and allowing the client to try\r\nagain.  But this isn't easy to integrate into the existing\r\nframework, so a callback may be the best we can do.  <sigh>",
            "published" : "2010-03-15T04:54:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Note:  The recent addition of a seek-based Zip reader should make this much easier, since that reader has full access to the extended Zip fields stored in the Central Directory.",
            "published" : "2011-11-23T09:23:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "Any plans to add this feature anytime soon?",
            "published" : "2014-07-23T03:42:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I do not know of anyone working on this feature right now.\r\n",
            "published" : "2014-07-23T05:51:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "konrad.wilhelm.kleine",
              "htmlLink" : "https://code.google.com/u/115517129260269181085/"
            },
            "content" : "Hi, I've implemented the encryption detection support in libarchive and I might start working on this as soon as I have made progress with the integration of the UnRAR library for future proof and maintainable RAR support. But I need more time for this.\r\n\r\nIn my opinion, there's no other option but to implement a callback because you can have an archive with files in it that were encrypted using different passwords. At least in RAR you can do this. If you don't want to use a callback it would require you to pass in a list of passwords. Then all you could do is try decryption with all the passwords in your list. For big files this trial and error approach can possibly slow things down quite significantly.",
            "published" : "2014-07-23T07:44:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "DaGoodBoy",
              "htmlLink" : "https://code.google.com/u/114800982879603441487/"
            },
            "content" : "I understand the goal would be to decrypt the archived data, but at the very least it would be nice to have a standard flag or error code to indicate an archive is encrypted.\r\n\r\nI'd like to use libarchive as a library to handle unknown archive data and there's no way to differentiate between an archive that is corrupt and one that is encrypted.\r\n\r\nFor example, password protected zip files can still be listed by the standard command line tools under Linux, but attempting to list the contents with libarchive yields a decompression failed error.",
            "published" : "2014-12-04T19:21:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 79,
        "title" : "Libarchive 2.8.2 fails to compile",
        "summary" : "Libarchive 2.8.2 fails to compile",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2010-03-15T02:25:29.000Z",
        "published" : "2010-03-15T01:08:24.000Z",
        "closed" : "2010-03-15T02:25:29.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. make\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/usr/include/libxml2 -Wall\r\n-Werror -g -O2 -MT libarchive/archive_read_disk_entry_from_file.lo -MD -MP\r\n-MF libarchive/.deps/archive_read_disk_entry_from_file.Tpo -c\r\nlibarchive/archive_read_disk_entry_from_file.c  -fPIC -DPIC -o\r\nlibarchive/.libs/archive_read_disk_entry_from_file.o\r\nlibarchive/archive_read_disk_entry_from_file.c: In function\r\n‘setup_acls_posix1e’:\r\nlibarchive/archive_read_disk_entry_from_file.c:248: error: expected\r\nstatement before ‘)’ token\r\nlibarchive/archive_read_disk_entry_from_file.c:253: error: ‘else’ without a\r\nprevious ‘if’\r\nmake[1]: *** [libarchive/archive_read_disk_entry_from_file.lo] Error 1\r\nmake[1]: Leaving directory `/home/dmcgee/projects/libarchive'\r\n\r\n\r\n<b>What version are you using?</b>\n2.8.2 / SVN\r\n\r\nFix is to kill the extra right parenthesis:\r\n\r\n$ svn diff\r\nIndex: libarchive/archive_read_disk_entry_from_file.c\r\n===================================================================\r\n--- libarchive/archive_read_disk_entry_from_file.c\t(revision 2035)\r\n+++ libarchive/archive_read_disk_entry_from_file.c\t(working copy)\r\n@@ -245,7 +245,7 @@\r\n \t\tacl = acl_get_link_np(accpath, ACL_TYPE_ACCESS);\r\n #else\r\n \telse if ((!a-&gt;follow_symlinks)\r\n-\t    &amp;&amp; (archive_entry_filetype(entry) == AE_IFLNK)))\r\n+\t    &amp;&amp; (archive_entry_filetype(entry) == AE_IFLNK))\r\n \t\t/* We can't get the ACL of a symlink, so we assume it can't\r\n \t\t   have one. */\r\n \t\tacl = NULL;\r\n",
            "published" : "2010-03-15T01:08:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fix committed to releases/2.8 and trunk; I'll push up a 2.8.3 release as soon as\r\npossible.",
            "published" : "2010-03-15T02:25:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "2.8.3 release has been pushed up with this fix.  Please let me know if there are any\r\nother problems.",
            "published" : "2010-03-15T04:50:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Looks good now, thanks for the quick resolution!",
            "published" : "2010-03-15T07:13:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 80,
        "title" : "Allow explicit format specification for bsdtar -x",
        "summary" : "Allow explicit format specification for bsdtar -x",
        "stars" : 1,
        "starred" : false,
        "status" : "Accepted",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "updated" : "2010-03-16T19:22:37.000Z",
        "published" : "2010-03-16T19:22:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "It should be possible to explicitly say &quot;this is a mtree spec&quot; or even\r\n&quot;this is a raw&quot; file for bsdtar, disabling the normal bidding once the\r\ninput files are done.",
            "published" : "2010-03-16T19:22:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "The same applies for other cases where an archive is read -- @foo.mtree comes to mind.",
            "published" : "2010-03-24T21:33:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "There are a couple of pieces here.\r\n\r\n1) Within libarchive, I've long wanted to split out archive_read_support_format_XXX()\r\nand archive_read_set_format_XXX().  Ideally, the second of these would be identical\r\nto the current init() methods called for the winning bidder.  This is actually on the\r\nWishList Wiki page already.\r\n\r\n2) Once that's in place, --format= can call read_set_format() to set the format\r\nexplicitly, bypassing the bidding.\r\n\r\n3) For the @foo.mtree case, we need some additional syntax to specify the format.  A\r\ncommand-line option is one possibility, keying from the filename is another, we could\r\nalso extend the syntax to something like @{mtree}foo.bar.\r\n\r\nOne big motivator here is, of course, the mtree format.  I'm not happy about\r\nrequiring a magic initial line, because it makes it hard to do Unix-like things such as\r\n  $ find . -mtree | grep Makefile | sed 's/root/nonroot/' | tar cf file.tar @-\r\nI would like to look for ways to auto-detect mtree without requiring the magic line,\r\nbut I expect that some way to explicitly provide a format hint might be required in\r\nsome cases.\r\n\r\nThe other motivator is handling slightly-damaged files.  The bidders are necessarily\r\nrather strict, so we want a way to coerce the format so that people can use\r\nbsdtar/bsdcpio with files that are damaged enough to fail the bid but still recoverable.\r\n\r\nOf course, the next obvious step is to extend similar capabilities to the filters. \r\nThe command-line interface could be tricky; I expect we should use strings that look\r\nsimilar to file extensions to specify the full transform and archive format, e.g.,\r\n\"tar.gz.uu\".",
            "published" : "2010-03-25T04:44:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 81,
        "title" : "ISO9660 writer is inefficient for large directories",
        "summary" : "ISO9660 writer is inefficient for large directories",
        "stars" : 1,
        "starred" : false,
        "status" : "Verified",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2010-05-16T22:34:55.000Z",
        "published" : "2010-03-17T00:40:47.000Z",
        "closed" : "2010-05-15T06:30:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 8,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Try adding 100k entries to the same directory, all different. Note how it\r\ngets very slow.",
            "published" : "2010-03-17T00:40:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "",
            "published" : "2010-04-26T12:50:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "I wonder if I should port and merge Matt Thomas' red black tree from NetBSD. It is\r\nsmall (rb.o < 4KB) and fast, so it wouldn't impact library size much for those\r\ncomponents that use it.",
            "published" : "2010-04-27T12:28:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thanks.\r\nI've already started to implement the red black tree based on FreeBSD's\r\n/usr/include/sys/tree.h (ported from NetBSD,OpenBSD).\r\n\r\nI think that switching to use Matt Thomas' red black tree is not so hard,\r\nif you would port it.\r\n\r\n\r\n",
            "published" : "2010-04-27T14:50:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm comfortable with whatever you guys come up with.",
            "published" : "2010-04-29T06:30:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Simple test case.",
            "published" : "2010-04-29T09:15:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3168200477064710766",
              "fileName" : "simple-writer.c",
              "fileSize" : 980,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I believe I fixed this issue at trunk/r2324 and mainly r2346. \r\nRecent trunk code has good performance in this case.",
            "published" : "2010-05-15T06:30:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Thanks, it now takes 22s for the 100k entries, which looks very good.",
            "published" : "2010-05-16T22:34:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Verified"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 82,
        "title" : "The bsdtar option --check-links does not work",
        "summary" : "The bsdtar option --check-links does not work",
        "stars" : 3,
        "starred" : false,
        "status" : "Started",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.bocaniciu@computer.org",
          "htmlLink" : "https://code.google.com/u/109400174693954013770/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joerg.sonnenberger",
          "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
        },
        "updated" : "2010-03-24T16:27:28.000Z",
        "published" : "2010-03-24T14:33:03.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 11,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Create a directory and a file in it\r\n2. Create 2 hard links to that file inside the directory and 1 hard link outside it\r\n3. Execute &quot;bsdtar -c --check-links -v -f some_name.tar directory_name\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nA warning message about missing links is expected, none is displayed.\r\nI have executed both GNU tar with the same command line and also star on the same directory.\r\nBoth programs give the &quot;missing links&quot; warning message, as expected.\r\n\r\n<b>What version are you using?</b>\nI have tried both libarchive 2.7.1 and 2.8.3, none of the 2 versions of bsdtar gives any warning.\r\nI have also tried the short option &quot;-l&quot;, it also gives no warning message.\r\n\r\n<b>On what operating system?</b>\nGentoo Linux on AMD64 with XFS file system.\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nI have compiled libarchive with the standard Gentoo ebuild scripts,\r\nACL &amp; extended attributes were enabled.\r\n\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.3.4\r\n\r\n<b>Please provide any additional information below.</b>\nI doubt that the operating system or the development environment can have any influence on \r\nthis bug. I intended to switch from GNU tar to bsdtar, because I need extended attributes \r\nsupport, which is missing in my version of GNU tar. Nevertheless, it appears that I will have to \r\nuse star instead, because I believe that this &quot;check-links&quot; feature is required to guarantee that \r\nthe backup archive contains everything that is needed to restore the original files.\r\n\r\n",
            "published" : "2010-03-24T14:33:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "",
            "published" : "2010-03-24T16:27:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "joerg.sonnenberger"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "Now I have looked at the source files and I cannot find any place where the field option_warn_links of the \r\nbsdtar structure is used, after being set by the --check-links option. Therefore, there is no wonder that the \r\noption does not work. If this is the case, you should document this option as being not implemented.\r\n\r\nWhat puzzles me is that I have seen some old e-mail discussions that seemed to imply that this option was \r\nimplemented in bsdtar at that time.\r\n",
            "published" : "2010-03-24T18:51:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "The patch is the 95% solution. It doesn't work correctly when using newc as format,\r\nbecause the normal deferred step kicks in before. I am not sure how to correctly\r\nhandle that case without changing the API of the linkify function. That might\r\nactually be the best approach though. Tim, what do you think of essentially\r\ndeprecating the current flush interface and make archive_entry_partial_links the\r\ndefault interface for flushing, always returning the last reference in that case?",
            "published" : "2010-03-24T20:14:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1345824525761538698",
              "fileName" : "check-links.diff",
              "fileSize" : 6544,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "The patch is the 95% solution. It doesn't work correctly when using newc as format,\r\nbecause the normal deferred step kicks in before. I am not sure how to correctly\r\nhandle that case without changing the API of the linkify function. That might\r\nactually be the best approach though. Tim, what do you think of essentially\r\ndeprecating the current flush interface and make archive_entry_partial_links the\r\ndefault interface for flushing, always returning the last reference in that case?",
            "published" : "2010-03-24T20:14:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1863198121429579688",
              "fileName" : "check-links.diff",
              "fileSize" : 6544,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "> ... cannot find ... where the field option_warn_links ... is used ...\r\n\r\nIt certainly did work at one time; I suspect it was disconnected when we refactored\r\nbsdtar to use the libarchive link resolver to track hardlinks.\r\n\r\n> [This] patch is the 95% solution.\r\n\r\nIf I understand correctly, you're suggesting that the final cleanup loop be used both\r\nfor writing any remaining regular entries for the newc case and for printing out\r\nerrors for the -l flag?  And that to get proper error messages, we need to return the\r\nremaining link count, hence the API change?  That makes a lot of sense to me.\r\n\r\nWould that allow us to keep the existing flush interface as-is for backwards\r\ncompatibility?  That would be a nice bonus.\r\n",
            "published" : "2010-03-25T06:06:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Yeah, I also suspect it was forgotten in the refactoring. Given that bsdtar handles\r\nthe archive creation correctly independent of the format, it is seldomly used.\r\n\r\nLooking further the present issues, I think it should be\r\nstruct archive_entry *archive_entry_linkify_flush(struct linkresolver *res, int\r\n*deferred, unsigned int *links);\r\n\r\narchive_entry_linkify would call this function for *e == NULL in a loop. If *deferred\r\n= 1, it sets *e and returns, otherwise frees the entry.\r\n\r\nPrograms that don't care about missing links can just go with the old API.",
            "published" : "2010-03-25T06:24:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "I have opened another issue (83), where I have attached a patch that solves a timestamp bug. Unfortunately, \r\nI had not read this issue before, and I had assumed that you will not work soon on the hard links issue, so \r\nthat patch also inserted a lafe_warnc message in tar/bsdtar.c, when either -l or --check-links were used.\r\n\r\nThat solution was good enough from my point of view, because it would not fool your trusting users into \r\nbelieving that the check was done and it was OK.\r\n\r\nIf you have really implemented this option now, then that part of the patch is undesirable.\r\n\r\nI actually need this check, but this tar option does not seem to be the right solution, because, if the check \r\nfails, I do not want a warning, I want the archive creation to be aborted because the tar arguments must be \r\nmodified to obtain a valid archive.\r\n\r\nTherefore, for myself, I will make a separate script to implement this check before invoking bsdtar. So I \r\nraised this issue mainly because it was dangerous to believe that bsdtar does what it claims to do, not \r\nbecause I believe that this option is useful in its current form.\r\n\r\nAt least star allows to choose if this check is a warning or an error, which is much more useful than the \r\nGNU tar behavior, where I have to capture the output and search for the warning message in order to make \r\nan abort decision, since the exit status code cannot be used.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "published" : "2010-03-25T19:46:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "I don't mind making bsdtar return an error in this case.",
            "published" : "2010-03-25T20:01:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1255215963927524746",
              "fileName" : "bsdtar.1.diff",
              "fileSize" : 653,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "I am glad to hear that. I cannot actually imagine why would somebody want --check-links as a warning.\r\n\r\nI can see only two use cases.\r\n1. The user does not want to be bothered with a hard links check, because he either knows or assumes that \r\nthere are no chances for problems to appear due to this cause.\r\n2. The user wants to be sure that the created archive is valid, then he needs --check-links as an error.\r\n\r\nA valid archive is an archive for which you can delete all the archived files, then restore them from the \r\narchive, and then you obtain the original file system.\r\n\r\nAccording to this definition, any archive where --check-links fails, is obviously not a valid archive. When the \r\nuser gets this error, he must change the bsdtar command line by either excluding the offending hard linked \r\nfiles or by including all their links and only then he can rerun bsdtar and obtain a valid archive.\r\n\r\nI, and probably many other users, use normally the creation mode of an archiver, e.g. bsdtar, inside a more \r\ncomplex script, so the --check-links failure must return a failure exit status code so that the script will be \r\naborted because the recovery requires a manual intervention.\r\n\r\n",
            "published" : "2010-03-26T08:31:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The --check-links option is a synonym for the 'l' modifier specified in SUSv2-1997:\r\n\r\n\"l   Report if all of the links to the files being archived cannot be resolved. If l\r\nis not specified, no error messages are written.\"\r\n\r\nI interpret this to mean that the messages indicating missing links are considered\r\nerror messages (not just informational) and that a non-zero exit code should be\r\nreturned in this case.\r\n",
            "published" : "2010-04-04T05:45:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 83,
        "title" : "bsdtar in extraction mode truncates the directory timestamps (patch attached)",
        "summary" : "bsdtar in extraction mode truncates the directory timestamps (patch attached)",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.bocaniciu@computer.org",
          "htmlLink" : "https://code.google.com/u/109400174693954013770/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2010-04-11T19:15:02.000Z",
        "published" : "2010-03-25T19:21:39.000Z",
        "closed" : "2010-04-11T19:15:02.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 13,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Create a directory on a file system whose timestamps have nanosecond resolution,\r\n e.g. xfs or ext4\r\n2. Archive the directory with &quot;bsdtar --create --format=pax&quot; (the older formats do not store \r\ncomplete timestamps)\r\n3. Extract the archive with &quot;bsdtar --extract --preserve-permissions&quot;, then check the directory \r\ntimestamp with &quot;ls -d --full-time&quot;\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe expected result is to restore the original timestamp. I see instead that the timestamp is \r\ntruncated to microsecond resolution.\r\n\r\n<b>What version are you using?</b>\n2.8.3\r\n\r\n<b>On what operating system?</b>\nLinux that has utimensat\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nDoes not matter.\r\n\r\n<b>Please provide any additional information below.</b>\nThis bug is caused by the file &quot;libarchive/archive_write_disk.c&quot;, where only the function\r\nset_time at line 1841 was updated to use utimensat instead of utimes, but the function\r\n_archive_write_close at line 1230 was not updated.\r\n\r\nI have attached a patch that ensures that _archive_write_close uses utimensat, where available.\r\nThe patch also adds a lafe_warnc message in tar/bsdtar.c, which gives a temporary solution\r\nfor issue 82.\r\n\r\nI am now using a patched bsdtar and I am happy with it. Nevertheless, I have written the patch \r\nafter just 10 to 20 minutes of browsing the source files so someone familiar with the libarchive \r\nsources should review it. I have derived the HAVE_UTIMENSAT case from the HAVE_UTIMES \r\ncase, but I do not know if there exists any system that has both HAVE_UTIMENSAT and \r\nHAVE_STRUCT_STAT_ST_BIRTHTIME and if the code is right for that case.\r\n\r\nI want to add a comment. In my opinion, the first requirement for an archiving program is to \r\nbe able to make an exact copy of the archived files. If this requirement is not fulfilled, then the \r\narchiving program is useless, regardless how fast or convenient it might be.\r\n\r\nSadly, in the year 2010, most widespread archiving programs that are available for UNIX file \r\nsystems, either are not able at all to make exact copies, or they require non-default options that \r\nare not well documented. The two usual problems are the extended attributes (including ACLs) \r\nand the timestamps.\r\n\r\nbsdtar is by far the best archiving program that I have found (from this point of view), but I still\r\nhad to waste a day to experiment with the options in order to discover that &quot;--format=pax&quot; is \r\nmandatory for archive creation and &quot;--preserve-permissions&quot; is mandatory for archive \r\nextraction, then I had to read the sources and patch the bug and now I finally have a bsdtar \r\nthat can be used to backup XFS files.\r\n\r\nAt least the source files were quite clear, thus I could find quickly what to change, so their \r\nauthors did a very good job.\r\n\r\n",
            "published" : "2010-03-25T19:21:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-8192381057834034105",
              "fileName" : "dir_tstamp_chk_lnk.patch.gz",
              "fileSize" : 1013,
              "mimetype" : "application/x-gzip"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Are you sure about the HAVE_STRUCT_STAT_ST_BIRTHTIME fragment? It looks like the\r\nsecond call to utimensat is redundant?\r\n\r\nPlease keep patches specific to the issue at hand.",
            "published" : "2010-03-25T19:28:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "I have deleted from the patch given above the warning message that did not belong to this issue and I have \r\nattached the new patch here.\r\n\r\nRegarding the HAVE_STRUCT_STAT_ST_BIRTHTIME case, I have just copied the code from the \r\nHAVE_UTIMES case, replacing utimes with utimensat.\r\n\r\nI have no idea what this birthtime means and why on such systems utimes is called twice. Whoever wrote \r\nthat code should know the reason.\r\n\r\nI assume that this birthtime applies to some file systems that maintain a file creation time, and that there \r\nexists some operating system that uses this non-standard means to set it. Whoever wrote that code should \r\nhave commented it better.\r\n\r\nAnyway, the HAVE_STRUCT_STAT_ST_BIRTHTIME case is not used on Linux, so I cannot test it. Like I said in \r\nmy first post, I do not know if there exists any OS where both HAVE_STRUCT_STAT_ST_BIRTHTIME and\r\nHAVE_UTIMENSAT are true, so that part of the code might be never used.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "published" : "2010-03-25T20:16:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "6375037157005354526",
              "fileName" : "dir_tstamp.patch.gz",
              "fileSize" : 708,
              "mimetype" : "application/x-gzip"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Tim, you did the original change in r212. Please double check the intention of the\r\noriginal fragment and apply the patch.",
            "published" : "2010-03-25T20:41:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "joerg.sonnenberger wrote:\r\n> Are you sure about the HAVE_STRUCT_STAT_ST_BIRTHTIME fragment?\r\n> It looks like the second call to utimensat is redundant?\r\n\r\n\r\nAccording to FreeBSD's utimes(2) manpage:\r\n\r\n\"For file systems that support file birth (creation) times (such as UFS2), the \r\nbirth time will be set to the value of the second element if the second element \r\nis older than the currently set birth time.  To set both a birth time and a \r\nmodification time, two calls are required; the first to set the birth time and \r\nthe second to set the (presumably newer) modification time.  ...\"\r\n\r\nI do not know if this behavior has been reproduced in utimensat, if this system call was introduced in newer \r\nversions of FreeBSD, because I am still a happy user of \"FreeBSD 4.11-STABLE\" (six years of uptime without \r\na minute of downtime) :-)\r\n\r\n",
            "published" : "2010-03-25T21:40:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "OK, please add a proper comment about that then.",
            "published" : "2010-03-25T21:56:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "I have looked at the man pages on the FreeBSD site and utimensat appears neither in FreeBSD 8 nor in \r\nFreeBSD 9.\r\n\r\nTherefore the lines belonging to the HAVE_STRUCT_STAT_ST_BIRTHTIME case will never be compiled yet.\r\n\r\nWhen the FreeBSD developers will introduce utimensat, it will be logical to make it behave exactly like \r\nutimes does now. In that case the code from the patch will be correct.\r\n\r\nThe alternative is that suggested in the FreeBSD utimes(2) man page: \"Ideally a new system call\r\nwill be added that allows the setting of all three times at once.\"\r\n\r\nIf this will happen (not very likely), the existing code will have to be modified to use the new system call.\r\n\r\nI have modified the patch by adding a comment containing these facts and I have attached it here.\r\n",
            "published" : "2010-03-25T22:29:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-9155655518788191643",
              "fileName" : "dir_tstamp_comment.patch.gz",
              "fileSize" : 877,
              "mimetype" : "application/x-gzip"
            } ]
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "Since the version 5.0, NetBSD has adopted the birthtime feature from FreeBSD, so this is the second \r\noperating system for which HAVE_STRUCT_STAT_ST_BIRTHTIME is true. OpenBSD & DragonFlyBSD do not \r\nappear to have adopted the birthday feature.\r\n\r\nHowever, like FreeBSD, NetBSD does not have utimensat and it is unlikely that they will introduce this \r\nfeature before FreeBSD or in an incompatible way.\r\n\r\nTherefore, I do not think that is necessary to modify the comment posted above to also mention the fact that \r\nwhat is said about FreeBSD is also true for the recent versions of NetBSD.\r\n\r\n\r\n",
            "published" : "2010-03-25T23:20:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "OK, I was lazy.\r\n\r\nI have modified the patch by extending the comment.\r\nNow the comment really contains all the known facts.\r\nI have attached the new patch.\r\n",
            "published" : "2010-03-26T09:17:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "7123524744228758635",
              "fileName" : "dir_tstamp_comment2.patch.gz",
              "fileSize" : 978,
              "mimetype" : "application/x-gzip"
            } ]
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "I believe that in your web home page, where you list \"The libarchive library features:\", you should add a \r\nbullet and mention the fact that, when using the 2001 PAX format, libarchive is able to store all the \r\ninformation pertaining to a file, including extended attributes, ACLs and full timestamps, even when they \r\nhave nanosecond resolution.\r\n\r\nIn my opinion, the ability of making an exact copy of any archived file is even more important then the other \r\nfeatures that you list there.\r\n\r\nGNU tar from the standard distribution lacks this feature. There are patched versions of GNU tar, e.g. \r\nRedHat, that might be better, but I did not test them and I doubt that they preserve the full timestamps.\r\n\r\nThe cpio and pax programs that are available in most distributions are old programs that do not preserve \r\nextended attributes or timestamps.\r\n\r\nstar, when given a lot of non-default options, preserves extended attributes & ACLs, but truncates the \r\ntimestamps.\r\n\r\nTherefore, bsdtar is the only program that I have found and that is able to make exact copies of files from \r\nUNIX file systems and you should advertise better this fact.\r\n\r\nWhile the various \"dump\" programs are able to make exact copies, they are not suited for most applications \r\nbecause it is much more likely to need to restore the files on a different hard disk than the original one.\r\n\r\n",
            "published" : "2010-03-26T10:22:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Re: timestamp patch\r\n\r\nPlease try the attached patch.  This takes your idea a step further by refactoring\r\nsome of the existing time setting functions.  In particular, there is now only one\r\nplace that calls utimensat, only one place that knows about the BSD birthtime\r\nconvention, etc.  It's a considerably more intrusive patch but I think the result is\r\na bit cleaner.  Let me know if this works properly for you.\r\n\r\nRe: \"when using the 2001 PAX format, libarchive is able to store all the information\r\npertaining to a file\"\r\n\r\nUnfortunately, this is not yet universally true, though with the ongoing help and\r\nsupport of folks like yourself, we are getting closer.  ;-)  Probably the most\r\nimportant omission at the moment is support for NFS4/NTFS ACLs.\r\n",
            "published" : "2010-04-04T05:36:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1985561762740327411",
              "fileName" : "dir_tstamp3.patch",
              "fileSize" : 6166,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.bocaniciu@computer.org",
              "htmlLink" : "https://code.google.com/u/109400174693954013770/"
            },
            "content" : "I have tried the \"dir_tstamp3.patch\" and it seems to be all right. Actually I was also of the same opinion with \r\nyou when I saw the duplicated code for setting times that it should be unified in a single set_time function, \r\nbut, because I was not familiar with your code, I preferred in my initial patch to make minimal changes to \r\nyour sources.\r\n\r\nHowever, if you have already cleaned up most of the code, you should finish it and take the prototype of the \r\nset_time function, including the opening \"{\", outside the conditional compilation branches. Likewise, the \r\nclosing \"}\" of the set_time function should be taken outside the conditional compilation branches.\r\n\r\nAs it is now, when the function prototype is repeated a large number of times, it is confusing and it also it \r\npresents an opportunity of errors, if someone would modify by mistake only one of the copies of the \r\nfunction prototype.\r\n\r\nBest regards !\r\n\r\n",
            "published" : "2010-04-11T18:29:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed to libarchive/trunk as r2231.\r\n\r\nThank you very much for your help working through this problem.  I'm quite pleased\r\nwith the final result.\r\n",
            "published" : "2010-04-11T19:15:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 84,
        "title" : "tar(1) -C functionality unused when -c or -r is specified",
        "summary" : "tar(1) -C functionality unused when -c or -r is specified",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "yanegomi",
          "htmlLink" : "https://code.google.com/u/109487435073463797222/"
        },
        "updated" : "2010-04-03T16:01:06.000Z",
        "published" : "2010-04-02T23:12:40.000Z",
        "closed" : "2010-04-03T16:01:06.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "yanegomi",
              "htmlLink" : "https://code.google.com/u/109487435073463797222/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n1. (cd / &amp;&amp; tar -cvf /dev/null . -C /tmp)\r\n2. (cd / &amp;&amp; tar -cvf /dev/null . -C /nonexistent/directory)\r\n3. tmpdir=$(mktemp -d /tmp.XXXX); (cd / &amp;&amp; tar -rf $tmpdir/foo -C /tmp)\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n1. Should pass and all of the contents of /tmp should be printed if /tmp exists\r\n2. Should flat out fail.\r\n3. Should pass printing out the contents of /tmp again.\r\n\r\n<b>What version are you using?</b>\n\r\n2007901 ? That's what ARCHIVE_VERSION_NUMBER is set to in archive.h at least...\r\n\r\n<b>On what operating system?</b>\n\r\n$ uname -a\r\nFreeBSD bayonetta.local 9.0-CURRENT FreeBSD 9.0-CURRENT #5 r205310: Sat Mar\r\n20 01:32:51 PDT 2010    \r\ngcooper@bayonetta.local:/usr/obj/usr/src/sys/BAYONETTA  amd64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nFreeBSD base included binary.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nStandard FreeBSD CURRENT tools.\r\n\r\n<b>Please provide any additional information below.</b>",
            "published" : "2010-04-02T23:12:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rransom.8774",
              "htmlLink" : "https://code.google.com/u/106249933430002364785/"
            },
            "content" : "This is not a bug.  The -C option only affects filenames which follow it on the \r\ncommand line.  GNU tar handles -C this way as well.\r\n\r\nIncidentally, on my Linux system, archiving /tmp fails -- the tar formats cannot store \r\nUnix sockets.",
            "published" : "2010-04-03T15:57:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "What rrsansom.8774 said.",
            "published" : "2010-04-03T16:01:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 85,
        "title" : "In place removal from .zip",
        "summary" : "In place removal from .zip",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "techtonik",
          "htmlLink" : "https://code.google.com/u/techtonik@gmail.com/"
        },
        "updated" : "2010-04-11T00:38:09.000Z",
        "published" : "2010-04-06T05:55:02.000Z",
        "closed" : "2010-04-11T00:38:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "techtonik",
              "htmlLink" : "https://code.google.com/u/techtonik@gmail.com/"
            },
            "content" : "I'd like to have a possibility to remove files in place for some .zip \r\narchives without creating temporary files.\r\n",
            "published" : "2010-04-06T05:55:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "There are no plans at current to support in-place modification for any archive format.\r\n",
            "published" : "2010-04-11T00:38:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 86,
        "title" : "Cannot build 2.8.3 on OpenBSD 4.6.",
        "summary" : "Cannot build 2.8.3 on OpenBSD 4.6.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jgoamakf",
          "htmlLink" : "https://code.google.com/u/112354085760423839946/"
        },
        "updated" : "2010-05-09T23:49:10.000Z",
        "published" : "2010-04-10T23:38:57.000Z",
        "closed" : "2010-05-09T23:49:10.000Z",
        "blockedOn" : [ {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 73
        } ],
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jgoamakf",
              "htmlLink" : "https://code.google.com/u/112354085760423839946/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Download libarchive-2.8.3.tar.gz to OpenBSD 4.6.\r\n2. tar zxf libarchive-2.3.8.tar.gz\r\n3. cd libarchive-2.3.8\r\n4. ./configure\r\n5. make\r\n\r\nBuild failed with this error message. \r\n\r\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -g -O2 -MT \r\nlibarchive/archive_read_support_format_xar.lo -MD -MP -MF \r\nlibarchive/.deps/archive_read_support_format_xar.Tpo -c \r\nlibarchive/archive_read_support_format_xar.c  -fPIC -DPIC -o \r\nlibarchive/.libs/archive_read_support_format_xar.o\r\nIn file included from libarchive/archive_read_support_format_xar.c:56:\r\nlibarchive/archive_hash.h:121: error: syntax error before &quot;archive_sha256_ctx&quot;\r\nlibarchive/archive_hash.h:121: warning: data definition has no type or storage class\r\nlibarchive/archive_hash.h:150: error: syntax error before &quot;archive_sha384_ctx&quot;\r\nlibarchive/archive_hash.h:150: warning: data definition has no type or storage class\r\nlibarchive/archive_hash.h:179: error: syntax error before &quot;archive_sha512_ctx&quot;\r\nlibarchive/archive_hash.h:179: warning: data definition has no type or storage class\r\n*** Error code 1\r\n\r\nStop in /root/libarchive-2.8.3 (line 3062 of Makefile).\r\n*** Error code 1\r\n\r\nStop in /root/libarchive-2.8.3 (line 1341 of Makefile).\r\n\r\n<b>What version are you using?</b>\n\r\nlibarchive-2.8.3\r\n\r\n<b>On what operating system?</b>\n\r\nOpenBSD 4.6 (amd64), which is running on Parallels.\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nIn recent OpenBSD, SHA256_CTX and SHA512_CTX are unified into SHA2_CTX.\r\n\r\nCurrent sha2 is http://www.openbsd.org/cgi-bin/cvsweb/src/include/sha2.h?rev=1.7;content-\r\ntype=text%2Fx-cvsweb-markup \r\n",
            "published" : "2010-04-10T23:38:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Ticket #73 has a patch for this issue",
            "published" : "2010-04-26T20:30:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "blockedOn" : [ "73" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Please try compiling trunk.",
            "published" : "2010-05-09T23:49:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 87,
        "title" : "libarchive SVN trunk doesn't compile",
        "summary" : "libarchive SVN trunk doesn't compile",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2010-04-22T05:57:57.000Z",
        "published" : "2010-04-19T03:15:55.000Z",
        "closed" : "2010-04-22T05:57:57.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. make\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/usr/include/libxml2 -Wall\r\n-Werror -g -O2 -MT libarchive/archive_write_set_format_gnutar.lo -MD -MP\r\n-MF libarchive/.deps/archive_write_set_format_gnutar.Tpo -c\r\nlibarchive/archive_write_set_format_gnutar.c  -fPIC -DPIC -o\r\nlibarchive/.libs/archive_write_set_format_gnutar.o\r\ncc1: warnings being treated as errors\r\nlibarchive/archive_write_set_format_gnutar.c: In function\r\n‘archive_write_gnutar_header’:\r\nlibarchive/archive_write_set_format_gnutar.c:352:12: error: ‘ret2’ may be\r\nused uninitialized in this function\r\nlibarchive/archive_write_set_format_gnutar.c:231:6: error: ‘tartype’ may be\r\nused uninitialized in this function\r\nmake[1]: *** [libarchive/archive_write_set_format_gnutar.lo] Error 1\r\nmake[1]: Leaving directory `/home/dmcgee/projects/libarchive'\r\nmake: *** [all] Error 2\r\n\r\n<b>What version are you using?</b>\nSVN HEAD\r\n\r\n<b>On what operating system?</b>\nArch Linux, kernel 2.6.33\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.5.0\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI'm not sure what is supposed to be going on with ret2 here, otherwise I'd\r\ntry to prepare a patch that fixes this. The variable never gets assigned\r\nthe entire function.\r\n",
            "published" : "2010-04-19T03:15:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ferringb",
              "htmlLink" : "https://code.google.com/u/ferringb/"
            },
            "content" : "SVN head should compile, although I'd like someone to please review svn revno 2268- \r\nthat codepath is rather odd.",
            "published" : "2010-04-19T05:35:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rransom.8774",
              "htmlLink" : "https://code.google.com/u/106249933430002364785/"
            },
            "content" : "Which revision are you compiling?  The first error message (about ret2) should not \r\nappear in r2268.",
            "published" : "2010-04-19T06:38:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ferringb",
              "htmlLink" : "https://code.google.com/u/ferringb/"
            },
            "content" : "2267 fixes ret2, 2268 fixes the tartype complaint- that specific change I want review \r\non since the intent looks like it wants to set a warning and have that returned, but \r\nthe code didn't handle that properly (thus converting it into a flat out \r\nARCHIVE_FAIL).",
            "published" : "2010-04-19T07:04:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "I was originally trying to compile 2265; sorry for not including that. Things do\r\ncompile now at least but it looks like the correctness of the fix is still up in the air.",
            "published" : "2010-04-19T11:49:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jgastal%profusion.mobi@gtempaccount.com",
              "htmlLink" : "https://code.google.com/u/116878580799777452424/"
            },
            "content" : "I don't think setting a warning there is really apropriate, we were asked to write a header which \r\nwe can't write, so I think returning failure is the apropriate thing to do.\r\n\r\nJust my 2 cents.",
            "published" : "2010-04-19T13:09:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Brian's fix is exactly the same as the fix I had put together here.\r\n\r\nNote that ARCHIVE_FAILED indicates that this entry cannot be written.  It's distinct\r\nfrom ARCHIVE_FATAL, which indicates that the entire archive is now unusable. \r\nARCHIVE_FAILED was introduced exactly for this situation:  when it's not valid to\r\nwrite a certain kind of entry and the only possible remedy is to continue with the\r\nnext entry.",
            "published" : "2010-04-22T05:57:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 88,
        "title" : "Failed test on Solaris 9 w/Sun Studio 12",
        "summary" : "Failed test on Solaris 9 w/Sun Studio 12",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "itaxi1729",
          "htmlLink" : "https://code.google.com/u/111106543228686100171/"
        },
        "updated" : "2010-05-01T21:22:11.000Z",
        "published" : "2010-04-21T13:22:07.000Z",
        "closed" : "2010-05-01T21:22:11.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "itaxi1729",
              "htmlLink" : "https://code.google.com/u/111106543228686100171/"
            },
            "content" : "<b>What version are you using?</b>\n2.8.3\r\n\r\n<b>On what operating system?</b>\nSolaris 9 Sparc\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure with a lot of specific options, but that shouldn't matter.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nSun Studio 12\r\n\r\n<b>Please provide any additional information below.</b>\nFailing tests:\r\n  23: test_owner_parse (2 failures)\r\n\r\ncurrent9s% more test_owner_parse.log \r\ntest_owner_parse\r\n\r\ncpio/test/test_owner_parse.c:78: Assertion failed: int_in_list(gid, root_gids, \r\nsizeof(root_gids)/sizeof(root_gids[0]))\r\n   Description: 1\r\ncpio/test/test_owner_parse.c:84: Assertion failed: int_in_list(gid, root_gids, \r\nsizeof(root_gids)/sizeof(root_gids[0]))\r\n   Description: 1\r\n",
            "published" : "2010-04-21T13:22:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "If I'm reading the message properly, this is saying that user \"root\" on your system\r\nhas a primary GID of '1'?\r\n\r\nPlease try the attached patch and let me know.",
            "published" : "2010-04-22T06:01:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "5624321114766082702",
              "fileName" : "cpio_test_owner_parse_solaris.patch",
              "fileSize" : 522,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I went ahead and committed the patch to trunk as r2347.\r\nI would appreciate feedback on whether this addresses the problem.\r\n",
            "published" : "2010-05-01T21:22:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 89,
        "title" : "make manlint happy by fixing bsdtar.1:442",
        "summary" : "make manlint happy by fixing bsdtar.1:442",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "alexbestms",
          "htmlLink" : "https://code.google.com/u/117105066606905094291/"
        },
        "updated" : "2010-04-23T20:38:03.000Z",
        "published" : "2010-04-23T10:12:12.000Z",
        "closed" : "2010-04-23T20:38:03.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexbestms",
              "htmlLink" : "https://code.google.com/u/117105066606905094291/"
            },
            "content" : "`make manlint` complains about the following escape characters:\r\n\r\nbsdtar.1:442: warning: escape character ignored before `1'\r\nbsdtar.1:442: warning: escape character ignored before `9'\r\n\r\nare they even needed (\\)?",
            "published" : "2010-04-23T10:12:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Fixed in trunk with r2250 and merged to 2.8 with r2270.",
            "published" : "2010-04-23T20:38:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 90,
        "title" : "bsdtar  strange extract behavior, writes overlapping buffers",
        "summary" : "bsdtar  strange extract behavior, writes overlapping buffers",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "frank.zerangue",
          "htmlLink" : "https://code.google.com/u/114172465470314363043/"
        },
        "updated" : "2011-02-12T23:55:23.000Z",
        "published" : "2010-04-23T20:09:34.000Z",
        "closed" : "2011-02-12T23:55:23.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "frank.zerangue",
              "htmlLink" : "https://code.google.com/u/114172465470314363043/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n1. Build a tar archive of say /bin directory\r\n2. Run MacFuse loopback files system (with some trace in the write vfsop)\r\n3. Extract the tar -xf file into the loopback filesystem\r\n3. You will see many writes to the same file with overlapping offsets\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n&quot;tar -xf file.tar -C dir/&quot; \r\n-- expected tar to write one or more buffers to destination file in an appending fashion \r\n-- instead tar will write multiple buffers of data that overlap in file position offset\r\n\r\nThis is ok when extracting to a hard disk that supports write in place (a bit inefficient) but when \r\nextracting to a flash memory device, this results in multiple random writes the the flash medium.\r\n\r\n&quot;pax -rf file.pax&quot; behaves as expected\r\n\r\n<b>What version are you using?</b>\n2.6.2\r\n\r\n<b>On what operating system?</b>\nOS X 10.6.3\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\npre-packaged binary with OS X\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nXCODE gcc 4.2.1\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2010-04-23T20:09:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Can you actually tracec the tar binary and check that it is in fact doing that? This\r\nsounds more like a bug in the kernel or the FUSE filesystem. The code in libarchive\r\ncertainly only does linear writes. It will seek only to create sparse files.",
            "published" : "2010-04-23T20:29:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "As Joerg says, except when restoring sparse files, bsdtar does only perform appending\r\nwrites to the output file.\r\n\r\nHowever, those writes are not always uniformly sized.  In particular, bsdtar reads\r\nthe input archive in fixed-size blocks and writes to the output files directly from\r\nthe data in the read buffers.  As a result, the first write to a file can be oddly-sized.\r\n\r\nFor example, if tar is reading 10k blocks (the default in bsdtar 2.6) and the archive\r\ncontains a 4.5k file followed by a 100k file, then you will see the following I/O\r\noperations:\r\n\r\n read 10k\r\n    open first file\r\n    write 4.5k to first file\r\n    open second file\r\n    write 4.5k to second file [a]\r\n read 10k\r\n    write 10k to second file [b]\r\n read 10k\r\n    write 10k to second file\r\n ... etc ...\r\n\r\n(The first block only has 9k of data because it also contains two file headers of 512\r\nbytes each.)\r\n\r\nIf the filesystem block size is 8k, then write [a] above would only partially fill a\r\nfilesystem block.  That same block would be fully filled by write [b] above. \r\nDepending on how the filesystem handles write caching, that block might indeed get\r\nwritten twice, once following write request [a] and a second time following write\r\nrequest [b].\r\n\r\nQuestion: Would this explain the behavior you're seeing?\r\n\r\nI've recently made some changes to the read code so that bsdtar will default to much\r\nlarger blocks (64k by default) when reading archives from disk.  Larger read blocks\r\nshould reduce, but not eliminate, this kind of effect.\r\n\r\nQuestion: If you use \"-b 128\" (which sets the read block size to 64k), do you see\r\nless of this?\r\n\r\nI'll give some thought to ways we might eliminate this effect entirely.  The most\r\nobvious approach is to reblock data before writing it out, but that potentially\r\nintroduces a lot of in-memory data copying, which is troublesome.  There might also\r\nbe ways to push block sizing information from the write side back to the read side\r\n(if the second read above were 3.5k and the remaining reads were 8k then all writes\r\nafter the first two would be properly aligned).\r\n\r\nA simpler solution might be to use mmap() to read the input archive.  bsdtar uses the\r\ncode in archive_read_open_filename.c.  In the current trunk code, this now has some\r\nconcept of an \"I/O strategy\" that could be used to select mmap() when feasible.  This\r\nessentially makes the entire input file look like a single read block to libarchive,\r\nwhich means it can try to write every output file with a single write operation. \r\n(Compressed archives complicate this, though.)\r\n",
            "published" : "2010-04-25T05:48:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This was reported almost a year ago, but there hasn't been any verification that there is a real bug here.\r\n\r\nI'm going to close it for now; if there's more information, we can reopen it.\r\n",
            "published" : "2011-02-12T23:55:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 91,
        "title" : "bsdtar produces an unextractable tar file when run with -T acting on hardlinks",
        "summary" : "bsdtar produces an unextractable tar file when run with -T acting on hardlinks",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "chris@arachsys.com",
          "htmlLink" : "https://code.google.com/u/108602944908021266694/"
        },
        "updated" : "2010-11-10T07:15:24.000Z",
        "published" : "2010-05-08T15:24:24.000Z",
        "closed" : "2010-11-10T07:15:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "chris@arachsys.com",
              "htmlLink" : "https://code.google.com/u/108602944908021266694/"
            },
            "content" : "To reproduce:\r\n\r\n  mkdir a b\r\n  echo &gt; a/one\r\n  ln a/one b/two\r\n  find a b -print | tar -c -f test.tar -T -\r\n\r\nWhen trying to extract test.tar,\r\n\r\n  $ tar xvf ../test.tar \r\n  x a/\r\n  x a/one\r\n  x a/one: Can't create 'a/one'\r\n  x b/\r\n  x b/two\r\n  x b/two: Can't create 'b/two'\r\n  tar: Error exit delayed from previous errors.\r\n\r\nHowever, a tar file created with tar -c -f test.tar a b (without the\r\nindirection through -T) works fine. Adding -depth to the find invocation\r\ndoesn't help.\r\n\r\nI'm running libarchive 2.8.3 on linux 2.6.32.7 with glibc 2.3.6, built with\r\na straightforward ./configure --prefix= --enable-bsdtar=dynamic and a\r\n(slightly ancient) gcc 3.4.3.",
            "published" : "2010-05-08T15:24:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It may be possible to make bsdtar a little smarter about this, but the primary\r\nproblem here is that you didn't specify -n.  So bsdtar was asked to backup the 'a'\r\ndirectory (along with all contents) and was then asked to backup 'a/one' a second\r\ntime.  Seeing the same file did confuse the hardlink detection logic, which is why\r\nb/two was stored as a regular file.\r\n\r\nI'll double-check the man page to try to better explain that -T often requires -n.\r\n\r\nThis isn't specific to hardlinks, if you try this with a regular directory tree that\r\nhas no nardlinks, you'll see files get added multiple times, which is almost\r\ncertainly not what you want.\r\n",
            "published" : "2010-05-08T16:17:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "chris@arachsys.com",
              "htmlLink" : "https://code.google.com/u/108602944908021266694/"
            },
            "content" : "Ah, sorry, you're quite right. I had misunderstood the behaviour of -T when trying it\r\nout for the first time.",
            "published" : "2010-05-08T18:03:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Since I haven't come up with any way to improve this, I'm going to close this report.\r\n\r\nThank you, and please let us know if you find anything else.\r\n",
            "published" : "2010-11-10T07:15:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 92,
        "title" : "Improve robustness slightly in archive_write(3) example",
        "summary" : "Improve robustness slightly in archive_write(3) example",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "yanegomi",
          "htmlLink" : "https://code.google.com/u/109487435073463797222/"
        },
        "updated" : "2010-05-09T00:37:49.000Z",
        "published" : "2010-05-08T22:10:34.000Z",
        "closed" : "2010-05-09T00:37:49.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "yanegomi",
              "htmlLink" : "https://code.google.com/u/109487435073463797222/"
            },
            "content" : "The example in archive_write.3 leaked a file descriptor and didn't check\r\nfor open to actually succeed before attempting to write the file.\r\n\r\nThere are some additional changes that could be made to make the example\r\nmore robust, but that might require some rework because I'm not sure\r\nwhether or not fstat(2) is available on all OS platforms.",
            "published" : "2010-05-08T22:10:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1344298155371507995",
              "fileName" : "libarchive-more-robust-archive-write-patch.diff",
              "fileSize" : 815,
              "mimetype" : "text/plain; charset=us-ascii",
              "isDeleted" : true
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "yanegomi",
              "htmlLink" : "https://code.google.com/u/109487435073463797222/"
            },
            "content" : "Sorry. The previous file's indentation was incorrect on the closing brace.",
            "published" : "2010-05-08T22:12:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "9011083455948938055",
              "fileName" : "libarchive-more-robust-archive-write-patch.diff",
              "fileSize" : 822,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Unfortunately, fstat() is not always available.\r\n\r\nI've committed your change as r2374.  Thanks for your help!\r\n\r\n(P.S. If you're looking for example code, you might also look at the \"Examples\" page\r\nin the Wiki.  If there are things that should be there, please let me know!)\r\n",
            "published" : "2010-05-09T00:37:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 93,
        "title" : "failing test_option_gid_gname",
        "summary" : "failing test_option_gid_gname",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "OpSys-Linux" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ferringb",
          "htmlLink" : "https://code.google.com/u/ferringb/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2010-12-11T18:57:42.000Z",
        "published" : "2010-05-11T09:39:55.000Z",
        "closed" : "2010-12-11T18:57:42.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ferringb",
              "htmlLink" : "https://code.google.com/u/ferringb/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. run test suite under linux\r\n\r\nbits from the testrunner follow:\r\n\r\ntest_option_gid_gname\r\n\r\ntar/test/test_option_gid_gname.c:67: data + 297 != &quot;\\0&quot;\r\n      size 1 = 1\r\n      Dump of data + 297\r\n0000_63_                                             c\r\n      Dump of &quot;\\0&quot;\r\n0000_00_                                             .\r\n\r\n",
            "published" : "2010-05-11T09:39:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "levertond",
              "htmlLink" : "https://code.google.com/u/109422174252835420621/"
            },
            "content" : "The test assumes that gid 17 doesn't exist on the system (it specifies --gid but not --gname, and \"if --gname is not also specified, the group name will be set to match the group id\" according to the manpage).  On at least Gentoo systems (it might depend on how old, but this applies to mine and presumably ferringb's), gid 17 is the \"console\" group.  Attached patch makes it pass, but may defeat the intention of the test, I'm not sure what that is exactly.",
            "published" : "2010-07-31T18:48:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "6972825691463493709",
              "fileName" : "libarchive-gid-gname-test.patch",
              "fileSize" : 619,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed your patch to libarchive/trunk as r2821",
            "published" : "2010-12-11T18:57:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 94,
        "title" : "bsdtar fails with \"Seek error\" when extracting sparse file to stdout",
        "summary" : "bsdtar fails with \"Seek error\" when extracting sparse file to stdout",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "lars.gustaebel",
          "htmlLink" : "https://code.google.com/u/106685501498624515455/"
        },
        "updated" : "2010-11-10T07:06:10.000Z",
        "published" : "2010-05-14T15:15:20.000Z",
        "closed" : "2010-11-10T07:06:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lars.gustaebel",
              "htmlLink" : "https://code.google.com/u/106685501498624515455/"
            },
            "content" : "I'm using bsdtar on Linux 2.6.32. When I try to extract a sparse archive\r\nmember to stdout, it fails with a &quot;Seek error&quot; message. Apparently, the\r\nlseek() call in libarchive/archive_read_data_into_fd.c fails with an ESPIPE.\r\n\r\nThe following example extracts one of the tar archives from the test suite,\r\nreproducing the error:\r\n\r\n$ ./bsdtar -x -f ../test_read_format_gtar_sparse_1_17_posix10.tar -O sparse\r\n| md5sum\r\nsparse: Seek error\r\nbsdtar: Error exit delayed from previous errors.\r\nd41d8cd98f00b204e9800998ecf8427e  -\r\n",
            "published" : "2010-05-14T15:15:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Ouch.  That's definitely a bug.  I'll take a look soon.\r\n\r\n\r\n",
            "published" : "2010-05-15T18:14:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "accepted"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is now fixed in r2783.",
            "published" : "2010-11-10T07:06:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 95,
        "title" : "infinite loop in large files over 4GB (raw mode)",
        "summary" : "infinite loop in large files over 4GB (raw mode)",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dardoguidobono",
          "htmlLink" : "https://code.google.com/u/105073204392664842201/"
        },
        "updated" : "2010-07-15T06:42:13.000Z",
        "published" : "2010-05-16T23:11:00.000Z",
        "closed" : "2010-07-15T06:42:13.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 13,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "- Download libarchive from svn \r\n- compile dll  with cmake and (visual c 2008 express or mingw) (i tested \r\nboth)\r\n- compile this sample code (reads from input file and writes to output \r\nfile)\r\n- run test.exe &lt;inputfile&gt; &lt;outputfile&gt; \r\n\r\n(this works ok in linux and macosx and freebsd)\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nin other os this works ok for large files , in windows works ok for files \r\nunder 4 GB, for larger files  infinite loop....\r\n\r\ntest file generated in linux using: \r\ndd if=/dev/urandom of=/tmp/testfile.bin bs=64k count=80k\r\n\r\n<b>What version are you using?</b>\nlibachive svn windows (compiled using mingw or vc2008 express)\r\n\r\n\r\n<b>On what operating system?</b>\nwindows xp\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake -G &quot;MSYS Makefiles&quot; . \r\nmake\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nMingw , vc2008 express (Both tested)\r\n\r\n\r\n",
            "published" : "2010-05-16T23:11:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-8095458193344507883",
              "fileName" : "test.c",
              "fileSize" : 1063,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "What happens if you actually check the return value of fwrite?",
            "published" : "2010-05-16T23:55:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "I've added a check to verify fwrite actually writes the amount of data returned by \r\nlibarchive and there's no issue being reported by fwrite\r\nit will continue to write in an endless loop\r\n\r\nAttached the new code\r\n",
            "published" : "2010-05-17T00:20:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1268058983153083722",
              "fileName" : "test.c",
              "fileSize" : 1263,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "This is the result of my investigation.\r\n\r\nOn Windows platform, off_t is defined as long. It causes this issue.\r\nread_data_offset and read_data_output_offset are defined as off_t at\r\nstruct archive_read (in archive_read_private.h) and we are comparing\r\nthose variables at line 619-628 in archive_read_data() function:\r\n\r\n\t\t/* Compute the amount of zero padding needed. */\r\n\t\tif (a->read_data_output_offset + (off_t)s <\r\n\t\t    a->read_data_offset) {\r\n\t\t\tlen = s;\r\n\t\t} else if (a->read_data_output_offset <\r\n\t\t    a->read_data_offset) {\r\n\t\t\tlen = a->read_data_offset -\r\n\t\t\t    a->read_data_output_offset;\r\n\t\t} else\r\n\t\t\tlen = 0;\r\n\r\n\r\nThe situation of running test.exe:\r\ns is a requested size, 16384(0x4000).\r\nWhen the value of both read_data_output_offset and read_data_offset are 0x7fffc000, \r\nwe expects it will perform third case, but actually performs first case\r\nsince the value of 'a->read_data_output_offset + (off_t)s' is treated as \r\nnegative value. After that, each time archive_read_data() fill buffer with zero and return. \r\nI tested just 2G bytes file and also the infinity loop happened.\r\n",
            "published" : "2010-05-17T09:15:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "is there any workaround for this..? i really need this feature\r\n\r\ni've tried increasing ARCHIVE_VERSION_NUMBER to 3000000 .. infinite loop\r\n\r\nthen added export CFLAGS=\"-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\" to mingw\r\ncompiling with \r\n\r\nexport CFLAGS=\"-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\"\r\nautoreconf -fi\r\n./configure --prefix=/mingw\r\nmake\r\n\r\nstill infinite loop\r\n\r\nis there any workaround for this\r\n\r\nI can help testing.\r\n\r\nThanks.\r\n\r\n",
            "published" : "2010-05-18T05:39:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Michihiro:  It sounds like we should change the variables you mention to int64_t. \r\nDoes that fix this problem?\r\n",
            "published" : "2010-05-18T14:19:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "archive_read_data() calls archive_read_data_block() and the fourth parameter,\r\nwhich is named 'offset', of archive_read_data_block() uses off_t for its type.\r\na->read_data_offset is used to the fourth parameter, so we also need to change\r\nthe type of the parameter to int64_t.\r\nif we changed the type to int64_t, it would break 2.x API.\r\n",
            "published" : "2010-05-18T14:48:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "seem that my mingw is not using the flags -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64.\r\ni changed the definition sys/types.h  (off_t from long to long long) and its working now.\r\n",
            "published" : "2010-05-18T14:59:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I made a SAMPLE patch for this problem to discuss.\r\nThe patch needs more effort, do not use it.\r\n\r\nI made archive_read_data_block64() function, its fourth parameter type is int64_t\r\nand archive_read_data() in the patch uses it.\r\n",
            "published" : "2010-05-18T17:19:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-5940366691898158437",
              "fileName" : "issue95.patch",
              "fileSize" : 18052,
              "mimetype" : "text/x-patch"
            } ]
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "libarchive/trunk is ready to switch to 3.0, so I think we should just do that and get\r\nrid of off_t there.\r\n\r\nYour patch looks like it might work well for releases/2.8 branch.\r\n",
            "published" : "2010-05-19T02:15:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "If you have a chance to try libarchive/trunk now, I think we've updated all of the old uses of off_t and this problem should be completely fixed there.\r\n",
            "published" : "2010-06-22T16:52:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "seems to be working :D\r\n\r\nthanks",
            "published" : "2010-07-15T01:18:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"seems to be working\"\r\n\r\nIn that case, I'll close this.  Please let us know if you find anything else.\r\n",
            "published" : "2010-07-15T06:42:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 96,
        "title" : "Support for folders",
        "summary" : "Support for folders",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "pelle%morth.org@gtempaccount.com",
          "htmlLink" : "https://code.google.com/u/109583489966404770694/"
        },
        "updated" : "2010-06-02T14:50:02.000Z",
        "published" : "2010-06-02T14:50:02.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pelle%morth.org@gtempaccount.com",
              "htmlLink" : "https://code.google.com/u/109583489966404770694/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. bsdtar tfv .\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI already feed libarchive the file I want to examine without checking the type. It'd be nice if I could \r\nfeed it folders as well. Not sure bsdtar will want to support it but I use libarchive directly.",
            "published" : "2010-06-02T14:50:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "I still have no idea what your problem is and what should behave different. Please\r\nclarify.",
            "published" : "2010-06-02T18:49:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "We've discussed extending the existing archive_read_disk module to provide directory\r\ntraversals with an interface similar to archive_read.  It would then be up to your\r\ncode to determine whether you were looking at a directory or a file and initialize\r\nthe library accordingly.\r\n",
            "published" : "2010-06-03T06:12:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 97,
        "title" : "Option --newer-ctime-than does not work as expected",
        "summary" : "Option --newer-ctime-than does not work as expected",
        "stars" : 2,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "luna33x",
          "htmlLink" : "https://code.google.com/u/luna33x@gmail.com/"
        },
        "updated" : "2011-06-26T16:54:43.000Z",
        "published" : "2010-06-14T19:52:50.000Z",
        "closed" : "2011-06-26T16:54:43.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "luna33x",
              "htmlLink" : "https://code.google.com/u/luna33x@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\ndate &gt;TIMESTAMP\r\nmkdir x\r\necho hallo &gt;x/hallo.txt\r\ntar --newer-ctime-than TIMESTAMP -cf x.tar x\r\n\r\n# x.tar is empty...\r\ntar tf x.tar\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nx.tar should contain hello.txt but is empty\r\n\r\n\r\n<b>What version are you using?</b>\n2.7.0 on FreeBSD 8\r\n\r\n<b>On what operating system?</b>\nFreeBSD 8\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nProblem lies at line 187 in read.c:  Directories are skipped even if they contain newer files.\r\n\r\nRegards,\r\nUdo\r\n\r\n",
            "published" : "2010-06-14T19:52:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mjevans1983",
              "htmlLink" : "https://code.google.com/u/101032971945683876524/"
            },
            "content" : "I just noticed this my self in relation to 'differential' backups for my day-job, here's what I wrote up before finding this issue.\r\n\r\nDebian Sid (6.0.1) Linux 2.6.32-5-amd64, bsdtar 2.8.4 - libarchive 2.8.4\r\n\r\nThis should probably have a different type and priority than 'defect medium'.\r\n\r\n--\r\n\r\nThe behavior of the filesystems I've used seems to follow this general convention.  A directory is a listing of files, it's creation, modification and sometimes access are updated for changes to the pointers in that list, not the contents of the objects those pointers link to.\r\n\r\nThis is a more exacting and repeatable test case:\r\n\r\nmkdir -p f/o\r\ntouch --date='2011-01-01' f\r\ntouch --date='2011-02-01' f/o\r\ntouch --date='2011-02-20' f/o/o\r\n ls -lRt | grep rw\r\ndrwxr-x---+ 3 - - 4096 Jan  1 00:00 f\r\ndrwxr-x---+ 2 - - 4096 May 25 09:48 o\r\n-rw-rw----+ 1 - -    0 Feb 20 00:00 o\r\n\r\nThis isn't a problem for full backups.\r\nHowever when invoking with one of the --newer tests it becomes an issue.\r\n\r\nThe expected behavior of `bsdtar -c -f test.tar  -v --newer-mtime '2011-02-01' f`\r\nis\r\n\r\n$ bsdtar -c -f test.tar  -v --newer-mtime '2011-02-05' f\r\na f/o\r\na f/o/o\r\n$\r\n\r\nHowever the result is:\r\n\r\n$ bsdtar -c -f test.tar  -v --newer-mtime '2011-02-05' f\r\n$\r\n\r\n\r\nI /suspect/ without even looking at the code that bsdtar is testing each node as it walks the tree, and skipping a node and all it's children if the prescribed value isn't newer.\r\n\r\nThe bug is therefore some combination of behavioral assumption (All parents updated on child event) or omission (failure to search all potential children) or not following the planned procedure.\r\n\r\n",
            "published" : "2011-05-25T17:22:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mjevans1983",
              "htmlLink" : "https://code.google.com/u/101032971945683876524/"
            },
            "content" : "Re-reading the manual and performing a few experiments adding --null -n and the test produces the desired results.  However this still requires an invocation exception.  (thankfully I can begin using it today without additional validation).\r\n\r\nfind ./f -print0 | bsdtar -c -n -f - -v --newer-mtime '2011-02-01' --null -T- | xz -0 > test.tar.xz",
            "published" : "2011-05-25T17:39:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mjevans1983",
              "htmlLink" : "https://code.google.com/u/101032971945683876524/"
            },
            "content" : "I was authorized to submit the patch I made yesterday, I've tried to keep it to the smallest possible change in both functionality and code (in that order).\r\n\r\nSigned then raw copies (tab indentation):\r\nhttp://dpaste.com/546855/plain/\r\nhttp://dpaste.com/546856/plain/\r\n\r\n\r\nDescend directories even if not adding the parent directory due to timestamp.\r\n\r\nI am authorized to contribute this upstream,\r\n please contact me at mjevans1983@gmail.com if there\r\n are any questions related to this contribution.\r\n\r\ndiff --git a/tar/write.c b/tar/write.c\r\nindex f13bc78..b7b86be 100644\r\n--- a/tar/write.c\r\n+++ b/tar/write.c\r\n@@ -783,8 +783,24 @@ write_hierarchy(struct bsdtar *bsdtar, struct archive *a, const char *path)\r\n \t\t * In -u mode, check that the file is newer than what's\r\n \t\t * already in the archive; in all modes, obey --newerXXX flags.\r\n \t\t */\r\n-\t\tif (!new_enough(bsdtar, name, st))\r\n+\t\tif (!new_enough(bsdtar, name, st)) {\r\n+\t\t\t/* Copy from beneath; must check children also. */\r\n+\t\t\t/*\r\n+\t\t\t* If the user vetoes this file/directory, skip it.\r\n+\t\t\t* We want this to be fairly late; if some other\r\n+\t\t\t* check would veto this file, we shouldn't bother\r\n+\t\t\t* the user with it.\r\n+\t\t\t*/\r\n+\t\t\tif (bsdtar->option_interactive &&\r\n+\t\t\t    !yes(\"add '%s'\", name))\r\n+\t\t\t\tcontinue;\r\n+\r\n+\t\t\t/* Note: if user vetoes, we won't descend. */\r\n+\t\t\tif (descend && !bsdtar->option_no_subdirs)\r\n+\t\t\t\ttree_descend(tree);\r\n+\r\n \t\t\tcontinue;\r\n+\t\t}\r\n \r\n \t\tarchive_entry_free(entry);\r\n \t\tentry = archive_entry_new();\r\n",
            "published" : "2011-05-26T15:59:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "See Issue 159 for more discussion.\r\n",
            "published" : "2011-06-26T16:54:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 98,
        "title" : "Creating Xcode project fails",
        "summary" : "Creating Xcode project fails",
        "stars" : 1,
        "starred" : false,
        "status" : "WorksForMe",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "philipp.mayerhofer",
          "htmlLink" : "https://code.google.com/u/philipp.mayerhofer/"
        },
        "updated" : "2010-06-22T02:12:37.000Z",
        "published" : "2010-06-21T17:06:35.000Z",
        "closed" : "2010-06-22T02:12:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "philipp.mayerhofer",
              "htmlLink" : "https://code.google.com/u/philipp.mayerhofer/"
            },
            "content" : "I'm trying to run the command from your build instructions:\r\n\r\ncmake -G Xcode libarchive\r\n\r\nBut I get the error messages in the attached log file.\r\n\r\nThis happens both on the latest release (2.8.3) and when I do an SVN checkout.\r\n\r\nAs instructed I freshly installed &quot;cmake&quot; from MacPorts.\r\n\r\nI'm running Mac OS X 10.6.3.\r\n",
            "published" : "2010-06-21T17:06:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1913138348752243541",
              "fileName" : "libarchive-log.txt",
              "fileSize" : 1601,
              "mimetype" : "text/plain, English; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The last argument to the 'cmake' command should be the root directory of the project.  \r\n\r\nTry this:  cmake -G Xcode .\r\n",
            "published" : "2010-06-22T02:12:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WorksForMe"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "philipp%creativebe.com@gtempaccount.com",
              "htmlLink" : "https://code.google.com/u/106928999299759986508/"
            },
            "content" : "Thank you for the quick reply, that worked.\r\n\r\nI should have read the build instructions more closely. Having said that, to avoid this confusion in the future may I recommend you change the section in the build instructions as follows:\r\n\r\n  cd libarchive && cmake -G Xcode .\r\n\r\nWhat threw me off track in the current instructions was that you assume the source code lives in a \"libarchive\" folder, but this folder in turn has a subfolder also called \"libarchive\"\r\n\r\nThanks again for your time.",
            "published" : "2010-06-22T10:47:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 99,
        "title" : "how to extract binary zip format file",
        "summary" : "how to extract binary zip format file",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Other", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ljysyn",
          "htmlLink" : "https://code.google.com/u/113401854160238837746/"
        },
        "updated" : "2010-06-23T18:15:24.000Z",
        "published" : "2010-06-22T08:25:00.000Z",
        "closed" : "2010-06-23T18:15:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ljysyn",
              "htmlLink" : "https://code.google.com/u/113401854160238837746/"
            },
            "content" : "I have a zip file, including .png file and .exe file.\r\nHow can extract it with libarchive?\r\nI can use libarchive to extract zip file including .txt,\r\nbut I cannot extract such as binary files.\r\n\r\n\r\n\r\n\r\n",
            "published" : "2010-06-22T08:25:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "libarchive itself doesn't (currently) expose binary vs text files.\r\nWhat exactly are you doing?",
            "published" : "2010-06-22T14:47:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "People use libarchive to extract binary files from Zip archives quite regularly.\r\nHow are you doing the extraction?\r\n\r\nIf you are on Windows, you'll need to specify BINARY mode when writing the file to disk, of course.\r\n\r\nPlease tell us the operating system you're using, what version of libarchive you're using, and how you're using libarchive (code samples help).\r\n",
            "published" : "2010-06-22T16:50:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting",
              "labels" : [ "-Type-Defect", "Type-Other" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ljysyn",
              "htmlLink" : "https://code.google.com/u/113401854160238837746/"
            },
            "content" : "I got the reason. The zip format need zlib surport, but I configure with --without-zlib.\r\nThanks all.",
            "published" : "2010-06-23T02:18:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Glad you figured it out.  Technically, you can extract Zip files without zlib, but only uncompressed zip files, which are not very common.\r\n\r\nIf we get many more questions about this, we'll consider making the zip reader simply fail if zlib is unavailable.  For now, I'll just close this bug.\r\n",
            "published" : "2010-06-23T18:15:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 100,
        "title" : "Failure to parse ISO9660 content on files generated with WinISO.",
        "summary" : "Failure to parse ISO9660 content on files generated with WinISO.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "updated" : "2011-09-04T16:43:30.000Z",
        "published" : "2010-06-29T14:26:45.000Z",
        "closed" : "2011-09-04T16:43:30.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. wget -O /tmp/winiso_testcase.iso 'http://bugs.debian.org/cgi-bin/bugreport.cgi?msg=5;filename=winiso_testcase.iso;att=1;bug=587513'\r\n2. bsdtar -tf /tmp/winiso_testcase.iso\r\n3. mount -o loop /tmp/winiso_testcase.iso /mnt &amp;&amp; ls /mnt &amp;&amp; umount /mnt\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nbsdtar should list the same files as the linux kernels iso9660 filesystem support (test.txt). Currently bsdtar fails to find any contents.\r\n\r\nWhat version are you using?\r\nlibarchive 2.8.3\r\n\r\nOn what operating system?\r\nDebian GNU/Linux\r\n\r\nHow did you build?  (cmake, configure, or pre-packaged binary)\r\nconfigure\r\n\r\nWhat compiler or development environment (please include version)?\r\ngcc\r\n\r\nPlease provide any additional information below.\r\nDisabling the joliet extension code with the option below did not help:\r\nbsdtar --options 'iso9660:!joliet' -tf /tmp/winiso_testcase.iso\r\n\r\nThis issue was originally filed in the Debian bug tracking system by Mike Qin who thankfully provided the testcase:\r\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=587513\r\n\r\n\r\n",
            "published" : "2010-06-29T14:26:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I did some quick initial analysis of this:\r\n * The ISO9660 bidder doesn't recognize this as an ISO image at all.  Apparently, WinISO encodes the PVD a little differently than we expect.\r\n * So it's getting read as a valid empty tar archive (the first 1024 bytes of an ISO image happen to also be a valid end-of-archive mark for tar archives)\r\n\r\nIn the debugger, I forced the bid to select ISO and then the ISO reader complained about an invalid directory record, so there's something else going on here as well.\r\n",
            "published" : "2010-06-29T18:31:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "WinISO apparently produces ISO images that don't follow the spec, which is why libarchive doesn't recognize them as ISO images:\r\n\r\nECMA 119, section 6.9.3: \"One or more Path Table Groups shall be recorded on a volume.\"\r\nECMA 119, section 6.9.2: \"A Path Table Group shall comprise ... one or two identical Type M Path Tables.\"\r\n\r\nBut this image has a zero value for the \"Type M Path Table Offset\".  (Many operating systems ignore the Path Tables entirely, so it's not surprising that WinISO has been able to get away with this.)\r\n\r\nLibarchive doesn't use the path tables either, but it does check this value as part of the auto-detect process.  I've just committed r2516 to permit a zero here.  With this change, bsdtar seems to be able to read this test image correctly.\r\n\r\nTODO: Should take this sample archive and build a test case around it.\r\n",
            "published" : "2010-06-29T19:47:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "Thanks for the quick fix. I've emailed WinISO support and provided them with a link to this issue in case they are interested in fixing it. Workaround in libarchive still needed ofcourse, to be able to handle all already produced invalid isos.",
            "published" : "2010-07-01T07:08:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm going to mark this as \"Fixed\".",
            "published" : "2011-09-04T16:43:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 101,
        "title" : "Problems in test_write_format_iso9660_filename ",
        "summary" : "Problems in test_write_format_iso9660_filename ",
        "stars" : 1,
        "starred" : false,
        "status" : "Accepted",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "cc" : [ {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        }, {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        } ],
        "updated" : "2011-12-31T05:31:12.000Z",
        "published" : "2010-07-04T07:12:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "It seems to me that the added files and the extracted files from the created iso file in test_write_format_iso9660_filename does not match, or atleast the output has many more files then was actually added.\r\n\r\nI guess there's a problem either in the iso9660 joliet extension WRITE or READ support.\r\n\r\n<b>What steps will reproduce the problem?</b>\n1. Edit libarchive/test/test_write_format_iso9660_filename.c and add debug printout of the filenames added to the iso in the &quot;add_entry&quot; helper function then add debug printout of extracted/parsed files last in the &quot;verify_file&quot; helper function.\r\n2. run test to capture added and extracted/parsed files debug output.\r\n3. sort the output of each into a file and diff these files.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI'd expect the diff to say there are no changes. Instead there where alot of extra files extracted/parsed.\r\n\r\n\r\n<b>Please use labels and text to provide additional information.</b>\n\r\nThe diff is attached for your convenience.\r\n\r\nThis problem was found by enabling &quot;trailing dot stripping&quot; in the joliet extension read support iso9660 code. This made duplicates appear in the test. With closer investigation the problem doesn't seem to be actual duplicates but what was described above. An exact check of added/found files would probably be better in the test then just a check for duplicate files.\r\n",
            "published" : "2010-07-04T07:12:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-6196403410717069639",
              "fileName" : "la-added-found.diff",
              "fileSize" : 60628,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "for more info / previous discussion see: r2514, r2515, r2520, r2521",
            "published" : "2010-07-04T07:17:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I think ISO writer shouldn't allow trailing dot characters if ISO reader trims trailing a dot character.\r\n\r\n--- libarchive/archive_write_set_format_iso9660.c       (revision 2526)\r\n+++ libarchive/archive_write_set_format_iso9660.c       (working copy)\r\n@@ -5951,6 +5951,14 @@\r\n                if ((int)l > ffmax)\r\n                        l = ffmax;\r\n                np->identifier = (char *)p;\r\n+               /* Do not allow trailing dot(.) characters.\r\n+                * For example, 'foo.' or 'foo...' */\r\n+               for (lt = l - 2; lt >= 0; lt -= 2) {\r\n+                       if (p[lt] == 0 && p[lt+1] == 0x2E)/* '.' */\r\n+                               archive_be16enc(&p[lt], 0x005F); /* '_' */\r\n+                       else\r\n+                               break;\r\n+               }\r\n                lt = l;\r\n                dot = p + l;\r\n                weight = 0;\r\n",
            "published" : "2010-07-04T18:21:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The writer should not change filenames any more than is necessary.\r\n",
            "published" : "2010-07-04T19:20:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "A new patch:\r\n\r\n--- libarchive/archive_write_set_format_iso9660.c       (revision 2526)\r\n+++ libarchive/archive_write_set_format_iso9660.c       (working copy)\r\n@@ -5951,6 +5951,11 @@\r\n                if ((int)l > ffmax)\r\n                        l = ffmax;\r\n                np->identifier = (char *)p;\r\n+               /* If the last character of a filename is '.', Windows\r\n+                * standard tools(such as cmd.exe, explorer.exe or notepad.exe)\r\n+                * cannot access the file. */\r\n+               if (p[l-2] == 0 && p[l-1] == 0x2E) /* '.' */\r\n+                       archive_be16enc(&p[l-2], 0x005F); /* '_' */\r\n                lt = l;\r\n                dot = p + l;\r\n                weight = 0;\r\n\r\nI made some files through cygwin and checked whether\r\nthose can be accessed by Windows tools or not.\r\n\r\nfilename cmd.exe explorer.exe notepad.exe\r\n f         o          o            o\r\n f.        x          x            x\r\n f..       x          x            x\r\n f._       o          o            o\r\n f.._      o          o            o\r\n\r\n  o: OK.\r\n  x: NG, access 'f' file.\r\n",
            "published" : "2010-07-05T19:20:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "I think the patches posted are quite off-topic. It might be nice to not write trailing dots in filenames, but assuming all other iso readers strip trailing dots and we can enable the code to do so as well it's not a problem.\r\n\r\nThe real problem here is why, when adding foo to the iso, we read back foo, foo000, foo001, ..., foo00A, ...\r\n\r\nWhere does all these extra files come from?",
            "published" : "2010-07-08T09:10:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "There are too many filenames in la-added-found.diff and including ISO9660 8.3/rockridge filenames.\r\nIt seems a process of making la-found-sorted.txt was wrong.\r\n\r\nI made la-added-found-sorted.diff with a patch below here:\r\nIndex: libarchive/test/test_write_format_iso9660_filename.c\r\n===================================================================\r\n--- libarchive/test/test_write_format_iso9660_filename.c\t(revision 2527)\r\n+++ libarchive/test/test_write_format_iso9660_filename.c\t(working copy)\r\n@@ -24,6 +24,7 @@\r\n  */\r\n #include \"test.h\"\r\n \r\n+static FILE *fp = NULL;\r\n /*\r\n  * Check that an ISO 9660 image is correctly created.\r\n  */\r\n@@ -44,6 +45,8 @@\r\n \tarchive_entry_set_size(ae, 0);\r\n \tassertEqualIntA(a, ARCHIVE_OK, archive_write_header(a, ae));\r\n \tarchive_entry_free(ae);\r\n+\tif (fp)\r\n+\t\tfprintf(fp, \"%s\\n\", fname);\r\n }\r\n \r\n struct fns {\r\n@@ -135,6 +138,8 @@\r\n \t}\r\n \t/* Save the filename which is appeared to use above next time. */\r\n \tfns->names[fns->cnt++] = strdup(archive_entry_pathname(ae));\r\n+\tif (fp)\r\n+\t\tfprintf(fp, \"%s\\n\", archive_entry_pathname(ae));\r\n }\r\n \r\n static void\r\n@@ -315,7 +320,10 @@\r\n \t/*\r\n \t * Create ISO image with no option.\r\n \t */\r\n+\tfp = fopen(\"/tmp/la-added.txt\", \"w\");\r\n \tfcnt = create_iso_image(buff, buffsize, &used, NULL);\r\n+\tfclose(fp);\r\n+\tfp = NULL;\r\n \r\n \tfns.names = (char **)malloc(sizeof(char *) * fcnt);\r\n \tassert(fns.names != NULL);\r\n@@ -331,7 +339,10 @@\r\n \tfns.longest_len = 0;\r\n \tfns.maxlen = fns.maxflen = fns.maxelen = 64;\r\n \tfns.opt = ALLOW_LDOT;\r\n+\tfp = fopen(\"/tmp/la-found.txt\", \"w\");\r\n \tverify(buff, used, JOLIET, &fns);\r\n+\tfclose(fp);\r\n+\tfp = NULL;\r\n \r\n \t/* Verify ISO9660 filenames. */\r\n \tfns.longest_len = 0;\r\n\r\n\r\n",
            "published" : "2010-07-08T13:13:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1711796180794461865",
              "fileName" : "la-added-found.diff",
              "fileSize" : 34462,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Has this issue been resolved in libarchive/trunk?\r\n\r\nIs there any reason to hold up the libarchive 3.0 release for it?\r\n",
            "published" : "2011-11-26T21:59:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I looked at this a little bit and haven't yet found anything alarming, though I agree the test could be improved.\r\n\r\nThe test recreates the ISO image 6 times (with different options) and reads those images back a total of 17 times (with different options), so you should expect to see names appear different numbers of times in add_entry and verify_file.\r\n\r\nIt would be nice to improve the test to verify that each filename was read back exactly as many times as expected.  This would require adding some bookkeeping to the existing code, of course.  The tricky part is accounting for how different ISO formats change names (plain ISO9660 converts names to uppercase, for example).\r\n\r\n",
            "published" : "2011-12-31T05:31:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 102,
        "title" : "archive_read_disk_entry_from_file() fails on hppa/sh4 etc.",
        "summary" : "archive_read_disk_entry_from_file() fails on hppa/sh4 etc.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "updated" : "2010-07-20T09:16:36.000Z",
        "published" : "2010-07-15T11:11:11.000Z",
        "closed" : "2010-07-20T09:16:36.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. run testsuite on HPPA architecture (Debian GNU/Linux).\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n&quot; 27: test_read_disk_entry_from_file                    FAIL&quot;\r\n\r\n<b>What version are you using?</b>\n2.8.3\r\n\r\n<b>On what operating system?</b>\nDebian GNU/Linux (unstable/sid)\r\n\r\nHow did you build?\r\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nFor detailed information (including debugging and suggested solution) see:\r\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=588925#10\r\n\r\n\r\n",
            "published" : "2010-07-15T11:11:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "Quoting Modestas Vainius from the bug link provided above.....\r\n\r\n====================================================================================\r\n\r\nThis is a libarchive bug. archive_read_disk_entry_from_file() does not work on \r\nhppa/sh4 at all. libarchive's own testsuite fails on hppa but unfortunately \r\npackaging ignores that failure and the bug is not caught early.\r\n\r\nCheck ./libarchive_test debugging session on paer.debian.org (hppa) below. \r\nBasically llistxattr() fails with \"Function not implemented\" error (ENOSYS) \r\nand setup_xattrs() treats it as a fatal error. It should ignore this error \r\nlike it does with ENOTSUP.\r\n\r\nWhile hppa build log is not available, the same error can be seen on sh4 as \r\nwell [1]. Please note that many tests fail with similar extended attr errors \r\non those arches.\r\n\r\n[1] http://buildd.debian-ports.org/fetch.php?&pkg=libarchive&ver=2.8.3-1&arch=sh4&stamp=1272046835&file=log&as=raw\r\n\r\n$ gdb ./libarchive_test \r\nGNU gdb (GDB) 7.1-debian\r\nCopyright (C) 2010 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\r\nand \"show warranty\" for details.\r\nThis GDB was configured as \"hppa-linux-gnu\".\r\nFor bug reporting instructions, please see:\r\n<http://www.gnu.org/software/gdb/bugs/>...\r\nReading symbols from /home/modax/src/libarchive-2.8.3/libarchive_test...done.\r\n(gdb) b test_read_disk_entry_from_file\r\nBreakpoint 1 at 0x7392c: file \r\nlibarchive/test/test_read_disk_entry_from_file.c, line 50.\r\n(gdb) b archive_read_disk_entry_from_file\r\nBreakpoint 2 at 0x1d35c: file libarchive/archive_read_disk_entry_from_file.c, \r\nline 89.\r\n(gdb) r\r\nStarting program: /home/modax/src/libarchive-2.8.3/libarchive_test \r\n[Thread debugging using libthread_db enabled]\r\n\r\nIf tests fail or crash, details will be in:\r\n   /tmp/libarchive_test.2010-07-14T23.05.33-000\r\n\r\nReference files will be read from: \r\n/home/modax/src/libarchive-2.8.3/libarchive/test\r\nExercising: libarchive 2.8.3\r\n  0: test_acl_basic                                    ok\r\n  1: test_acl_freebsd                                  ok\r\n  2: test_acl_pax                                      ok\r\n  3: test_archive_api_feature                          ok\r\n  4: test_bad_fd                                       ok\r\n  5: test_compat_bzip2                                 ok\r\n  6: test_compat_cpio                                  ok\r\n  7: test_compat_gtar                                  ok\r\n  8: test_compat_gzip                                  ok\r\n  9: test_compat_lzma                                  ok\r\n 10: test_compat_solaris_tar_acl                       ok\r\n 11: test_compat_tar_hardlink                          ok\r\n 12: test_compat_xz                                    ok\r\n 13: test_compat_zip                                   ok\r\n 14: test_empty_write                                  ok\r\n 15: test_entry                                        ok\r\n 16: test_entry_strmode                                ok\r\n 17: test_extattr_freebsd                              ok\r\n 18: test_fuzz                                         ok\r\n 19: test_link_resolver                                ok\r\n 20: test_open_fd                                      ok\r\n 21: test_open_file                                    ok\r\n 22: test_open_filename                                ok\r\n 23: test_pax_filename_encoding                        ok\r\n 24: test_read_compress_program                        ok\r\n 25: test_read_data_large                              ok\r\n 26: test_read_disk                                    ok\r\n 27: test_read_disk_entry_from_file                    \r\nBreakpoint 1, test_read_disk_entry_from_file () at \r\nlibarchive/test/test_read_disk_entry_from_file.c:50\r\n50              assert((a = archive_read_disk_new()) != NULL);\r\n(gdb) c\r\nContinuing.\r\n\r\nBreakpoint 2, archive_read_disk_entry_from_file (_a=0x4820068, \r\nentry=0x4823588, fd=-1, st=0x0)\r\n    at libarchive/archive_read_disk_entry_from_file.c:89\r\n89              struct archive_read_disk *a = (struct archive_read_disk *)_a;\r\n(gdb) n\r\n92              int initial_fd = fd;\r\n(gdb) \r\n95              archive_clear_error(_a);\r\n(gdb) \r\n96              path = archive_entry_sourcepath(entry);\r\n(gdb) \r\n97              if (path == NULL)\r\n(gdb) \r\n98                      path = archive_entry_pathname(entry);\r\n(gdb) \r\n116             if (st == NULL) {\r\n(gdb) \r\n123                     if (fd >= 0) {\r\n(gdb) \r\n132                     if (!a->follow_symlinks) {\r\n(gdb) \r\n133                             if (lstat(path, &s) != 0) {\r\n(gdb) \r\n145                     st = &s;\r\n(gdb) \r\n147             archive_entry_copy_stat(entry, st);\r\n(gdb) \r\n150             name = archive_read_disk_uname(_a, archive_entry_uid(entry));\r\n(gdb) \r\n151             if (name != NULL)\r\n(gdb) \r\n152                     archive_entry_copy_uname(entry, name);\r\n(gdb) \r\n153             name = archive_read_disk_gname(_a, archive_entry_gid(entry));\r\n(gdb) \r\n154             if (name != NULL)\r\n(gdb) \r\n155                     archive_entry_copy_gname(entry, name);\r\n(gdb) \r\n165             if (S_ISLNK(st->st_mode)) {\r\n(gdb) \r\n189             r = setup_acls_posix1e(a, entry, fd);\r\n(gdb) \r\n190             r1 = setup_xattrs(a, entry, fd);\r\n(gdb) s\r\nsetup_xattrs (a=0x4820068, entry=0x4823588, fd=-1) at \r\nlibarchive/archive_read_disk_entry_from_file.c:391\r\n391             path = archive_entry_sourcepath(entry);\r\n(gdb) n\r\n392             if (path == NULL)\r\n(gdb) \r\n393                     path = archive_entry_pathname(entry);\r\n(gdb) \r\n395             if (!a->follow_symlinks)\r\n(gdb) \r\n396                     list_size = llistxattr(path, NULL, 0);\r\n(gdb) \r\n400             if (list_size == -1) {\r\n(gdb) \r\n401                     if (errno == ENOTSUP)\r\n(gdb) \r\n403                     archive_set_error(&a->archive, errno,\r\n(gdb) p perror(\"failure:\")\r\nfailure:: Function not implemented\r\n$13 = 0\r\ngdb) p errno\r\n$14 = 251\r\n(gdb) n\r\n405                     return (ARCHIVE_WARN);\r\n(gdb) n\r\n437     }\r\n(gdb) \r\narchive_read_disk_entry_from_file (_a=0x4820068, entry=0x4823588, fd=-1, \r\nst=0xfaf016f0)\r\n    at libarchive/archive_read_disk_entry_from_file.c:191\r\n191             if (r1 < r)\r\n(gdb) \r\n192                     r = r1;\r\n(gdb) \r\n194             if (initial_fd != fd)\r\n(gdb) \r\n196             return (r);\r\n(gdb) \r\n197     }\r\n(gdb) \r\ntest_read_disk_entry_from_file () at \r\nlibarchive/test/test_read_disk_entry_from_file.c:73\r\n73              assertEqualString(archive_entry_uname(entry), \"FOO\");\r\n(gdb) c\r\nContinuing.\r\nFAIL\r\n 28: test_read_extract                                 ok\r\n 29: test_read_file_nonexistent                        ok\r\n 30: test_read_format_ar                               ok\r\n 31: test_read_format_cpio_bin_be                      ok\r\n 32: test_read_format_cpio_bin_bz2                     ok\r\n 33: test_read_format_cpio_bin                         ok\r\n 34: test_read_format_cpio_bin_gz                      ok\r\n 35: test_read_format_cpio_bin_lzma                    ok\r\n 36: test_read_format_cpio_bin_xz                      ok\r\n 37: test_read_format_cpio_bin_Z                       ok\r\n 38: test_read_format_cpio_odc                         ok\r\n 39: test_read_format_cpio_svr4_bzip2_rpm              ok\r\n 40: test_read_format_cpio_svr4c_Z                     ok\r\n 41: test_read_format_cpio_svr4_gzip                   ok\r\n 42: test_read_format_cpio_svr4_gzip_rpm               ok\r\n 43: test_read_format_empty                            ok\r\n 44: test_read_format_gtar_gz                          ok\r\n 45: test_read_format_gtar_lzma                        ok\r\n 46: test_read_format_gtar_sparse                      ok\r\n 47: test_read_format_iso_gz                           ok\r\n 48: test_read_format_isojoliet_bz2                    ok\r\n 49: test_read_format_isojoliet_long                   ok\r\n 50: test_read_format_isojoliet_rr                     ok\r\n 51: test_read_format_iso_multi_extent                 ok\r\n 52: test_read_format_isorr_bz2                        ok\r\n 53: test_read_format_isorr_ce                         ok\r\n 54: test_read_format_isorr_new_bz2                    ok\r\n 55: test_read_format_isorr_rr_moved                   ok\r\n 56: test_read_format_isozisofs_bz2                    ok\r\n 57: test_read_format_mtree                            ok\r\n 58: test_read_format_pax_bz2                          ok\r\n 59: test_read_format_raw                              ok\r\n 60: test_read_format_tar                              ok\r\n 61: test_read_format_tar_empty_filename               ok\r\n 62: test_read_format_tbz                              ok\r\n 63: test_read_format_tgz                              ok\r\n 64: test_read_format_tlz                              ok\r\n 65: test_read_format_txz                              ok\r\n 66: test_read_format_tz                               ok\r\n 67: test_read_format_xar                              ok\r\n 68: test_read_format_zip                              ok\r\n 69: test_read_large                                   ok\r\n 70: test_read_pax_truncated                           ok\r\n 71: test_read_position                                ok\r\n 72: test_read_truncated                               ok\r\n 73: test_read_uu                                      ok\r\n 74: test_tar_filenames                                ok\r\n 75: test_tar_large                                    ok\r\n 76: test_ustar_filenames                              ok\r\n 77: test_write_compress_bzip2                         ok\r\n 78: test_write_compress                               ok\r\n 79: test_write_compress_gzip                          ok\r\n 80: test_write_compress_lzma                          ok\r\n 81: test_write_compress_program                       ok\r\n 82: test_write_compress_xz                            ok\r\n 83: test_write_disk                                   ok\r\n 84: test_write_disk_failures                          ok\r\n 85: test_write_disk_hardlink                          ok\r\n 86: test_write_disk_perms                             ok\r\n 87: test_write_disk_secure                            ok\r\n 88: test_write_disk_symlink                           ok\r\n 89: test_write_disk_sparse                            ok\r\n 90: test_write_disk_times                             ok\r\n 91: test_write_format_ar                              ok\r\n 92: test_write_format_cpio                            ok\r\n 93: test_write_format_cpio_empty                      ok\r\n 94: test_write_format_cpio_newc                       ok\r\n 95: test_write_format_cpio_odc                        ok\r\n 96: test_write_format_mtree                           ok\r\n 97: test_write_format_pax                             ok\r\n 98: test_write_format_shar_empty                      ok\r\n 99: test_write_format_tar                             ok\r\n100: test_write_format_tar_empty                       ok\r\n101: test_write_format_tar_ustar                       ok\r\n102: test_write_format_zip                             ok\r\n103: test_write_format_zip_empty                       ok\r\n104: test_write_format_zip_no_compression              ok\r\n105: test_write_open_memory                            ok\r\n\r\nTotals:\r\n  Tests run:              106\r\n  Tests failed:             1\r\n  Assertions checked: 2823912\r\n  Assertions failed:        1\r\n  Skips reported:          15\r\n\r\nFailing tests:\r\n  27: test_read_disk_entry_from_file (1 failures)\r\n\r\nDetails for failing tests: /tmp/libarchive_test.2010-07-14T23.05.33-000\r\n\r\n\r\nProgram exited with code 01.\r\n(gdb)\r\n\r\n$ grep 251 /usr/include/asm/errno.h \r\n#define ENOSYS          251     /* Function not implemented */\r\n$\r\n\r\n\r\n-- \r\nModestas Vainius <modestas@vainius.eu>\r\n",
            "published" : "2010-07-15T11:17:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "This sounds more like another Linux idiosyncrasy. Try the attached patch.",
            "published" : "2010-07-15T12:24:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-6870381501334992941",
              "fileName" : "linux-opsys-mess.diff",
              "fileSize" : 1251,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "I've just uploaded a new libarchive package version with the following patch:\r\n\r\nhttp://git.debian.org/?p=collab-maint/pkg-libarchive.git;a=commitdiff;h=8ad947aea083aad383eed753390bd6bff71f0cb6\r\n\r\nBuild logs, which hopefully confirms the test failure has been fixed, should soon show up here:\r\nhttps://buildd.debian.org/build.php?arch=hppa&pkg=libarchive\r\n\r\n\r\nIt would be nice if you could say if you think this is the right solution!\r\n\r\n",
            "published" : "2010-07-15T13:01:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Joerg's patch (Comment 2 above) seems a little more complete.  We should commit that.\r\n",
            "published" : "2010-07-15T15:46:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "just confirming that the changes worked and agreeing that Joergs patch seems better.\r\n(I'll switch to whatever gets committed next time I upload a new package.)\r\n\r\nThanks for your quick help.",
            "published" : "2010-07-15T18:35:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "I committed a patch similar to joergs (fixing typo, s/EOPSYS/ENOSYS/). See revision 2537.\r\n\r\nShould probably be backported to 2.8 branch as well.\r\n",
            "published" : "2010-07-20T09:16:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 103,
        "title" : "Using libarchive in a thread on OSX in release mode crashes",
        "summary" : "Using libarchive in a thread on OSX in release mode crashes",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jesse.lovelace",
          "htmlLink" : "https://code.google.com/u/112976903577425462544/"
        },
        "updated" : "2010-07-20T01:56:16.000Z",
        "published" : "2010-07-17T22:18:52.000Z",
        "closed" : "2010-07-20T01:56:16.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jesse.lovelace",
              "htmlLink" : "https://code.google.com/u/112976903577425462544/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Build in release mode, create archive in thread.\r\n2. Add entry to archive, in 2.8.x will crash, in 3.x will crash on close\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThis is strange because I don't see this behavior in debug builds or on any other platform (Linux, Win32).  The code runs in a thread--but is completely mutex locked, no other threads are talking to the libarchive code.  The code creates a archive add adds entries that are data buffers.\r\n\r\nThis is always the error:\r\n\r\nCritical: Archive write error INTERNAL ERROR: Function 'archive_write_header' invoked with archive structure in state 'new', should be in state 'header/data'\r\n\r\nHere is the code:\r\n\r\na = archive_write_new();\r\nQ_ASSERT(0 == archive_write_set_compression_gzip(a));\r\nQ_ASSERT(0 == archive_write_set_format_ustar(a));\r\n\r\narchive_write_open_filename(a, filename.toAscii().constData());\r\n\r\nThen in a loop with vars (const QString&amp; name, const * char entry, int size):\r\n\r\nstruct archive_entry *entry;\r\n\r\nentry = archive_entry_new();\r\narchive_entry_set_mode(entry, AE_IFREG | 0444);\r\narchive_entry_set_size(entry, size);\r\narchive_entry_set_birthtime(entry, QDateTime::currentDateTime().toTime_t(), 0);\r\narchive_entry_set_pathname(entry, name.toAscii().constData());\r\n\r\narchive_write_header(a, entry);\r\narchive_write_data(a, data, size);\r\narchive_entry_free(entry);\r\n\r\nAny idea why this is popping up on release mode only?\r\n\r\n\r\n\r\n<b>What version are you using?</b>\n\r\n2.8.4 and 3.x SVN\r\n\r\n<b>On what operating system?</b>\n\r\nOSX 10.6.4\r\nGCC 4.2.1\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nMy makefile.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nGCC 4.2.1\r\nQt 4.6.3, Cocoa, 64-bit, release mode.\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2010-07-17T22:18:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "You should be getting an error from archive_write_open_filename().  I presume your outline is omitting the required error checking after calls to write_new, write_open_filename, entry_new, write_header, and write_data.\r\n\r\nLibarchive has an internal state machine to guard against programming errors.  In particular, it catches cases where you've failed to handle an error and are requesting operations that the archive object cannot handle.\r\n\r\nFor reference, the basic state transitions are:\r\n  * A new archive object is in state 'new'\r\n  * After a successful open, it is in state 'header'\r\n  * It alternates between 'header' and 'data' states as you alternately write headers and associated data.\r\n  * It becomes 'closed' when you close.\r\n  * After any fatal error, the archive will enter state 'fatal'; in this state, a finish() (aka free()) operation is basically the only thing allowed.\r\n\r\nSo the message says that you've asked to write data to an archive object that isn't opened, probably because the open failed.\r\n",
            "published" : "2010-07-17T23:11:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jesse.lovelace",
              "htmlLink" : "https://code.google.com/u/112976903577425462544/"
            },
            "content" : "Thanks for the reply. \r\n\r\nIt seems like the open call is resulting in success, here is my check for that:\r\n\r\nif (archive_write_open_filename(a, filename.toAscii().constData()) != ARCHIVE_OK) {\r\n\tqFatal(\"Could not open archive %s.\", filename.toAscii().constData());\r\n}\r\n\r\nSince this is only happening in release mode I've got to assume it's something tricky.  I'll debug some more and try to post a minimal failure sample.",
            "published" : "2010-07-19T16:31:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jesse.lovelace",
              "htmlLink" : "https://code.google.com/u/112976903577425462544/"
            },
            "content" : "I still don't know what's going on, here is a small sample that doesn't seem to work (archive_write_data fails).",
            "published" : "2010-07-19T19:04:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jesse.lovelace",
              "htmlLink" : "https://code.google.com/u/112976903577425462544/"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-85595253695826337",
              "fileName" : "tests.cpp",
              "fileSize" : 1620,
              "mimetype" : "text/x-c; charset=us-ascii",
              "isDeleted" : true
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jesse.lovelace",
              "htmlLink" : "https://code.google.com/u/112976903577425462544/"
            },
            "content" : "Ok, this is strange.  I'm attaching a minimal sample, when compiled in debug mode it works fine, but in release mode it segfaults.  Here is all I can get from gdb for the segfault:\r\n\r\n\r\n#0  0x0000000000000000 in ?? ()\r\n#1  0x000000010000915d in _archive_write_header ()\r\n#2  0x0000000100002c07 in add_entry ()\r\n#3  0x0000000100003831 in main ()\r\n(gdb) \r\n\r\n\r\nThe GCC line for release mode is:\r\n\r\ng++ -c -pipe -O2 -Wall -W -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Qt4.6/mkspecs/macx-g++ -I../../../../qtsync/src/3rdparty/tests -I/Library/Frameworks/QtCore.framework/Versions/4/Headers -I/usr/include/QtCore -I/Library/Frameworks/QtGui.framework/Versions/4/Headers -I/usr/include/QtGui -I/usr/include -I../../../../qtsync/src/3rdparty/libarchive -I/Users/m3ntat/Code/GUI/qtsync-release/src/3rdparty/tests/. -I../../../../qtsync/src/3rdparty/tests -I. -F/Library/Frameworks -o tests.o ../../../../qtsync/src/3rdparty/tests/tests.cpp \r\ng++ -headerpad_max_install_names -o tests tests.o -F/Library/Frameworks -L/Library/Frameworks ../libarchive/libarchive.a -lz -framework QtGui -framework QtCore \r\n\r\n\r\nFor debug:\r\n\r\ng++ -c -pipe -g -gdwarf-2 -Wall -W -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I/usr/local/Qt4.6/mkspecs/macx-g++ -I. -I/Library/Frameworks/QtCore.framework/Versions/4/Headers -I/usr/include/QtCore -I/Library/Frameworks/QtGui.framework/Versions/4/Headers -I/usr/include/QtGui -I/usr/include -I../libarchive -I. -F/Library/Frameworks -o tests.o tests.cpp \r\ng++ -headerpad_max_install_names -o tests tests.o -F/Library/Frameworks -L/Library/Frameworks ../libarchive/libarchive.a -lz -framework QtGui -framework QtCore \r\n\r\nThis is linking against the Qt built libs from the website for 4.6.3 OSX (non debug).  I'll test again without any Qt linking to ensure it's not Qt somehow breaking libarchive in release mode, but it seems doubtful.    Could it be that the -O2 is causing unstable code?",
            "published" : "2010-07-19T20:56:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "740680050058957457",
              "fileName" : "tests.cpp",
              "fileSize" : 1672,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jesse.lovelace",
              "htmlLink" : "https://code.google.com/u/112976903577425462544/"
            },
            "content" : "It looks like I've found the culprit--the linker was using a different version of zlib causing a difficult to spot gzip error.  You can close this now--thanks for the help.",
            "published" : "2010-07-19T22:17:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Glad you found the problem.",
            "published" : "2010-07-20T01:56:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 104,
        "title" : "ZIP format does not handle symbolic links",
        "summary" : "ZIP format does not handle symbolic links",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "eric.noulard",
          "htmlLink" : "https://code.google.com/u/eric.noulard@gmail.com/"
        },
        "updated" : "2011-12-30T23:01:37.000Z",
        "published" : "2010-07-26T11:17:23.000Z",
        "closed" : "2011-12-30T23:01:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "eric.noulard",
              "htmlLink" : "https://code.google.com/u/eric.noulard@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Try to create a zip archive from a directory containing symlinks\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nA zip archive containing symlinks\r\nand I get the error: \r\n\r\n&quot;archive_write_header:Filetype not supported&quot;\r\n\r\n<b>What version are you using?</b>\n2.7.900a (the one embedded with CMake 2.8.2)\r\n\r\n<b>On what operating system?</b>\nLinux Debian Squeeze\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nFrom cmake.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc version 4.4.4\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nInfo-zip zip implementation (the &quot;zip&quot; command line tool)\r\nsupports symlinks if it is given the &quot;-y&quot; option.\r\nWould be great to have symlinks support in libarchive.\r\n\r\n",
            "published" : "2010-07-26T11:17:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This would not be very hard to support in libarchive when writing Zip archives.\r\n\r\nSupporting symlinks when reading Zip archives would require more work, as Zip archives only seem to store that information in the Central Directory.  Libarchive's Zip reader does not currently use the Central Directory; it only uses the per-file headers to identify the file type and other information.",
            "published" : "2010-10-26T06:43:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "eric.noulard",
              "htmlLink" : "https://code.google.com/u/eric.noulard@gmail.com/"
            },
            "content" : "I did never develop or submit a patch for libarchive and \r\nI have no particular knowledge about zip, however if ever I try a patch\r\nis there anything I should be aware of about libarchive way of contribution?",
            "published" : "2010-10-26T07:42:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"about libarchive way of contribution\"\r\n\r\nStart with something small and simple.\r\nCreate a patch in \"unified diff\" format (diff -u) and attach it to a comment on this Issue report.\r\nOne of the regular developers will take a look and let you know if there's anything that needs to be changed.\r\n",
            "published" : "2010-11-10T07:12:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2010-12-11T18:59:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "eric.noulard",
              "htmlLink" : "https://code.google.com/u/eric.noulard@gmail.com/"
            },
            "content" : "Hi,\r\n\r\nI did not forget my proposal but I'm currently lacking time for trying...\r\nAs soon as some free time appears I'll try.\r\nIn the meantime if anyone is faster than me please go ahead, do not wait\r\nfor me.\r\n",
            "published" : "2010-12-11T21:58:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "With the recent addition of a seek-capable Zip reader that does use the Central Directory, it should be relatively easy to implement this now.",
            "published" : "2011-11-24T20:00:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Reading symbolic links is now implemented in trunk (for the seeking Zip reader only; it's not feasible for the streaming reader because Zip archives don't store the necessary information in the right place).\r\n\r\nIt would be nice to add write support as well.\r\n",
            "published" : "2011-12-22T06:44:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Michihiro has implemented writing symlinks to Zip files, so this is now complete.\r\n",
            "published" : "2011-12-30T23:01:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 105,
        "title" : "libarchive_test fails to link after r2541",
        "summary" : "libarchive_test fails to link after r2541",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "pipping.elias",
          "htmlLink" : "https://code.google.com/u/113501031579999651195/"
        },
        "updated" : "2010-07-31T16:40:46.000Z",
        "published" : "2010-07-31T14:29:09.000Z",
        "closed" : "2010-07-31T16:40:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pipping.elias",
              "htmlLink" : "https://code.google.com/u/113501031579999651195/"
            },
            "content" : "libarchive/test/libarchive_test-main.o:(.data+0x228): undefined reference to `test_open_failure'\r\n\r\nThis is with an amd64 linux 2.6.34 kernel and gcc 4.4.4.",
            "published" : "2010-07-31T14:29:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the report.  Looks like I failed to update the autoconf-based build system.\r\nShould be fixed in r2542.\r\n",
            "published" : "2010-07-31T16:40:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pipping.elias",
              "htmlLink" : "https://code.google.com/u/113501031579999651195/"
            },
            "content" : "Yes it is, thanks.",
            "published" : "2010-07-31T16:57:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 106,
        "title" : "Linux setup_sparse() should merge adjacent extents when generating sparse list",
        "summary" : "Linux setup_sparse() should merge adjacent extents when generating sparse list",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All", "Milestone-3.0" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "levertond",
          "htmlLink" : "https://code.google.com/u/109422174252835420621/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ferringb",
          "htmlLink" : "https://code.google.com/u/ferringb/"
        },
        "updated" : "2011-11-05T05:34:41.000Z",
        "published" : "2010-07-31T22:44:03.000Z",
        "closed" : "2011-11-05T05:34:41.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "levertond",
              "htmlLink" : "https://code.google.com/u/109422174252835420621/"
            },
            "content" : "The Linux implementation of setup_sparse() in libarchive/archive_read_disk_entry_from_file.c contains the code\r\n\r\n\tif (fe-&gt;fe_logical == 0 &amp;&amp; length == size) {\r\n\t\t/* This is not sparse. */\r\n\t\tdo_fiemap = 0;\r\n\t\tbreak;\r\n\t}\r\n\r\nbefore calling archive_entry_sparse_add_entry which is obviously intended to make non-sparse files have no ae_sparse entry instead of one, but this doesn't work when the kernel allocates two separate extents with no hole in the middle.  archive_entry_sparse_add_entry does consolidate logically adjacent extents, but this still leaves the archive entry having one ae_sparse entry instead of zero.  This confuses test_sparse_basic, which adds a non-sparse file (sparse_file3) and checks that there are no ae_sparse entries.  On my system (Linux 2.6.34-gentoo-r1¹, ext3) the kernel reports two extents for this file, therefore the test fails:\r\n\r\nlibarchive/test/test_sparse_basic.c:246: blocks != archive_entry_sparse_count(ae)\r\n      blocks=0 (0x0, 00)\r\n      archive_entry_sparse_count(ae)=1 (0x1, 01)\r\n\r\nAdding a debugging printf() to setup_sparse() shows\r\n\r\nsize = 11264 fe_physical = 5736488960 fe_logical = 0 fe_length = 8192\r\nsize = 11264 fe_physical = 5736497152 fe_logical = 8192 fe_length = 4096\r\n\r\nwhen running the test in question.  I'm not sure why there are two extents when they're logically and physically adjacent (possibly a kernel bug, or maybe just something I don't fully understand) but in any case it could also happen when the parts aren't adjacent on disk.\r\n\r\n-------------------------------------------------------------------------\r\n\r\n[1] For reference, list of patches applied versus vanilla 2.6.34, none of which are related to this issue unless there are some major unintended consequences happening:\r\n\r\nPatch:\t2700_nouveau-acpi-lid-open-undefined-fix.patch\r\nFrom:\thttp://bugs.gentoo.org/show_bug.cgi?id=322001\r\nDesc:\tnouveau: fix acpi_lid_open undefined\r\n\r\nPatch:\t2710_vbfb-section-cleanup.patch\r\nFrom:\thttp://bugs.gentoo.org/show_bug.cgi?id=323021\r\nDesc:   Fix errors issued by modpost in vfb driver\t\r\n\r\nPatch:\t2900_xconfig-with-qt4.patch\r\nFrom:\thttp://bugs.gentoo.org/show_bug.cgi?id=320761\r\nDesc:\txconfig patch for qt4 - thanks to Sam Iam\r\n\r\nPatch:\t4200_fbcondecor-0.9.6.patch\r\nFrom:\thttp://dev.gentoo.org/~spock\r\nDesc:\tBootsplash successor by Michal Januszewski\r\n",
            "published" : "2010-07-31T22:44:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This code was originally written around the Solaris/FreeBSD lseek(HOLE) interface which generates a map of logical blocks and holes.  The Linux FIEMAP ioctl seems to be a lower-level interface; we need to rewrite the Linux version of setup_sparse() to process the extent map into a correct sparse list by merging logically adjacent extents.\r\n",
            "published" : "2010-08-01T05:45:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Linux setup_sparse() should merge adjacent extents when generating sparse list"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I disabled the Linux support for sparse files until we can fix this.\r\n\r\nIs there an alternative to FIEMAP for identifying holes in files on Linux?\r\n",
            "published" : "2010-08-01T06:15:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ferringb",
              "htmlLink" : "https://code.google.com/u/ferringb/"
            },
            "content" : "This is pretty easy to address w/in sparse itself- question is- we can either expand archive_entry_sparse_add_entry to do a length check on it's combining logic (if the length of the sparse entry is the entry size, than it's not sparse).\r\n\r\nQuestion is what to do in that case- if we just do a clear, this will allow subsequent archive_entry_sparse_add_entry calls to add a sparse range.\r\n\r\nSpecifically, if cumulatively for file x w/ len 1024, the resultant sparse_add_entry calls add up to 1024, current behaviour disallows trying to add offset 0, length 10.  If we do a clear, they could get away with it (it would add the entry, and 10->1024 would be sparse).\r\n\r\nIf we wish to preserve this behaviour, than we have to inject a sanity check into sparse_next; if offset 0, length == entry_size, than there is no sparse.\r\n\r\nMy personal inclination is to do a clear, but comments would be welcome.\r\n\r\nNote also that while it's probably worth fixing the linux setup_sparse, the sparse_add_entry machinery definitely would benefit from the sanity checks I mentioned above- thus targeting that layer.",
            "published" : "2010-09-30T11:11:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted",
              "owner" : "ferringb"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-03-05T06:12:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "Milestone-3.0" ]
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I believe this issue fixed in r3432 base on Brian's idea.",
            "published" : "2011-07-17T15:50:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Marking this 'fixed'.",
            "published" : "2011-11-05T05:34:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 107,
        "title" : "can libarchive extract gzip file?",
        "summary" : "can libarchive extract gzip file?",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ljysyn",
          "htmlLink" : "https://code.google.com/u/113401854160238837746/"
        },
        "updated" : "2010-08-17T05:21:55.000Z",
        "published" : "2010-08-17T03:16:56.000Z",
        "closed" : "2010-08-17T05:21:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ljysyn",
              "htmlLink" : "https://code.google.com/u/113401854160238837746/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.  &quot;gzip a&quot; to generate a.gz\r\n2. bsdtar -tf a.gz, it says &quot;bsdtar: Unrecognized archive format\r\nbsdtar: Error exit delayed from previous errors.&quot;\r\n3. &quot;tar zcvf a.tar.gz a&quot;\r\n4. bsdtar -tf a.tar.gz, it can list the file.\r\n5. why can not extract a.gz?\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n\r\n<b>What version are you using?</b>\n2.8.3\r\n\r\n<b>On what operating system?</b>\nredhat linux 9\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2010-08-17T03:16:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The \"tar\" program extracts archives.  It can extract a.tar.gz because that file is a tar archive (that happens to be gzipped).\r\n\r\nThe libarchive programming library can be used to build the tool you seem to want, but that tool is not \"tar\".\r\n",
            "published" : "2010-08-17T05:21:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2010-08-17T05:21:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 108,
        "title" : "test failures dependant with gcc -O0",
        "summary" : "test failures dependant with gcc -O0",
        "stars" : 1,
        "starred" : false,
        "status" : "Accepted",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ferringb",
          "htmlLink" : "https://code.google.com/u/ferringb/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ferringb",
          "htmlLink" : "https://code.google.com/u/ferringb/"
        },
        "updated" : "2010-08-26T11:42:11.000Z",
        "published" : "2010-08-26T11:42:11.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ferringb",
              "htmlLink" : "https://code.google.com/u/ferringb/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. gcc 4.4.4; haven't yet tested with alternate versions.\r\n2. compile with either explicitly forced CFLAGS to '' (not unset, forced to empty), or forced to -O0; end result is the same\r\n3. make check.  if it doesn't fail, while ! ./libarchive_test 118; do :; done; .  It will bail sooner or later on test 118 (test_write_format_xar).\r\n4. curse a fair amount while trying to run this down.\r\n\r\nAttached is a set of 'valgrind --tool=memcheck --track-origins=yes -v libarchive_test 118' specifically varied between CFLAGS=&quot;-O0&quot;, and CFLAGS=&quot;-O1&quot; (haven't tried -O3, but -O2 behaves fine same for -O1).\r\n\r\nSpotted this at first in the libtransform work, finally nailed down the flags as the variable and that mainline/trunk has the same issue.  The test failures are attached, but they're partially irrelevant- the failure directly maps back to the unitialization issue that appears in -O0 only.\r\n\r\nBeen trying to run this one down myself, but frankly I'm making zero headway in identifying how this varying- traced the implicated stack vars out and all are initialized as best I can tell.  Possible it's just gcc sucking ass, but a second opinion on that from y'all is desired.",
            "published" : "2010-08-26T11:42:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-8625653477091331808",
              "fileName" : "log-cflags-O0",
              "fileSize" : 107203,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "-4771374492948042000",
              "fileName" : "log-cflags-O1",
              "fileSize" : 26253,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "-6645514398359475464",
              "fileName" : "test_write_format_xar.log",
              "fileSize" : 16835,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 109,
        "title" : "Windows source & Visual Studio (vc90) project is incomplete",
        "summary" : "Windows source & Visual Studio (vc90) project is incomplete",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "enlamare",
          "htmlLink" : "https://code.google.com/u/117397480835390317397/"
        },
        "updated" : "2010-10-08T05:25:36.000Z",
        "published" : "2010-10-07T07:07:27.000Z",
        "closed" : "2010-10-08T05:25:36.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "enlamare",
              "htmlLink" : "https://code.google.com/u/117397480835390317397/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Download and build vc90 solution for Visual Studio\r\n<b>2.</b>\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expected the build to work. However, the config_window.h file is missing, the path from the project to the source is incorrect (needs to bo up one more level) and many source files are missing from the project.\r\n\r\n\r\n<b>What version are you using?</b>\n2.8.4\r\n\r\n\r\n<b>On what operating system?</b>\nWindows XP\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nVisual Studio 2008 solution (vc90/libarchive.sln)\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2008 SP1 (9.0.30729.1 SP)\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI used the config_windows.h file from the 2.7 source; which had missing or incorrect definitions (int32_t, uid_t, gid_t). After fixing all of the errors, I was able to build the project.",
            "published" : "2010-10-07T07:07:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Those files are out of date and no longer supported.\r\n\r\nPlease use \"cmake\" to create a solution file from the CMakeLists.txt.  Full instructions are in the project Wiki:\r\n\r\nhttp://code.google.com/p/libarchive/wiki/BuildInstructions\r\n",
            "published" : "2010-10-08T05:25:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2010-10-08T05:25:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 110,
        "title" : "ZIP files having file headers with extra_length = 0 cause \"Truncated ZIP file header\" error",
        "summary" : "ZIP files having file headers with extra_length = 0 cause \"Truncated ZIP file header\" error",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jcthomsen",
          "htmlLink" : "https://code.google.com/u/108614730202591677082/"
        },
        "updated" : "2010-10-26T05:47:29.000Z",
        "published" : "2010-10-09T20:13:22.000Z",
        "closed" : "2010-10-26T05:47:29.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jcthomsen",
              "htmlLink" : "https://code.google.com/u/108614730202591677082/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Attempt to read headers from a ZIP file having file headers with extra_length = 0 using archive_read_new()/archive_read_next_header()\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThere should be no error and the headers should be &quot;returned.&quot; Instead there is a &quot;Truncated ZIP file header&quot; error.\r\n\r\n<b>What version are you using?</b>\n2.7.0\r\n\r\n\r\n<b>On what operating system?</b>\nLinux mipsel uclibc\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nGCC 4.0.4 mipsel-linux-uclibc\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nIf I comment out the following lines in archive_read_support_format_zip.c, I am able to read the file headers and subsequently extract all of the archive members.\r\n\r\n\r\n\t/* Read the extra data. */\r\n\tif ((h = __archive_read_ahead(a, zip-&gt;extra_length, NULL)) == NULL) {\r\n\t\tarchive_set_error(&amp;a-&gt;archive, ARCHIVE_ERRNO_FILE_FORMAT,\r\n\t\t    &quot;Truncated ZIP file header&quot;);\r\n\t\treturn (ARCHIVE_FATAL);\r\n\t}\r\n\tprocess_extra(h, zip);\r\n\r\n\r\nThis suggests that an if(zip-&gt;extra_length == 0) should be wrapped around this block.\r\n\r\nI have attached an example file for reference.\r\n",
            "published" : "2010-10-09T20:13:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-6704628245124513204",
              "fileName" : "images-14-140.zip",
              "fileSize" : 177362,
              "mimetype" : "application/zip; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this has been fixed in libarchive 2.8 and in trunk.\r\n\r\nThe code block you quoted above is unchanged, but __archive_read_ahead() now correctly handles a request for zero bytes by returning a valid pointer to data.\r\n\r\nPlease try with libarchive 2.8 and let us know if you still see the problem there.\r\n",
            "published" : "2010-10-26T05:44:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I did a little more research:  SVN r1441 is a fix for this, it was committed to trunk in Sept 2009, before libarchive 2.8 was branched.\r\n\r\nHere's a link to the commit message for this:\r\nhttp://code.google.com/p/libarchive/source/detail?r=1441\r\n",
            "published" : "2010-10-26T05:47:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 111,
        "title" : "untar.c is_end_of_archive() off by one",
        "summary" : "untar.c is_end_of_archive() off by one",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ward.willats",
          "htmlLink" : "https://code.google.com/u/108288190521629853809/"
        },
        "updated" : "2010-10-26T05:32:55.000Z",
        "published" : "2010-10-18T19:09:39.000Z",
        "closed" : "2010-10-26T05:32:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ward.willats",
              "htmlLink" : "https://code.google.com/u/108288190521629853809/"
            },
            "content" : "I've been using untar.c, the stand-alone, one file untar in a project. I believe is_end_of_archive() starts reading 1 byte past the end of (index 512) and will not detect EOF if that byte is non-zero. Then the verify_checksum() will fail.\r\n\r\nSuggest this instead:\r\n\r\n   // Returns true if this is 512 zero bytes.\r\n\tint n;\r\n\tfor (n = 511; n &gt;= 0; --n)\r\n\t\tif (p[n] != '\\0')\r\n\t\t\treturn 0;\r\n\treturn 1;\r\n",
            "published" : "2010-10-18T19:09:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ferringb",
              "htmlLink" : "https://code.google.com/u/ferringb/"
            },
            "content" : "This is already fixed in trunk, since 07/2009 (svn revno 1303).",
            "published" : "2010-10-21T04:23:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please let us know if you find any other problems!\r\n\r\n",
            "published" : "2010-10-26T05:32:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 112,
        "title" : "one ssize_t -> int64_t change missing since librarchive 2.8.5 (until r2763)",
        "summary" : "one ssize_t -> int64_t change missing since librarchive 2.8.5 (until r2763)",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "too@iki.fi",
          "htmlLink" : "https://code.google.com/u/115439666155110246013/"
        },
        "updated" : "2010-10-26T05:30:14.000Z",
        "published" : "2010-10-25T14:20:01.000Z",
        "closed" : "2010-10-26T05:30:14.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "too@iki.fi",
              "htmlLink" : "https://code.google.com/u/115439666155110246013/"
            },
            "content" : "Hi\r\n\r\nI'm cherry-picking some int64_t changes since librarchive 2.8.4 and\r\ncome up with this:\r\n\r\n@@ -1899,7 +2030,7 @@\r\n  */\r\n static int64_t\r\n gnu_sparse_10_atol(struct archive_read *a, struct tar *tar,\r\n-    ssize_t *remaining)\r\n+    ssize_t *remaining, size_t *unconsumed)\r\n {\r\n        int64_t l, limit, last_digit_limit;\r\n        const char *p;\r\n\r\nShouldn't the &quot;remaining&quot; be type int64_t\r\n\r\n\r\nThe same issue arises in function gnu_sparse_10_read() around line 2075.\r\n\r\n\r\n",
            "published" : "2010-10-25T14:20:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Good catch!  Yes, that should be int64_t here and in gnu_sparse_10_read.   Otherwise, gnu_sparse_10_read() will compute the number of bytes read incorrectly due to integer truncation (for very large entries).\r\n\r\nFixed in trunk in r2764.\r\n",
            "published" : "2010-10-26T05:30:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 113,
        "title" : "When an archive_entry exceeds format specific size limits, archive_write_header() should report it.",
        "summary" : "When an archive_entry exceeds format specific size limits, archive_write_header() should report it.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "valentin.b",
          "htmlLink" : "https://code.google.com/u/114631265096702980295/"
        },
        "updated" : "2010-11-10T06:04:00.000Z",
        "published" : "2010-11-03T19:19:57.000Z",
        "closed" : "2010-11-10T06:04:00.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 10,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "valentin.b",
              "htmlLink" : "https://code.google.com/u/114631265096702980295/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nTry to add a file with size &gt; 4 GiB to a cpio_newc archive. \r\nno error is reported the archive gets corrupted.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe function 'archive_write_header()' should return an error\r\nwhen a archive_entry exceeds format specific limits.\r\n\r\n<b>What version are you using?</b>\n2.8.4\r\n\r\n<b>On what operating system?</b>\nWindows\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake + vs2005\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nMicrosoft Visual Studio 2005 without SP1\r\n\r\n<b>Please provide any additional information below.</b>\nI know cpio_newc is quite old, but it would help other developers using your library a lot, when their mistakes get caught and reported :-)",
            "published" : "2010-11-03T19:19:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "valentin.b",
              "htmlLink" : "https://code.google.com/u/114631265096702980295/"
            },
            "content" : "Maybe Type should have been Featuer Request.",
            "published" : "2010-11-03T21:27:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Yes, archive_write_header() should return ARCHIVE_FAILED to indicate that this entry cannot be written.\r\n\r\nThe attached patch should fix this for newc format.  Similar changes may be needed for other formats.  Please try this patch and let us know.",
            "published" : "2010-11-05T05:09:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-5691950084709629059",
              "fileName" : "cpio_error.patch",
              "fileSize" : 1846,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Here's an updated version of that patch that also fixes a few other related issues.",
            "published" : "2010-11-05T05:49:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "542401421958328612",
              "fileName" : "cpio_error_2.patch",
              "fileSize" : 6474,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "valentin.b",
              "htmlLink" : "https://code.google.com/u/114631265096702980295/"
            },
            "content" : "I've tried out the patch, i've also extended the test for cpio_newc, it didn't catch a file with size > 4GB for me.\r\n",
            "published" : "2010-11-09T09:10:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-3514027859578578645",
              "fileName" : "cpio_error_3.patch",
              "fileSize" : 7612,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I think I see the issue:  You haven't set the file type.  Cpio formats don't allow bodies for any filetype other than regular files (AE_IFREG).  Since you haven't set the file type, the size is being set to zero.  (Format handlers do this to indicate to clients when they will ignore the body, so that clients can avoid writing bodies when it's not needed.)\r\n\r\nI've extended the earlier patch to also return ARCHIVE_FAILED if the file type isn't specified, extended the test to exercise these checks, and committed the result as r2782.",
            "published" : "2010-11-10T06:04:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "valentin.b",
              "htmlLink" : "https://code.google.com/u/114631265096702980295/"
            },
            "content" : "I think setting an appropriate error message would be nice as well.",
            "published" : "2010-11-10T19:16:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The patch I committed in r2782 does set appropriate error messages for all of the new failure cases.  If you find any that I missed, please let me know.\r\n",
            "published" : "2010-11-11T05:34:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "valentin.b",
              "htmlLink" : "https://code.google.com/u/114631265096702980295/"
            },
            "content" : "It doesn't set an error messages when the size of an entry overflows in  archive_write_set_format_cpio.c:259 and archive_write_set_format_cpio_newc.c:200\r\nbefore returning ARCHIVE_FAILED.\r\n\r\n",
            "published" : "2010-11-11T18:38:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Of course!  I apologize for overlooking that.  I just committed a fix for this (including a test update to verify that it doesn't break again).",
            "published" : "2010-11-12T04:48:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 114,
        "title" : "Duplicate include in cpio/cpio.c",
        "summary" : "Duplicate include in cpio/cpio.c",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "uzelp99",
          "htmlLink" : "https://code.google.com/u/107466309786314339777/"
        },
        "updated" : "2010-11-12T04:49:48.000Z",
        "published" : "2010-11-11T11:15:01.000Z",
        "closed" : "2010-11-12T04:49:48.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "uzelp99",
              "htmlLink" : "https://code.google.com/u/107466309786314339777/"
            },
            "content" : "Attached patch for current trunk.\r\n\r\n",
            "published" : "2010-11-11T11:15:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "5078366565163288645",
              "fileName" : "libarchive-remove-duplicate-include.patch",
              "fileSize" : 321,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed at r2785.  Thank you!\r\n",
            "published" : "2010-11-12T04:49:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 115,
        "title" : "libarchive-2.8.4: testsuite fails (test_fuzz)",
        "summary" : "libarchive-2.8.4: testsuite fails (test_fuzz)",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "uzelp99",
          "htmlLink" : "https://code.google.com/u/107466309786314339777/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-11-26T07:07:55.000Z",
        "published" : "2010-11-11T11:23:53.000Z",
        "closed" : "2011-11-26T07:07:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 12,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "uzelp99",
              "htmlLink" : "https://code.google.com/u/107466309786314339777/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. build libarchive-2.8.4 from source\r\n2. run make check\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n======\r\n[SNIP]\r\n16: test_entry_strmode                                ok\r\n 17: test_extattr_freebsd                              ok\r\n 18: test_fuzz                                         /bin/sh: line 5: 16367 Segmentation fault      (core dumped) LIBARCHIVE_TEST_FILES=`cd .;/bin/pwd`/libarchive/test BSDTAR=`cd .;/bin/pwd`/bsdtar BSDTAR_TEST_FILES=`cd .;/bin/pwd`/tar/test BSDCPIO=`cd .;/bin/pwd`/bsdcpio BSDCPIO_TEST_FILES=`cd .;/bin/pwd`/cpio/test ${dir}$tst\r\nFAIL: libarchive_test\r\n[SNIP]\r\n======\r\n\r\n<b>What version are you using?</b>\nlibarchive-2.8.4\r\n\r\n<b>On what operating system?</b>\nopenSUSE-11.3\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nCFLAGS=&quot;-ggdb -O0&quot; ./configure --enable-bsdcpio --enable-static\r\nmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\ngcc --version\r\ngcc (SUSE Linux) 4.5.0 20100604 [gcc-4_5-branch revision 160292]\r\nCopyright (C) 2010 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\nuname -a\r\nLinux foxbat 2.6.34.7-0.3-desktop #1 SMP PREEMPT 2010-09-20 15:27:38 +0200 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nmake check fails only seldom (1 run out of ~50) - AFAIU due to the nature of the test (run on random data).\r\nI'm attaching the directory with failed test details.\r\n",
            "published" : "2010-11-11T11:23:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "6997097751970571864",
              "fileName" : "libarchive_test.2010-11-10T13.44.45-000.tar.bz2",
              "fileSize" : 23553,
              "mimetype" : "application/x-bzip2; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks!  It looks like this is a fuzzed bzip2-compressed input.\r\n\r\nWhat version of libbz2 do you have installed on your system?\r\n\r\nCan you check the log from configure and tell whether libarchive is using libbz2 for decompression (if not, it's using the external bunzip2 program)?\r\n",
            "published" : "2010-11-12T04:55:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I also noticed that you're building with -ggdb\r\n\r\nCan you get a backtrace from the core dump of libarchive_test?  That would help a lot.\r\n",
            "published" : "2010-11-12T05:00:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "uzelp99",
              "htmlLink" : "https://code.google.com/u/107466309786314339777/"
            },
            "content" : "Hello.\r\n\r\nUnfortunately, I accidentally deleted the core file, so I can not provide the backtrace :( (sorry for this). I have libbz2-1.0.5 (openSUSE 11.3 pkg).\r\n\r\nI tried to reproduce the issue again (make check in a loop). This time the result looks different:\r\n\r\nCore was generated by `./libarchive_test'.\r\nProgram terminated with signal 11, Segmentation fault.\r\n#0  0x00000000004177bc in parse_rockridge (a=0x4f15640, file=0x4f207d0, p=0x6adfb630 <Address 0x6adfb630 out of bounds>, end=0x6adfb6e0 <Address 0x6adfb6e0 out of bounds>)\r\n    at libarchive/archive_read_support_format_iso9660.c:1903\r\n1903\t\t    && p[0] >= 'A' && p[0] <= 'Z' /* Sanity-check 1st char of name. */\r\n#0  0x00000000004177bc in parse_rockridge (a=0x4f15640, file=0x4f207d0, p=0x6adfb630 <Address 0x6adfb630 out of bounds>, end=0x6adfb6e0 <Address 0x6adfb6e0 out of bounds>)\r\n    at libarchive/archive_read_support_format_iso9660.c:1903\r\n#1  0x0000000000417cfc in read_CE (a=0x4f15640, iso9660=0x4f15ab0) at libarchive/archive_read_support_format_iso9660.c:2210\r\n#2  0x000000000041540e in read_children (a=0x4f15640, parent=0x4f1e470) at libarchive/archive_read_support_format_iso9660.c:1010\r\n#3  0x000000000041555f in read_entries (a=0x4f15640) at libarchive/archive_read_support_format_iso9660.c:1054\r\n#4  0x0000000000415ac2 in archive_read_format_iso9660_read_header (a=0x4f15640, entry=0x4de7a80) at libarchive/archive_read_support_format_iso9660.c:1202\r\n#5  0x0000000000409962 in archive_read_next_header2 (_a=0x4f15640, entry=0x4de7a80) at libarchive/archive_read.c:454\r\n#6  0x0000000000409a0c in archive_read_next_header (_a=0x4f15640, entryp=0x7fffbdef4e50) at libarchive/archive_read.c:489\r\n#7  0x000000000044b9d8 in test_fuzz () at libarchive/test/test_fuzz.c:152\r\n#8  0x000000000043fc8a in test_run (i=18, tmpdir=0x7fffbdef5070 \"/tmp/libarchive_test.2010-11-16T16.35.44-000\") at libarchive/test/main.c:1708\r\n#9  0x00000000004408bf in main (argc=1, argv=0x7fffbdef52c0) at libarchive/test/main.c:2059\r\n\r\n\r\nI will attach the files produced by crashed test.\r\n\r\nIs it possible somehow to re-run the test_fuzz with the same input to reproduce\r\nthe crash in the debugger?\r\n",
            "published" : "2010-11-18T09:58:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4322585051128760729",
              "fileName" : "libarchive_test.2010-11-16T16.35.44-000.tar.bz2",
              "fileSize" : 34528,
              "mimetype" : "application/x-bzip2; charset=binary"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "uzelp99",
              "htmlLink" : "https://code.google.com/u/107466309786314339777/"
            },
            "content" : "BTW I'm running the make check loop again to see if I can reproduce the bzip2 related crash.",
            "published" : "2010-11-18T10:00:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "uzelp99",
              "htmlLink" : "https://code.google.com/u/107466309786314339777/"
            },
            "content" : "Oh, and\r\n\r\n> Can you check the log from configure and tell whether libarchive is using libbz2 for decompression\r\n\r\nlibarchive-2.8.4 $ CFLAGS=\"-ggdb -O0\" ./configure --enable-bsdcpio --enable-static 2>&1 | egrep -i 'bz2|bzip'\r\nchecking for BZ2_bzDecompressInit in -lbz2... yes\r\n\r\nDoes this answer your question?",
            "published" : "2010-11-18T10:06:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "uzelp99",
              "htmlLink" : "https://code.google.com/u/107466309786314339777/"
            },
            "content" : "> BTW I'm running the make check loop again to see if I can reproduce the bzip2 related crash.\r\n\r\nHmm, this time I got:\r\n\r\nProgram terminated with signal 11, Segmentation fault.\r\n#0  0x0000000000418584 in next_cache_entry (iso9660=0x4f15ab0) at libarchive/archive_read_support_format_iso9660.c:2516\r\n2516\t\t\twhile (file->parent != NULL && !file->parent->exposed) {\r\n#0  0x0000000000418584 in next_cache_entry (iso9660=0x4f15ab0) at libarchive/archive_read_support_format_iso9660.c:2516\r\n#1  0x0000000000418482 in next_entry_seek (a=0x4f15640, iso9660=0x4f15ab0, pfile=0x7fff7f1f3d10) at libarchive/archive_read_support_format_iso9660.c:2480\r\n#2  0x0000000000415af3 in archive_read_format_iso9660_read_header (a=0x4f15640, entry=0x4de7a80) at libarchive/archive_read_support_format_iso9660.c:1209\r\n#3  0x0000000000409962 in archive_read_next_header2 (_a=0x4f15640, entry=0x4de7a80) at libarchive/archive_read.c:454\r\n#4  0x0000000000409a0c in archive_read_next_header (_a=0x4f15640, entryp=0x7fff7f1f3e00) at libarchive/archive_read.c:489\r\n#5  0x000000000044b9d8 in test_fuzz () at libarchive/test/test_fuzz.c:152\r\n#6  0x000000000043fc8a in test_run (i=18, tmpdir=0x7fff7f1f4020 \"/tmp/libarchive_test.2010-11-18T12.20.05-000\") at libarchive/test/main.c:1708\r\n#7  0x00000000004408bf in main (argc=1, argv=0x7fff7f1f4270) at libarchive/test/main.c:2059",
            "published" : "2010-11-23T13:21:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bernhard.haslhofer",
              "htmlLink" : "https://code.google.com/u/bernhard.haslhofer@gmail.com/"
            },
            "content" : "Hi,\r\n\r\nI have a similar problem when I try to build libarchive-2.8.4 on an Amazon Linux AMI image:\r\n\r\n\r\n18: test_fuzz                                         unxz: (stdin): Compressed data is corrupt\r\nunxz: (stdin): Compressed data is corrupt\r\n\r\nThe log file in /tmp is unfortunately empty.\r\n\r\nAny idea how to solve this?\r\n",
            "published" : "2011-07-15T18:53:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"18: test_fuzz                                         unxz: (stdin): Compressed data is corrupt unxz: (stdin): Compressed data is corrupt\"\r\n\r\nThis is not a test failure.  These messages are expected:  If the system does not have liblzma, libarchive will instead use the command-line \"unxz\" program.  The test_fuzz test exercises error handling by passing deliberately corrupted data to libarchive; in this case, the unxz program will emit warnings to stderr that are completely expected.\r\n\r\nThe errors reported earlier in this bug are real failures, though I suspect these specific issues have been fixed in the source code in SVN.\r\n",
            "published" : "2011-07-16T06:14:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The crash reported in next_cache_entry (comment 6 above) may be the same issue I recently found and reported in Issue 199.\r\n",
            "published" : "2011-11-23T09:28:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I just spent a little while looking at the backtrace in comment 3 above.\r\n\r\nIt looks like the read_CE code doesn't verify that the offsets are within the current block.  (though maybe this is checked elsewhere?)\r\n\r\nI've attached a patch against libarchive/trunk that should guard against this particular issue.  It should not require much to adapt it to libarchive 2.8.\r\n\r\n",
            "published" : "2011-11-24T19:51:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1150010000",
              "fileName" : "iso9660-ce-rockridge.patch",
              "fileSize" : 567,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I just committed a candidate fix for the CE issue in comment 3 above to libarchive/trunk.\r\n\r\nI'll run the fuzz tester overnight to see if I can reproduce any failures here.\r\n",
            "published" : "2011-11-26T07:07:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 116,
        "title" : "bsdtar -x doesn't preserve xattrs",
        "summary" : "bsdtar -x doesn't preserve xattrs",
        "stars" : 1,
        "starred" : false,
        "status" : "WorksForMe",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "erikas.aubade",
          "htmlLink" : "https://code.google.com/u/erikas.aubade@gmail.com/"
        },
        "updated" : "2010-11-14T05:11:32.000Z",
        "published" : "2010-11-13T07:24:35.000Z",
        "closed" : "2010-11-14T05:11:32.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "erikas.aubade",
              "htmlLink" : "https://code.google.com/u/erikas.aubade@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. echo &quot;This is only a test&quot; &gt;  test.txt\r\n2. attr -s user.testing -V HELLO test.txt\r\n3. attr -g user.testing test.txt\r\n4. bsdtar -cv --format=pax  -f test.tar test.txt\r\n5. cat test.tar\r\n6 bsdtar -xf test.tar\r\n7 attr -g user.testing test.txt\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThe value(&quot;HELLO&quot;) for user.testing is visible when examining the contents of the .tar file (as well as by running attr -g on the original file), but when the archive is extracted, the xattr value for user.testing is no longer set. The man page doesn't seem to indicate this would need an explicit command line paramater to enable.\r\n\r\n\r\n<b>What version are you using?</b>\n\r\nbsdtar 2.8.4 - libarchive 2.8.4\r\n\r\n<b>On what operating system?</b>\n\r\nUbuntu Maverick, 10.10\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2010-11-13T07:24:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "You need to include the -p option to restore extended metadata such as xattrs.\r\n\r\nI just tried this using the bsdtar package distributed by Canonical and your example seems to work fine if you use -xp instead of just -x.\r\n",
            "published" : "2010-11-14T05:11:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2010-11-14T05:11:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WorksForMe"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 117,
        "title" : "Do not disaply unavailable features",
        "summary" : "Do not disaply unavailable features",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dongsheng.song",
          "htmlLink" : "https://code.google.com/u/100007507097135879197/"
        },
        "updated" : "2010-12-11T19:02:11.000Z",
        "published" : "2010-11-19T02:40:30.000Z",
        "closed" : "2010-12-11T19:02:11.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dongsheng.song",
              "htmlLink" : "https://code.google.com/u/100007507097135879197/"
            },
            "content" : "Even I have not build bsdtar with lzma, bsdtar still report:\r\n\r\nC:\\&gt;bsdtar --help\r\n...\r\n-z, -j, -J, --lzma  Compress archive with gzip/bzip2/xz/lzma\r\n...\r\n\r\nI expected bsdtar should report:\r\nC:\\&gt;bsdtar --help\r\n...\r\n-z, -j, -J          Compress archive with gzip/bzip2/xz\r\n...\r\n",
            "published" : "2010-11-19T02:40:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "If you do not have lzma libraries, libarchive still compiles basic lzma support which attempts to run separate command-line programs.\r\n\r\nSo \"bsdtar -c --lzma\" will try to run the \"lzma\" command-line program to compress the data.  In particular, this works if you install lzma executables after you've built bsdtar.",
            "published" : "2010-11-19T05:43:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've decided not to change the existing behavior here.\r\n\r\nAs explained above, even when you build without lzma libraries, bsdtar will attempt to run external programs, so the --lzma option is available and can be used.",
            "published" : "2010-12-11T19:02:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dongsheng.song",
              "htmlLink" : "https://code.google.com/u/100007507097135879197/"
            },
            "content" : "Maybe you should distinguish the two cases, let the user know whether the feature is built-in or need to run separate command-line programs.\r\n\r\n",
            "published" : "2010-12-12T01:16:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 118,
        "title" : "bsdtar should display thirdparty library details like curl",
        "summary" : "bsdtar should display thirdparty library details like curl",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dongsheng.song",
          "htmlLink" : "https://code.google.com/u/100007507097135879197/"
        },
        "updated" : "2013-12-20T05:41:49.000Z",
        "published" : "2010-11-19T02:44:03.000Z",
        "closed" : "2013-12-20T05:41:49.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dongsheng.song",
              "htmlLink" : "https://code.google.com/u/100007507097135879197/"
            },
            "content" : "Here is bsdtar output:\r\n\r\nC:\\&gt;bsdtar --help\r\n...\r\nbsdtar 2.8.4 - libarchive 2.8.4\r\n\r\nC:\\&gt;bsdtar --version\r\nbsdtar 2.8.4 - libarchive 2.8.4\r\n\r\nHere is curl output:\r\nC:\\&gt;curl --version\r\ncurl 7.21.2 (i386-pc-win32) libcurl/7.21.2 OpenSSL/0.9.8p zlib/1.2.5 libssh2/1.2.7\r\nProtocols: dict file ftp ftps gopher http https imap imaps ldap pop3 pop3s rtsp\r\nscp sftp smtp smtps telnet tftp\r\nFeatures: AsynchDNS Largefile NTLM SSL SSPI libz\r\n\r\nI expected bsdtar should report:\r\n\r\nC:\\&gt;bsdtar --version\r\nbsdtar 2.8.4 - libarchive 2.8.4, zlib/1.2.5, bzip2/1.0.6, xz/5.0.0\r\n",
            "published" : "2010-11-19T02:44:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "That is a very good idea.\r\n\r\nIf you have time to put together a patch, I think it should be easy to add\r\n  const char *archive_version_details(void);\r\nto archive.h and implement it in archive_util.c to return a string of the form:\r\n    libarchive 2.8.4 zlib/1.2.5 bz2lib/1.0.6 liblzma/5.0.0\r\n\r\nYou will need to add some header inclusions and conditional logic to\r\narchive_util.c to correctly build the full string.",
            "published" : "2010-11-19T07:00:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This has been implemented by Ross Lagerwall.  Thanks for the suggestion!\r\n",
            "published" : "2013-12-20T05:41:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 119,
        "title" : "Fail to open an ISO image (iso9660)",
        "summary" : "Fail to open an ISO image (iso9660)",
        "stars" : 0,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "little.owl@email.cz",
          "htmlLink" : "https://code.google.com/u/107668431616534867655/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2010-12-07T06:48:35.000Z",
        "published" : "2010-11-22T13:11:01.000Z",
        "closed" : "2010-12-07T06:48:35.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "little.owl@email.cz",
              "htmlLink" : "https://code.google.com/u/107668431616534867655/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. http://redhat.lsu.edu/dist/5.2/iso/redhat-5.2-i386.iso (487MB :-( )\r\n2. try to open the iso image as an archive\r\n3. function archive_read_next_header() always returns ARCHIVE_FATAL (-30)\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nWell, I expect, that I will be able to read that iso image.\r\n\r\n<b>What version are you using?</b>\nlibarchive-2.8.4-1 (ftp://download.fedora.redhat.com/pub/fedora/linux/development/rawhidesource/SRPMS/libarchive-2.8.4-1.fc14.src.rpm)\r\nUnfortunately, there is an iso9660 related patch.\r\n\r\n<b>On what operating system?</b>\nFedora 14 i386\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\npre-packaged binary \r\n\r\nWhat compiler or development environment (pleaset include version)?\r\ngcc (GCC) 4.5.1 20100924 (Red Hat 4.5.1-4)\r\n\r\n<b>Please provide any additional information below.</b>\nI can use gnome file-roller to extract data from the image or mount it as loop device; however libarchive fails. ",
            "published" : "2010-11-22T13:11:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Could you try an attached patch?",
            "published" : "2010-11-23T06:05:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted",
              "owner" : "ggcueroad"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "8872646397336073894",
              "fileName" : "iso.patch",
              "fileSize" : 1526,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "The previous patch had another problems.\r\nPlease use a new one.",
            "published" : "2010-11-23T07:54:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-8425848216514791051",
              "fileName" : "iso-location-check.patch",
              "fileSize" : 1548,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "little.owl@email.cz",
              "htmlLink" : "https://code.google.com/u/107668431616534867655/"
            },
            "content" : "OK, thank you a lot, an incredibly fast response. I am going to test it and I will let you know ASAP.",
            "published" : "2010-11-24T13:56:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "little.owl@email.cz",
              "htmlLink" : "https://code.google.com/u/107668431616534867655/"
            },
            "content" : "Hi, I have finally tested it and it seems it fixes the problem. Thanks a lot for you work.",
            "published" : "2010-12-05T23:29:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thanks for the test.\r\n\r\nI fixed this issue in trunk r2819 and release/2.8 r2820.",
            "published" : "2010-12-07T06:48:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 120,
        "title" : "example untar do not work properly",
        "summary" : "example untar do not work properly",
        "stars" : 1,
        "starred" : false,
        "status" : "WorksForMe",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "sabausz76",
          "htmlLink" : "https://code.google.com/u/114060068093474053402/"
        },
        "updated" : "2010-12-05T23:37:13.000Z",
        "published" : "2010-11-24T13:44:26.000Z",
        "closed" : "2010-12-05T23:37:13.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sabausz76",
              "htmlLink" : "https://code.google.com/u/114060068093474053402/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. compile the untar from the examples-folder\r\n2. start untar with &quot;./untar -vx -f testtar.tar&quot;\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n- I expect the files in the directory /testtar/\r\n- The files are expanded but the content is incorrect\r\n- The size of the files is correct\r\n\r\n<b>What version are you using?</b>\nlibarchive 2.8.0\r\n\r\n<b>On what operating system?</b>\nubuntu 10.04\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nlibarchive delivered with ubuntu 10.04.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n-\r\n\r\n<b>Please provide any additional information below.</b>\nI debugged the untar. I found out that in the &quot;copy_data&quot;-function the &quot;archive_read_data_block&quot; gives back in the &quot;size&quot; always 0. When I set the correct size in the debugmode it will work. \r\n",
            "published" : "2010-11-24T13:44:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "9023696433374300284",
              "fileName" : "testtar.tar",
              "fileSize" : 10240,
              "mimetype" : "application/x-tar; charset=binary",
              "isDeleted" : true
            }, {
              "attachmentId" : "-5505604414085988662",
              "fileName" : "untar",
              "fileSize" : 12140,
              "mimetype" : "application/x-executable; charset=binary",
              "isDeleted" : true
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Can this be reproduced on trunk? There were some important fixes in untar.c that could easily explain this.",
            "published" : "2010-11-24T23:12:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The long comment at the top of untar.c mentions that Linux users need to include -D_FILE_OFFSET_BITS=64 when building the untar binary.  I was able to reproduce your problem on Ubuntu 10.10 by building untar.c without that option, but when I included that option, it worked correctly.\r\n\r\nThe libarchive library is always built with large file support enabled, but this is not the default setting on 32-bit Linux, so you have to explicitly specify large file support when building programs that use libarchive.\r\n\r\nIn libarchive trunk, we've made some changes that mostly eliminate this requirement, but there are still a few remaining areas that need work.  These could be addressed.  Please let me know if you're interested in trying to work out a fix yourself, I know generally what needs to be done and would be happy to help someone develop a patch to improve this part of libarchive.  Unfortunately, I simply don't have time to do the work myself.\r\n\r\n",
            "published" : "2010-11-25T07:14:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sabausz76",
              "htmlLink" : "https://code.google.com/u/114060068093474053402/"
            },
            "content" : "It works well. So easy it is. Thank you very much for the very fast response. Shame on me that i didn't read the comment...\r\nI started with the minitar.c. In this example there is no hint for this issue. \r\nUnfortunately, I don't have time to work out a fix.",
            "published" : "2010-11-25T08:45:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2010-12-05T23:37:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WorksForMe"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 121,
        "title" : "Create tar where type=file/contents=name and type=link/link=name exists.",
        "summary" : "Create tar where type=file/contents=name and type=link/link=name exists.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "austin@zieglers.ca",
          "htmlLink" : "https://code.google.com/u/103752908593899398757/"
        },
        "updated" : "2010-12-07T05:25:26.000Z",
        "published" : "2010-12-02T22:50:47.000Z",
        "closed" : "2010-12-07T05:25:26.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "austin@zieglers.ca",
              "htmlLink" : "https://code.google.com/u/103752908593899398757/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n1. Create test-mtree.mtree with the following contents.\r\n\r\n  #mtree\r\n  test-mtree/test-mtree type=file contents=test-mtree\r\n  test-mtree/test-mtree.txt type=link link=test-mtree\r\n  test-mtree/test-mtree.doc type=file contents=test-mtree\r\n\r\n2. Create test-mtree:\r\n\r\n  echo test-mtree &gt; test-mtree\r\n\r\n3. Create a tarfile from the test-mtree.mtree:\r\n\r\n  bsdtar cvf test-mtree.tar @test-mtree.mtree\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpected:\r\n  a test-mtree/test-mtree\r\n  a test-mtree/test-mtree.txt\r\n  a test-mtree/test-mtree.doc\r\n\r\nActual:\r\n  a test-mtree/test-mtree\r\n\r\nIf the type=link line is commented out:\r\ntest-mtree.mtree:\r\n\r\n  #mtree\r\n  test-mtree/test-mtree type=file contents=test-mtree\r\n  #test-mtree/test-mtree.txt type=link link=test-mtree\r\n  test-mtree/test-mtree.doc type=file contents=test-mtree\r\n\r\nExpected:\r\n  a test-mtree/test-mtree\r\n  a test-mtree/test-mtree.doc\r\n\r\nActual:\r\n  a test-mtree/test-mtree\r\n  a test-mtree/test-mtree.doc\r\n\r\nIf contents= are removed:\r\ntest-mtree2.mtree:\r\n\r\n  #mtree\r\n  test-mtree/test-mtree type=file\r\n  test-mtree/test-mtree.txt type=link link=test-mtree\r\n  test-mtree/test-mtree.doc type=file\r\n\r\nCommand:\r\n  bsdtar cvf test-mtree2.tar -C .. @test-mtree/test-mtree2.mtree\r\n\r\nExpected:\r\n  a test-mtree/test-mtree\r\n  a test-mtree/test-mtree.txt\r\n  a test-mtree/test-mtree.doc\r\n\r\nActual:\r\n  a test-mtree/test-mtree\r\n  a test-mtree/test-mtree.txt\r\n  a test-mtree/test-mtree.doc\r\n\r\n<b>What version are you using?</b>\nbsdtar 2.8.4 - libarchive 2.8.4\r\n\r\n<b>On what operating system?</b>\nLinux austin-desktop 2.6.35-23-generic #41-Ubuntu SMP Wed Nov 24 11:55:36 UTC 2010 x86_64 GNU/Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nYes. (I have tried all three, including a cmake -DCMAKE_BUILD_TYPE=Debug.)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc (Ubuntu/Linaro 4.4.4-14ubuntu5) 4.4.5\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThe debug seemed to suggest that the link item is successfully read but then treated as the end of file without writing it when you're also specifying contents= in an mtree format.",
            "published" : "2010-12-02T22:50:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "austin@zieglers.ca",
              "htmlLink" : "https://code.google.com/u/103752908593899398757/"
            },
            "content" : "I've come up with a workaround for the problem in the hope that it will help identify the source and also get around my immediate need.\r\n\r\ntest-mtree3.mtree:\r\n  #mtree\r\n  test-mtree/test-mtree type=file contents=test-mtree\r\n  test-mtree/test-mtree.doc type=file contents=test-mtree\r\n\r\ntest-mtree4.mtree:\r\n  #mtree\r\n  test-mtree/test-mtree.txt type=link link=test-mtree\r\n\r\nCommand:\r\n  bsdtar cvf test-mtree-multi.tar @test-mtree3.mtree @test-mtree4.mtree\r\n\r\nExpected:\r\n  a test-mtree/test-mtree\r\n  a test-mtree/test-mtree.doc\r\n  a test-mtree/test-mtree.txt\r\n\r\nActual:\r\n  a test-mtree/test-mtree\r\n  a test-mtree/test-mtree.doc\r\n  a test-mtree/test-mtree.txt",
            "published" : "2010-12-03T00:32:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I found one error in the mtree parser that is triggered by having a line without \"contents\" following one that does have a \"contents\" entry.  The attached patch seems to fix it by clearing the \"contents\" data before parsing the next line.\r\n\r\nPlease try the attached patch and let me know if this fixes the problem you're seeing.\r\n\r\n",
            "published" : "2010-12-05T23:33:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Create tar where type=file/contents=name and type=link/link=name exists.",
              "status" : "Waiting"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-3020282315864663646",
              "fileName" : "mtree.patch",
              "fileSize" : 486,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "austin@zieglers.ca",
              "htmlLink" : "https://code.google.com/u/103752908593899398757/"
            },
            "content" : "That fixes the demonstrated case. Thanks for the quick response.\r\n\r\n(I'm actually going to go with my second solution for other reasons, but it's great to see the quick response for future work.)",
            "published" : "2010-12-06T19:56:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fix has been committed to libarchive/trunk r2814 and libarchive/release/2.8 r2817.\r\n\r\nThanks for the report; please let us know if you find any other problems.",
            "published" : "2010-12-07T05:25:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 122,
        "title" : "libarchive 2.8.4 fails lzma/xz tests with xz 5.0.0",
        "summary" : "libarchive 2.8.4 fails lzma/xz tests with xz 5.0.0",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "timo.gurr",
          "htmlLink" : "https://code.google.com/u/105711473354157281268/"
        },
        "updated" : "2010-12-05T20:32:38.000Z",
        "published" : "2010-12-03T21:13:49.000Z",
        "closed" : "2010-12-05T20:32:38.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "timo.gurr",
              "htmlLink" : "https://code.google.com/u/105711473354157281268/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. update xz from 4.999.9_beta to 5.0.0\r\n2. build &amp; run libarchive 2.8.4 tests\r\n3. see test_write_compress_{lzma,xz} fail\r\n\r\nThe two tests do a filesize comparison &quot;Level 0 really does result in larger data.&quot; which no longer seems to be true:\r\n\r\nlibarchive/test/test_write_compress_lzma.c:191: Assertion failed: used2 &gt; used1\r\n   Description: Compression-level=0 wrote 689 bytes; default wrote 759 bytes\r\n\r\nlibarchive/test/test_write_compress_xz.c:199: Assertion failed: used2 &gt; used1\r\n   Description: Compression-level=0 wrote 736 bytes; default wrote 804 bytes\r\n\r\n\r\nThe xz 5.0.0 NEWS file states changes in the compression settings which might be the cause:\r\n\r\n      * The compression settings associated with the preset levels\r\n        -0 ... -9 have been changed. --extreme was changed a little too.\r\n        It is now less likely to make compression worse, but with some\r\n        files the new --extreme may compress slightly worse than the old\r\n        --extreme.\r\n\r\nThere's also a downstream bugreport on the Gentoo Linux bugtracker with a complete build log attached:\r\nhttp://bugs.gentoo.org/show_bug.cgi?id=343829",
            "published" : "2010-12-03T21:13:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the report.\r\n\r\nI've commented out the offending checks in both libarchive/trunk and libarchive/release/2.8.\r\n(The check was intended to help verify that the compression-level setting was actually\r\ngetting passed down into liblzma and appropriately affecting the result.)\r\n",
            "published" : "2010-12-05T20:32:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in libarchive/trunk r2811 and libarchive/release/2.8 r2812",
            "published" : "2010-12-05T22:41:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 123,
        "title" : "testsuite for bsdtar fails (test 15, option_gid_gname)",
        "summary" : "testsuite for bsdtar fails (test 15, option_gid_gname)",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "impulsivedaniel",
          "htmlLink" : "https://code.google.com/u/104052935833981880323/"
        },
        "updated" : "2010-12-11T18:58:18.000Z",
        "published" : "2010-12-11T13:55:10.000Z",
        "closed" : "2010-12-11T18:58:18.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "impulsivedaniel",
              "htmlLink" : "https://code.google.com/u/104052935833981880323/"
            },
            "content" : " # BSDTAR=$(pwd)/bsdtar ./bsdtar_test -v -r tar/test/ 15\r\n\r\n[...]\r\n 15: test_option_gid_gname\r\ntar/test/test_option_gid_gname.c:67: data + 297 != &quot;\\0&quot;\r\n[...]\r\n\r\nThe relevant archive file contains &quot;console&quot; at that very position which is the group name for gid 17 on my system.",
            "published" : "2010-12-11T13:55:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "impulsivedaniel",
              "htmlLink" : "https://code.google.com/u/104052935833981880323/"
            },
            "content" : "oh dang i just realized this is already mentioned in Issue 93\r\nhttp://code.google.com/p/libarchive/issues/detail?id=93\r\nany pointers how to solve it?",
            "published" : "2010-12-11T13:56:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed the fix from Issue 93.  Thanks for reminding me about this old issue.\r\n",
            "published" : "2010-12-11T18:58:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 124,
        "title" : "Small xrefs fix in archive_read_disk(3) man page",
        "summary" : "Small xrefs fix in archive_read_disk(3) man page",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "njoly@pasteur.fr",
          "htmlLink" : "https://code.google.com/u/104972999205912938509/"
        },
        "updated" : "2010-12-20T04:45:05.000Z",
        "published" : "2010-12-19T22:36:09.000Z",
        "closed" : "2010-12-20T04:45:05.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "njoly@pasteur.fr",
              "htmlLink" : "https://code.google.com/u/104972999205912938509/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Read archive_read_disk(3) man page.\r\n<b>2.</b>\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThe man page refer 3 times to getpwid(3) and getgrgid(3) where it should be getpwuid(3) and getgrgid(3) instead.\r\n\r\n<b>What version are you using?</b>\n\r\nChecked against trunk.\r\n\r\n<b>On what operating system?</b>\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThe attached patch fo fix the problemtic cross-references.\r\n",
            "published" : "2010-12-19T22:36:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "6636600909988155165",
              "fileName" : "libarchive-crossref.diff",
              "fileSize" : 1068,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you!\r\n\r\nCommitted to trunk at r2830.",
            "published" : "2010-12-20T04:45:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 125,
        "title" : "libarchive's CMakeLists.txt finds major() when it shouldn't",
        "summary" : "libarchive's CMakeLists.txt finds major() when it shouldn't",
        "stars" : 1,
        "starred" : false,
        "status" : "Waiting",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "audiofanatic",
          "htmlLink" : "https://code.google.com/u/101007187099729181394/"
        },
        "updated" : "2011-01-08T22:10:27.000Z",
        "published" : "2011-01-04T08:44:44.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 35,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "When building the cmlibarchive project with LSB compilers (LSB = Linux Standards Base), the archive_entry.c file generates compiler errors because it relies on the following functions which are not provided by the LSB:\r\n\r\nmajor\r\nminor\r\nmakedev\r\n\r\nOn linux, these are generally implemented as macros which forward to functions like gnu_dev_makedev, etc., but they actually have very simple inlineable implementations. In fact, with certain GCC flags, these macros/functions *are* fully inlined. It would seem that this has been noted by the cmlibarchive developers too, since they have recently added the following to archive_entry.c\r\n\r\n#if !defined(HAVE_MAJOR) &amp;&amp; !defined(major)\r\n/* Replacement for major/minor/makedev. */\r\n#define major(x) ((int)(0x00ff &amp; ((x) &gt;&gt; 8)))\r\n#define minor(x) ((int)(0xffff00ff &amp; (x)))\r\n#define makedev(maj,min) ((0xff00 &amp; ((maj)&lt;&lt;8)) | (0xffff00ff &amp; (min)))\r\n#endif\r\n\r\nThe HAVE_MAJOR switch is the problem for LSB compilers. It is set earlier in archive_entry.c and it merely depends on one of MAJOR_IN_MKDEV or MAJOR_IN_SYSMACROS being defined. Unfortunately, the top level CMakeLists.txt file does this detection without considering LSB compilers, since the LSB does not provide either mkdev.h nor sysmacros.h, but the CMakeLists.txt file doesn't account for this. The result is that system versions of these headers can be found, which is incorrect/dangerous when using LSB compilers. This is easy to fix with the attached patch to the top level CMakeLists.txt file.\r\n\r\nNote that this bug was originally reported to KitWare since it affects CMake itself. They have requested that this issue be fixed in cmlibarchive itself since they import cmlibarchive sources. For reference, see here:\r\n\r\nhttp://public.kitware.com/Bug/view.php?id=11648\r\n\r\n\r\n\r\n",
            "published" : "2011-01-04T08:44:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-3718271327384173680",
              "fileName" : "CMakeLists.txt.patch",
              "fileSize" : 751,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king.kitware",
              "htmlLink" : "https://code.google.com/u/106779169582588935788/"
            },
            "content" : "The name of this project is \"libarchive\", not \"cmlibrachive\".  The latter is the mangled name CMake uses in its optionally builtin copy.  Nevertheless, this issue affects plain libarchive too.\r\n\r\nFrom CMakeLists.txt.patch:\r\n\r\n+GET_FILENAME_COMPONENT(ccomp_lsbcheck ${CMAKE_C_COMPILER} NAME)\r\n+IF(NOT ccomp_lsbcheck STREQUAL \"lsbcc\")\r\n\r\nThis is not a good way to determine if the compiler is LSB.  However, it should not matter.  If LSB does not provide sys/mkdev.h then how can\r\n\r\n  CHECK_SYMBOL_EXISTS(major            \"sys/mkdev.h\"     MAJOR_IN_MKDEV)\r\n\r\npass at all?  It should fail.\r\n",
            "published" : "2011-01-04T14:06:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Libarchive should already build on systems that lack major/minor/makedev, which is why the the code section you quote was added in late 2009.  The patch you propose is unfortunately not a suitable fix:  knowing the compiler does not determine what headers and/or standard library functions are available.\r\n\r\nHave you tried to reproduce this with the libarchive sources from libarchive.googlecode.com?  (Version 2.8.4 is the most recent stable version.)\r\n\r\nWhat exact error are you seeing when you try to build?\r\n\r\nDo you see errors when you try to configure libarchive using CMake?  Using the provided configure script?\r\n\r\nWhat version of libarchive are you using?\r\n\r\nDoes your system have either sys/mkdev.h or sys/sysmacros.h?\r\n\r\nIt appears you encountered this when trying to build CMake; have you tried building CMake with a binary package of libarchive (most Linux distros have some version of libarchive in their package systems)?\r\n\r\nCan you provide us more detailed instructions on how to reproduce this (e.g., on Ubuntu 10.10, install the \"XXX\" packages and then configure libarchive with this command line).\r\n",
            "published" : "2011-01-04T16:50:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "In the case of the lsbcc and lsbc++ compilers, knowing the compiler tells you precisely what headers and libraries are available because that is exactly what the LSB does for you. The whole point of the LSB is to define a set of headers, libraries, types, constants, etc. that the code can rely on being present. The other part of that however is that when you want to build an application to be LSB-compliant, it can *only* use those headers, libraries, etc. that the LSB spec includes.\r\n\r\nThe problem with the top level CMakeLists.txt file is that it doesn't differentiate between the headers that the LSB build packages provide and those that the system provides. When using the lsbcc compiler, the headers must come from /opt/lsb/include and no system headers should be referenced - if system headers were pulled in, that means the application is then potentially relying on things not in the LSB and hence you lose the whole point of using the lsb compiler in the first place. With the patch I provided, if the lsb compiler is detected, the result will be that both MAJOR_IN_MKDEV and MAJOR_IN_SYSMACROS will be undefined. This is what we want, because that will result in the HAVE_MAJOR symbol in archive_entry.c being undefined as well, and this will activate the block of #define's which provide the major, minor and makedev macros in archive_entry.c that I showed in my original bug report.\r\n\r\nAs things currently stand, the lsbcc compiler/linker complains because if major, minor and makedev are not inlined, they end up referencing functions which the LSB does not provide and hence you get unresolved symbols in the final binary. The things needed are already in archive_entry.c, we just need to fix the detection of sys/sysmacros.h and sys/mkdev.h which, as things stand, return incorrect results when using the LSB compiler. This is because the *system* include area *does* provide sys/sysmacros.h for example, but this header is not allowed to be used.\r\n\r\nMy concern is not with building libarchive as a separate project, I need to get CMake itself building with LSB compilers. The CMake project imports the libarchive sources into its own source tree, but fixing this problem for CMake requires fixing the situation within the libarchive project. I cannot use binary libarchive packages because I need to ensure everything is built with the LSB compiler (this gives compatability guarantees for the resultant binary).\r\n\r\nTo reproduce this problem, start by working on any LSB-4.0 compliant linux distribution. I've been using SLED 11, but there are others as well. See here for the list of certified distributions:\r\n\r\nhttps://www.linuxfoundation.org/lsb-cert/productdir.php?by_lsb\r\n\r\nThen you need to download the source for CMake 2.8.3:\r\n\r\nhttp://www.cmake.org/files/v2.8/cmake-2.8.3.tar.gz\r\n\r\nYou will also need to install the LSB build packages, which are available from the following location (I'm using the packages in repo-x86_64):\r\n\r\nhttp://ftp.linuxfoundation.org/pub/lsb/repositories/yum/lsb-4.1\r\n\r\nYou will need the lsb-build-* packages, all of which will create things in /opt/lsb. Note that I'm using my own Qt libraries too, since they also need to be built from source with LSB compilers. If you want the details of how to do that as well, you can see a summary bug report in Qt's bug tracker here, but beware that it is perhaps not for the faint-hearted:\r\n\r\nhttp://bugreports.qt.nokia.com/browse/QTBUG-16385\r\n\r\nI suspect that's more work than you want to go through. That's why I've provided a patch for you which hopefully is minimal and which also should have no side effects when not working with LSB compilers. ;)",
            "published" : "2011-01-04T23:41:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "I should add that I'm more than happy to be shown a better way to detect the LSB compiler. ;)",
            "published" : "2011-01-04T23:54:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "This is probably a more robust way to detect the LSB compiler:\r\n\r\nINCLUDE(CheckCSourceRuns)\r\nCHECK_C_SOURCE_RUNS(\"int main() { return __LSB_VERSION__ ? 0 : 1; }\" HAVE_LSB_COMPILER)\r\n",
            "published" : "2011-01-05T00:26:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "This would probably be a more robust way to detect the LSB compiler:\r\n\r\nINCLUDE(CheckCSourceRuns)\r\nCHECK_C_SOURCE_RUNS(\"int main() { return __LSB_VERSION__ ? 0 : 1; }\" HAVE_LSB_COMPILER)\r\nIF(NOT HAVE_LSB_COMPILER)\r\n ...\r\n",
            "published" : "2011-01-05T00:28:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "I'm sorry, but to me this looks like a clear WONTFIX. If the LSB compiler is not enforcing the visibility, it is broken and useless. There is no reason why any portable open source package should have to hard code headers just for the sake of LSB. It would completely defeat the purpose.\r\n\r\nFor that reason, I would suggest to start by filling a Problem Report against LSB itself...",
            "published" : "2011-01-05T03:27:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"When using the lsbcc compiler, the headers must come from /opt/lsb/include and no system headers should be referenced...\"\r\n\r\nI'm still confused.  Are you using the LSB compiler during configuration?  If the LSB compiler only accesses headers in /opt/lsb/include, and those headers aren't there, then I don't understand how the configuration is finding those headers.\r\n\r\n\"... and hence you get unresolved symbols in the final binary ...\"\r\n\r\nWhat unresolved symbols are you seeing?\r\n\r\nIf you're seeing problems with major(), then something is deeply screwed up.  The existing CMakeLists.txt causes CMake to compile and link a C program that references the major() function.  If that succeeds at configure time, but not at build time, then the configuration process is going badly awry and you are probably not going to get a functioning libarchive at the end.\r\n\r\nIf the error involves the minor() or makedev() functions, then we should add detection for those functions, not for the name of the environment.\r\n\r\n",
            "published" : "2011-01-05T03:38:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "Joerg,\r\n\r\nSorry, perhaps my explanations were not sufficiently clear. Let's have another go. ;) \r\n\r\nThe LSB is a specification that all the major linux distributions aim to meet. They will frequently go beyond what the LSB requires, but the LSB is meant to reflect a minimum set of headers, interfaces, libraries, commands, etc. that is common across linux distributions so that a single RPM package can be used on all LSB-compatible linux flavours. The primary reason for the existence of the LSB compilers is to allow application developers to target this specific standard and ensure that the binaries produced will be compatible with that specification.\r\n\r\nIn practice, the lsb compiler is simply forwarding through to the gcc compilers with appropriate flags added. The compiler is far from broken! It is enforcing precisely the restrictions that the developer wants it to so that their binaries meet the LSB spec. Don't think of it as the compiler not seeing things that exist on the system, think of it as the compiler *ensuring* that system things are not seen and instead the LSB-provided standard headers, etc. are used instead. The headers, libraries, etc. that the LSB build packages provide are purpose-built to reflect the LSB spec, which has its roots in common practice among the various linux distributions. If something is not present in the LSB spec, it is often for good reason - including that it might not be widely supported among linux distributions or implemented inconsistently, etc.\r\n\r\n",
            "published" : "2011-01-05T03:47:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "kientzle,\r\n\r\nThe headers will be there in /opt/lsb/include if the lsb compiler is being used. The LSB build packages are structured in such a way that the C compiler package (lsb-build-cc) depends on the package that contains the headers (lsb-build-base).\r\n\r\nThe symbols that are unresolved are dependent on the linux distribution, but typically they will be something like:\r\n\r\ngnu_dev_major\r\ngnu_dev_minor\r\ngnu_dev_makedev\r\n\r\nNote that major(), minor() and makedev() are typically implemented as macros rather than functions on most linux distributions. The LSB spec does NOT provide any of these three macros, nor does it provide the gnu_dev_* functions. There have been discussions about these things (see for example http://bugs.linuxbase.org/show_bug.cgi?id=2166 ), including over the past week on the lsb-discuss mailing list. The washup from all this is that since these macros have inlineable implementations, the gnu_dev_* functions do not need to be added to the LSB spec. It is an open discussion whether the three macros should be added, but the reality is that changes to the spec filter through very slowly. It can take years for linux distributions to get certified for the next LSB release in some cases, and the practical reality is that app developers typically can't wait that long for a build problem to be fixed!\r\n\r\nSo there isn't a problem with major() per se. The problem is more about how it got defined and was it in an LSB-compatible way. To be absolutely crystal clear, the current implementation in archive_entry.c is fine, as long as the detection for MAJOR_IN_MKDEV and MAJOR_IN_SYSMACROS is reliable. In the case of the lsb compilers, the way these tests are currently implemented in the top level CMakeLists.txt file will allow system headers to be pulled in when they shouldn't. The change I propose is very simple and will only affect the case where LSB compilers are used. All other scenarios remain unaffected by the proposed change. Hard to see the down side of accepting the patch....",
            "published" : "2011-01-05T04:14:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What are the actual error messages you are seeing when you try to build with lsbcc?\r\n\r\nThe downside of your patch is that it doesn't fix any real problem.  Based on your description so far, the existing configuration setup should work for you without your patch.  Clearly it doesn't, which means the real problem is somewhere else.\r\n\r\nWithout more information, we can't really do anything until one of us has time to try to replicate your environment and figure out what's really going on.\r\n",
            "published" : "2011-01-05T04:54:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "The existing setup does not work without the patch when using lsb compilers. I downloaded the libarchive 2.8.4 source release and built it successfully with the default compiler on SLED 11 SP1. I then wiped the build completely and tried again, this time with the LSB compiler. Here's the build error that results:\r\n\r\nLinking C executable ../../bin/libarchive_test                                                                        \r\nCMakeFiles/libarchive_test.dir/__/archive_entry.c.o: In function `archive_entry_dev':                                 \r\narchive_entry.c:(.text+0xa93): undefined reference to `gnu_dev_makedev'\r\nCMakeFiles/libarchive_test.dir/__/archive_entry.c.o: In function `archive_entry_devmajor':\r\narchive_entry.c:(.text+0xadd): undefined reference to `gnu_dev_major'\r\nCMakeFiles/libarchive_test.dir/__/archive_entry.c.o: In function `archive_entry_devminor':\r\narchive_entry.c:(.text+0xb1e): undefined reference to `gnu_dev_minor'\r\nCMakeFiles/libarchive_test.dir/__/archive_entry.c.o: In function `archive_entry_rdev':\r\narchive_entry.c:(.text+0xe09): undefined reference to `gnu_dev_makedev'\r\nCMakeFiles/libarchive_test.dir/__/archive_entry.c.o: In function `archive_entry_rdevmajor':\r\narchive_entry.c:(.text+0xe5f): undefined reference to `gnu_dev_major'\r\nCMakeFiles/libarchive_test.dir/__/archive_entry.c.o: In function `archive_entry_rdevminor':\r\narchive_entry.c:(.text+0xea6): undefined reference to `gnu_dev_minor'\r\ncollect2: ld returned 1 exit status\r\nmake[2]: *** [bin/libarchive_test] Error 1\r\nmake[1]: *** [libarchive/test/CMakeFiles/libarchive_test.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n\r\n\r\nI then wiped the build again, put in my patch to CMakeLists.txt and the build completed without error.",
            "published" : "2011-01-05T05:14:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you!\r\n\r\nThe configuration process specifically checks for major(), and you're seeing a link error for that.  So the configuration is finding that function but the build environment doesn't have it.  There are many possible explanations for this kind of mismatch between configuration and build; some could impact a lot of environments other than just LSB.\r\n\r\nCan you please provide the config.h and CMakeCache.txt files that were generated when you configured with the LSB compiler?  (The Google Code interface provides \"Attach a file\" as an option just below the editor.)\r\n\r\nCan you tell us the exact commands you used to configure and build with the LSB compiler, including any environment variables you set?\r\n",
            "published" : "2011-01-05T07:54:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "I'm doing an out of source build so keep that in mind. Other than that, nothing special (ie no env changes).\r\n\r\ncmake -DCMAKE_C_COMPILER:PATH=/opt/lsb/bin/lsbcc ../libarchive-2.8.4\r\nmake\r\n",
            "published" : "2011-01-05T09:02:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-1429534296528483242",
              "fileName" : "config.h",
              "fileSize" : 22068,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "4770739788956092872",
              "fileName" : "CMakeCache.txt",
              "fileSize" : 29375,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "Sorry, the config.h and CMakeCache.txt that I attached previously were for the *patched* sources. Here's the same files when using unpatched sources as per the 2.8.4 release. A diff between the two sets is also attached for convenience.",
            "published" : "2011-01-05T10:36:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-624443880138647149",
              "fileName" : "config.h",
              "fileSize" : 22065,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "1636807667543818252",
              "fileName" : "CMakeCache.txt",
              "fileSize" : 29293,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "-3263410573593906212",
              "fileName" : "afterCMake.patch",
              "fileSize" : 1368,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "That helps.  I see one obvious problem: this line is finding major in sys/sysmacros.h when it shouldn't:\r\n\r\nCHECK_SYMBOL_EXISTS(major            \"sys/sysmacros.h\" MAJOR_IN_SYSMACROS)\r\n\r\nSo we need to narrow down why CHECK_SYMBOL_EXISTS is not working correctly for you; it could be a cmake problem (unlikely), some oddity in your environment (unlikely), or there's some error in libarchive's CMakeLists.txt that's causing this to behave in an unexpected manner.\r\n\r\nCould you please try the five-line CMakeLists.txt file below?  Just put it into an empty directory, run \r\n\r\ncmake -DCMAKE_C_COMPILER:PATH=/opt/lsb/bin/lsbcc .\r\n\r\nand let me know the results.\r\n\r\nPROJECT(testproject C)\r\nCMAKE_MINIMUM_REQUIRED(VERSION 2.6.3 FATAL_ERROR)\r\nSET(CMAKE_BUILD_TYPE \"Debug\")\r\nINCLUDE(CheckSymbolExists)\r\nCHECK_SYMBOL_EXISTS(major            \"sys/sysmacros.h\" MAJOR_IN_SYSMACROS)\r\n\r\nThe results of this experiment will help narrow down exactly where the problem is.",
            "published" : "2011-01-05T17:47:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "libarchive's CMakeLists.txt finds major() when it shouldn't"
            },
            "canDelete" : true
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "The CMakeCache.txt from that is attached - it still says the symbol exists.\r\n\r\nI did some digging into CMake and I think I can see what's happening. The CHECK_SYMBOL_EXISTS test effectively reduces down to this:\r\n\r\n#include <sys/sysmacros.h>\r\n\r\nvoid cmakeRequireSymbol(int dummy,...){(void)dummy;}\r\nint main()\r\n{\r\n#ifndef major\r\n  cmakeRequireSymbol(0,&major);\r\n#endif\r\n  return 0;\r\n}\r\n\r\nSince major is a #define macro, the above test never actually tries to link anything with it. In fact, the test merely confirms that major is defined but never verifies whether it is useable. I guess that's in keeping with the name of the cmake function, since it is only checking that it *exists*, not that it can be used.\r\n\r\nThe question here is whether a different test is needed. Perhaps a TRY_COMPILE would be more robust? I've attached two other files which show how this could be done. When I used this approach, MAJOR_IN_SYSMACROS was defined for the non-lsb compiler and was undefined for LSB compiler (which is what we are aiming for here). The approach may need to be cleaned up a bit, but hopefully you get the idea.\r\n",
            "published" : "2011-01-05T21:14:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4939874043151230891",
              "fileName" : "CMakeCache.txt",
              "fileSize" : 9333,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "-7382373061031251054",
              "fileName" : "checkExists.c",
              "fileSize" : 65,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "978391925183810167",
              "fileName" : "CMakeLists.txt",
              "fileSize" : 189,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 18,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "Actually, a cleaner version would be this (no need for a separate external file and let cmake do more of the scaffolding):\r\n\r\nPROJECT(testproject C)\r\nCMAKE_MINIMUM_REQUIRED(VERSION 2.6.3 FATAL_ERROR)\r\nSET(CMAKE_BUILD_TYPE \"Debug\")\r\nINCLUDE(CheckCSourceCompiles)\r\nCHECK_C_SOURCE_COMPILES(\"#include <sys/sysmacros.h>\\nint main() { return major(256); }\" MAJOR_IN_SYSMACROS)\r\n",
            "published" : "2011-01-05T21:19:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 19,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Excellent!  Now we're really getting somewhere.  I suspect this may be affecting other people who are using non-default compilers, so I'm pretty excited about getting a robust solution.   (We've had a few questions from people trying to build libarchive using cross-compilers but never gotten enough information to be able to track down the issue.)\r\n\r\nNow that you've identified the general issue, I was able to track down some related documentation.  I wonder if CHECK_FUNCTION_EXISTS would be an even better choice here?\r\n\r\nIt seems that there's a natural flow that we should be following throughout the CMakeLists.txt file:\r\n  * Check for header files, build up CMAKE_REQUIRED_INCLUDES with header files that exist\r\n  * Check for libraries, build up CMAKE_REQUIRED_LIBRARIES with libraries that exist\r\n  * Check for required functions (exploiting the above two settings)\r\n\r\nI wonder if we're miusing CHECK_SYMBOL_EXISTS in other places?  Hmmm...\r\n",
            "published" : "2011-01-05T22:28:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 20,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try the attached patch to libarchive's CMakeLists.txt and let me know how this works.  I believe this addresses the issue you found and also fixes several other misuses of CHECK_SYMBOL_EXISTS.\r\n",
            "published" : "2011-01-08T22:10:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "8240917038068341405",
              "fileName" : "cmake_verify_linkage.patch",
              "fileSize" : 2845,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 21,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "It looks like this patch is already in the latest SVN, so I've tested that. The cmake step goes okay, but I can't verify the build due to build errors in the current SVN head. The end of the compiler output with the error I see follows:\r\n\r\n[  3%] Building C object libarchive/CMakeFiles/archive.dir/archive_read_disk_posix.c.o                                \r\n/local_scratch/sco265/libarchive-read-only/libarchive/archive_read_disk_posix.c: In function ‘setup_current_filesystem’:\r\n/local_scratch/sco265/libarchive-read-only/libarchive/archive_read_disk_posix.c:1029: error: storage size of ‘sfs’ isn’t known\r\ncc1: warnings being treated as errors\r\n/local_scratch/sco265/libarchive-read-only/libarchive/archive_read_disk_posix.c:1034: error: implicit declaration of function ‘statfs’\r\n/local_scratch/sco265/libarchive-read-only/libarchive/archive_read_disk_posix.c:1029: error: unused variable ‘sfs’\r\nmake[2]: *** [libarchive/CMakeFiles/archive.dir/archive_read_disk_posix.c.o] Error 1\r\nmake[1]: *** [libarchive/CMakeFiles/archive.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n",
            "published" : "2011-01-11T23:09:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 22,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "FYI, if you want to know if a particular function, macro, type, variable, header, etc. is provided by the LSB compilers, you can put in the symbol in the search box of the LSB navigator and get all the info you need:\r\n\r\nhttp://dev.linuxfoundation.org/navigator/commons/welcome.php",
            "published" : "2011-01-11T23:13:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 23,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king.kitware",
              "htmlLink" : "https://code.google.com/u/106779169582588935788/"
            },
            "content" : "Tim, in regard to SVN commit 2866, here is some CMake history.\r\n\r\nCHECK_FUNCTION_EXISTS was created first, but it doesn't work for \"functions\" that the implementation happens to choose to provide as macros, like \"isnan\" IIRC.  It also only checked that the standard libraries contain the given function, not that a header actually declares it such that it can be called.\r\n\r\nCHECK_SYMBOL_EXISTS was intended to be a successor to CHECK_FUNCTION_EXISTS that ensures the symbol is declared in a header and accounts for possible definition as a macro.  It *does* link an executable, but if the header defines the symbol as a macro then the test assumes it works and doesn't try to take the address of a macro.\r\n\r\nClearly there is a use for both.  Ultimately the only 100% safe check for any specific function is to write a custom source file that includes headers and actually tries invoking the function with the expected signature.  This is what your commit does for 'major', which is good.  For other symbols like strftime then whether to use CHECK_FUNCTION_EXISTS or CHECK_SYMBOL_EXISTS is not clear-cut based just on linking.\r\n",
            "published" : "2011-01-12T13:39:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 24,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Michihiro has fixed the problem with statfs()  (a missing check).  Please try again.\r\n\r\nBrad:  Thanks for the history; I'll review that commit again with this in mind.\r\n",
            "published" : "2011-01-12T16:48:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 25,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "Nope, Michihiro's changes made no difference. I still get the same build error. Looking at the #elif condition around line 1107, the wrong header is being checked. For statfs, you need to check for sys/statfs.h, not sys/vfs.h. It should also be noted that statvfs would be available, so it would be even better if the #if logic resulted in code that used statvfs instead of statfs. There is already a check to see if sys/statvfs.h is present, so combining HAVE_SYS_STATVFS_H and HAVE_STATVFS would seem to be the appropriate test for LSB (but that's just my relatively naive guess).\r\n\r\nNote also that the statvfs struct is available in the LSB too, so that adds extra weight towards using statvfs instead of statfs. That said, both should work (at least until the deprecation turns into full removal from the LSB).",
            "published" : "2011-01-13T21:50:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 26,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "Sorry, forgot to say which file I was looking in! It was archive_read_disk_posix.c",
            "published" : "2011-01-13T22:04:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 27,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "libarchive/trunk r2946 has another attempt to fix the statvfs issue.  Please let us know.",
            "published" : "2011-01-26T04:20:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 28,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "Now a slightly different error:\r\n\r\n/local_scratch/sco265/libarchive-read-only/libarchive/archive_read_disk_posix.c: In function ‘setup_current_filesystem’:\r\n/local_scratch/sco265/libarchive-read-only/libarchive/archive_read_disk_posix.c:1448: error: ‘fstatfs’ is deprecated (declared at /opt/lsb/include/sys/statfs.h:272)\r\n/local_scratch/sco265/libarchive-read-only/libarchive/archive_read_disk_posix.c:1461: error: ‘fstatfs’ is deprecated (declared at /opt/lsb/include/sys/statfs.h:272)\r\n/local_scratch/sco265/libarchive-read-only/libarchive/archive_read_disk_posix.c: In function ‘tree_current_stat’:\r\n/local_scratch/sco265/libarchive-read-only/libarchive/archive_read_disk_posix.c:2092: error: implicit declaration of function ‘fstatat’\r\n\r\n\r\nThe first couple of errors related to fstatfs deprecation should probably be warnings rather than errors, but the LSB state of fstatfs seems a bit confused. According to the LSB navigator, fstatfs appeared in LSB 1.0, was withdrawn in 2.0 and then re-appeared in 3.1! It recommends using fstatvfs instead, so basically it's a similar situation as for statfs/statvfs.\r\n\r\nThe missing declaration for fstatat is because it is not and never has been in the LSB (and it also only became available in the linux kernel as of 2.6.16 according to my Fedora 14 man page). At that point in the source code, there is a test HAVE_FSTATAT which appears to be returning the incorrect result for LSB, since it isn't available and yet HAVE_FSTATAT is defined. The alternative #else block is also a bit of a grey area for the LSB, since the stat() function is also not present in the LSB headers, but potentially it should be. I've asked the lsb-discuss mailing list for some clarification and will report back here once things become clearer. The relevant link and quote follow:\r\n\r\nhttp://refspecs.linux-foundation.org/LSB_4.0.0/LSB-Core-generic/LSB-Core-generic/baselib---xstat.html\r\n\r\n\"This interface is source-level only and should not be visible on binary level. It should be transformed to call to __xstat at compilation time.\"\r\n",
            "published" : "2011-01-26T09:06:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 29,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "Oh, wait, looks like the same situation for fstatat():\r\n\r\nhttp://refspecs.linux-foundation.org/LSB_4.0.0/LSB-Core-generic/LSB-Core-generic/baselib---fxstatat-1.html\r\n\r\nSo fstatat() should be available. I'll seek clarification on lsb-discuss for that too.",
            "published" : "2011-01-26T09:08:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 30,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "Turns out the whole fstatat() and stat() situation with LSB is rather complicated. For the details, see here:\r\n\r\nhttp://bugs.linuxbase.org/show_bug.cgi?id=2426\r\n\r\nBasically, fstatat() and stat() are \"magically\" transformed to __fxstat() and __xstat() by the LSB-specific libc_nonshared.a library, so you can call fstatat() and stat() normally as you would expect. Unfortunately, the LSB headers currently don't contain a prototype for fstatat(), but this seems to be an oversight in the LSB packages. While that is annoying, libarchive should still be able to handle this by properly setting HAVE_FSTATAT using CHECK_C_SOURCE_COMPILES and fall back to stat() when there is no fstatat(). There *is* a function prototype for stat() in the LSB headers, so this should work with the libarchive code as it currently stands once HAVE_FSTATAT is being set correctly.",
            "published" : "2011-01-26T21:34:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 31,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "To be more specific about fstatat(), the CMakeLists.txt currently uses the following to test for it:\r\n\r\nCHECK_FUNCTION_EXISTS_GLIBC(fstatat HAVE_FSTATAT)\r\n\r\nWith LSB, fstatat() doesn't exist in GLIBC, nor in *any* binary (as previously stated, it gets magically transformed to call a different function). I think this might be a similar situation to what we saw with the original part of this bug report. The current way of testing for fstatat() doesn't seem to be testing robustly. Ideally, it should try to compile a dummy program which includes a genuine function call to fstatat(). I must admin that I don't quite follow how CHECK_FUNCTION_EXISTS_GLIBC works - I can see that it does use a TRY_COMPILE, but this doesn't seem to be working 100% in this case.",
            "published" : "2011-01-26T21:53:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 32,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"Ideally, it should try to compile a dummy program which includes a genuine function call to fstatat().\"\r\n\r\nYou're absolutely right.  Unfortunately, I don't have time to work on this right now.  If you'd like to contribute patches to implement this, I'm happy to consider them.\r\n\r\nI suggest you look at the changes I committed for major() and try doing something similar with CHECK_C_SOURCE_COMPILES.  TRY_COMPILE can do more, but it's considerably more complex to use.\r\n",
            "published" : "2011-01-27T06:20:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 33,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "audiofanatic",
              "htmlLink" : "https://code.google.com/u/101007187099729181394/"
            },
            "content" : "Here's a patch which results in things building okay with LSB compilers. Note that we have to explicitly include the \"-Wimplicit -Werror\" flags because the LSB compilers emit deprecation warnings for statfs() and fstatfs(), which get turned into errors in the real build. The patch does this but perhaps not in a way which you'd like because it will apply to all subsequent tests (which might not be a bad thing actually).\r\n\r\nAlso note that the header paths used in the tests CHECK_C_SOURCE_COMPILES tests are those that the LSB says should be used for these functions. Hence, they should be correct for most unix variants. Not sure if that's enough for you, but since you were previously testing against GLIBC (ie unix-specific anyway), I suspect it should be fine.\r\n\r\nAnyway, this patch works for me. Hope its enough for you to see what needs to be done.",
            "published" : "2011-01-27T07:01:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-2843108398076064137",
              "fileName" : "CMakeLists.txt.patch",
              "fileSize" : 1794,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 34,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Unconditionally setting compiler flags won't work here.  We build with a lot of different compilers (Visual C++, for example) that have wildly different compiler options.\r\n\r\nBut this is certainly an improvement.  We're getting closer.\r\n",
            "published" : "2011-01-27T16:59:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 126,
        "title" : "Hard link detection fooled by symlinks when using -h",
        "summary" : "Hard link detection fooled by symlinks when using -h",
        "stars" : 1,
        "starred" : false,
        "status" : "Accepted",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-01-07T03:17:38.000Z",
        "published" : "2011-01-07T03:17:38.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Consider the directory below with a file 'a' that has a symlink 'b' and a hardlink 'c'.\r\n\r\n$ ls -il t\r\ntotal 24\r\n5105106 -rw-r--r--  2 tim  staff  3 Jan  6 19:11 a\r\n5105105 lrwxr-xr-x  1 tim  staff  1 Jan  6 19:10 b -&gt; a\r\n5105106 -rw-r--r--  2 tim  staff  3 Jan  6 19:11 c\r\n\r\nUsing the current trunk build of bsdtar with the -h flag (to dereference symlinks), t/b is resolved via lstat() with the same ino/dev values as t/a, so gets stored as a hardlink.  That is what should happen.  But that exhausts the link count for t/a, so t/a is dropped from the link cache and t/c gets recognized as a separate file.\r\n\r\n$ bin/bsdtar chf - t | tar tvf -\r\ndrwxr-xr-x  0 tim    staff       0 Jan  6 19:11 t/\r\n-rw-r--r--  0 tim    staff       3 Jan  6 19:11 t/a\r\nhrw-r--r--  0 tim    staff       0 Jan  6 19:11 t/b link to t/a\r\n-rw-r--r--  0 tim    staff       3 Jan  6 19:11 t/c\r\n\r\nBoth t/a and t/c should be stored as hardlinks to t/a.\r\n\r\nThis probably means that the hardlink detector needs an additional flag of some sort to suppress the link-counting optimization.  bsdtar should use this flag when -h is used.\r\n",
            "published" : "2011-01-07T03:17:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 127,
        "title" : "fix restore_pwd initialization in _archive_write_disk_header",
        "summary" : "fix restore_pwd initialization in _archive_write_disk_header",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "toscano.pino@tiscali.it",
          "htmlLink" : "https://code.google.com/u/112596846669485839055/"
        },
        "updated" : "2011-01-15T04:19:18.000Z",
        "published" : "2011-01-14T20:06:24.000Z",
        "closed" : "2011-01-15T04:19:18.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "toscano.pino@tiscali.it",
              "htmlLink" : "https://code.google.com/u/112596846669485839055/"
            },
            "content" : "On Hurd some of the unit test fails (see the build log of a Debian/Hurd buildd[1]) due to issues with the fchdir() in _archive_write_disk_header().\r\nThe problem is a consequence of r1991 (backported to the Debian package of libarchive 2.8.4): that revision avoids calling edit_deep_directories() if there's no PATH_MAX (as on Hurd), but later a-&gt;restore_pwd is used, and this fd is initialized only in edit_deep_directories().\r\nThe easy fix is initializing it just before, eventually, calling edit_deep_directories().\r\n\r\n<b>What version are you using?</b>\nlibarchive 2.8.4\r\n\r\n<b>On what operating system?</b>\nDebian GNU/Hurd.\r\n\r\n[1] https://buildd.debian.org/fetch.cgi?pkg=libarchive&amp;arch=hurd-i386&amp;ver=2.8.4-1&amp;stamp=1279203774&amp;file=log&amp;as=raw",
            "published" : "2011-01-14T20:06:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-5478076160518194121",
              "fileName" : "init_restore_pwd.diff",
              "fileSize" : 466,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Another good catch!\r\n\r\nCommitted to libarchive/trunk as r2888.",
            "published" : "2011-01-15T04:19:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 128,
        "title" : "'inited' not set in archive_vtable initalizations",
        "summary" : "'inited' not set in archive_vtable initalizations",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "toscano.pino@tiscali.it",
          "htmlLink" : "https://code.google.com/u/112596846669485839055/"
        },
        "updated" : "2011-01-15T04:14:36.000Z",
        "published" : "2011-01-14T20:16:09.000Z",
        "closed" : "2011-01-15T04:14:36.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "toscano.pino@tiscali.it",
              "htmlLink" : "https://code.google.com/u/112596846669485839055/"
            },
            "content" : "In few functions where a static archive_vtable is initialized, the 'inited' int variable is not changed, thus doing the vtable assignment everytime.\r\nOf course it is not a big deal, but just make some variables actually do what \r\nthey are for :)\r\n\r\nAttached there is a patch done for libarchive 2.8.4 for setting them.",
            "published" : "2011-01-14T20:16:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "8913235649703984159",
              "fileName" : "inited.diff",
              "fileSize" : 1052,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks!\r\n\r\nI've committed this as r2887 to trunk.",
            "published" : "2011-01-15T04:14:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-01-15T04:14:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 129,
        "title" : "build fails on SCO 5",
        "summary" : "build fails on SCO 5",
        "stars" : 2,
        "starred" : false,
        "status" : "Waiting",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Other" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "brianchina60221",
          "htmlLink" : "https://code.google.com/u/114424208961475687306/"
        },
        "updated" : "2011-01-26T04:56:12.000Z",
        "published" : "2011-01-18T18:34:53.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 22,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "libarchive/archive.h defines some types appropriate to the platform, but those types aren't used elsewhere in the code. There are many direct uses of, e.g., uint32_t.\r\n\r\nThe attached patch against trunk is big, but it just rearranges some stuff in archive.h, archive_entry.h, and archive_platform.h, and then seds the C99 types in libarchive/* to use the internal names.\r\n\r\nThank you.",
            "published" : "2011-01-18T18:34:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "128575958643790513",
              "fileName" : "types.patch",
              "fileSize" : 243417,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm curious:   What platform have you encountered that lacks both stdint.h and inttypes.h?\r\n",
            "published" : "2011-01-19T06:29:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "I'm sad to say that the box where I encountered the problem runs SCO 5.",
            "published" : "2011-01-19T15:37:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I suspect we can address your problems without requiring anything quite this dramatic.  If you can give us some more details (such as the exact compiler errors) that prompted this, I think we can help you out.\r\n\r\nThere is already some logic in the configure scripts to define int64_t and a few other C99-style types if they're not provided by the local system.  Can we extend that logic to cover the cases you've found?\r\n\r\nOlder Unix dialects used type names of the form u_int32_t or __int32_t, typically defined in sys/types.h.  Are those available on your system?  If so, we might use that to extend the existing configuration logic.\r\n\r\nMy biggest concern about this as written is the addition of so many new types to archive.h.  These types aren't used by any public libarchive interface and should not be exposed to libarchive users.\r\n",
            "published" : "2011-01-20T06:02:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bradley.d.house",
              "htmlLink" : "https://code.google.com/u/107274696510951145715/"
            },
            "content" : "I'm assuming the point of confusion is the purpose of the existence of __LA_INT64_T if the requirement is that these types not be used.  For consistency, it makes sense for the public prototype to match the implementation which is what this patch appears to do as the assumption was those datatypes are supported.  Obviously an end-user may not have defined their own int64_t on platforms that don't have it when trying to build libarchive. I'm assuming this was done as a special case for Windows, but really should have been designed to be more generic.\r\n\r\nAlso, I believe the end-goal is to build cmake on SCO 5 which imports libarchive, and doesn't use autoconf/automake/libtool build chain, and the CMakeLists.txt does not properly define the int64_t and friend datatypes for building. Even if it did, external callers wouldn't be able to build with it unless they also did the same int64_t logic which is probably inappropriate.\r\n\r\nFinally, I think it is improper to have code duplication defining __LA_INT64_T in 2 public header files (archive.h and archive_entry.h), which this patch also appears to resolve.",
            "published" : "2011-01-20T16:28:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"...the CMakeLists.txt does not properly define the int64_t and friend datatypes for building.\"\r\n\r\nPlease help us fix it.  If you can verify for us that the autoconf toolchain works on SCO 5, then we can adapt the techniques used there.\r\n\r\n\"... external callers wouldn't be able to build with it unless they also did the same int64_t logic which is probably inappropriate.\"\r\n\r\nExternal callers can use __LA_INT64_T.\r\n",
            "published" : "2011-01-21T06:24:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "build fails on SCO 5",
              "labels" : [ "-OpSys-All", "OpSys-Other" ]
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "Shortly after ./configure && make:\r\n\r\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/usr/local/include/libxml2 -Wall -Werror -g -O2 -MT libarchive/archive_acl.lo -MD -MP -MF libarchive/.deps/archive_acl.Tpo -c libarchive/archive_acl.c  -fPIC -DPIC -o libarchive/.libs/archive_acl.o\r\nIn file included from libarchive/archive_string.h:47,\r\n                 from libarchive/archive_acl_private.h:35,\r\n                 from libarchive/archive_acl.c:33:\r\nlibarchive/archive.h:49:44: inttypes.h: No such file or directory\r\nlibarchive/archive_acl.c: In function `archive_acl_parse_w':\r\nlibarchive/archive_acl.c:604: warning: implicit declaration of function `wmemcmp'\r\nmake[1]: *** [libarchive/archive_acl.lo] Error 1",
            "published" : "2011-01-21T20:45:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I just committed r2934, which fixes the use of wmemcmp in archive_acl.c\r\n\r\nI've also committed r2935, which changes archive.h and archive_entry.h to not include inttypes.h if _SCO_DS is defined.  It also defines __LA_INT64_T to be \"long long\" on that platform.\r\n\r\nI think I've figured out a way to simplify some of the configuration logic for determining a 64-bit integer type.  It will take me a couple of days to get that in place.\r\n\r\n(As an aside:  I intend to remove the __LA_UID_T, __LA_GID_T, __LA_MODE_T definitions from the public interface soon.  mode_t can be replaced with 'int' on every platform that I know of, and we need to ensure the use of 64-bit integers for UID and GID so as to not lose information when reading archives created on platforms that use large UIDs and GIDs.  I'm still trying to work out a proper transition strategy for that change so that it's not too disruptive for people.  After that, the only special type definitions in the public interfaces will be __LA_INT64_T, __LA_SSIZE_T, and __LA_DEV_T.)\r\n",
            "published" : "2011-01-22T07:50:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Commit r2939 to trunk adds a bunch of logic to the CMake build that ensures int64_t, int32_t, etc, are all correctly defined.\r\n\r\nThis should address most of the issues seen on SCO 5.  I'd appreciate if you could try a cmake build of libarchive/trunk and let me know what problems you're still having.\r\n",
            "published" : "2011-01-23T06:16:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "Thank you, that helped a lot. Here are some remaining issues.\r\n\r\nlibarchive/archive_read_disk_posix.c:2059\r\nreaddir_r has a different number of parameters on SCO. Plain readdir is OK.\r\n\r\nlibarchive/archive_read_support_format_mtree.c:631\r\nSCO doesn't define S_IFSOCK.\r\n\r\nlibarchive/archive_write_disk.c:260: warning: `edit_deep_directories' declared `static' but never defined\r\nI fixed this by conditioning the forward declaration the same way its uses are conditioned:\r\n#if defined(HAVE_FCHDIR) && defined(PATH_MAX)\r\n\r\nlibarchive/archive_write_set_format_iso9660.c:5242\r\nSCO doesn't define NAME_MAX.\r\n\r\nlibarchive/archive_write_set_format_pax.c:832: warning: comparison is always false due to limited range of data type                                                  \r\nlines 832, 853, 1089, 1093\r\nProbably due to dev_t, uid_t, gid_t having sizeof(2). sys/types defines dev_t as short, uid_t and gid_t as unsigned short.\r\n\r\ncommand line: fatal error: illegal value for -R: /usr/local/lib                     \r\nIt seems upset about '-Wl,-R,/usr/local/lib'.\r\n\r\nOther than that, I think it would build. Again, thanks very much.",
            "published" : "2011-01-23T22:24:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Most of these have just been addressed in the last few hours:\r\n\r\n> libarchive/archive_read_disk_posix.c:2059\r\n> readdir_r has a different number of parameters on SCO. Plain readdir is OK.\r\n\r\nI just committed a change to the CMakeLists.txt to explicitly test for the POSIX-compatible 3-argument version.\r\n\r\n> libarchive/archive_read_support_format_mtree.c:631\r\n> SCO doesn't define S_IFSOCK.\r\n\r\nI committed a change to this file that should address this problem.\r\n\r\n> libarchive/archive_write_disk.c:260: warning: `edit_deep_directories' declared `static' but never defined\r\n> I fixed this by conditioning the forward declaration the same way its uses are conditioned:\r\n> #if defined(HAVE_FCHDIR) && defined(PATH_MAX)\r\n\r\nI've committed this change.\r\n\r\n> libarchive/archive_write_set_format_iso9660.c:5242\r\n> SCO doesn't define NAME_MAX.\r\n\r\nMichihiro just committed a fix for this.\r\n\r\n> libarchive/archive_write_set_format_pax.c:832: warning: comparison is always false ...\r\n\r\nI've just committed a change that should fix this.\r\n\r\n> command line: fatal error: illegal value for -R: /usr/local/lib                     \r\n> It seems upset about '-Wl,-R,/usr/local/lib'.\r\n\r\nI'm not sure about this one.  Is this with the autoconf-generated build system or with cmake?\r\nThanks again for helping us work through this.",
            "published" : "2011-01-24T05:49:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "Those patches helped a lot. Thanks.\r\n\r\n>> readdir_r has a different number of parameters on SCO. Plain readdir is OK.\r\n\r\n> I just committed a change to the CMakeLists.txt to explicitly test for the POSIX-compatible 3-argument version.\r\n\r\nThank you. But it still seems to be a problem with the autoconf-generated build system.\r\n\r\nlibarchive/archive_read_support_format_lha.c:1811: warning: `c' might be used uninitialized in this function\r\nThis is only a problem because of -Werror, but I thought I should mention it.\r\n\r\nThe -Wl,-R,/usr/local/lib problem happens in the autoconf build system.\r\n\r\nThanks very much for working on this.",
            "published" : "2011-01-24T16:47:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "> command line: fatal error: illegal value for -R: /usr/local/lib                     \r\n> It seems upset about '-Wl,-R,/usr/local/lib'.\r\n\r\nI tinkered a little, but I'm not sure I understand this one.  With GCC, the -Wl,-R,/usr/local/lib means that the following option should get passed to the linker ld:\r\n   -R /usr/local/lib\r\n\r\nIt sounds like 'ld' on your system doesn't accept that option.  Unfortunately, that's not handled by anything in libarchive; we rely on GNU autoconf and GNU libtool to understand how to actually link programs on your system.  What version of autoconf and libtool are you using?\r\n",
            "published" : "2011-01-25T05:39:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "autoconf 2.63, libtool 2.2.6.",
            "published" : "2011-01-25T16:05:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "After ./configure,\r\n$ sed -i -e 's|hardcode_libdir_flag_spec=.*|hardcode_libdir_flag_spec=\"\"|' libtool\r\nseems to fix the -Wl,-R,/usr/local/lib problem. I don't know what's putting that in libtool, though.\r\n\r\nIf I don't specify --without-bz2lib on ./configure, I get\r\nrelocations referenced\r\n        from file(s)\r\n        /usr/local/lib/libbz2.a(bzlib.o)\r\n        /usr/local/lib/libbz2.a(compress.o)\r\n        /usr/local/lib/libbz2.a(decompress.o)\r\n        /usr/local/lib/libbz2.a(blocksort.o)\r\n        /usr/local/lib/libbz2.a(huffman.o)\r\n fatal error: relocations remain against allocatable but non-writable section: .text\r\n\r\nI think this may be due to the fact that this system, for whatever reason, doesn't have libbz2.so, only libbz2.a. Just mentioning it in case you know differently.\r\n\r\nThe last problem is\r\ntar/tree.c:126: error: parse error before \"HANDLE\"\r\ndue to the presence of a windows.h unrelated to the operating system by Microsoft.\r\n\r\nAfter that, it's built!",
            "published" : "2011-01-25T21:14:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r2949 fixes the problem in tar/tree.c.   Thanks for pointing that out, that was a silly mistake.\r\n\r\nThe libtool issue confuses me.  It could be a libtool bug, a bug in libarchive's configure.ac or Makefile.am files, or a problem with how some libraries are installed on your system.  I don't really have information to even guess which one.  If you do figure it out, please let us know.\r\n\r\nIf you feel inclined to do so, I'd be very interested in whether the cmake build works on your system; I've recently added a bunch of additional configuration logic to the cmake build inspired by some of the issues you've raised here.\r\n",
            "published" : "2011-01-26T04:38:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I did find a clue about the libtool issue.  The online man pages for SCO 5.0.7 document that the -R option to ld does not behave at all the way libtool is using it on your system:\r\n\r\nhttp://osr507doc.sco.com/en/man/html.CP/ld.CP.html\r\n\r\nBy any chance are you using GCC or some other alternate compiler with the standard system linker?  That may be part of the confusion here.\r\n",
            "published" : "2011-01-26T04:56:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "We made a breakthrough on the libtool -R thing. Our /usr/local/lib/lib{expat,xml2}.la have libdir='/usr/local/lib' lines. Moving those .la files where libtool couldn't find them seems to have fixed the problem. I think we can consider that issue solved.\r\n\r\nWe *are* using GCC and the standard system linker. SCO's native compiler doesn't have 64-bit integer support, and GNU binutils didn't seem to provide ld for SCO.\r\n\r\nTesting the cmake build of libarchive on SCO is problematic because right now it's hard to build cmake on SCO without numerous patches. I'm hoping that the recent improvements will make it easier. I'll try replacing the older version of libarchive that cmake includes with libarchive trunk. Thanks.",
            "published" : "2011-01-26T22:20:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 18,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "libarchive/archive_read_disk_posix.c:2060 from trunk still tries to use readdir_r. GCC complains \"too many arguments\". Thanks.",
            "published" : "2011-01-26T22:25:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 19,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r2952 changes configure.ac to only look for the three-argument POSIX version of readdir_r.  Systems that don't have that version will fall back to the non-thread-safe readdir() function.\r\n",
            "published" : "2011-01-27T05:56:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 20,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r2953 implements the same for the CMake build.",
            "published" : "2011-01-27T06:30:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 21,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brianchina60221",
              "htmlLink" : "https://code.google.com/u/114424208961475687306/"
            },
            "content" : "I pulled cmake and libarchive trunks. I moved cmake's cmlibarchive/ and created a new one containing code from libarchive trunk.\r\n\r\nAfter cmake bootstrap, 'make' in cmlibarchive/ fails due to my system's lack of dynamic libbz2. I don't see how to disable that correctly, so I just had to comment the commands inside the IF(BZIP2_FOUND) block in CMakeLists.txt.\r\n\r\nThen:\r\ntest/test_sparse_basic.c:272: error: `PATH_MAX' undeclared (first use in this function)\r\n\r\nThen, in\r\ntest_read_data_large.c\r\ntest_read_truncated.c\r\ntest_write_compress_program.c\r\ntest_write_format_ar.c\r\ntest_write_format_gnutar.c\r\ntest_write_format_iso9660_boot.c\r\ntest_write_format_iso9660.c\r\ntest_write_format_iso9660_zisofs.c\r\ntest_write_format_pax.c\r\ntest_write_format_tar.c\r\nthere are some 'buff' and 'buff2' variables that differ in size, so I made them static.\r\n\r\nThen, trying to build libarchive_test fails because -lsocket is needed.\r\n\r\nThen, trying to build libarchive_test fails due to some problem with zlib:\r\nUndefined             first referenced\r\n symbol                in file\r\ninflateEnd            ../libarchive.a(archive_read_support_compression_gzip.c.o)\r\ninflateInit_          ../libarchive.a(archive_read_support_format_iso9660.c.o)\r\ndeflateReset          ../libarchive.a(archive_write_set_format_iso9660.c.o)\r\ndeflateInit2_         ../libarchive.a(archive_write_add_filter_gzip.c.o)\r\ninflateInit2_         ../libarchive.a(archive_read_support_compression_gzip.c.o)\r\ninflateReset          ../libarchive.a(archive_read_support_format_cab.c.o)\r\ndeflate               ../libarchive.a(archive_write_add_filter_gzip.c.o)\r\ncrc32                 ../libarchive.a(archive_read_support_compression_gzip.c.o)\r\ndeflateEnd            ../libarchive.a(archive_write_add_filter_gzip.c.o)\r\ninflate               ../libarchive.a(archive_read_support_compression_gzip.c.o)\r\ndeflateInit_          ../libarchive.a(archive_write_set_format_iso9660.c.o)\r\ninflateSetDictionary  ../libarchive.a(archive_read_support_format_cab.c.o)\r\n\r\nWe think it may be due to using cmake's bundled zlib, but the system zlib.h. To get past it, I set CMAKE_USE_SYSTEM_ZLIB TRUE.\r\n\r\nThen, trying to build bsdtar fails because -lsocket is needed.\r\n\r\nThen, trying to build cpio fails because -lsocket is needed.\r\n\r\nThen:\r\n[ 98%] Building C object Utilities/cmlibarchive/cpio/test/CMakeFiles/bsdcpio_test.dir/test_owner_parse.c.o\r\nIn file included from /brian/cmake/Utilities/cmlibarchive/cpio/cpio_platform.h:42,\r\n                 from /brian/cmake/Utilities/cmlibarchive/cpio/cpio.h:31,\r\n                 from /brian/cmake/Utilities/cmlibarchive/cpio/test/test_owner_parse.c:28:\r\n/brian/cmake/Utilities/cmlibarchive/config.h:159: error: redefinition of `intmax_t'\r\n/brian/cmake/Utilities/cmlibarchive/config.h:159: error: `intmax_t' previously declared here\r\n/brian/cmake/Utilities/cmlibarchive/config.h:163: error: redefinition of `uintmax_t'\r\n/brian/cmake/Utilities/cmlibarchive/config.h:163: error: `uintmax_t' previously declared here\r\n\r\nThanks again for all your effort.",
            "published" : "2011-01-31T18:22:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 130,
        "title" : "man pages cross-references fixes",
        "summary" : "man pages cross-references fixes",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "njoly@pasteur.fr",
          "htmlLink" : "https://code.google.com/u/104972999205912938509/"
        },
        "updated" : "2011-01-26T05:33:53.000Z",
        "published" : "2011-01-24T08:29:08.000Z",
        "closed" : "2011-01-26T05:33:53.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "njoly@pasteur.fr",
              "htmlLink" : "https://code.google.com/u/104972999205912938509/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Check/Read man pages.\r\n<b>2.</b>\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nSome man pages cross-references are wrong. I noticed a typo in bsdcpio(1), and a few missing/bad sections numbers in archive_util(3)/libarchive_internals(3).\r\n\r\n<b>What version are you using?</b>\n\r\nChecked against trunk.\r\n\r\n<b>On what operating system?</b>\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThe provided patch do fix them.",
            "published" : "2011-01-24T08:29:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4420101794454547069",
              "fileName" : "libarchive-crossrefs.diff",
              "fileSize" : 1738,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you very much!  I've committed this as r2950 in libarchive/trunk.\r\n\r\nIf you see any other problems, please let us know.\r\n",
            "published" : "2011-01-26T05:33:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 131,
        "title" : "Possible to exclude extended attributes on archive creation.",
        "summary" : "Possible to exclude extended attributes on archive creation.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "updated" : "2015-01-10T19:59:09.000Z",
        "published" : "2011-01-24T12:41:02.000Z",
        "closed" : "2015-01-10T19:59:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "Hello!\r\n\r\nThis is a forwarding of a feature request that was initially filed at:\r\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=591763\r\n\r\n\r\nFrom: Witold Baryluk &lt;baryluk@smp.if.uj.edu.pl&gt;\r\nTo: Debian Bug Tracking System &lt;submit@bugs.debian.org&gt;\r\nSubject: bsdtar: It should be possible to create archive without extended attributes,  ACLs, selinux labels, ...\r\nDate: Thu, 05 Aug 2010 13:01:53 +0200\r\n\r\n\r\nPackage: bsdtar\r\nVersion: 2.8.4-1\r\nSeverity: normal\r\n\r\nCurrently bsdtar allways create archives which includes all information about\r\nfile,\r\nincluding extended attributes.\r\n\r\nIt is possible to ignore this information on extraction.\r\n\r\nBut there should be possible to ignore this information also on cration,\r\nfor example when we are creating archive not for archiving purpose,\r\nbut for somebody else (for example distributing our source codes).\r\nExtended attributes could contain some sensitive private data,\r\nwhich can be even created automatically (consider beagle, or backup\r\nmetadata, or metadata used by version control system, ecryptfs\r\nkeys, etc).\r\n\r\nSimples way is to have new option, --disable-xattr which will just skip\r\nxattr reading (and so will not write any to archive).\r\n\r\nIn future, it could be extended to only include xattrs which match/not-match\r\na given regexp. It could be also used then so tar will also use xattr\r\nto retrive/store which file to archive or was archived (and when, and into what\r\nfile). For example\r\naccording to http://freedesktop.org/wiki/CommonExtendedAttributes:\r\n\r\n       user.xdg.robots.backup: On a file: &quot;true&quot; to index, &quot;false&quot; to not\r\nbackup.\r\n       On a directory: &quot;true&quot; to traverse the into the directory for backup,\r\n       &quot;false&quot; for not traversing into it.'''\r\n\r\nBut disableing on demand for now would be most usefull.\r\n\r\n",
            "published" : "2011-01-24T12:41:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "bsdtar has options to select more portable tar formats if you require it.\r\n\r\nDoes --format=ustar   or   --format=gnutar  work for you?  Neither of these writers stores xattrs.\r\n",
            "published" : "2011-01-24T16:34:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "I forwarded your suggestion to the original reporter and bounced his reply to the list:\r\n\r\nhttp://groups.google.com/group/libarchive-discuss/browse_thread/thread/12076e9bdc7ded9a\r\n\r\n",
            "published" : "2011-01-27T08:54:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is now implemented by\r\n\r\n   [master 48b288a] Issue #131: Implement tar --no-xattr\r\n\r\nin github master.  I would appreciate if someone could help test and verify that I got this right.\r\n",
            "published" : "2015-01-10T19:59:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 132,
        "title" : "Wrong locale defaults for windows",
        "summary" : "Wrong locale defaults for windows",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Critical", "OpSys-All", "Milestone-3.0" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "repalov",
          "htmlLink" : "https://code.google.com/u/114945548812524044828/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-11-26T21:58:31.000Z",
        "published" : "2011-01-31T18:08:58.000Z",
        "closed" : "2011-11-26T21:58:31.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 19,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "repalov",
              "htmlLink" : "https://code.google.com/u/114945548812524044828/"
            },
            "content" : "<b>What version are you using?</b>\ntrunk / revision 2953\r\n\r\n<b>On what operating system?</b>\nWindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2010\r\n\r\nI have two comments.\r\n\r\n1)  In line 464 of archive_string.c (\r\nhttp://code.google.com/p/libarchive/source/browse/trunk/libarchive/archive_string.c#464 ) used ACP code page, but ZIP and TAR (and may be other) archives created in Windows with using CP_OEMCP (OEM) character set for filenames (at least for russian it is true - ACP defines codepage 1251, but in archive names are in 866 codepage).\r\n\r\n2) It is incorrect idea to use _system_ default locale to convert mbstring&lt;-&gt;wcstring. Because if I have archive with russian filenames from FreeBSD it filenames is in koi8-r, and if I can't define charset for archive - I can't get proper names. \r\nThe other problem - if i build libarchive as dll, then dll have it's own locale and I can't change it from program at all.\r\n\r\nSo I think it is need mechanism to change locale for string conversion for library (as minimum) or for archive (optimal).\r\n\r\nAt this time no one archiver that I tested (7zip, WinRar, bsdtar from libarchive) not extracted russian names correct from tar.bz2 archive created on FreeBSD 8.1.",
            "published" : "2011-01-31T18:08:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What was the locale setting when you created the archive on FreeBSD?\r\n\r\nCan you upload a small example of such an archive?\r\n",
            "published" : "2011-02-01T04:36:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "repalov",
              "htmlLink" : "https://code.google.com/u/114945548812524044828/"
            },
            "content" : "Here two examples attached:\r\n1) tar.gz - created on FreeBSD with charset koi8-r\r\n2) zip - created on Windows with OEM codepage 866\r\n\r\n\r\nMore detail about archives and examples of incorrect charsets.\r\n\r\n1) Here steps to create archive on freebsd 8.1\r\n========================================\r\n> setenv | egrep \"CHAR|LANG\"\r\nLANG=ru_RU.KOI8-R\r\nMM_CHARSET=KOI8-R\r\n\r\n> ll tmp\r\ntotal 6\r\n-rw-r--r--  1 rs  user  6 31 янв 20:30 ПРИВЕТ_upcase.txt\r\n-rw-r--r--  1 rs  user  6 31 янв 20:26 hello.txt\r\n-rw-r--r--  1 rs  user  6 31 янв 20:43 привет_lowcase.txt\r\n\r\n> bsdtar cyvf tmp.tar.gz tmp\r\na tmp\r\na tmp/привет_lowcase.txt\r\na tmp/hello.txt\r\na tmp/ПРИВЕТ_upcase.txt\r\n\r\n> bsdtar tf tmp.tar.gz\r\ntmp/\r\ntmp/привет_lowcase.txt\r\ntmp/hello.txt\r\ntmp/ПРИВЕТ_upcase.txt\r\n\r\n========================================\r\nbsdtar used on freebsd is from freebsd release.\r\n\r\nOn windows with manually build of bsdtar (trunk / revision 2953):\r\n========================================\r\nE:\\devel\\_oss\\archivepp>bsdtar tf tmp.tar.gz\r\ntmp/\r\ntmp/?OE?AO_lowcase.txt\r\ntmp/hello.txt\r\ntmp/?oe?ao_upcase.txt\r\n========================================\r\nI don't know about, PaxHeader folder in tar archive, but if it is meta information then it is incorrect. The files is utf-8 encoded data, and it has field \"path\" which has names converted to utf-8 from wrong codepage.\r\n\r\nFile tmp.tar.gz from this steps is attached as charset_koi8r.tar.gz\r\n\r\n\r\n2) Zip archive created by next commands:\r\n========================================\r\n>dir tmp\r\n01.02.2011  12:12    <DIR>          .\r\n01.02.2011  12:12    <DIR>          ..\r\n31.01.2011  20:26                 6 hello.txt\r\n31.01.2011  20:43                 6 привет_lowcase.txt\r\n31.01.2011  20:30                 6 ПРИВЕТ_upcase.txt\r\n\r\n>\"C:\\Program Files\\7-Zip\\7z.exe\" a -r tmp.zip tmp\r\n\r\n7-Zip [64] 9.13 beta  Copyright (c) 1999-2010 Igor Pavlov  2010-04-15\r\nScanning\r\n\r\nCreating archive tmp.zip\r\n\r\nCompressing  tmp\\hello.txt\r\nCompressing  tmp\\привет_lowcase.txt\r\nCompressing  tmp\\ПРИВЕТ_upcase.txt\r\n\r\nEverything is Ok\r\n\r\n>\"C:\\Program Files\\7-Zip\\7z.exe\" l tmp.zip\r\n\r\n7-Zip [64] 9.13 beta  Copyright (c) 1999-2010 Igor Pavlov  2010-04-15\r\n\r\nListing archive: tmp.zip\r\n\r\n--\r\nPath = tmp.zip\r\nType = zip\r\nPhysical Size = 608\r\n\r\n   Date      Time    Attr         Size   Compressed  Name\r\n------------------- ----- ------------ ------------  ------------------------\r\n2011-02-01 12:12:25 D....            0            0  tmp\r\n2011-01-31 20:26:54 ....A            6            6  tmp\\hello.txt\r\n2011-01-31 20:43:21 ....A            6            6  tmp\\привет_lowcase.txt\r\n2011-01-31 20:30:21 ....A            6            6  tmp\\ПРИВЕТ_upcase.txt\r\n------------------- ----- ------------ ------------  ------------------------\r\n                                    18           18  3 files, 1 folders\r\n\r\n\r\n>bsdtar tf tmp.zip\r\ntmp/\r\ntmp/hello.txt\r\ntmp/ЇаЁў?в_lowcase.txt\r\ntmp/??\\210':'_upcase.txt\r\n\r\n========================================\r\n\r\nThe tmp.zip file from this example is attached as charset_cp866.zip.\r\nFile created from GUI (not command line) and by WinRar and internally by Explorer (as compressed ZIP folder) are use codepage 866 too.\r\n\r\nAs You see, bsdtar use codepage 1251 (ACP, not OEMCP) and print wrong file listing.",
            "published" : "2011-02-01T09:29:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "6923449298551773548",
              "fileName" : "charset_cp866.zip",
              "fileSize" : 608,
              "mimetype" : "application/zip; charset=binary"
            }, {
              "attachmentId" : "-968060209920757171",
              "fileName" : "charset_koi8r.tar.gz",
              "fileSize" : 470,
              "mimetype" : "application/x-bzip2; charset=binary"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "repalov",
              "htmlLink" : "https://code.google.com/u/114945548812524044828/"
            },
            "content" : "BTW, in issue 33 (about C++ wrapper) exists link to objective-C code. In this code author use narrow char version of functions (for example archive_entry_pathname), and then tie it with charset defined from outside.",
            "published" : "2011-02-01T09:35:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "repalov",
              "htmlLink" : "https://code.google.com/u/114945548812524044828/"
            },
            "content" : "Addition about PaxHeader folder in tar archive.\r\n\r\nOn FreeBSD mbstowcs/wctomb does not use current charset defined in locale to make conversion between multibyte and wchar. The right way is to use iconv (or something like this). \r\n\r\nSo, as minimum I think it is need to modify archive_strappend_w_mbs and archive_wstrcpy_mbs (which make conversion) to use iconv instead of standard functions.\r\nAs maximum i think it is need API to define functions for conversion to/from unicode for each \"archive *\".\r\nAlso it can help solve problem of archives comes from different OS with different  codepages. For example with archives from unix which opened on windows.",
            "published" : "2011-02-07T12:52:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I have done a few experiments and I agree that we should be using iconv in archive_string.c.\r\n\r\nThis is a big change, though, so I want to explain the implications in case I miss something.\r\n\r\nFirst, I do not want to call iconv_open every time we want to convert one small string, so the iconv conversion descriptor needs to be stored somewhere and reused.  It cannot be stored globally without breaking threaded programs.  So I think it should be stored in \"struct archive\".  This is good---it means we can add an interface later to select the codepage for each archive *.  But it requires a struct archive to be passed into every place where a string conversion might happen.\r\n\r\nMost of those are in archive_entry.  So I think we have to change archive_entry_new() to be:\r\n\r\n struct archive_entry *archive_entry_new(struct archive *);\r\n\r\nThis is a big change.\r\n\r\nUntil now, archive_entry objects have existed separately from archive objects; they could be used completely on their own.  With this change, every archive_entry object must be created in the context of a particular archive object.   The case that I'm not sure about:  What should happen when an entry is copied between archives with different codepages?  (For example, when copying from a tar archive to an archive_write_disk handle?)",
            "published" : "2011-03-05T06:11:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted",
              "owner" : "kientzle",
              "labels" : [ "-Priority-Medium", "Priority-Critical", "Milestone-3.0" ]
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The following is my current draft for doing Unicode -> MBS conversions using iconv.\r\n\r\nA few details:\r\n   * If a NULL archive object is passed in, a default iconv object is opened and closed for each call.\r\n   * If a non-NULL archive object is passed in, the iconv object will be cached there for re-use.\r\n   * If a non-NULL archive object is passed in, the default MBS character encoding will be read from there.\r\nI think this provides all of the use cases we would like to support.  The first is suitable for \"detached\" archive_entry objects, the last will allow us to select character encodings on a per-archive basis.\r\n\r\n/*\r\n * Translates a wide character string into current locale character set\r\n * and appends to the archive_string.  Note: returns NULL if conversion\r\n * fails.\r\n *\r\n * This version uses the POSIX iconv() function.\r\n */\r\nstruct archive_string *\r\narchive_strappend_w_mbs(struct archive *a, struct archive_string *as, const wchar_t *w)\r\n{\r\n\tconst char *p;\r\n\tchar buff[256];\r\n\tsize_t remaining;\r\n\r\n\t/* XXX Determine the actual name to use here instead of \"UNICODE\" XXX */\r\n\t/* For GNU iconv, we probably want UCS-2-INTERNAL if wchar_t is 16 bits\r\n\t * and UCS-4-INTERNAL if wchar_t is 32 bits. */\r\n\tif (a == NULL)\r\n\t\tcd = iconv_open(\"\", \"UNICODE\");\r\n\telse if (a->unicode_to_current == (iconv_t)(0))\r\n\t\tcd = iconv_open(a->current_code, \"UNICODE\");\r\n\telse {\r\n\t\t/* Use the cached conversion descriptor after resetting it. */\r\n\t\tcd = a->unicode_to_current;\r\n\t\ticonv(cd, NULL, NULL, NULL, NULL);\r\n\t}\r\n\t/* XXX if (cd == (iconv_t)(-1)) { handle error } XXX */\r\n\r\n\tp = (const char *)w;\r\n\tremaining = wcslen(w) * sizeof(wchar_t);\r\n\tfor (;;) {\r\n\t\tsize_t avail = sizeof(buff);\r\n\t\tchar *outp = buff;\r\n\t\tsize_t result = iconv(cd, &p, &remaining, &outp, &avail);\r\n\r\n\t\tif (avail < sizeof(buff))\r\n\t\t\tarchive_strncat(as, buff, sizeof(buff) - avail);\r\n\t\tif (result >= 0) {\r\n\t\t\tbreak; /* Conversion completed. */\r\n\t\t} else if (errno == EILSEQ) {\r\n\t\t\t/* Skip the illegal input wchar. */\r\n\t\t\tarchive_append_char(as, '?');\r\n\t\t\tp += sizeof(wchar_t);\r\n\t\t\tremaining -= sizeof(wchar_t);\r\n\t\t} else if (errno == E2BIG) {\r\n\t\t\t/* Flush the output and do some more. */\r\n\t\t\tcontinue;\r\n\t\t} else if (errno == EINVAL) {\r\n\t\t\t/* Final character is invalid. */\r\n\t\t\tarchive_append_char(as, '?');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t/* Dispose of the conversion descriptor or cache it. */\r\n\tif (a == NULL)\r\n\t\ticonv_close(cd);\r\n\telse if (a->unicode_to_current == (iconv_t)(0))\r\n\t\ta->unicode_to_current = cd;\r\n\treturn (as);\r\n}\r\n",
            "published" : "2011-03-05T08:25:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "libarchive/trunk r2992 and r2993 change the charset conversion routines over to use iconv() when it's available.\r\n\r\nThis should fix the problem you saw on FreeBSD with KOI8-R filenames being incorrectly stored in pax archives (though I've so far only tested these changes on Mac OS).  I think I found a way to avoid breaking source compatibility; archive_entry_new() is unchanged and I've added archive_entry_new2(struct archive *) to create entries that are bound to a particular archive handle.  Internally, the iconv() conversion descriptors are stored in the archive handle to be reused for performance, and I've outlined support for allowing the character encoding to be set on a per-archive-handle basis.\r\n\r\nThere's still some code cleanup and testing that needs to be done; please let me know if you see any further problems.\r\n\r\nWith this change, bsdtar should correctly store KOI8-R filenames from FreeBSD.  After we've finished testing that, I'll take a closer look at extraction on Windows.\r\n\r\n",
            "published" : "2011-03-07T06:04:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Build on FreeBSD8 with ports/convert/libiconv.\r\nBuild error at using iconv() by following message:\r\nlibarchive/archive_string.c: In function 'archive_wstring_append_from_mbs':\r\nlibarchive/archive_string.c:532: warning: passing argument 2 of 'libiconv' from\r\nincompatible pointer type\r\nlibarchive/archive_string.c: In function 'archive_string_append_from_unicode_to_\r\nmbs':\r\nlibarchive/archive_string.c:667: warning: passing argument 2 of 'libiconv' from\r\nincompatible pointer type\r\n\r\nThere are different definitions for iconv() function; one is using 'const' to\r\nthe second argument and other is not.\r\nAs far I know, Solaris and NetBSD use 'const' but many Linux distro using GNU libiconv\r\ndo not.\r\n",
            "published" : "2011-03-09T16:48:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Tim, your changes cannot work with eucJP when using archvie_entry_pathname_w() on FreeBSD because of issue 66.\r\n\r\nsetlocale(LC_ALL, \"ja_JP.eucJP\");\r\n\r\narchive_entry_set_pathname(e, \"表.txt\");// \"\\xC9\\xBD.txt\"\r\n\r\nthen archive_entry_pathname_w(e) returns \r\n      Dump of archive_entry_pathname_w(e)\r\n0000_68_88_00 00 2e 00 00 00 74 00 00 00 78 00 00 00 h.......t...x...\r\n0010 74 00 00 00                                     t...\r\n\r\nbut result of performing mbstowcs(ws, \"表.txt\") is \r\n      Dump of ws\r\n0000_bd_c9_00 00 2e 00 00 00 74 00 00 00 78 00 00 00 ........t...x...\r\n0010 74 00 00 00                                     t...\r\n\r\nAn attached patch is to test eucJP in test_pax_filename_encoding_freebsd.c.\r\n",
            "published" : "2011-03-10T15:17:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-2294423548071586887",
              "fileName" : "test_pax_fn.patch",
              "fileSize" : 1820,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I have always intended that archive_entry_pathname_w() return Unicode.\r\n\r\nThe use of mbstowcs() was wrong, and causes bsdtar to generate incorrect pax-format archives; POSIX specifies that the filenames in pax archives are stored in Unicode.\r\n\r\nThe archive_entry_pathname_w() here is correct; 表 is \\u8868\r\n",
            "published" : "2011-03-10T16:26:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r3007 adds more checks to CMakeLists.txt.\r\n\r\nThis should now work properly on FreeBSD (and other platforms with POSIX iconv) as well as on platforms with non-POSIX iconv() and which require libiconv.\r\n\r\nStill missing autoconf machinery...",
            "published" : "2011-03-11T06:26:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Must the applications using libarchive treat wchar_t as Unicode even if __STDC_ISO_10646__\r\nis not defined ?\r\nOn application side, to get wchar_t string is normally use of mbstowcs() or related functions.\r\nWhat will be happen when using archive_entry_copy_pathname_w() in ja_JP.eucJP locale ?\r\n\r\nOn FreeBSD the archive_entry_pathname_w() with iconv returns Unicode as you say\r\nbut the function without iconv will return non Unicode string made with wcrtomb/wctomb,\r\nthat is quite different behavior.\r\n\r\nAnd I have some concern about UTF-8-MAC, which is Normalization Form D(NFD).\r\nSome platforms, which are X Window system, Windows XP or older Windows platform, cannot\r\ncorrectly display UTF-8-MAC strings because they expect that UTF-8 is Normalization Form C (NFC) not NDF.\r\n\r\nI think it is better that the way to get UTF-8 is converted from MBS with iconv than\r\nconverted from wchar_t string in assuming wchar_t as Unicode.\r\n",
            "published" : "2011-03-11T15:32:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"I think it is better that the way to get UTF-8 is converted from MBS with iconv...\"\r\n\r\nYes, I completely agree.  I want to make this change.\r\n\r\n\"What will be happen when using archive_entry_copy_pathname_w() in ja_JP.eucJP locale ?\"\r\n\r\nHow do people use this?  This is needed on Windows to use the Unicode file APIs, but I don't know about other systems.\r\n\r\nRight now, we're using these internally for Pax, Joliet, and CAB filenames, but those are all Unicode, so our Pax, Joliet, and CAB support is all somewhat broken right now.\r\n\r\nWe could add archive_entry_copy_pathname_unicode() and leave the _w() forms as locale-dependent wchar_t.  But I don't know if the non-Unicode _w forms are useful; we can't really test them, because the results are both locale- and system-dependent.",
            "published" : "2011-03-11T16:44:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Here's another way to think about this:\r\n\r\nThe reason for libarchive to support character-set conversions is to properly support the various archive formats.\r\n\r\n  Pax uses UTF-8 for filenames\r\n  Joliet (and CAB?) use Unicode (technically UTF-16)\r\n  Almost everything else uses locale-dependent MBS.\r\n\r\nSo we must support those three.  It's not clear to me why we need to support locale-dependent WCS.  mbstowcs() is readily available for people who need to work with WCS.\r\n\r\nI'm happy to rename the existing _w functions to _unicode if that makes things more clear.\r\n\r\n",
            "published" : "2011-03-11T17:09:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Some people use UTF-8 but other people still use eucJP, who say that the applications,\r\nwhich they usually use, do not work properly in UTF-8. They are not only FreeBSD users,\r\nNetBSD and Solaris users choose eucJP by the same reason or from force habit.\r\n\r\nAbout filenames in Japan. There are many character-set.\r\nFor example, Windows platform uses CP932 aka MS-SJIS,\r\nLinux platforms use UTF-8, MAC OS X uses UTF-8-MAC though locale name is UTF-8,\r\nother POSIX platforms can use eucJP, UTF-8 and SJIS.\r\nAnd thus I would like to support 'charset' option to specify a filename character-set\r\nas \"bsdtar -tvf file.cab --options cab:charset=CP932\".\r\n\r\nCAB can store filenames with UTF-8 but UTF-8 is not used, so CAB usually uses\r\nlocal-dependent MBS for stored filenames. It means POSIX platforms may be not able to\r\ndisplay the filenames even if the platforms use UTF-8 locale. This is an another reason\r\nwhy 'charset' option is needed. I think it is useful that at least CAB, LHA and ZIP\r\nformat reader would support the option.\r\n\r\nI think we should worry about what WCS format is when UTF-8 is completely converted to/from\r\nMBS with iconv; WCS is no longer needed to get UTF-8. Therefore, I do not think that renaming _w\r\nfunctions is needed.\r\n",
            "published" : "2011-03-11T19:28:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"... I would like to support 'charset' option to specify a filename character-set\r\nas \"bsdtar -tvf file.cab --options cab:charset=CP932\"\"\r\n\r\nThe original bug report suggested something like this, and I want to understand what this means.\r\n\r\nThe point of specifying the archive encoding for \"bsdtar -x\" is so that the filename can be converted from that character set to the character set used for filenames.  So if you're using MS-SJIS for filenames and the archive stores filenames in CP932, we need to translate those filenames from CP932 to MS-SJIS so we can write them to disk.  Is this right?\r\n\r\nSo it sounds like we should be storing a character encoding with every filename.  (The code I have just committed does this by storing a character encoding for the archive; is that sufficient?)  We then need a way to convert those filenames to the character encoding used by disk files.\r\n\r\nSo we really need something like:\r\n   /* The archive is storing filenames in CP932 */\r\n   archive_set_charset(a, \"CP932);\r\n\r\n   /* Get an entry from archive_read_next_header() */\r\n\r\n   /* Now we want to open the file using MS-SJIS, so... */\r\n   filename = archive_entry_pathname_in_charset(entry, \"MS-SJIS\")\r\n\r\nIf you needed UTF-8, you could ask for that here.\r\n",
            "published" : "2011-03-12T07:33:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "MS-SJIS is Microsoft SJIS, an alias of CP932, which is extended by Microsoft and OEM vendors of\r\nMS-DOS/Windows, from SJIS(Shift_JIS character-set).\r\nWe need to translate filenames from CP932 stored on Windows platform to UTF-8 or eucJP\r\n,which most of POSIX like system use, or, as I mentioned filenames on MAC OS X, translate\r\nfilenames from UTF-8-MAC(NFD) to UTF-8(NFC) or other character-set such as eucJP.\r\n\r\n>   /* The archive is storing filenames in CP932 */\r\n>   archive_set_charset(a, \"CP932);\r\nThis is exactly the API I need!\r\n\r\n>   /* Now we want to open the file using MS-SJIS, so... */\r\n>   filename = archive_entry_pathname_in_charset(entry, \"MS-SJIS\")\r\nThis would be useful.\r\nFor an ISO Writer, to get UTF-16 characters, do you think it can be like this:\r\n  filename_utf16 = (uint16_t *)archive_entry_pathname_in_charset(entry, \"UTF-16LE\") ?\r\nSince the writer has to store filenames with multiple-character-set into an ISO-image.\r\n\r\nI hope that all of converting character-set code in format-readers and writers would be removed.",
            "published" : "2011-03-13T14:22:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 18,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Since libarchive now has full iconv integration for handling filenames in various character sets, I believe this issue is now Fixed.\r\n\r\nIf you think otherwise, let me know what you think is still missing. ",
            "published" : "2011-11-26T21:58:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 133,
        "title" : "call to abort() in __archive_check_magic.",
        "summary" : "call to abort() in __archive_check_magic.",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "repalov",
          "htmlLink" : "https://code.google.com/u/114945548812524044828/"
        },
        "updated" : "2011-02-02T05:47:57.000Z",
        "published" : "2011-02-01T14:27:37.000Z",
        "closed" : "2011-02-02T05:47:57.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "repalov",
              "htmlLink" : "https://code.google.com/u/114945548812524044828/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Call archive_write_set_format_zip with handle created by archive_read_new.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpected: return code ARCHIVE_FAILED or ARCHIVE_FATAL.\r\nInstead: program terminated.\r\n\r\n<b>What version are you using?</b>\ntrunk / revision 2954\r\n\r\n<b>On what operating system?</b>\nWindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisualStudio 2010\r\n\r\nAdditional information:\r\n\r\nIn file &quot;archive_check_magic.c&quot; in function &quot;__archive_check_magic&quot; if &quot;a-&gt;magic != magic&quot; then called function &quot;diediedie&quot;. It is bad idea - in GUI application I don't see the output of &quot;errmsg&quot;, and application is terminated in harmless call.\r\n\r\nTerminating application (in non fatal situation) in any case is bad idea - the other part of application may contents important for user data. For example - text editor, that can save in compressed format (by can save and w/o compression). If at save to file with using libarchive user lost all their data I think he may be angry. Yes, I know - it is wrong use of library. But it is not fatal error to _terminate_ application.",
            "published" : "2011-02-01T14:27:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This test is intended to help ensure that developers using libarchive detect such basic errors very early in their development.\r\n\r\nI do agree that the error message should be more visible.  If you could help us display a Windows dialog box at this point (using only very basic Win32 services, of course), that would certainly be an improvement.\r\n",
            "published" : "2011-02-02T05:47:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "repalov",
              "htmlLink" : "https://code.google.com/u/114945548812524044828/"
            },
            "content" : "I can write code for dialog box on Win32. It is not too hard, just say. But it is half of solution. There are still exists situation where dialog box will not help. For example - services in windows and daemons in unix can't show dialog box and don't have stdout/stderr.\r\n\r\nIf You want to inform programmer about misuse of library, then it is most consistent ways:\r\n1) Return FATAL as result of function. The preferred way (for me). If user omit error codes, then it is his fault.\r\n\r\n2) Make API to redefine diediedie function behavior. In one strategy it call abort (default), in other strategy - return some error code. So, user _can_ select - which type of error he want.\r\n\r\nIn any way, call \"abort\" on call archive_write_set_options for read archive is like kill people for crossing road in wrong place.",
            "published" : "2011-02-02T09:17:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "FATAL is not acceptable. It just makes any debugging a lot harder. If your code hits this assertion, you have either found a critical bug in libarchive OR your application is violating the API contract in a major way. abort() is completely justified behavior for that. I don't see any point in adding a more fancy API for this either -- if you don't have a mechanism to obtain a backtrace from a crashing program, your testing environment is broken.",
            "published" : "2011-02-02T13:01:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "repalov",
              "htmlLink" : "https://code.google.com/u/114945548812524044828/"
            },
            "content" : "I don't think that FATAL make debugging harder if user _analyze_ all result codes, and I don't think I can find  critical bug in libarchive. So in most cases  is violating the API contract in a major way. Yes, it is very bad. \r\n\r\nIn all cases (not only on libarchive - when You call \"abort\" the rest part of application don't have any chance to save data (that may be _important_ and _correct_). It is why I hate the \"abort\", \"exit\", \"terminate\" functions. For example, MS Word when crashed always try to save user data.\r\n\r\nIn any way, this behavior is Your choice (You are the authors). Library is well designed, and I can easy make custom build where i will return FATAL instead of call abort() (what I love in open-source projects - it is always can be fixed or modified for custom requirements).",
            "published" : "2011-02-04T09:15:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 134,
        "title" : "Call to archive_write_finish causes a crash when archive_write_open_filename fails",
        "summary" : "Call to archive_write_finish causes a crash when archive_write_open_filename fails",
        "stars" : 0,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "franklin.chua",
          "htmlLink" : "https://code.google.com/u/111179303837716867404/"
        },
        "updated" : "2011-02-11T06:57:33.000Z",
        "published" : "2011-02-02T03:47:08.000Z",
        "closed" : "2011-02-11T06:57:33.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "franklin.chua",
              "htmlLink" : "https://code.google.com/u/111179303837716867404/"
            },
            "content" : "If there's a way to free the archive structure without having to call archive_write_finish(), then this is not a problem.\r\n\r\n<b>What steps will reproduce the problem?</b>\n1. archive_write_open_filename() fails (file was locked by Windows)\r\n2. archive_write_finish() is called to free allocated memory\r\n\r\n<b>What is the expected output? What do you see instead?</b>\narchive_write_finish() should free archive structure (including\r\ninternal buffer), but it terminates (crash) in archive_write_zip_finish(). archive.compressor member variables are mostly NULL due to failed initialization.\r\n\r\n<b>What version are you using?</b>\n2.8.4\r\n\r\n<b>On what operating system?</b>\nWindows XP Professional (32-bit)\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2005 Professional\r\n\r\n<b>Please provide any additional information below.</b>\nZip format was used.\r\nAlso, file_close() attempts to close the file even if the file descriptor is -1.",
            "published" : "2011-02-02T03:47:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I recall fixing an issue similar to this recently; please try libarchive trunk and let me know if that has the same problem.  If not, I'll track down the exact fix and backport it to the 2.8 branch.\r\n",
            "published" : "2011-02-02T05:50:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for reporting this.\r\n\r\nI believe the short patch attached to this comment will fix the problem you're seeing.  I'll include this in the 2.8 branch in SVN and it will be part of any future 2.8 point release.",
            "published" : "2011-02-05T23:44:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2643003689012780788",
              "fileName" : "zip_crash_on_close_after_failure.patch",
              "fileSize" : 405,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fix committed to 2.8 branch.\r\n\r\nNote that trunk has a more complete solution to this problem.\r\n",
            "published" : "2011-02-11T06:57:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 135,
        "title" : "archive_write_data_block does not defined for archives",
        "summary" : "archive_write_data_block does not defined for archives",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "repalov",
          "htmlLink" : "https://code.google.com/u/114945548812524044828/"
        },
        "updated" : "2011-02-12T23:53:41.000Z",
        "published" : "2011-02-02T10:06:17.000Z",
        "closed" : "2011-02-12T23:53:41.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "repalov",
              "htmlLink" : "https://code.google.com/u/114945548812524044828/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\narchive_write_new()\r\narchive_write_set_format_zip\r\narchive_write_add_filter_none\r\n... create entry\r\narchive_write_header\r\narchive_write_data_block\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpected: write data.\r\nSee: access violation.\r\n\r\n<b>What version are you using?</b>\ntrunk\r\n\r\n<b>On what operating system?</b>\nWindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisualStudio 2010\r\n\r\nAdditional information.\r\nFunction archive_write_vtable(void) in file archive_write.c does not fill archive_write_data_block field. When I call archive_write_data_block then got access violation (call by NULL pointer).\r\nIf archive_write_data_block does not applicable to write archives (only for disks) then it must be defined in documentation.",
            "published" : "2011-02-02T10:06:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've updated the documentation to document this limitation.\r\nI've also changed the virtual dispatch to return an error if the function isn't available on a particular handle.\r\n\r\nI would like to support archive_write_data_block for archives.  If you would like to help implement this, please let me know.\r\n\r\nThank you for reporting this!",
            "published" : "2011-02-12T23:53:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 136,
        "title" : "archive_read_open_filename fails on windows 7",
        "summary" : "archive_read_open_filename fails on windows 7",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "sebastien.tricaud",
          "htmlLink" : "https://code.google.com/u/107593852942082872958/"
        },
        "updated" : "2011-02-11T06:55:04.000Z",
        "published" : "2011-02-06T20:30:55.000Z",
        "closed" : "2011-02-11T06:55:04.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sebastien.tricaud",
              "htmlLink" : "https://code.google.com/u/107593852942082872958/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nUse the API this way:\r\n\r\n\ta = archive_read_new();\r\n\tarchive_read_support_compression_all(a);\r\n\tarchive_read_support_format_raw(a);\r\n\tretval = archive_read_open_filename(a, input_filename, 4096);\r\n\tif (retval != ARCHIVE_OK) {\r\n                printf(&quot;error:%s&quot;, archive_error_string(a));\r\n        }\r\n        ...\r\n\r\nIt works fine on Linux but fails on windows 7.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nIt should not fail if the file opens correctly.\r\n\r\n<b>What version are you using?</b>\nlibarchive 2.8.4\r\n\r\n<b>On what operating system?</b>\n\r\nwindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nvisual studio 2008\r\n\r\n<b>Please provide any additional information below.</b>\n\r\narchive_read_open_filename gives me the error &quot;Can't initialise filter&quot;. Tracing it comes from __archive_create_child that returns -1;\r\n\r\n",
            "published" : "2011-02-06T20:30:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sebastien.tricaud",
              "htmlLink" : "https://code.google.com/u/107593852942082872958/"
            },
            "content" : "Seems tight to an issue with zlib; update once I have news. However the error message could be improved to reflect it.\r\n",
            "published" : "2011-02-06T22:20:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "The error tells you that you are not using the integrated compression handling and it tried to execute gzip. As such the error is pretty precise...",
            "published" : "2011-02-06T23:03:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sebastien.tricaud",
              "htmlLink" : "https://code.google.com/u/107593852942082872958/"
            },
            "content" : "Thanks for the quick update. However, really without your explanations I could hardly know what it meant.\r\n\r\nAnyway, this is it, so thank you!\r\n",
            "published" : "2011-02-06T23:15:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Perhaps we could find a clearer way to word the message.  How about\r\n\r\n   \"Unable to run '<program>'\"\r\n",
            "published" : "2011-02-07T00:40:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sebastien.tricaud",
              "htmlLink" : "https://code.google.com/u/107593852942082872958/"
            },
            "content" : "Yes, \"Can't initialize filter, unable to run '<program>'!\" would be just perfect.\r\n\r\nThanks.",
            "published" : "2011-02-07T08:00:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r2962 changes this error message for libarchive/trunk.\r\n\r\nThanks for the feedback!\r\n",
            "published" : "2011-02-11T06:55:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 137,
        "title" : "archive_write_header breaks with Segmentation fault",
        "summary" : "archive_write_header breaks with Segmentation fault",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanmac@gmx.de",
          "htmlLink" : "https://code.google.com/u/100233938756870533011/"
        },
        "updated" : "2011-09-08T16:08:28.000Z",
        "published" : "2011-02-10T13:37:14.000Z",
        "closed" : "2011-02-11T06:50:42.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 8,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanmac@gmx.de",
              "htmlLink" : "https://code.google.com/u/100233938756870533011/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n\tstruct archive *b=archive_write_new(),*c=archive_read_disk_new();\r\n\tstruct archive_entry *entry;\r\n\t//setting compress and format of b\r\n\tif(archive_write_open_filename(b,selfpath.c_str())==ARCHIVE_OK){\t\r\n\t\tarchive_read_disk_set_standard_lookup(c);\r\n\t\tentry = archive_entry_new();\r\n\t\tarchive_entry_copy_sourcepath(entry, path);\r\n\t\tarchive_read_disk_entry_from_file(c, entry, fd, NULL);\r\n\t\tarchive_write_header(b, entry); // this method make seqfault and set the archive of 0 byte\r\n\t\twhile ((bytes_read = read(fd, buff, sizeof(buff))) &gt; 0)\r\n\t\t\tarchive_write_data(b, buff, bytes_read);\r\n\t\tarchive_write_finish_entry(b);\r\n\t\tarchive_read_finish(c);\r\n\t\tarchive_write_finish(b);\r\n\t}\r\n\r\n\r\n<b>What version are you using?</b>\n2.8.4\r\n\r\n<b>On what operating system?</b>\nlinux natty 64bit\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\npre-packaged binary\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ng++ 4.6\r\n",
            "published" : "2011-02-10T13:37:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "There are several things missing here:\r\n   * You haven't set the format on the write handle with archive_write_set_format_ustar() or one of the other format setting functions.\r\n   * You haven't opened the fd.\r\n   * You haven't set the pathname.  (\"pathname\" is the name written to the archive; \"sourcepath\" is used in a few places where the name on disk and the name going into the archive are different).\r\n\r\nI've made a couple of changes to libarchive trunk to hopefully help people better detect errors such as these.  If you have any suggestions for how to improve the error handling or documentation, please let me know.",
            "published" : "2011-02-11T06:50:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanmac@gmx.de",
              "htmlLink" : "https://code.google.com/u/100233938756870533011/"
            },
            "content" : "i used the3 example from ManPageArchiveReadDisk3 there are  no set pathname func in the example\r\n\r\nthis is my full code i open a existing file to catch the format and compression:\r\n\r\n\tstd::string selfpath =_self->path;\r\n\tchar buff[8192],*path = rb_string_value_cstr(&name);\r\n\tsize_t bytes_read;\r\n\tstruct archive *a = archive_read_new(),*b=archive_write_new(),*c=archive_read_disk_new();\r\n\tstruct archive_entry *entry;\r\n\tstruct stat st;\r\n\tint format,compression,fd,error;\r\n\tarchive_read_support_compression_all(a);\r\n\tarchive_read_support_format_all(a);\r\n\t//lese archiv um compression zu erhalten\r\n\tif(archive_read_open_filename(a,selfpath.c_str(),10240)==ARCHIVE_OK){\r\n\t\tarchive_read_next_header(a, &entry);\r\n\t\tformat = archive_format(a);\r\n\t\tcompression = archive_compression(a);\r\n\t\tarchive_read_finish(a);\r\n\t}\r\n//ARCHIVE_FORMAT_EMPTY\r\n\tfd = open(path, O_RDONLY);\r\n\tif (fd < 0)\r\n\t\treturn self;\r\n\t\tstat(path, &st);\r\n\tif(format == ARCHIVE_FORMAT_EMPTY){\r\n\t\tif(selfpath.substr(selfpath.length()-7).compare(\".tar.xz\")){\r\n\t\t\tformat=ARCHIVE_FORMAT_TAR;\r\n\t\t\tcompression=ARCHIVE_COMPRESSION_XZ;\r\n\t\t}else if(selfpath.substr(selfpath.length()-4).compare(\".tar\"))\r\n\t\t\tformat=ARCHIVE_FORMAT_TAR;\r\n\r\n\t}\r\n\tarchive_write_set_format(b,format);\r\n\tswitch(compression){\r\n\tcase ARCHIVE_COMPRESSION_NONE:\r\n\t\terror = archive_write_set_compression_none(b);\r\n\t\tbreak;\r\n\tcase ARCHIVE_COMPRESSION_GZIP:\r\n\t\terror = archive_write_set_compression_gzip(b);\r\n\t\tbreak;\r\n\tcase ARCHIVE_COMPRESSION_BZIP2:\r\n\t\terror = archive_write_set_compression_bzip2(b);\r\n\t\tbreak;\r\n\tcase ARCHIVE_COMPRESSION_COMPRESS:\r\n\t\terror = archive_write_set_compression_compress(b);\r\n\t\tbreak;\r\n\tcase ARCHIVE_COMPRESSION_LZMA:\r\n\t\terror = archive_write_set_compression_lzma(b);\r\n\t\tbreak;\r\n\tcase ARCHIVE_COMPRESSION_XZ:\r\n\t\terror = archive_write_set_compression_xz(b);\r\n\t\tbreak;\r\n\tcase ARCHIVE_COMPRESSION_UU:\r\n\tcase ARCHIVE_COMPRESSION_RPM:\r\n\t\trb_raise(rb_eStandardError,\"unsupported compresstype\");\r\n\t\tbreak;\t\r\n\t}\r\n\t\r\n\t//*\r\n\tif(archive_write_open_filename(b,selfpath.c_str())==ARCHIVE_OK){\t\r\n\t\tarchive_read_disk_set_standard_lookup(c);\r\n\t\tentry = archive_entry_new();\r\n\t\tarchive_entry_copy_sourcepath(entry, path);\r\n//\t\tarchive_entry_copy_stat(entry, &st);\r\n\t\tarchive_read_disk_entry_from_file(c, entry, fd, NULL);\r\n\t\tarchive_write_header(b, entry);\r\n\t\twhile ((bytes_read = read(fd, buff, sizeof(buff))) > 0)\r\n\t\t\tarchive_write_data(b, buff, bytes_read);\r\n\t\tarchive_write_finish_entry(b);\r\n\t\tarchive_read_finish(c);\r\n\t\tarchive_write_finish(b);\r\n\t}\r\n\t//*/\r\n\tclose(fd);\r\n\r\n\r\nthe only missing i could see is the pathname is missing (but there is also no pathname in the example\r\n\r\nerror detection> good if a function exist that say if a entry is valid, and the write header return FAILED if a header is bad\r\n\r\nand i dont think the status is fixed",
            "published" : "2011-02-11T09:27:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanmac@gmx.de",
              "htmlLink" : "https://code.google.com/u/100233938756870533011/"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanmac@gmx.de",
              "htmlLink" : "https://code.google.com/u/100233938756870533011/"
            },
            "content" : "i used the3 example from ManPageArchiveReadDisk3 there are  no set pathname func in the example\r\n\r\nand the pathname was the only think i miss :/\r\n\r\nPS: it makes segfaults if the archive file did not exist",
            "published" : "2011-02-11T09:50:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanmac@gmx.de",
              "htmlLink" : "https://code.google.com/u/100233938756870533011/"
            },
            "content" : "the segfault is gone, i forget to init the format value",
            "published" : "2011-02-11T10:48:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I corrected the example on ManPageArchiveReadDisk3 to use pathname instead of sourcepath.  Thank you.\r\n",
            "published" : "2011-02-12T23:40:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "I had the same problem and I have to say that I'd rather libarchive would not crash because I forgot at some point to call a function. We plan to use it in sensitive server code and that means we will wrap it into its own clases and libraries to avoid such mistakes.... Too bad.\r\n",
            "published" : "2011-09-08T08:03:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try libarchive/trunk if you get a chance.\r\n\r\nThere have been some major changes to how libarchive handles errors.  In particular, programmer errors of this sort are handled with sticky ARCHIVE_FATAL return values rather than calling abort().\r\n\r\nIf you have other ideas for improvement, patches are always appreciated.",
            "published" : "2011-09-08T16:08:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 138,
        "title" : "Work around broken PSXCRT headers",
        "summary" : "Work around broken PSXCRT headers",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jerker.back",
          "htmlLink" : "https://code.google.com/u/117841718421848579961/"
        },
        "updated" : "2011-02-13T07:20:31.000Z",
        "published" : "2011-02-10T18:00:22.000Z",
        "closed" : "2011-02-13T07:20:31.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 10,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jerker.back",
              "htmlLink" : "https://code.google.com/u/117841718421848579961/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. A system implementation of getopt() (BSD, POSIX std)\r\n2. macros controlling use of system visavi local implementation of which getopt to use. The effect of this force a restriction to use the names getopt, option, optarg, opterr, optind, optopt\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\nsucessful build. Compiler error\r\n\r\n<b>What version are you using?</b>\ncurrent SVN\r\n\r\n<b>On what operating system?</b>\nNT POSIX subsystem (SUA) aka Interix on Windows 2008 R2 x64\r\n$ uname -a\r\nInterix max 6.1 10.0.7063.0 genuineintel Intel64_Family_6_Model_26_Stepping_4\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nVPATH configure, gmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nInterix gcc-3.3, MS C/C++ x64 compiler Version 16.00.30319.01\r\n\r\n<b>Please provide any additional information below.</b>\nI attach my getopt header file which very much explains the issue.\r\nThis is not a bug in libarchive of course. All is due to clashes between system BSD getopt and GNU getopt. Since you use a local implementation of getopt, you can avoid issues like this by not using struct bsdtar:optarg, static struct option tar_longopts.\r\n\r\nPlease rename to e.g. struct bsdtar:optionarg, static struct bsdtar_option tar_longopts.",
            "published" : "2011-02-10T18:00:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3025649369220504485",
              "fileName" : "getopt.h",
              "fileSize" : 4664,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jerker.back",
              "htmlLink" : "https://code.google.com/u/117841718421848579961/"
            },
            "content" : "Here is a suggestion patch",
            "published" : "2011-02-10T19:02:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-6596587306481993720",
              "fileName" : "bsdtar_getopt.patch",
              "fileSize" : 11864,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jerker.back",
              "htmlLink" : "https://code.google.com/u/117841718421848579961/"
            },
            "content" : "Additional suggestion patch",
            "published" : "2011-02-10T19:51:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4035753928190721781",
              "fileName" : "cpio_getopt.patch",
              "fileSize" : 6952,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Do you know why the getopt.h header is being included at all?\r\nNone of the libarchive, bsdtar, or bsdcpio sources include getopt.h, so I don't quite understand why you see a conflict.\r\n\r\nI'll look at your suggested patches more closely soon.",
            "published" : "2011-02-11T06:29:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jerker.back",
              "htmlLink" : "https://code.google.com/u/117841718421848579961/"
            },
            "content" : "getopt.h is included by unistd.h, mostly to leave out the cumbersome issue with multiple getopt implementations from unistd.h. Even if getopt wouldn't be included, you still need optarg, opterr, optind, optopt and getopt specified in unistd.h due to POSIX specification.\r\n\r\nNote: My headers are PSXCRT SUA replacement headers, not the official Interix SDK headers. PSXCRT headers are generated from the Open Group Specifications IEEE Std 1003.1-2008 (database generated), are Interix SDK compatible and aims toward NetBSD compatibility.\r\n",
            "published" : "2011-02-13T00:47:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joerg.sonnenberger",
              "htmlLink" : "https://code.google.com/u/joerg.sonnenberger@googlemail.com/"
            },
            "content" : "Macro versions of optind etc that don't expand to plain names consistently are IMO just broken. There is also no reason for having different optinds for BSD getopt vs GNU getopt.",
            "published" : "2011-02-13T02:53:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jerker.back",
              "htmlLink" : "https://code.google.com/u/117841718421848579961/"
            },
            "content" : "First, as I said, this is not a bug, just perhaps an inconvenience issue. I had to change the source to get libarchive to compile. I'm just asking if a change is possible and not too extensive.\r\n\r\nAs for the macros (off topic): There are OS specific reasons to not expose global data other through functions. It's a choice by design. Just consider errno in a multithreaded application, in NT POSIX, the system keeps track of a function pointer to the correct errno variable (specified in the startup source). In most cases it works well and if some project tries to manipulate e.g. environ, the compiler will tell you right away. Many GNU projects (e.g. binutils, GNU make) have a local getopt without the GNUlib replacement macros. You will get a conflict between the system getopt global data and the local implementation (and if you don't - how to be sure which data is used?).\r\n",
            "published" : "2011-02-13T03:57:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've gone ahead and committed a variant of your suggested patches in r2979.  Please let me know if you see additional problems.\r\n\r\nPlease also complain to the PSXCRT developers.  Libarchive has been building cleanly on NetBSD for quite some time, so the PSXCRT folks are clearly failing in their aim of NetBSD compatibility.\r\n",
            "published" : "2011-02-13T07:19:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-02-13T07:20:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Work around broken PSXCRT headers",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jerker.back",
              "htmlLink" : "https://code.google.com/u/117841718421848579961/"
            },
            "content" : "Thanks",
            "published" : "2011-02-13T07:59:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 139,
        "title" : "ruby wrapper problems",
        "summary" : "ruby wrapper problems",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanmac@gmx.de",
          "htmlLink" : "https://code.google.com/u/100233938756870533011/"
        },
        "updated" : "2011-02-12T23:39:34.000Z",
        "published" : "2011-02-11T11:04:56.000Z",
        "closed" : "2011-02-12T23:39:34.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanmac@gmx.de",
              "htmlLink" : "https://code.google.com/u/100233938756870533011/"
            },
            "content" : "i build a smouth ruby wrapper for libarchive\r\nbut some functions are missing:\r\n*how to add a file without deleting the others?\r\n*how to delete specific entries\r\n*how to move a file to an other archiv? (extract2 did not work)\r\n\r\ni do not know what i must do\r\n\r\n<b>What version are you using?</b>\n2.6.4\r\n\r\n<b>On what operating system?</b>\nubutu natty 64bit\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\npre-packaged binary\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ng++ 4.6\r\n",
            "published" : "2011-02-11T11:04:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"how to add a file without deleting the others\"\r\n\r\nIf you want to update tar or cpio archive formats, you should look at the code in bsdtar/write.c that supports the -r and -u options.  It is neither simple nor fast.  If you want to add files to Zip archives, I suggest you look at zziplib or some other library designed specifically for Zip support.\r\n\r\n\"how to delete specific entries\"\r\n\r\nLibarchive does not directly support \"in place\" modification of archives.  In particular, it does not support deleting or modifying existing entries.\r\n\r\n\"how to move a file to an other archive\"\r\n\r\nYou should look at examples/tarfilter.c, which is a simple example showing how to build a new archive by selectively copying and/or modifying entries from another archive.\r\n",
            "published" : "2011-02-12T19:06:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanmac@gmx.de",
              "htmlLink" : "https://code.google.com/u/100233938756870533011/"
            },
            "content" : "\"how to add a file without deleting the others\"\r\nit is possible with libachive? or chould i add this?\r\n\r\n\"how to delete specific entries\"\r\nis the in place modification planned?\r\n\r\n\r\nthe modification: it is posible to open archive, collect all data and headers, and write it back? this is the possible way or?\r\n\r\n\"how to move a file to an other archive\"\r\ni try the function extract2 but this did not work\r\n\r\n\r\n\r\ni whould help you if i can",
            "published" : "2011-02-12T19:25:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"the modification: it is posible to open archive, collect all data and headers, and write it back? this is the possible way or?\"\r\n\r\nThis is essentially what examples/tarfilter.c shows how to do.  It does it by reading one archive and writing a new archive to a separate file.  You could use this approach and then delete/rename the archive files.\r\n\r\nQuestions like this are best asked on libarchive-discuss@googlegroups.com mailing list.\r\n",
            "published" : "2011-02-12T23:39:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 140,
        "title" : "second archive_read_close() after archive_read_open_filename segfaults",
        "summary" : "second archive_read_close() after archive_read_open_filename segfaults",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "neuhauser@sigpipe.cz",
          "htmlLink" : "https://code.google.com/u/111417087111685676403/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-03-09T05:33:46.000Z",
        "published" : "2011-03-08T16:07:45.000Z",
        "closed" : "2011-03-09T05:33:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neuhauser@sigpipe.cz",
              "htmlLink" : "https://code.google.com/u/111417087111685676403/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n#include &lt;archive.h&gt;\r\n\r\nint\r\nmain(int argc, char **argv)\r\n{\r\n  struct archive *a = archive_read_new();\r\n  archive_read_open_filename(a, NULL, 0);\r\n  archive_read_close(a);\r\n  archive_read_close(a);  /* free(NULL) */\r\n  archive_read_finish(a);\r\n  return 0;\r\n}\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nit should either succeed (i wanted the archived closed, it's closed, everybody wins) or fail (archive_read_close() cannot close it when it's already closed).  i lean slightly towards ARCHIVE_OK, ARCHIVE_WARN could also work.\r\n\r\n<b>What version are you using?</b>\n\r\ntrunk @ r2988\r\n\r\n<b>On what operating system?</b>\n\r\nfreebsd 9\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n./build/autogen.sh &amp;&amp; ./configure &amp;&amp; make check\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\ngcc 4.2.1 20070719 [FreeBSD]\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nattached are three tests demonstrating the crash (no segfault without archive_read_open_*()), and a fix.",
            "published" : "2011-03-08T16:07:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2297870117354826976",
              "fileName" : "double-close-1-8200ac47ff39.patch",
              "fileSize" : 3128,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "-3625131322748615146",
              "fileName" : "double-close-2-18aaaefb803c.patch",
              "fileSize" : 3549,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "898735493000325371",
              "fileName" : "double-close-3-bc8c9d787e8e.patch",
              "fileSize" : 2008,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "-8506888141835348542",
              "fileName" : "double-close-4-4a304961d9b2.patch",
              "fileSize" : 721,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you again!\r\n\r\nCommitted at r2996.\r\n\r\nThe tests were well-done, thank you very much.\r\n\r\nNote that your suggested fix wasn't quite right:  A libarchive user is allowed to provide a data handle of NULL (this might be appropriate if they were relying on global state, for example).  Instead, I added an additional check on the archive->state value, which is set to CLOSED after an archive is closed.",
            "published" : "2011-03-09T05:33:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-03-09T05:33:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "kientzle"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 141,
        "title" : "archive_read_next_header on empty raw file returns ARCHIVE_FATAL, should be ARCHIVE_EOF",
        "summary" : "archive_read_next_header on empty raw file returns ARCHIVE_FATAL, should be ARCHIVE_EOF",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "neuhauser@sigpipe.cz",
          "htmlLink" : "https://code.google.com/u/111417087111685676403/"
        },
        "updated" : "2011-03-13T05:38:37.000Z",
        "published" : "2011-03-11T10:06:53.000Z",
        "closed" : "2011-03-13T05:38:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neuhauser@sigpipe.cz",
              "htmlLink" : "https://code.google.com/u/111417087111685676403/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nstruct archive* a = archive_read_new();\r\nstruct archive_entry* e;\r\narchive_read_support_format_raw(a);\r\narchive_read_open_filename(a, MYFILE, 0);\r\n\r\narchive_read_next_header(a, &amp;e); /* ARCHIVE_FATAL */\r\n\r\narchive_read_finish(a); \r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\ni expect ARCHIVE_EOF\r\n\r\n<b>What version are you using?</b>\n\r\ntrunk @ r2988\r\n\r\n<b>On what operating system?</b>\n\r\nFreeBSD 9\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nconfigure\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nplease review the attached tests.  i have no fix for this problem.",
            "published" : "2011-03-11T10:06:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-6439926688154661845",
              "fileName" : "empty-archive-next_header-eof-1-d43561518e45.patch",
              "fileSize" : 3898,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "-4148237606683688063",
              "fileName" : "empty-archive-next_header-eof-2-16742c5d3818.patch",
              "fileSize" : 4005,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Good catch!\r\n\r\nYour test is slightly off:  The raw handler is not supposed to recognize empty files.  Only the \"empty\" handler recognizes empty files.  (There are many formats for which an empty file is valid, so it creates problems if you allow other format handlers to accept empty files.)\r\n\r\nBut after fixing your test (see attached), there is a real bug here:  A file that's not recognized by any handler should cause ARCHIVE_FATAL when you try to open it.  It looks like archive_read_open() might not be correctly returning errors when there's no successful bidder.\r\n\r\n  9: test_archive_read_next_header_empty\r\n/Users/tim/projects/libarchive/trunk/libarchive/test/test_archive_read_next_header_empty.c:40: ARCHIVE_FATAL != archive_read_open_filename(a, \"emptyfile\", 0)\r\n      ARCHIVE_FATAL=-30 (0xffffffffffffffe2, 01777777777777777777742)\r\n      archive_read_open_filename(a, \"emptyfile\", 0)=0 (0x0, 00)\r\n\r\n\r\nI've changed your test a little:  I combined your tests into one C source file and also just created the files in the test rather than storing them as UUencoded reference files.\r\n",
            "published" : "2011-03-12T08:23:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-4984475452423577934",
              "fileName" : "test_archive_read_next_header_empty.c",
              "fileSize" : 3643,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in trunk r3009 by moving the format detection into archive_read_open2() so that an unsupported format is reported earlier.\r\n\r\nAs a rule, we want to report errors as early as we can; Roman's proposed test pointed out that we weren't reporting an unsupported format until there was an attempt to read the first header.",
            "published" : "2011-03-13T05:38:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 142,
        "title" : "Mtree format save mode of symlink target",
        "summary" : "Mtree format save mode of symlink target",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mwisnicki",
          "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
        },
        "updated" : "2011-03-14T04:53:55.000Z",
        "published" : "2011-03-12T23:10:56.000Z",
        "closed" : "2011-03-14T04:53:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 8,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. mkdir tc\r\n2. touch tc/test\r\n3. ln -s tc/test tc/test.link\r\n\r\nWhat is the expected output?\r\n% mtree -p tc/ -cn\r\n\r\n/set type=file uid=1001 gid=1001 mode=0644 nlink=1 flags=none\r\n.               type=dir mode=0755 nlink=2 size=512 \\\r\n                time=1299970657.000000000\r\n    test        size=0 time=1299970629.000000000\r\n    test.link   type=link mode=0755 size=7 time=1299970657.000000000 \\\r\n                link=tc/test\r\n..\r\n\r\nWhat do you see instead?\r\n% tar -cf - --format=mtree -C testcase .\r\n#mtree\r\n. gname=users uname=marcin time=1299970098.0 mode=755 gid=1001 uid=1001 type=dir\r\n./test gname=users uname=marcin time=1299969955.0 mode=644 gid=1001 uid=1001 type=file size=0\r\n./test.link gname=users uname=marcin time=1299970098.0 mode=644 gid=1001 uid=1001 type=link link=test\r\n\r\n\r\nSee how test.link has mode 755 when using mtree(8) but 644 with tar(1).\r\n\r\n<b>What version are you using?</b>\n% tar --version\r\nbsdtar 2.7.0 - libarchive 2.7.0\r\n\r\n<b>On what operating system?</b>\n% uname -v\r\nFreeBSD 8.2-STABLE #1: Wed Mar  2 17:18:23 CET 2011\r\n",
            "published" : "2011-03-12T23:10:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Same output with:\r\n% /usr/local/bin/bsdtar --version\r\nbsdtar 2.8.3 - libarchive 2.8.3\r\n",
            "published" : "2011-03-12T23:30:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Can you test this with libarchive/trunk?  I believe it is fixed there.\r\n",
            "published" : "2011-03-13T05:44:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "I am unable to build it:\r\n\r\n% build/autogen.sh\r\n...\r\nmkdir libarchive-3.0.0a/_build/cmtest\r\ncd libarchive-3.0.0a/_build/cmtest && cmake ../.. && make && make test\r\ncmake: not found\r\n*** Error code 127\r\n\r\nStop in /home/marcin/p/freebsd-pr/tar-mtree/libarchive.\r\n*** Error code 1\r\n\r\nStop in /home/marcin/p/freebsd-pr/tar-mtree/libarchive.\r\n\r\nAccording to INSTALL I shouldn't need cmake.\r\nAlso build/autogen.sh should not invoke configure and make.",
            "published" : "2011-03-13T20:18:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Ok, I've installed cmake (BTW make distcheck does not pass tests 35,17,75).\r\nSeems it is not fixed:\r\n\r\n% $tar -cf - --format=mtree --options=\\!all,mode -C tc .\r\n#mtree\r\n. mode=755\r\n./test mode=644\r\n./test.link mode=755\r\n% $tar --version\r\nbsdtar 3.000.000a - libarchive 3.0.0a\r\n",
            "published" : "2011-03-13T20:43:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Oops actually it is correct ;)",
            "published" : "2011-03-13T20:45:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'll mark this as \"fixed\" in trunk.\r\n",
            "published" : "2011-03-14T04:53:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Is it possible to backport it to FreeBSD (8-stable) ?",
            "published" : "2011-03-14T12:23:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 143,
        "title" : "Mtree format not compatible with mtree(8) from FreeBSD",
        "summary" : "Mtree format not compatible with mtree(8) from FreeBSD",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mwisnicki",
          "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
        },
        "updated" : "2011-03-12T23:20:15.000Z",
        "published" : "2011-03-12T23:20:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. mkdir tc\r\n2. touch tc/test\r\n3. tar -cf tar.mtree --format=mtree -C tc .\r\n4. mtree -f tar.mtree -p tc\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nmtree: line 3: slash character in file name\r\n\r\n<b>What version are you using?</b>\n% tar --version\r\nbsdtar 2.7.0 - libarchive 2.7.0\r\n\r\n<b>On what operating system?</b>\n% uname -v\r\nFreeBSD 8.2-STABLE #1: Wed Mar  2 17:18:23 CET 2011\r\n\r\n<b>Please provide any additional information below.</b>\nWorks with mtree(8) from NetBSD (pkgsrc/pkgtools/mtree).\r\n",
            "published" : "2011-03-12T23:20:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Also applicable to:\r\n% /usr/local/bin/bsdtar --version\r\nbsdtar 2.8.3 - libarchive 2.8.3\r\n",
            "published" : "2011-03-12T23:31:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 144,
        "title" : "Mtree format with use-set option produces invalid flags",
        "summary" : "Mtree format with use-set option produces invalid flags",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mwisnicki",
          "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2011-03-21T01:30:34.000Z",
        "published" : "2011-03-13T00:03:23.000Z",
        "closed" : "2011-03-21T01:30:34.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 13,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. mkdir tc\r\n2. touch tc/{a,b}\r\n3. chflags uchg tc/a\r\n4. tar -cf- --format=mtree --options=use-set,\\!all,flags tc\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nExpected:\r\n\r\n#mtree\r\ntc\r\n/set flags=uchg\r\ntc/a\r\n/unset flags\r\ntc/b\r\n\r\nActual:\r\n\r\n#mtree\r\ntc\r\n/set flags=uchg\r\ntc/a\r\ntc/b\r\n\r\nWhich applies uchg flag also to tc/b.\r\n\r\n<b>What version are you using?</b>\n% tar --version\r\nbsdtar 2.7.0 - libarchive 2.7.0\r\n% /usr/local/bin/bsdtar --version\r\nbsdtar 2.8.3 - libarchive 2.8.3\r\n\r\n<b>On what operating system?</b>\n% uname -v\r\nFreeBSD 8.2-STABLE #1: Wed Mar  2 17:18:23 CET 2011\r\n",
            "published" : "2011-03-13T00:03:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Also applicable to:\r\n  bsdtar 3.000.000a - libarchive 3.0.0a\r\nbuilt from trunk just now.",
            "published" : "2011-03-13T20:48:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for the reporting this issue.\r\n\r\nI fixed it in trunk r3013.\r\n\r\nOutput after fixed:\r\n\r\n#mtree\r\ntc\r\n/set flags=uchg\r\ntc/a\r\ntc/b flags=none\r\n\r\nThe output is slightly different to what you expected; use flags=none instead of /unset flags,\r\nbut this is the same way that mtree utility does.\r\n\r\nCould you try the latest version of trunk and let me know the result.",
            "published" : "2011-03-14T18:34:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "I'm unable to build it ;(\r\n\r\n% build/autogen.sh\r\n% make\r\n:\r\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I.. -I/usr/local/include/libxml2 -I/usr/local/include -Wall -Werror -g -O2 -MT libarchive/archive_acl.lo -MD -MP -MF libarchive/.deps/archive_acl.Tpo -c ../libarchive/archive_acl.c  -fPIC -DPIC -o libarchive/.libs/archive_acl.o\r\nIn file included from ../libarchive/archive_acl.c:38:\r\n../libarchive/archive_private.h:116: error: expected specifier-qualifier-list before 'iconv_t'\r\n*** Error code 1\r\nStop in /home/marcin/p/tmp/tar-mtree/trunk/libarchive-3.0.0a/_build.\r\n*** Error code 1\r\nStop in /home/marcin/p/tmp/tar-mtree/trunk/libarchive-3.0.0a/_build.\r\n*** Error code 1\r\nStop in /home/marcin/p/tmp/tar-mtree/trunk.\r\n",
            "published" : "2011-03-14T22:09:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "There is something fishy about configure:\r\n\r\n% awk '/checking for iconv/,/result:/' < config.log | grep -v ^\\|\r\nconfigure:13077: checking for iconv.h\r\nconfigure:13077: result: no\r\nconfigure:13087: checking for iconv in -liconv\r\nconfigure:13112: gcc -o conftest -g -O2   conftest.c -liconv  -lbz2 -lz  >&5\r\n/usr/bin/ld: cannot find -liconv\r\nconfigure:13112: $? = 1\r\nconfigure: failed program was:\r\nconfigure:13121: result: no\r\nconfigure:15884: checking for iconv\r\nconfigure:15884: gcc -o conftest -g -O2  -I/usr/local/include/libxml2 -I/usr/local/include  conftest.c -lxml2 -llzma -lbz2 -lz  -L/usr/local/lib -lxml2 -lz -L/usr/local/lib -liconv -lm  -lcrypto -lcrypto -lcrypto -lcrypto -lcrypto -lcrypto >&5\r\nconfigure:15884: $? = 0\r\nconfigure:15884: result: yes\r\n\r\nIt checks twice for iconv and detects it second time",
            "published" : "2011-03-14T22:23:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Mtree fix confirmed but it does produce rather ugly output.\r\nFor a hierarchy with single schg file, everything else will have flags=none which defeats the usefulness of mtree:use-set option.\r\n\r\nBuild issue handled in issue 146.",
            "published" : "2011-03-14T23:33:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "For example compare with (on FreeBSD):\r\n% mtree -c -k flags -p /lib\r\n% tar -cf- --format=mtree --options=use-set,\\!all,flags /lib\r\n\r\nBoth return clean list with flags=schg as needed in few cases.\r\nAfter your fix, tar outputs flags everywhere.",
            "published" : "2011-03-14T23:42:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Currently, the operation of use of /set is not as smart as mtree utility.\r\nlibarchive mtree writer has gotten /set parameters from the first entry of a directory.\r\nsome work as well; others, as you are pointing out, do not work as mtree utility. \r\n\r\nI will improve the handling of use-set option.",
            "published" : "2011-03-16T14:06:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I improved the use-set operation and committed it in r3028.\r\n\r\nPlease try it again.",
            "published" : "2011-03-18T14:26:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I.. -I/usr/local/include/libxml2 -I/usr/local/include -Wall -Werror -g -O2 -MT libarchive/archive_write_set_format_mtree.lo -MD -MP -MF libarchive/.deps/archive_write_set_format_mtree.Tpo -c ../libarchive/archive_write_set_format_mtree.c  -fPIC -DPIC -o libarchive/.libs/archive_write_set_format_mtree.o\r\ncc1: warnings being treated as errors\r\n../libarchive/archive_write_set_format_mtree.c: In function 'write_entry':\r\n../libarchive/archive_write_set_format_mtree.c:1395: warning: 'str' is used uninitialized in this function\r\n../libarchive/archive_write_set_format_mtree.c:1393: note: 'str' was declared here\r\n*** Error code 1\r\nStop in /home/marcin/p/tmp/tar-mtree/trunk/libarchive-3.0.0a/_build.\r\n*** Error code 1\r\nStop in /home/marcin/p/tmp/tar-mtree/trunk/libarchive-3.0.0a/_build.\r\n*** Error code 1\r\nStop in /home/marcin/p/tmp/tar-mtree/trunk.\r\n",
            "published" : "2011-03-18T16:36:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Oops. That was a wrong file I committed.\r\n\r\nI fixed build error in r3029.",
            "published" : "2011-03-18T19:40:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Much better, but can you sort the output like mtree ? ;)",
            "published" : "2011-03-19T14:54:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe the reported problem has been fixed, so I'm going to close this.  New issues can be reported and tracked as new issues.\r\n",
            "published" : "2011-03-21T01:30:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 145,
        "title" : "PATCH: align build/autogen.sh with INSTALL, ends with automake by default",
        "summary" : "PATCH: align build/autogen.sh with INSTALL, ends with automake by default",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "neuhauser@sigpipe.cz",
          "htmlLink" : "https://code.google.com/u/111417087111685676403/"
        },
        "updated" : "2011-03-14T04:47:19.000Z",
        "published" : "2011-03-13T20:36:13.000Z",
        "closed" : "2011-03-14T04:47:19.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neuhauser@sigpipe.cz",
              "htmlLink" : "https://code.google.com/u/111417087111685676403/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. check out libarchive/trunk\r\n2. run ./build/autogen.sh, expect it to end before ./configure per INSTALL\r\n3. wail ages for unexpected dist-check\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nlibarchive/trunk should be friendlier to casual contributors\r\n\r\n<b>What version are you using?</b>\ntrunk\r\n\r\n<b>On what operating system?</b>\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2011-03-13T20:36:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3524930390528672258",
              "fileName" : "fixautogen.patch",
              "fileSize" : 560,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed a somewhat different approach in r3012.\r\n\r\nNow:\r\n   build/autogen.sh only runs autoconf and friends\r\n\r\n   build/makerelease.sh runs distcheck to verify the autoconf build and runs cmake to verify the cmake build.\r\n",
            "published" : "2011-03-14T04:47:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Please do not invoke configure from autogen.sh, it is not the expected behaviour.\r\nBy convention autogen.sh should just generate whole autocrap as it would come from distribution tarball.",
            "published" : "2011-03-14T22:39:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the correction.  Fixed in r3015.",
            "published" : "2011-03-15T07:15:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 146,
        "title" : "iconv detection by configure broken",
        "summary" : "iconv detection by configure broken",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mwisnicki",
          "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
        },
        "updated" : "2011-03-15T07:03:09.000Z",
        "published" : "2011-03-14T22:51:05.000Z",
        "closed" : "2011-03-15T07:03:09.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 147
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. svn co trunk &amp;&amp; cd trunk\r\n2. build/autogen.sh\r\n3. ./configure --without-iconv\r\n3. make\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpecting no errors. Actual result:\r\n\r\nlibtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/usr/local/include/libxml2 -I/usr/local/include -Wall -Werror -g -O2 -MT libarchive/archive_acl.lo -MD -MP -MF libarchive/.deps/archive_acl.Tpo -c libarchive/archive_acl.c  -fPIC -DPIC -o libarchive/.libs/archive_acl.o\r\nIn file included from libarchive/archive_acl.c:38:\r\nlibarchive/archive_private.h:116: error: expected specifier-qualifier-list before 'iconv_t'\r\n*** Error code 1\r\nStop in /home/marcin/p/tmp/tar-mtree/trunk.\r\n*** Error code 1\r\nStop in /home/marcin/p/tmp/tar-mtree/trunk.\r\n\r\n\r\n<b>What version are you using?</b>\ntrunk r3013\r\n\r\n<b>On what operating system?</b>\n% uname -v\r\nFreeBSD 8.2-STABLE #1: Wed Mar  2 17:18:23 CET 2011\r\n\r\n<b>Please provide any additional information below.</b>\nIf no '--without-iconv' is passed then iconv is detected twice. And succeeds second time. Please see Issue 144 for details.",
            "published" : "2011-03-14T22:51:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Patch in issue 147 :(",
            "published" : "2011-03-14T23:10:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Marking this closed as a duplicate of Issue 147.\r\n",
            "published" : "2011-03-15T07:03:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "147"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 147,
        "title" : "Fix detection of iconv",
        "summary" : "Fix detection of iconv",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Patch" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mwisnicki",
          "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
        },
        "updated" : "2011-04-23T17:54:47.000Z",
        "published" : "2011-03-14T23:05:24.000Z",
        "closed" : "2011-04-23T17:54:47.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 14,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "See Issue 146",
            "published" : "2011-03-14T23:05:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3095563707558257514",
              "fileName" : "configure.ac.patch",
              "fileSize" : 804,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Sorry for duplicating issue 146 but this is the first time I was using \"Suggest patch\" feature of Google Code and I didn't really knew what exactly would happen.",
            "published" : "2011-03-14T23:08:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 146 has been merged into this issue.",
            "published" : "2011-03-15T07:03:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed as r3014.\r\n\r\nI believe iconv detection is still broken on FreeBSD 9, though, and probably other platforms.  I think CMakeLists.txt has a more robust solution to this problem.",
            "published" : "2011-03-15T07:08:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Gettext comes with robust iconv macros:\r\nhttp://git.savannah.gnu.org/cgit/gettext.git/tree/gettext-runtime/m4/iconv.m4",
            "published" : "2011-03-15T12:51:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "> Gettext comes with robust iconv macros:\r\n> http://git.savannah.gnu.org/cgit/gettext.git/tree/gettext-runtime/m4/iconv.m4\r\n\r\nThanks for the pointer!  Those iconv macros look like they might work very well.\r\n\r\nIf anyone has time to work up patches to integrate these into libarchive, it would be appreciated.",
            "published" : "2011-03-16T05:58:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "AM_ICONV defined in iconv.m4 requires config.rpath\r\n\r\nI had to do following works in order to use it.\r\n 1. copy /usr/src/contrib/tcsh/config.rpath to build/autoconf\r\n 2. perform chmod +x build/autoconf/config.rpath\r\n 3. apply a patch to build/clean.sh.\r\n 4. perform sh build/autogen.sh\r\n\r\ndiff -r dfcc199f3cf4 build/clean.sh\r\n--- a/build/clean.sh    Wed Mar 16 15:01:22 2011 +0900\r\n+++ b/build/clean.sh    Wed Mar 16 20:55:38 2011 +0900\r\n@@ -51,7 +51,8 @@\r\n rm -f bsdtar\r\n rm -f bsdtar_test\r\n rm -f build/autoconf/compile\r\n-rm -f build/autoconf/config.*\r\n+rm -f build/autoconf/config.guess\r\n+rm -f build/autoconf/config.sub\r\n rm -f build/autoconf/depcomp\r\n rm -f build/autoconf/install-sh\r\n rm -f build/autoconf/libtool.m4\r\n\r\nI am not sure this approach is right. Does anyone know a general way for config.rpath?",
            "published" : "2011-03-16T12:22:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "The upstream project for config.rpath seems to be gnulib (http://git.savannah.gnu.org/cgit/gnulib.git/tree/build-aux/config.rpath), it has gnulib-tool that generates it.\r\nGettext's autogen.sh script will fetch gnulib from git if necessary.\r\n\r\nRunning gettextize looks to be the canonical way to get config.rpath into your project but it will generate a lot of useless crap which you probably don't want.\r\n\r\nSo copying is probably the best way (that's what tcsh did). It also makes sense to use latest version from above url and maybe record somewhere list of url's for imported files to make updating them easier.\r\n\r\nOr you can just drop autocrap. Cmake is quite popular nowadays ;)",
            "published" : "2011-03-16T13:57:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Tanks for information about config.rpath\r\n\r\nI brought it from http://git.savannah.gnu.org/cgit/gnulib.git/plain/build-aux/config.rpath to our trunk in r3027.",
            "published" : "2011-03-18T13:55:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "FYI:  This is failing on Mac OS X for me.  It seems to be trying to use /opt/local/lib/libiconv.dylib (GNU iconv installed through DarwinPorts) instead of /usr/lib/libiconv.dylib (system iconv).  I believe this is causing mismatches with the system iconv.h.",
            "published" : "2011-03-21T01:29:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mwisnicki",
              "htmlLink" : "https://code.google.com/u/mwisnicki@gmail.com/"
            },
            "content" : "Can you compile latest gettext on your Mac ?",
            "published" : "2011-03-21T01:37:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Haven't dug very deeply, but the latest GNU gettext sources do build properly on my Mac.\r\n\r\nFurther, it appears to link against the system -liconv, not the GNU iconv installed through Darwin Ports.\r\n",
            "published" : "2011-03-22T06:11:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "On Ubuntu I got following error when I executed build/autogen.sh\r\n\r\n+ aclocal -I build/autoconf\r\nconfigure.ac:240: warning: AC_LIB_PREPARE_PREFIX is m4_require'd but not m4_defun'd\r\nbuild/autoconf/iconv.m4:9: AM_ICONV_LINKFLAGS_BODY is expanded from...\r\nbuild/autoconf/iconv.m4:20: AM_ICONV_LINK is expanded from...\r\nbuild/autoconf/iconv.m4:225: AM_ICONV is expanded from...\r\nconfigure.ac:240: the top level\r\nconfigure.ac:240: warning: AC_LIB_RPATH is m4_require'd but not m4_defun'd\r\n+ uname\r\n+ libtoolize --automake -c\r\n+ autoconf\r\nconfigure.ac:240: warning: AC_LIB_PREPARE_PREFIX is m4_require'd but not m4_defun'd\r\nbuild/autoconf/iconv.m4:9: AM_ICONV_LINKFLAGS_BODY is expanded from...\r\nbuild/autoconf/iconv.m4:20: AM_ICONV_LINK is expanded from...\r\nbuild/autoconf/iconv.m4:225: AM_ICONV is expanded from...\r\nconfigure.ac:240: the top level\r\nconfigure.ac:240: warning: AC_LIB_RPATH is m4_require'd but not m4_defun'd\r\nconfigure:12317: error: possibly undefined macro: AC_LIB_PREPARE_PREFIX\r\n      If this token and others are legitimate, please use m4_pattern_allow.\r\n      See the Autoconf documentation.\r\nconfigure:12318: error: possibly undefined macro: AC_LIB_RPATH\r\nconfigure:12323: error: possibly undefined macro: AC_LIB_LINKFLAGS_BODY\r\nconfigure:12331: error: possibly undefined macro: AC_LIB_APPENDTOVAR\r\n\r\n\r\nI had to copy three files, lib-prefix.m4/lib-link.m4/lib-ld.m4, from\r\n http://git.savannah.gnu.org/cgit/gnulib.git/tree/m4 into build/autoconf\r\nto make configure. So we should commit those files.\r\n",
            "published" : "2011-03-31T09:00:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I think this has finally been fixed.  I'll mark it \"Fixed' now; we can re-open it if I'm wrong.\r\n",
            "published" : "2011-04-23T17:54:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 148,
        "title" : "documented archive_write_set_format_shar_binary does not exist",
        "summary" : "documented archive_write_set_format_shar_binary does not exist",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "neuhauser@sigpipe.cz",
          "htmlLink" : "https://code.google.com/u/111417087111685676403/"
        },
        "updated" : "2011-03-18T03:43:41.000Z",
        "published" : "2011-03-17T07:02:37.000Z",
        "closed" : "2011-03-18T03:43:41.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neuhauser@sigpipe.cz",
              "htmlLink" : "https://code.google.com/u/111417087111685676403/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n#include &lt;stdio.h&gt;\r\n#include &lt;archive.h&gt;\r\n\r\nint\r\nmain(int argc, char** argv)\r\n{\r\n  struct archive* a = archive_write_new();\r\n  archive_write_set_format_shar_binary(a);\r\n  archive_write_open_filename(a, &quot;output&quot;);\r\n  archive_write_finish(a);\r\n  return 0;\r\n}\r\n\r\n/var/tmp//ccpWTDf6.o(.text+0x20): In function `main':\r\n: undefined reference to `archive_write_set_format_shar_binary'\r\n\r\n\r\n<b>What version are you using?</b>\ntrunk\r\n",
            "published" : "2011-03-17T07:02:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks!  I've corrected the archive_write.3 manpage to use archive_write_set_format_shar_dump(), which is the name this function has always had.\r\n",
            "published" : "2011-03-18T03:43:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 149,
        "title" : "archive_write.3 claims archive_write_set_bytes_per_block takes three parameters",
        "summary" : "archive_write.3 claims archive_write_set_bytes_per_block takes three parameters",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "neuhauser@sigpipe.cz",
          "htmlLink" : "https://code.google.com/u/111417087111685676403/"
        },
        "updated" : "2011-03-18T03:47:39.000Z",
        "published" : "2011-03-17T08:27:43.000Z",
        "closed" : "2011-03-18T03:47:39.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neuhauser@sigpipe.cz",
              "htmlLink" : "https://code.google.com/u/111417087111685676403/"
            },
            "content" : "<b>What version are you using?</b>\ntrunk\r\n\r\n<b>Please provide any additional information below.</b>\nsee attached patch",
            "published" : "2011-03-17T08:27:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "793031782120368701",
              "fileName" : "archive_write_set_bytes_per_block-manpage.patch",
              "fileSize" : 1145,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed to libarchive/trunk as r3024.\r\n",
            "published" : "2011-03-18T03:47:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 150,
        "title" : "archive_read_next_header with raw format doesn't consume data, test",
        "summary" : "archive_read_next_header with raw format doesn't consume data, test",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "neuhauser@sigpipe.cz",
          "htmlLink" : "https://code.google.com/u/111417087111685676403/"
        },
        "updated" : "2011-03-21T01:25:31.000Z",
        "published" : "2011-03-18T20:46:04.000Z",
        "closed" : "2011-03-21T01:25:31.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neuhauser@sigpipe.cz",
              "htmlLink" : "https://code.google.com/u/111417087111685676403/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. archive_read.3 says the raw format &quot;treats any data stream as an archive with a single entry&quot;\r\n2. second archive_read_next_header() call on a raw archive returns ARCHIVE_OK\r\n\r\n<b>What version are you using?</b>\ntrunk\r\n\r\nBTW, http://code.google.com/p/libarchive/wiki/Examples says that &quot;archive_read_data_skip() [...] is not actually necessary, since libarchive will invoke it automatically if you request the next header without reading the data for the last entry&quot;.  this crucial bit of info is missing from archive_read.3.\r\n\r\n",
            "published" : "2011-03-18T20:46:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-7525963743332279128",
              "fileName" : "archive_read_next_header_raw.patch",
              "fileSize" : 3862,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed your test (and my fix for the bug) in r3039.\r\n\r\nI'll also update archive_read.3.\r\n",
            "published" : "2011-03-21T01:22:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Updated archive_read.3 in r3041.",
            "published" : "2011-03-21T01:25:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 151,
        "title" : "archive_read_free does not properly close a file descriptor after ARCHIVE_FATAL error happend",
        "summary" : "archive_read_free does not properly close a file descriptor after ARCHIVE_FATAL error happend",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2011-03-26T05:57:09.000Z",
        "published" : "2011-03-24T23:36:12.000Z",
        "closed" : "2011-03-26T05:57:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "test_empty_file1() in test_archive_read_next_header_empty.c left a file descriptor open.\r\n\r\narchive_read_free() did not call archive_read_close() because the result of\r\nperforming archive_read_open_filename(a, &quot;emptyfile&quot;, 0) failed and \r\nits return code was ARCHIVE_FATAL.\r\nThere is no way to close the file &quot;emptyfile&quot; in such cases.\r\n",
            "published" : "2011-03-24T23:36:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Good catch!  I had to think a little about the contract here:\r\nBecause close() functions also release memory, they should always be called\r\nexactly once in all cases.\r\n\r\nI believe this is fixed in r3079.\r\n\r\n",
            "published" : "2011-03-26T05:57:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 152,
        "title" : "Some Zip files can't be read in a streaming fashion",
        "summary" : "Some Zip files can't be read in a streaming fashion",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "Lonicerae",
          "htmlLink" : "https://code.google.com/u/107958179724391107477/"
        },
        "updated" : "2011-11-24T09:00:32.000Z",
        "published" : "2011-03-30T06:38:47.000Z",
        "closed" : "2011-11-23T09:19:57.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Lonicerae",
              "htmlLink" : "https://code.google.com/u/107958179724391107477/"
            },
            "content" : "Hi,\r\n\r\nwhen i try to extract files from an XPS file created by 64bit windows 2003 with test-gxps which is in libgxps(git://git.gnome.org/libgxps), error returned:\r\nError: ZIP compressed data is wrong size\r\n\r\nthe libgxps extract xps files by using libarchive.\r\nbut i can uncompress it by using unzip aaaaaa.xps successfully.\r\nunzip aaaaaa.xps \r\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\r\nArchive:  aaaaaa.xps\r\n  inflating: Metadata/Job_PT.xml     \r\n  inflating: Metadata/MXDC_Empty_PT.xml  \r\n extracting: Documents/1/Metadata/Page1_Thumbnail.JPG  \r\n  inflating: Documents/1/Pages/_rels/1.fpage.rels  \r\n  inflating: Documents/1/Pages/1.fpage  \r\n  inflating: Documents/1/Resources/Fonts/3DFDBC8B-4514-41F1-A808-DEA1C79BAC2B.odttf  \r\n  inflating: Documents/1/_rels/FixedDocument.fdoc.rels  \r\n  inflating: Documents/1/FixedDocument.fdoc  \r\n  inflating: _rels/FixedDocumentSequence.fdseq.rels  \r\n  inflating: FixedDocumentSequence.fdseq  \r\n  inflating: _rels/.rels             \r\n  inflating: [Content_Types].xml     \r\n\r\n\r\nthen i compress all the files with zip:\r\nzip aaa.zip  -r *\r\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\r\nupdating: [Content_Types].xml (deflated 63%)\r\nupdating: Documents/ (stored 0%)\r\nupdating: FixedDocumentSequence.fdseq (deflated 26%)\r\nupdating: Metadata/ (stored 0%)\r\nupdating: _rels/ (stored 0%)\r\n  adding: Documents/1/ (stored 0%)\r\n  adding: Documents/1/Metadata/ (stored 0%)\r\n  adding: Documents/1/Metadata/Page1_Thumbnail.JPG (deflated 61%)\r\n  adding: Documents/1/Pages/ (stored 0%)\r\n  adding: Documents/1/Pages/_rels/ (stored 0%)\r\n  adding: Documents/1/Pages/_rels/1.fpage.rels (deflated 27%)\r\n  adding: Documents/1/Pages/1.fpage (deflated 57%)\r\n  adding: Documents/1/_rels/ (stored 0%)\r\n  adding: Documents/1/_rels/FixedDocument.fdoc.rels (deflated 27%)\r\n  adding: Documents/1/Resources/ (stored 0%)\r\n  adding: Documents/1/Resources/Fonts/ (stored 0%)\r\n  adding: Documents/1/Resources/Fonts/3DFDBC8B-4514-41F1-A808-DEA1C79BAC2B.odttf (deflated 98%)\r\n  adding: Documents/1/FixedDocument.fdoc (deflated 17%)\r\n  adding: Metadata/MXDC_Empty_PT.xml (deflated 54%)\r\n  adding: Metadata/Job_PT.xml (deflated 73%)\r\n  adding: _rels/FixedDocumentSequence.fdseq.rels (deflated 28%)\r\n  adding: _rels/.rels (deflated 45%)\r\n\r\nthis time, i can use test-gxps to extract aaa.zip and view it.\r\nis there someting wrong with libarchive to uncompress zip file created by windows 2003 64bit?\r\n\r\n\r\nCheers,\r\n\r\nFlos",
            "published" : "2011-03-30T06:38:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1260192675023365336",
              "fileName" : "aaaaaa.xps",
              "fileSize" : 10726,
              "mimetype" : "application/zip; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for reporting this issue.\r\n\r\nI checked out your zip file, aaaaaa.xps.\r\nBoth compressed size and uncompress size in local file headers of the zip file are all zero\r\nand Documents/1/Metadata/Page1_Thumbnail.JPG is just stored(no compressed).\r\nThis case libarchive cannot handle it. It needs to read central directory\r\nplaced at the end of the zip file in order to get the real size of the JPG file.\r\nlibarchive is designed as streaming reader and writer, and so libarchive\r\ncannot read such a zip file at this time.\r\nWe have already had the idea to cope with these matters but not yet implemented.\r\n",
            "published" : "2011-03-30T10:08:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Lonicerae",
              "htmlLink" : "https://code.google.com/u/107958179724391107477/"
            },
            "content" : "Hi ggcueroad,\r\n\r\nthank you very much for your explanation! :D\r\nthe libarchive is very useful indeed. ok, i'll cc this topic to the author of libgxps.\r\n\r\nFlos",
            "published" : "2011-03-30T15:09:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Changing the summary for this issue so it will be clearer in the future.\r\n\r\nIt should be easy for the authors of libgxps to write Zip files that libarchive can read; they just need to specify the uncompressed size in the local file header (since they're storing the file uncompressed anyway, this should be easy to do).  If they want to use Deflate compression, they'll want to set the \"CRC at end\" bit and libarchive will then read the compressed contents until it finds the end-of-data marker.\r\n\r\nAs Michihiro mentioned, we would like to add the ability for libarchive to read Zip files by using the Central directory, but it requires some rearchitecting.",
            "published" : "2011-03-31T05:55:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Some Zip files can't be read in a streaming fashion"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Libarchive now has a Zip reader that can handle these Zip files.\r\n\r\nThis new reader requires that the libarchive client provide a seek function; without the seek function, libarchive will use the old non-seeking reader.  (And since these files cannot be read without seeking, that will fail.)  Please try the newest libarchive/trunk and please let us know if this works for you.",
            "published" : "2011-11-23T09:19:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "After spending a couple of days with this, I realized that it is in fact feasible to read this type of file even in streaming mode.  I just committed some additional changes to libarchive that seem to correctly support this type of file even when using the streaming reader.",
            "published" : "2011-11-24T09:00:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 153,
        "title" : "test_archive_read_support_format_torture failure",
        "summary" : "test_archive_read_support_format_torture failure",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "neuhauser@sigpipe.cz",
          "htmlLink" : "https://code.google.com/u/111417087111685676403/"
        },
        "updated" : "2011-06-26T17:32:46.000Z",
        "published" : "2011-04-13T05:07:35.000Z",
        "closed" : "2011-06-26T17:32:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I found this when running on my Cygwin environment, which does not support Xar format.\r\n\r\nI think the test needs the consideration of the lack of format support.\r\n\r\n\r\nThe log message below here:\r\n\r\ntest_archive_read_support_format_torture\r\n\r\n/project/libarchive/libarchive/libarchive/test/test_archive_read_support.h:36: Assertion failed: NULL == archive_error_string(a)\r\n/project/libarchive/libarchive/libarchive/test/test_archive_read_support.h:37: 0 != archive_errno(a)\r\n      0=0 (0x0, 00)\r\n      archive_errno(a)=-1 (0xffffffffffffffff, 01777777777777777777777)\r\n    errno: -1\r\n   detail: Xar not supported on this platform\r\n/project/libarchive/libarchive/libarchive/test/test_archive_read_support.h:35: ARCHIVE_OK != enable_(a)\r\n      ARCHIVE_OK=0 (0x0, 00)\r\n      enable_(a)=-20 (0xffffffffffffffec, 01777777777777777777754)\r\n    errno: -1\r\n   detail: Xar not supported on this platform\r\n/project/libarchive/libarchive/libarchive/test/test_archive_read_support.h:36: Assertion failed: NULL == archive_error_string(a)\r\n/project/libarchive/libarchive/libarchive/test/test_archive_read_support.h:37: 0 != archive_errno(a)\r\n      0=0 (0x0, 00)\r\n      archive_errno(a)=-1 (0xffffffffffffffff, 01777777777777777777777)\r\n    errno: -1\r\n   detail: Xar not supported on this platform\r\n/project/libarchive/libarchive/libarchive/test/test_archive_read_support.h:36: Summary: Failed 2 times\r\n/project/libarchive/libarchive/libarchive/test/test_archive_read_support.h:37: Summary: Failed 2 times\r\n",
            "published" : "2011-04-13T05:07:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The format and filter support functions return ARCHIVE_WARN if the filter or format isn't \"fully supported\" on this platform.  This usually means that some library was not available at compile time, so the filter or format may work but only in a limited fashion.  For example, the gzip filter will try to use the gzip command-line program if it's compiled without zlib.\r\n\r\nThe attached patch should address this for the specific case described above.  Similar logic should be used in test_archive_read_support_filter_torture for gzip, bzip2, lzip, lzma, and xz.\r\n\r\n\r\n",
            "published" : "2011-04-15T06:02:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "-6427653962099964096",
              "fileName" : "xar-probe.patch",
              "fileSize" : 1280,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "After apply the path.\r\n\r\ntest_archive_read_support_format_torture\r\n\r\n/project/libarchive/libarchive/libarchive/test/test_archive_read_support.h:36: Assertion failed: NULL == archive_error_string(a)\r\n/project/libarchive/libarchive/libarchive/test/test_archive_read_support.h:37: 0 != archive_errno(a)\r\n      0=0 (0x0, 00)\r\n      archive_errno(a)=-1 (0xffffffffffffffff, 01777777777777777777777)\r\n    errno: -1\r\n   detail: Xar not supported on this platform\r\n\r\n\r\narchive_read_support_format_all() calls archive_read_support_format_xar() and\r\nthe error has not cleared.\r\n\r\n",
            "published" : "2011-04-15T15:57:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neuhauser@sigpipe.cz",
              "htmlLink" : "https://code.google.com/u/111417087111685676403/"
            },
            "content" : "i'll sort this out.",
            "published" : "2011-04-16T12:19:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "neuhauser@sigpipe.cz"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I just committed a fix to clear error before returning from read_support_format_all().",
            "published" : "2011-04-17T03:58:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thanks. The test currently pass with the path.\r\n",
            "published" : "2011-04-20T15:41:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in r3425.",
            "published" : "2011-06-26T17:32:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 154,
        "title" : "futimens called with timeval instead of timespec",
        "summary" : "futimens called with timeval instead of timespec",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "Stephane.Chazelas",
          "htmlLink" : "https://code.google.com/u/112537374717016875263/"
        },
        "updated" : "2011-04-13T17:05:54.000Z",
        "published" : "2011-04-13T09:15:57.000Z",
        "closed" : "2011-04-13T17:05:54.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Stephane.Chazelas",
              "htmlLink" : "https://code.google.com/u/112537374717016875263/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. ./configure &amp;&amp; make\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nlibarchive/archive_read_disk_posix.c: In function 'close_and_restore_time':\r\nlibarchive/archive_read_disk_posix.c:1635:2: error: passing argument 2 of 'futimens' from incompatible pointer type\r\n/usr/include/sys/stat.h:374:12: note: expected 'const struct timespec *' but argument is of type 'struct timeval *'\r\nmake[1]: *** [libarchive/archive_read_disk_posix.lo] Error 1\r\n\r\n\r\n<b>What version are you using?</b>\n\r\nsvn 3221\r\n\r\n<b>On what operating system?</b>\n\r\nLinux  debian sid amd64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nBoth with cmake and configure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n||/ Name                                      Version                                   Description\r\n+++-=========================================-=========================================-==================================================================================================\r\nii  autoconf                                  2.67-2                                    automatic configure script builder\r\nii  automake                                  1:1.11.1-1                                A tool for generating GNU Standards-compliant Makefiles\r\nii  cmake                                     2.8.4+dfsg.1-2                            a cross-platform, open-source make system\r\nii  e2fslibs-dev                              1.41.12-2                                 ext2/ext3/ext4 file system libraries - headers and static libraries\r\nii  gcc                                       4:4.5.2-5                                 The GNU C compiler\r\nii  libacl1-dev                               2.2.49-4                                  Access control list static libraries and headers\r\nii  libattr1-dev                              1:2.4.44-2                                Extended attribute static libraries and headers\r\nii  libbz2-dev                                1.0.5-6                                   high-quality block-sorting file compressor library - development\r\nii  libc6                                     2.11.2-13                                 Embedded GNU C Library: Shared libraries\r\nii  liblzma-dev                               5.0.0-2                                   XZ-format compression library - development files\r\nii  libxml2-dev                               2.7.8.dfsg-2                              Development files for the GNOME XML library\r\nii  zlib1g-dev                                1:1.2.3.4.dfsg-3                          compression library - development\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nfutimens is being called with a struct timeval while it expects  a struct timespec. See http://pubs.opengroup.org/onlinepubs/9699919799/functions/futimens.html",
            "published" : "2011-04-13T09:15:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thanks for pointing out the build failure.\r\nI fixed it in trunk/r3225.\r\n\r\nPlease try it.",
            "published" : "2011-04-13T17:05:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 155,
        "title" : "tar - multiple problems on Mac OS",
        "summary" : "tar - multiple problems on Mac OS",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "neoneye",
          "htmlLink" : "https://code.google.com/u/110218652251632357563/"
        },
        "updated" : "2012-01-22T23:25:49.000Z",
        "published" : "2011-04-23T15:58:23.000Z",
        "closed" : "2012-01-22T23:25:49.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neoneye",
              "htmlLink" : "https://code.google.com/u/110218652251632357563/"
            },
            "content" : "I have reported the same problems to apple, http://openradar.appspot.com/9328765\r\n\r\nI haven't tested with any recent version of tar.\r\n\r\n\r\n\r\n<b>What steps will reproduce the problem?</b>\n\r\nSee if you can get my unittests working on your box.\r\nhttps://github.com/neoneye/AnalyzeCopy\r\nFeel free to write to me if you need help.\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI expected tar to pass all my tests, but had issues in 7 tests.\r\n\r\nSee the row near the bottom that says 04_tar.\r\nhttp://www.flickr.com/photos/12739382@N04/4980416255/sizes/o/in/set-72157617780381352/\r\n\r\nissue#1 - ascii letters in filename\r\nhttps://github.com/neoneye/AnalyzeCopy/blob/master/Tests/30_ascii_names.rb\r\n\r\nissue#2 - empty extended attributes\r\nhttps://github.com/neoneye/AnalyzeCopy/blob/master/Tests/70_extended_attributes.rb\r\n\r\nissue#3 - birthtime\r\nhttps://github.com/neoneye/AnalyzeCopy/blob/master/Tests/72_birthtime.rb\r\n\r\nissue#4 - creation+modified date before/after epoch not copied\r\nhttps://github.com/neoneye/AnalyzeCopy/blob/master/Tests/80_epoch.rb\r\n\r\nissue#5 - acl on brokensymlink\r\nhttps://github.com/neoneye/AnalyzeCopy/blob/master/Tests/82_symlink_acl.rb\r\n\r\nissue#6 - hardlinked dirs\r\nhttps://github.com/neoneye/AnalyzeCopy/blob/master/Tests/90_hardlink_dir.rb\r\n\r\nissue#7 - backup time\r\nhttps://github.com/neoneye/AnalyzeCopy/blob/master/Tests/91_bkuptime.rb\r\n\r\n\r\n\r\n\r\n<b>What version are you using?</b>\n\r\nbsdtar 2.6.2 (libarchive 2.6.2)\r\n\r\n\r\n<b>On what operating system?</b>\n\r\nMac OS X 10.6.4\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\npre-packaged binary that came with os x\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nnone\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThe testsuite tests lots of other libarchive tools. Dunno if this is the place to report all of them.",
            "published" : "2011-04-23T15:58:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you for reporting this!\r\n\r\nJust to be clear, it appears this is all specific to Mac OS?\r\n\r\nIs this the version of bsdtar that shipped with Mac OS X 10.6?  (which has several Apple patches applied and is not quite the same as the standard bsdtar 2.6.2 release).\r\n\r\nIt would obviously be nice to repeat these tests against newer releases.\r\n\r\nThis is the right place to report any failures in libarchive, bsdtar, bsdcpio, or related tools.  It's best if you can report one problem in each separate issue; that makes it easier to track work on each separate issue.\r\n\r\nBut we definitely appreciate the feedback.  (I used Elizabeth Zwicky's test to exercise an older version of the libarchive tools; it was very helpful, and I'm glad to see other people building on her excellent work.)",
            "published" : "2011-04-23T17:53:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-OSX" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neoneye",
              "htmlLink" : "https://code.google.com/u/110218652251632357563/"
            },
            "content" : "Yes that is the standard bsdtar that came with 10.6.4.\r\n\r\nYes, most of them are mac specific.  Maybe except for 30_ascii_names.rb.\r\n\r\nI have recently started coding on my file manager again, so perhaps I soon will run some tests again.\r\n\r\nttyl :-)",
            "published" : "2011-04-23T20:36:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've downloaded your test suite and diagnosed some of the failures.  Here is my understanding so far:\r\n\r\nTest 30:  bsdtar 2.6.2 appears to be reluctant to archive a file named \"._\".  I've filed this as Issue 156 to track further work on this issue.  I would suggest you split this into a separate test, since this is related to an Apple convention for using \"._\" as a special file prefix.\r\n\r\nTest 70:  I've reproduced this but not yet diagnosed it.\r\n\r\nTest 72:  For portability reasons, tar does not archive \"birthtime\" attributes in the default format.  Adding --format=pax to the tar command line when creating the archive fixes this.\r\n\r\nTest 80:  This test is also stumbling over \"birthtime\" handling (the test failure here has nothing to do with the epoch).  As above, adding --format=pax to the tar command line when creating the archive fixes this.\r\n\r\nTest 82, 90, 91:  I've not yet reproduced these here.  Apparently, these tests rely on tools I don't (yet) have installed.  Looking at the source for these tests, 90 and 91 appear to be features missing in libarchive, which doesn't support backup time or hardlinked directories.  I don't have any theory about Test 82 yet.\r\n\r\nI'll add more information to this Issue as I get more information.\r\n",
            "published" : "2011-04-24T06:40:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "tar - multiple problems on Mac OS"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neoneye",
              "htmlLink" : "https://code.google.com/u/110218652251632357563/"
            },
            "content" : "Test 30. I have splitted up the test into a separate test here\r\nhttps://github.com/neoneye/AnalyzeCopy/blob/master/Tests/34_dot_underscore.rb\r\n\r\nIt had time to do anything else this morning, so here is the lastest results\r\nhttp://www.flickr.com/photos/12739382@N04/5648437023/sizes/o/in/photostream/\r\n\r\nI will try the --format=pax later.\r\n\r\nwow you are fast at looking into this. Thank you for tar :-)",
            "published" : "2011-04-24T08:13:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "neoneye",
              "htmlLink" : "https://code.google.com/u/110218652251632357563/"
            },
            "content" : "now with the --format=pax when using tar\r\n\r\nbirthtime and epoch tests are now satisfied  :-)\r\nhttp://www.flickr.com/photos/12739382@N04/5655011037/sizes/o/in/photostream/\r\n\r\ntar is doing really well.",
            "published" : "2011-04-25T22:29:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've filed separate issues for the various pieces, so I'm going to close this issue as a duplicate of those other issues:\r\n\r\n   Issue 156 - bsdtar 2.6.2 does not archive a file named \"._\" on Mac OS\r\n   Issue 227 - MacOS extended attribute\r\n   Issue 228 - MacOS: bsdtar 2.6.2 drops ACLs on broken symlinks\r\n   Issue 229 - MacOS: bsdtar doesn't save/restore hard linked directories\r\n   Issue 230 - MacOS: bsdtar doesn't save/restore bkuptime\r\n\r\nOf these, Issue 227, Issue 228, and Issue 229 look like things that are probably straightforward to fix.  Issue 156 might be complicated because of how copyfile() works (and I'm not eager to duplicate copyfile()).  Issue 230 is probably easy, but may not be worth the effort for reasons described in that bug.",
            "published" : "2012-01-22T23:25:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 156,
        "title" : "bsdtar 2.6.2 does not archive a file named \"._\" on Mac OS",
        "summary" : "bsdtar 2.6.2 does not archive a file named \"._\" on Mac OS",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2012-01-23T05:37:40.000Z",
        "published" : "2011-04-24T06:24:26.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n   Create a file named &quot;._&quot;\r\n   tar cpf output.tar .\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n   The resulting archive does not contain an entry for &quot;._&quot;\r\n\r\nThis was discovered by Simon Strandgaard and reported as part of Issue 155.\r\n\r\nI suspect this is due to a conflict with the Apple convention of using &quot;._&quot; as a file prefix for an AppleDouble-encoded resource fork in tar archives.  I suspect it only occurs on Mac OS.\r\n\r\nI have not yet tested to see if the issue still appears in libarchive 3.",
            "published" : "2011-04-24T06:24:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Move this issue back to \"New\" status since I'm not actively working on it.\r\n",
            "published" : "2012-01-23T05:37:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "New",
              "owner" : "---"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 157,
        "title" : "Build of svn trunk fails with gcc 4.6",
        "summary" : "Build of svn trunk fails with gcc 4.6",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-05-24T03:27:03.000Z",
        "published" : "2011-05-24T00:38:46.000Z",
        "closed" : "2011-05-24T03:27:03.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "The first two hunks are uninitialized variable warnings, of which the first looks like a not smart enough compiler, although this doesn't seem provable. The second hunk seems to me the best way to solve the problem of r being left uninitialized with unexpected inputs.\r\n\r\nThe third hunk seems to be a more serious problem- we go through the work of forming a three character temporary buffer (two chars plus a null byte) and then we don't use it at all, instead possibly walking off the end of our input string if there was only one character remaining. This was caught by an unused variable warning.",
            "published" : "2011-05-24T00:38:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1570000000",
              "fileName" : "fix-gcc-46-build.patch",
              "fileSize" : 2259,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed.\r\n\r\nThanks!\r\n",
            "published" : "2011-05-24T03:27:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 158,
        "title" : "Display a warning when UID/GID Overflows",
        "summary" : "Display a warning when UID/GID Overflows",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "linuxgeek",
          "htmlLink" : "https://code.google.com/u/108125817924168577070/"
        },
        "updated" : "2011-06-17T11:13:13.000Z",
        "published" : "2011-06-17T11:13:13.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "linuxgeek",
              "htmlLink" : "https://code.google.com/u/108125817924168577070/"
            },
            "content" : "Minix UIDs are 16 bits and Minix GIDs are 8 bits. The highest allowable UIDs and GIDs in tar archives are much higher than the highest UIDs/GIDs supported by Minix. This causes a truncation/overflow when the owner of the file in the archive has a high uid/gid. We want a warning to be displayed when a truncation happens so that the user will know the UID/GID of the extracted files will be different than that of the UID/GID in the archive.\r\n\r\n\r\n<b>What steps will reproduce the problem?</b>\n\r\n\r\n1. Install libarchive via pkgsrc on Minix\r\n2. Build tar using libarchive\r\n3. Extract files from a tarball with a UID &gt; 16-bits or a GID &gt; 8-bits. You can create the tar archive with really high UIDs and GIDs on Linux.\r\n4. Do an `ls` and see that the UID/GID was truncated.\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n\r\nWe want a warning like &quot;uid 9999999 out of range; will be extracted as 99.&quot;\r\n\r\n\r\n<b>What version are you using?</b>\n\r\n\r\n2.8.4\r\n\r\n\r\n<b>On what operating system?</b>\n\r\n\r\nMinix 3.2.0\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n\r\nBuilt from pkgsrc using `bmake install`. From the Make file it looks like the configure options are --disable-bsdtar --without-expat --without-xml2 --disable-bsdcpio\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\ngcc 4.4.3\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n\r\nPatch attached.\r\n",
            "published" : "2011-06-17T11:13:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1580000000",
              "fileName" : "libarchive.patch",
              "fileSize" : 4578,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is a good idea but the implementation here won't work.\r\n\r\nLibarchive is sometimes used to read archives without writing the results to disk.  For example, someone might be extracting the data to memory or writing the information to another archive.\r\n\r\nThe problem here is not reading the data from the archive, the problem occurs when writing it to disk.  You should look at archive_write_disk.c and have it return an error when it truncates a UID or GID when writing the file.",
            "published" : "2011-06-22T05:23:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "For reference, a few folks have asked that we follow a convention used elsewhere and use \"nobody\"/\"nogroup\" (or the platform equivalent) when extracting impossible user/group information.\r\n\r\nThe code you want to look at is archive_write_disk_set_standard_lookup.c.  The archive_write_disk.c code uses pluggable lookup functions to translate the uid/uname and gid/gname provided into appropriate platform-specific values.  The \"standard\" lookup functions are used by all of the stock tools (conceptually, they're just wrappers around the standard getpwuid and getgrgid, but they also handle lookup caching for performance).  You may need to take a careful look at error-handling here; I suspect some small rework will be needed to allow this code to pass warnings back up through the stack.",
            "published" : "2011-06-26T17:05:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 159,
        "title" : "Issue 97 has a patch, no comments - here is the patch again",
        "summary" : "Issue 97 has a patch, no comments - here is the patch again",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mjevans1983",
          "htmlLink" : "https://code.google.com/u/101032971945683876524/"
        },
        "updated" : "2011-06-26T16:54:16.000Z",
        "published" : "2011-06-20T20:32:56.000Z",
        "closed" : "2011-06-26T16:54:16.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mjevans1983",
              "htmlLink" : "https://code.google.com/u/101032971945683876524/"
            },
            "content" : "About 3 weeks ago I posted a patch that resolves issue 97; an issue opened about a year before I ran in to it my self.\r\n\r\nThe patch is quite simple, and I would have expected review and closure of that bug by this point.  Thus as I fear it is in a stale and ignored area I am creating this issue in the hopes that it will refresh the other issue.\r\n\r\nI am also using this so that I can uploaded the patches here, instead of letting them die on dpaste.com",
            "published" : "2011-06-20T20:32:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1590000000",
              "fileName" : "libarchive-bsdtar.fix-directory-recursion-with-newer.patch.signed.gpg",
              "fileSize" : 1481,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "1590000001",
              "fileName" : "libarchive-bsdtar.fix-directory-recursion-with-newer.patch.signed",
              "fileSize" : 1224,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r3424 fixes this in trunk, including extending the test suite to verify the behavior of --newer-than when you have a new file inside of an old directory.\r\n",
            "published" : "2011-06-26T16:54:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 160,
        "title" : "Enable -strip-components for all operations",
        "summary" : "Enable -strip-components for all operations",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-06-29T04:56:40.000Z",
        "published" : "2011-06-24T17:04:46.000Z",
        "closed" : "2011-06-29T04:56:40.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "The changes are trivial to get this working for create operations as the logic happens anyway for -s type pattern rewrites. There is little reason to disallow it as far as I can tell.",
            "published" : "2011-06-24T17:04:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1600000000",
              "fileName" : "strip-components-all.patch",
              "fileSize" : 1224,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe there's already a test in tar/test for --strip-components with -x; we should extend that to also cover use with -c.\r\n\r\nIf you could look at that test and suggest how to extend it, I would appreciate it.\r\n",
            "published" : "2011-06-26T17:08:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Sure, I'll take a look at that and provide an updated patch.",
            "published" : "2011-06-26T17:36:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Here is an updated patch with tests.",
            "published" : "2011-06-27T16:07:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1600003000",
              "fileName" : "strip-components-all.patch",
              "fileSize" : 4009,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed.  Thanks for the quick update!\r\n\r\n",
            "published" : "2011-06-29T04:56:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 161,
        "title" : "test failure for lzma and xz",
        "summary" : "test failure for lzma and xz",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "the.mad.doctor.kaeding",
          "htmlLink" : "https://code.google.com/u/the.mad.doctor.kaeding@gmail.com/"
        },
        "updated" : "2011-07-16T06:09:24.000Z",
        "published" : "2011-07-09T17:38:43.000Z",
        "closed" : "2011-07-16T06:09:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "the.mad.doctor.kaeding",
              "htmlLink" : "https://code.google.com/u/the.mad.doctor.kaeding@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.  install xz utils 5.0.3 from source with gcc 4.6.0\r\n2.  compile libarchive 2.8.4 from source\r\n3.  run the test suite\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nfailures in  test_write_compress_lzma and test_write_compress_xz\r\n\r\n\r\n<b>What version are you using?</b>\n2.8.4\r\n\r\n<b>On what operating system?</b>\nlinux from scratch, brand new\r\n(linux 2.6.39, eglibc 2.13, gcc 4.6.0)\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure? (if not, then the latest cmake)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n(linux 2.6.39, eglibc 2.13, gcc 4.6.0)\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nthe output files indicated that output had more bytes than input\r\n\r\n",
            "published" : "2011-07-09T17:38:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is expected.  I think the check you're referring to was removed in a later version of libarchive because later versions of XZ utils changed the compression defaults, which does cause a higher compression level to result in slightly larger output than a lower compression level, at least for the data used in this test.\r\n\r\nIf you get a chance, please add the test_write_compress_lzma.log and test_write_compress_xz.log files to this bug to verify.\r\n",
            "published" : "2011-07-12T06:10:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "the.mad.doctor.kaeding",
              "htmlLink" : "https://code.google.com/u/the.mad.doctor.kaeding@gmail.com/"
            },
            "content" : "/tmp/libarchive_test.2011-07-07T18.52.35-000/test_write_compress_lzma.log:\r\n\r\nlibarchive/test/test_write_compress_lzma.c:191: Assertion failed: used2 > used1\r\n   Description: Compression-level=0 wrote 689 bytes; default wrote 759 bytes\r\n\r\n/tmp/libarchive_test.2011-07-07T18.52.35-000/test_write_compress_xz.log:\r\n\r\nlibarchive/test/test_write_compress_xz.c:199: Assertion failed: used2 > used1\r\n   Description: Compression-level=0 wrote 736 bytes; default wrote 804 bytes\r\n",
            "published" : "2011-07-15T19:15:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Yes, that is expected.  These particular checks have been removed from the current code in SVN.\r\n\r\nThanks for reporting the issue; the test will be fixed in the next release.\r\n",
            "published" : "2011-07-16T06:09:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 162,
        "title" : "libarchive distributes copyrighted and unfree files",
        "summary" : "libarchive distributes copyrighted and unfree files",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "otavio.salvador",
          "htmlLink" : "https://code.google.com/u/117907501634007919439/"
        },
        "updated" : "2011-07-12T05:37:00.000Z",
        "published" : "2011-07-11T16:51:30.000Z",
        "closed" : "2011-07-12T05:37:00.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "otavio.salvador",
              "htmlLink" : "https://code.google.com/u/117907501634007919439/"
            },
            "content" : "For background:\r\n\r\nhttp://bugs.debian.org/614390\r\nhttp://public.kitware.com/Bug/view.php?id=11885",
            "published" : "2011-07-11T16:51:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Those files are old Windows build files that are actually no longer maintained.\r\n\r\nThey were deleted from libarchive/trunk a long time ago.\r\nI've just deleted them from libarchive/2.8 branch as well.\r\n",
            "published" : "2011-07-12T05:37:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "otavio.salvador",
              "htmlLink" : "https://code.google.com/u/117907501634007919439/"
            },
            "content" : "Could it be released then? It would be far easier to us to get a tarball.\r\n\r\nIs there any roadmap of the releases planned? Trunk has a lot of fixes (many backported to Debian package) that would be nice to be deployed to more people and Yocto would be another user of it.",
            "published" : "2011-07-12T12:48:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 163,
        "title" : "Memory corruption in \"uuencode\" decoder",
        "summary" : "Memory corruption in \"uuencode\" decoder",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "adrien.guinet",
          "htmlLink" : "https://code.google.com/u/103736473555212991397/"
        },
        "updated" : "2011-07-17T15:38:43.000Z",
        "published" : "2011-07-17T00:53:49.000Z",
        "closed" : "2011-07-17T15:38:43.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "adrien.guinet",
              "htmlLink" : "https://code.google.com/u/103736473555212991397/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nExtract a .tar.gz or .tar.bz2 (or maybe any archive format) encoded in UUE cause memory corruptions.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nIn the archive attached, there is the code source used and a small bash script to create test archives that reproduce the bugs (made from /dev/urandom). The 2.8.4 stable version of libarchive is used (download on this website, not a distrib package). Valgrind claims that invalid writes and read are done, and the program crashes with a libc memory corruption detection. A valgrind output is in the archive. A gdb backtrace is also included in the archive.\r\nNote that decoding the archive with uudecode and extracting it with tar works, so the test files are valid archive.\r\n\r\n<b>On what operating system?</b>\n\r\nDebian/sid.\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nCFLAGS=&quot;-ggdb3 -O0&quot; ./configure --prefix=/usr/local\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nGCC version 4.6.1 (Debian 4.6.1-3)",
            "published" : "2011-07-17T00:53:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1630000000",
              "fileName" : "libarchive_bug.tar.bz2",
              "fileSize" : 4155,
              "mimetype" : "application/x-bzip2; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "adrien.guinet",
              "htmlLink" : "https://code.google.com/u/103736473555212991397/"
            },
            "content" : "I believe the issue is fixed with this patch : \r\nhttp://public.geekou.info/libarchive_issue_163.patch .\r\n\r\nThe \"ensure_in_buff_size\" in archive_read_support_compression_uu.c only multiplied the size of the original buffer by 2 if it was too small, but didn't check that it was enough to handle the given size, hence the overflows.",
            "published" : "2011-07-17T09:42:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for reporting this issue and pointing out where the bug is.\r\nI fixed it in both trunk/ r3846 and release/2.8/ r3847.",
            "published" : "2011-07-17T15:38:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 164,
        "title" : "Segmentation fault when reading a broken file.",
        "summary" : "Segmentation fault when reading a broken file.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-11-24T02:18:34.000Z",
        "published" : "2011-08-07T15:28:49.000Z",
        "closed" : "2011-11-23T07:51:33.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "The segmentation fault happened at line 432 in tar/util.c\r\nwhen reading an attached file. I think a real problem is that archive_read_skip()\r\nfails with ARCHIVE_FAILED in archive_read_next_header2() and bsdtar continues to\r\nhandle an entry object as if it were set in an error, but the fact is not,\r\njust cleared by archive_entry_clear().\r\n\r\nHow should we solve it ?\r\n",
            "published" : "2011-08-07T15:28:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1640000000",
              "fileName" : "broken.zip",
              "fileSize" : 432,
              "mimetype" : "application/zip; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please take a look at libarchive/trunk r3833.\r\n\r\nI agree there was a bug in how libarchive handled an error during the skip request.  I think this fixes it.\r\n",
            "published" : "2011-11-23T07:51:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "It seems nice. Thank you for your effort.",
            "published" : "2011-11-24T02:18:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 165,
        "title" : "substitiion treats hardlinks as symlinks",
        "summary" : "substitiion treats hardlinks as symlinks",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dieter.ro",
          "htmlLink" : "https://code.google.com/u/108406020894012638594/"
        },
        "updated" : "2011-11-05T05:32:17.000Z",
        "published" : "2011-08-10T08:15:39.000Z",
        "closed" : "2011-11-05T05:32:17.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dieter.ro",
              "htmlLink" : "https://code.google.com/u/108406020894012638594/"
            },
            "content" : "\r\nExtracting archives with substitution applied on hardlinks fails as shown below:\r\n\r\n|=======\r\ninflamm:16:/tmp$ cd /tmp                         \r\ninflamm:16:/tmp$ mkdir -p ttt/sub &amp;&amp; cp /etc/fstab ttt/ &amp;&amp; ln ttt/fstab ttt/sub/\r\ninflamm:16:/tmp$ bsdtar -c -v -f ttt.tar ttt\r\na ttt\r\na ttt/sub\r\na ttt/fstab\r\na ttt/sub/fstab\r\ninflamm:16:/tmp$ bsdtar tvf ttt.tar\r\ndrwxr-xr-x  0 dieter wheel       0 Aug 10 10:02 ttt/\r\ndrwxr-xr-x  0 dieter wheel       0 Aug 10 10:02 ttt/sub/\r\n-rw-r--r--  0 dieter wheel     372 Aug 10 10:02 ttt/fstab\r\nhrw-r--r--  0 dieter wheel       0 Aug 10 10:02 ttt/sub/fstab link to ttt/fstab\r\ninflamm:16:/tmp$ mkdir xx &amp;&amp; cd xx\r\ninflamm:16:/tmp/xx$ bsdtar -x -v -f ../ttt.tar -s ,ttt,mmm,\r\nx mmm/\r\nx mmm/sub/\r\nx mmm/fstab\r\nx mmm/sub/fstab: Can't create 'mmm/sub/fstab'\r\nbsdtar: Error exit delayed from previous errors.\r\ninflamm:16:/tmp/xx$ ls -ilR mmm\r\ntotal 8\r\n5730819 -rw-r--r--  1 dieter  wheel  372 Aug 10 10:02 fstab\r\n5730818 drwxr-xr-x  2 dieter  wheel  512 Aug 10 10:02 sub\r\n\r\nmmm/sub:\r\n=======|\r\n\r\nIt would seem that the cause is a typo in tar/util.c; the following patch makes it work:\r\n|======\r\n--- tar/util.c.orig\t2010-03-07 18:06:05.000000000 +0000\r\n+++ tar/util.c\r\n@@ -377,7 +377,7 @@ edit_pathname(struct bsdtar *bsdtar, str\r\n \t}\r\n \r\n \tif (archive_entry_hardlink(entry)) {\r\n-\t\tr = apply_substitution(bsdtar, archive_entry_hardlink(entry), &amp;subst_name, 1);\r\n+\t\tr = apply_substitution(bsdtar, archive_entry_hardlink(entry), &amp;subst_name, 0);\r\n \t\tif (r == -1) {\r\n \t\t\tlafe_warnc(0, &quot;Invalid substitution, skipping entry&quot;);\r\n \t\t\treturn 1;\r\n======|\r\n\r\nresulting in:\r\n|======\r\ninflamm:16:/tmp/xx$ rm -r mmm\r\ninflamm:16:/tmp/xx$ bsdtar_p -x -v -f ../ttt.tar -s ,ttt,mmm,\r\nx mmm/\r\nx mmm/sub/\r\nx mmm/fstab\r\nx mmm/sub/fstab\r\ninflamm:16:/tmp/xx$ ls -ilR mmm \r\ntotal 8\r\n5730819 -rw-r--r--  2 dieter  wheel  372 Aug 10 10:02 fstab\r\n5730818 drwxr-xr-x  2 dieter  wheel  512 Aug 10 10:02 sub\r\n\r\nmmm/sub:\r\ntotal 4\r\n5730819 -rw-r--r--  2 dieter  wheel  372 Aug 10 10:02 fstab\r\n=======|\r\n\r\n",
            "published" : "2011-08-10T08:15:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What version of bsdtar and/or libarchive are you using?\r\n\r\nOn what platform?\r\n\r\nI just tried your test using the current libarchive/trunk on Mac OS X 10.6 and it seems to work just fine.",
            "published" : "2011-08-14T18:04:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dieter.ro",
              "htmlLink" : "https://code.google.com/u/108406020894012638594/"
            },
            "content" : "Sorry that I forgot to mention this. It's libarchive 2.8.4. I've tried it on NetBSD as well as on GNU/linux.\r\n\r\nI've just now tried it with svn trunk on NetBSD, and it still fails in the same way.",
            "published" : "2011-08-14T19:46:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Now I'm really confused:  I just downloaded NetBSD/i386 5.1 ISO, installed it under VMWare Fusion 3.1, used pkg_add to install svn and cmake, checked out and built libarchive/trunk.  Then:\r\n\r\n# mkdir -p ttt/sub && cp /etc/fstab ttt/ && ln ttt/fstab ttt/sub/\r\n# bin/bsdtar -cvf ttt.tar -s ,ttt,mmm, ttt\r\na mmm\r\na mmm/sub\r\na mmm/fstab\r\na mmm/sub/fstab\r\n# bin/bsdtar xvf ttt.tar\r\nx mmm/\r\nx mmm/sub/\r\nx mmm/fstab\r\nx mmm/sub/fstab\r\n\r\nAnd ls -i indicates that the mmm/fstab and mmm/sub/fstab files are indeed hardlinked.\r\n\r\nI just tried again with the autoconf build (after installing autoconf, automake, and libtool), and it works correctly there as well.\r\n\r\nCould you please:\r\n  1) attach the broken tar archive to this bug report so I can see the constructed archive.\r\n  2) Run the extract that fails under ktrace and look to see why the 'link' system call is failing (what are the arguments, what exactly is the return value).\r\n",
            "published" : "2011-08-14T23:08:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dieter.ro",
              "htmlLink" : "https://code.google.com/u/108406020894012638594/"
            },
            "content" : "Hmm, maybe I didn't explain this too well.\r\nThe steps to reproduce it are:\r\n\r\ncd /tmp                         \r\nmkdir -p ttt/sub && cp /etc/fstab ttt/ && ln ttt/fstab ttt/sub/\r\nbsdtar -c -v -f ttt.tar ttt\r\nmkdir xx && cd xx\r\nbsdtar -x -v -f ../ttt.tar -s ,ttt,mmm,\r\n\r\nI.e. it goes wrong when the substitution is performed on extraction, not on creation. There's nothing special (broken) about the created archive. (In fact, it could as well have been created with another tar implementation.)\r\n\r\nWhat happens is that tar tries to link ttt/fstab to mmm/sub/fstab, which fails, because ttt/fstab is extraced as mmm/fstab.\r\n\r\nkind regards\r\ndieter",
            "published" : "2011-08-15T19:32:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Ah.  I see now.  It appears that the current implementation uses a trailing 's' flag to enable regex substitutions on all links.  Which certainly seems a poor default.\r\n\r\nThis disagrees with both GNU tar (which uses 's' to enable regex substitutions on symlinks, 'h' for hardlinks, and enables both by default) and NetBSD tar (which uses 's' to disable regex substitutions on symlinks).\r\n\r\nI recall that the bsdtar behavior was modeled on NetBSD tar.  I'm not sure whether we should reverse the sense of the current flag in bsdtar to match NetBSD tar (which is definitely a change that we can only make at a major version boundary!) or adopt the GNU tar flags (which provide more control for the user).\r\n\r\n",
            "published" : "2011-08-16T05:40:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "r3676 fixes the first problem here:  I've added a test to verify that symlink targets and hardlink targets both get rewritten by default and adjusted the code to agree with the test.  This makes bsdtar compatible with both NetBSD tar and GNU tar when no flags are present.\r\n\r\nRight now, the trunk code uses 's' to disable both symlink and hardlink rewriting.  This agrees with NetBSD tar, but breaks compatibility with the previous version of bsdtar.  I'm tempted to adopt the GNU tar flags; if anyone else has opinions, I'd be interested.",
            "published" : "2011-09-04T16:40:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dieter.ro",
              "htmlLink" : "https://code.google.com/u/108406020894012638594/"
            },
            "content" : "I think adopting the GNU flags is a good idea. It makes more sense than disabling symlink and hardlink writing together. Except for special cases, disabling rewriting on hardlinks will almost always make the extraction fail.\r\n\r\nBy the way, NetBSD tar currently always performs rewriting on hard links. See the following (/tmp/i/bin/bsdtar is from libarchive trunk, tar is NetBSD's tar):\r\n\r\npavlov$ /tmp/i/bin/bsdtar -t -v -f ../tt2.tar          \r\ndrwxr-xr-x  0 dieter 0           0 Oct  1 15:09 tt2\r\n-rw-r--r--  0 dieter 0           0 Oct  1 15:06 tt2/ab\r\n-rw-r--r--  0 dieter 0           0 Oct  1 15:06 tt2/aab\r\n-rw-r--r--  0 dieter 0           0 Oct  1 15:06 tt2/c link to tt2/ab\r\npavlov$ rm -fr tt2                                                             \r\npavlov$ /tmp/i/bin/bsdtar -x -f ../tt2.tar -s ,a,,s    \r\npavlov$ ls -l tt2/                                  \r\ntotal 0\r\n-rw-r--r--  2 dieter  wheel  0 Oct  1 15:06 ab\r\n-rw-r--r--  1 dieter  wheel  0 Oct  1 15:06 b\r\n-rw-r--r--  2 dieter  wheel  0 Oct  1 15:06 c\r\npavlov$ rm -fr tt2                                  \r\npavlov$ tar -x -f ../tt2.tar -s ,a,,s    \r\npavlov$ ls -l tt2/                       \r\ntotal 0\r\n-rw-r--r--  1 dieter  wheel  0 Oct  1 15:06 ab\r\n-rw-r--r--  2 dieter  wheel  0 Oct  1 15:06 b\r\n-rw-r--r--  2 dieter  wheel  0 Oct  1 15:06 c\r\n",
            "published" : "2011-10-01T13:17:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe libarchive/trunk r3748 completely fixes this by implementing the GNU tar-style HRS (to disable) and hrs (to enable) hardlink, regular filename, and symlink substitutions.  I believe combinations of these characters are correctly handled, and that the default will always replace all three.\r\n\r\nPlease try it and let me know if you see any further problems.\r\n",
            "published" : "2011-11-05T05:32:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 166,
        "title" : "Support reading from multiple data objects (multivolume reading)",
        "summary" : "Support reading from multiple data objects (multivolume reading)",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Review", "Priority-Medium" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mcitadel",
          "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "amejia004",
          "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
        },
        "updated" : "2012-03-28T21:36:46.000Z",
        "published" : "2011-08-13T18:39:46.000Z",
        "closed" : "2012-03-28T21:36:46.000Z",
        "blocking" : [ {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 40
        } ],
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 21,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "RAR archives can be split into multiple files (to provide multivolume support). Each file contains the RAR signature header, a main archive header, and the optional EOF header. The data blocks are split arbitrarily between each file in a multivolume set of files. Currently, libarchive doesn't handle reading from multiple files.\r\n\r\nThis patch would introduce reading from multiple files by way of reading from multiple client objects. What would happen is that there is a chain of client objects, each with the callbacks and data necessary to open, read, skip, and close each object it's reading from (such as different files). Data is read from each of these clients as one large stream. I plan on implementing multivolume reading support of RAR files once general reading from multiple streams is accepted and committed to trunk.\r\n\r\nI introduced a new callback (switch callback) that can be used to switch from reading of one client to the next or previous client. I needed some way to determine whether a file should be closed because it's going to open the next file, or if it's being closed because libarchive is done reading from the file set. The latter would mean that I also need to free all memory allocated for all data objects of each client.\r\n\r\nI've introduced some test cases already for reading from these multiple clients. The test files are simply some reused test rar files that have been splitted using the 'split' program. There's also a test case for supplying custom callbacks and multiple client objects. This custom callbacks test case is essentially the way I see of using libarchive to read from multiple files with custom callbacks. I plan on using libarchive in this way in another application (XBMC).\r\n\r\nThis patch also updates test_fuzz so it can read from multiple files. Currently, the multiple files used in test_fuzz would have the same result as &quot;test_read_format_rar.rar&quot; would. Once I have RARv3 multivolume reading support implemented, this would provide a better test for test_fuzz.\r\n",
            "published" : "2011-08-13T18:39:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1660000000",
              "fileName" : "multiple_clients.patch",
              "fileSize" : 300225,
              "mimetype" : "text/x-diff; charset=us-ascii",
              "isDeleted" : true
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "",
            "published" : "2011-08-13T18:57:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "blocking" : [ "40" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "I deleted the current patch as I found there were some memory leaks with the changes I was proposing. I'll post another patch soon.",
            "published" : "2011-08-19T03:35:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Here's a new patch with the changes I'm proposing.\r\n\r\nThis is different from the last patch. Instead of using a doubly linked list of client objects, an array of void pointers inside a struct is used to maintain multiple data objects that will be used to chain multiple streams together. This should be an improvement as far as performance is concerned. Reading from multiple sources, such as multiple files in a multivolume file set, is done by giving libarchive multiple data objects. You can see the changes in archive_read_open_filename.c to see how reading from multiple file will work.\r\n\r\nFor the cases with archives that have been split using the 'split' program, all format readers will not require any change to read these files.\r\n\r\nAll existing functions and callbacks will perform the same tasks. The new 'switch' callback performs the operation of closing one file, and opening the next, without freeing the data objects given from a client (same proposed functionality as in the previous patch). There are now functions to set a data object at some index, add an object at an index, and append/prepend a data object in the array of data objects. I've not added functions to retrieve data objects at some index. Perhaps there should be, would welcome discussion on that.\r\n\r\nThe appropriate test cases are implemented including modifications to test_fuzz for testing multivolume files. All tests pass. Also, this timevthere are no memory leaks or any other memory related breakage.",
            "published" : "2011-08-19T19:45:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "",
            "published" : "2011-08-19T19:45:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1660004000",
              "fileName" : "multiple_data_objects.patch",
              "fileSize" : 297070,
              "mimetype" : "text/x-diff; charset=us-ascii",
              "isDeleted" : false
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Here's another patch that implements support for reading multivolume RAR files that have been split using RAR's mechanism for splitting RAR files. This patch applies after applying the 'multiple_data_objects.patch'\r\n\r\nTest cases are also implemented and all pass.",
            "published" : "2011-08-19T19:48:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1660005000",
              "fileName" : "multivolume_rar_support.patch",
              "fileSize" : 278880,
              "mimetype" : "text/x-diff; charset=us-ascii",
              "isDeleted" : false
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "I created a branch to make reviewing much easier I hope.",
            "published" : "2011-09-05T18:28:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Support reading from multiple data objects (multivolume reading)"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "andres.mejia1",
              "htmlLink" : "https://code.google.com/u/105182419686074482919/"
            },
            "content" : "Just a general ping.\r\n\r\nWere there any other questions or concerns about these changes?",
            "published" : "2011-09-06T01:18:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Oops, sorry. That last message is from me.",
            "published" : "2011-09-06T01:19:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Ping",
            "published" : "2011-09-22T17:44:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It feels like you're doing a lot more work than necessary to handle this particular case.\r\n\r\nIf you are just interested in handling files created by 'split', then you can do that by adding archive_read_open_filenames (which you've done), but you don't need to make any changes to archive_read.c at all.  Archive_read_open_filenames can keep a list of filenames and when it hits end-of-file on one, open the next file as necessary.  That doesn't require any changes to archive_read.c nor to the RAR reader, I don't think.\r\n",
            "published" : "2011-09-23T05:37:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "objects (multivolume reading)\n\nparticular case.\n\ncan do that by adding archive_read_open_filenames (which you've done), but\nyou don't need to make any changes to archive_read.c at all.\n Archive_read_open_filenames can keep a list of filenames and when it hits\nend-of-file on one, open the next file as necessary.  That doesn't require\nany changes to archive_read.c nor to the RAR reader, I don't think.\n\nI will also need to supply my own list of IO handles (like for FILE).",
            "published" : "2011-09-23T14:33:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Wow, I see the last comment got mangled.\r\n\r\nSo what I was trying to say, I want to make it possible for downstreams of libarchive to pass in their multiple IO handles (such as multiple FILE handles). Such is the case with XBMC which needs to be able to supply it's own callbacks and data objects.",
            "published" : "2011-09-23T16:23:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Ping.\r\n\r\nAny other questions/concerns about this issue?",
            "published" : "2011-10-15T16:16:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "My only concern is that your approach is overkill for what you want to do.\r\n\r\nSince XBMC needs a custom reader anyway, that reader can itself keep a queue of data objects and start reading the next when one is complete.  There's nothing here so far that requires changes to archive_read.c.\r\n",
            "published" : "2011-10-16T02:14:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm not sure I understand this part:\r\n\r\nIn particular, *avail <= 0 seems an odd condition:  I understand that you're in the end-of-file case, so you might need to retry to span to the next volume.\r\n\r\nBut *avail < 0 is usually the error case.  Shouldn't ARCHIVE_FATAL be handled differently here?\r\n\r\n+static const void *\r\n+rar_read_ahead(struct archive_read *a, size_t min, ssize_t *avail)\r\n+{\r\n+  struct rar *rar = (struct rar *)(a->format->data);\r\n+  const void *h = __archive_read_ahead(a, min, avail);\r\n+  int ret;\r\n+  if (avail && *avail > rar->bytes_remaining)\r\n+    *avail = rar->bytes_remaining;\r\n+  if (avail && *avail <= 0 && rar->main_flags & MHD_VOLUME &&\r\n+    rar->file_flags & FHD_SPLIT_AFTER)\r\n+  {\r\n+    ret = archive_read_format_rar_read_header(a, a->entry);\r\n+    if (ret == (ARCHIVE_EOF))\r\n+      ret = archive_read_format_rar_read_header(a, a->entry);\r\n+    if (ret != (ARCHIVE_OK))\r\n+      return NULL;\r\n+    return rar_read_ahead(a, min, avail);\r\n+  }\r\n+  return h;\r\n+}\r\n",
            "published" : "2011-11-20T23:53:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Check the latest commits to the multivolume branch. I just fixed your last concern so that the error case is properly handled.\r\n\r\nAlso, some change in trunk that occurred between the summer and now has caused me to need a fix where I have to ensure the first data node is opened in archive_read_open1 after all bidding is done. It looks like I needed to make the changes in archive_read.c anyway. I'm not sure if I can implement multivolume support without touching archive_read.c.\r\n",
            "published" : "2011-12-23T01:31:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "",
            "published" : "2012-01-16T04:19:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "amejia004"
            },
            "canDelete" : true
          }, {
            "id" : 18,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "andres.mejia1",
              "htmlLink" : "https://code.google.com/u/105182419686074482919/"
            },
            "content" : "Changes for this issue is now in the form of a pull request. See https://github.com/libarchive/libarchive/pull/2",
            "published" : "2012-02-25T17:37:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "andres.mejia1",
              "htmlLink" : "https://code.google.com/u/105182419686074482919/"
            },
            "canDelete" : true
          }, {
            "id" : 19,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "Changes for this is now in the form of a pull request. See https://github.com/libarchive/libarchive/pull/2",
            "published" : "2012-02-25T17:37:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 20,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "Pull request has been merged.",
            "published" : "2012-03-28T21:36:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 167,
        "title" : "Update bsdtar --owner and --group support",
        "summary" : "Update bsdtar --owner and --group support",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Enhancement", "Priority-Low", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-11-24T19:59:18.000Z",
        "published" : "2011-08-14T17:52:36.000Z",
        "closed" : "2011-11-24T19:59:18.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "GNU tar recently extended --owner and --group to support arbitrary names and ID values, for creating archives on systems with dissimilar user bases.  It's a nice idea and one that bsdtar should probably support.\r\n\r\nBegin forwarded message:\r\n\r\nFrom: Paul Eggert &lt;eggert@cs.ucla.edu&gt;\r\nDate: August 13, 2011 10:29:23 AM PDT\r\nTo: Thayne Harbaugh &lt;thayne.l.h@gmail.com&gt;\r\nCc: 136231@bugs.debian.org, bug-tar@gnu.org\r\nSubject: Re: [Bug-tar] Failure with --owner and --group when names cannot be\tmapped to IDs\r\n\r\ntar: --owner and --group names and numbers\r\nThe --owner and --group options now accept operands of the form\r\nNAME:NUM, so that you can specify both symbolic name and numeric\r\nID for owner and group.  Also, in these options, NAME no longer\r\nneeds to be present in the current host's user and group\r\ndatabases; this implements Debian enhancement request 136231\r\n&lt;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=136231&gt; reported\r\nby Mark W. Eichin, communicated by Thayne Harbaugh to bug-tar in\r\n&lt;http://lists.gnu.org/archive/html/bug-tar/2011-08/msg00001.html&gt;.\r\n",
            "published" : "2011-08-14T17:52:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "bsdtar already has --gid, --gname, --uid, --uname options that provide the same functionality.  If someone wants to implement GNU tar-compatible --owner and --group options, I'm happy to review patches, but this isn't a priority for me.",
            "published" : "2011-11-24T19:59:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 168,
        "title" : "ISO regression since 2.7",
        "summary" : "ISO regression since 2.7",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2011-09-11T10:47:55.000Z",
        "published" : "2011-08-15T04:55:07.000Z",
        "closed" : "2011-09-11T10:47:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 8,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "libarchive is still having trouble with the ISO images being produced by FreeBSD makefs, even after fixing the bugs in makefs.\r\n\r\nI just committed a test in r3605 that uses a small test ISO created by makefs.  Currently, this test passes in libarchive 2.6 and 2.7 but not in libarchive 2.8 or 3.0.\r\n\r\nThis image is laid out in the following order:\r\n   Root Directory, with contents &quot;A&quot; and &quot;C&quot;\r\n   Directory A with contents &quot;B&quot;\r\n   File A/B\r\n   Directory C with contents &quot;D&quot;\r\n   File C/D\r\n\r\nLibarchive prior to 2.8 read directories lazily and only required that a directory precede the contents of that directory.  Sometime since then, this has changed so that libarchive now requires all directories to precede all files.\r\n\r\nIn particular, bsdtar 2.6 and 2.7 can read the FreeBSD release ISOs generated by makefs, which bsdtar 2.8 and later cannot do.\r\n\r\n\r\n\r\n",
            "published" : "2011-08-15T04:55:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "",
            "published" : "2011-08-18T16:06:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I believe I fixed this issue in r3642.\r\nPlease try it and let me know the result.",
            "published" : "2011-08-19T06:36:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I fixed this issue in r3645,r3646 for libarchive 2.8.*.",
            "published" : "2011-08-23T09:23:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I committed an additional fix in r3647 to read some ISO image made with makefs enabling\r\na rockridge option.",
            "published" : "2011-08-27T16:36:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "An additional fix in r3648 is for libarchive 2.8.*.",
            "published" : "2011-08-27T16:52:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 173 has been merged into this issue.",
            "published" : "2011-08-27T22:46:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "The original problem has been fixed.",
            "published" : "2011-09-11T10:47:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 169,
        "title" : "Win32 syntax error when including archive_entry.h ",
        "summary" : "Win32 syntax error when including archive_entry.h ",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rbanfield@aol.com",
          "htmlLink" : "https://code.google.com/u/106268798755637419474/"
        },
        "updated" : "2011-08-19T05:51:35.000Z",
        "published" : "2011-08-19T04:18:56.000Z",
        "closed" : "2011-08-19T05:51:35.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rbanfield@aol.com",
              "htmlLink" : "https://code.google.com/u/106268798755637419474/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Create a program which links to archive_entry.h\r\n2. Attempt to compile\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nZip.cpp\r\nc:\\weosuite\\libarchive/libarchive/archive_entry.h(522) : error C2061: syntax error : identifier 'int64_t'\r\nc:\\weosuite\\libarchive/libarchive/archive_entry.h(532) : error C2061: syntax error : identifier 'int64_t'\r\nNMAKE : fatal error U1077: '&quot;C:\\Program Files\\Microsoft Visual Studio 8\\VC\\BIN\\cl.EXE&quot;' : return code '0x2'\r\nStop.\r\n\r\n<b>What version are you using?</b>\nsvn3639\r\n\r\n<b>On what operating system?</b>\nWindows XP 32-bit\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2005\r\n\r\n<b>Please provide any additional information below.</b>\nI suspect int64_t should be replaced with __LA_INT64_T on lines 522 and 532",
            "published" : "2011-08-19T04:18:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the report.  I committed the change you suggest in r3641.  Please try that and let us know.\r\n",
            "published" : "2011-08-19T05:51:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 170,
        "title" : "Internal API changes for crypto support",
        "summary" : "Internal API changes for crypto support",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Review", "Priority-Medium" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mcitadel",
          "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mcitadel",
          "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
        },
        "updated" : "2011-08-27T23:35:21.000Z",
        "published" : "2011-08-21T03:34:04.000Z",
        "closed" : "2011-08-27T23:35:21.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "RAR files can be encrypted. Before I started implementing crypto support for reading RAR files, I think it was best to do a small amount of housekeeping so that hash functions and cipher functions would be implemented from the same source file.\r\n\r\nHere is a patch with the changes. A global struct of function pointers is used to hold all hash init, update, and final functions. The appropriate implementation from a crypto library is used based on availability and order of preference. The changes to autotools and cmake build system are for checking support of available crypto functionality, by checking if the new archive_crypto.c source file compiles and links against required libraries. There's now even a test case to ensure whatever implementation is chosen functions correctly.\r\n\r\nThe only changes to the rest of libarchive were for files that included archive_hash.h. They now include archive_crypto_private.h.\r\n",
            "published" : "2011-08-21T03:34:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1700000000",
              "fileName" : "crypto_changes.patch",
              "fileSize" : 70135,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Forgot to mention the changes with openssl. Hash functions will go through the high level functions provided in openssl/evp.h. I made this change since I had planned on using openssl/evp.h for cipher functionality as well.",
            "published" : "2011-08-21T03:53:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This looks good, though I would beef up the test a bit to try to catch some misconfigurations.  For example, I would change\r\n\r\n#ifdef ARCHIVE_HAS_MD5\r\n\r\nto\r\n\r\n#if defined(ARCHIVE_HAS_MD5) || defined(_WIN32) || defined(__APPLE__) || defined(__FreeBSD__) || defined(__NetBSD__)\r\n\r\nthe latter will fail if the configuration logic fails to detect MD5 on platforms known to have such support.  Obviously, we can tinker a bit to tune this list.\r\n",
            "published" : "2011-08-23T05:42:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mcitadel",
              "htmlLink" : "https://code.google.com/u/mcitadel@gmail.com/"
            },
            "content" : "Implemented the change in r3655. Fine tuning the tests will come later.",
            "published" : "2011-08-27T23:35:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 171,
        "title" : "Failed tests for xz and lzma with xz 5.0.3",
        "summary" : "Failed tests for xz and lzma with xz 5.0.3",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "honkman42",
          "htmlLink" : "https://code.google.com/u/104966794706829507764/"
        },
        "updated" : "2011-08-23T05:03:49.000Z",
        "published" : "2011-08-22T11:43:29.000Z",
        "closed" : "2011-08-23T05:03:49.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "honkman42",
              "htmlLink" : "https://code.google.com/u/104966794706829507764/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nRun the testsuite compiled against xz 5.0.3 on Solaris 9 Sparc with Sun Studio 12.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nFailed tests:\r\nunstable9s% more /tmp/libarchive_test.2011-08-22T13.35.59-000/*.log     \r\n::::::::::::::\r\n/tmp/libarchive_test.2011-08-22T13.35.59-000/test_write_compress_lzma.log\r\n::::::::::::::\r\ntest_write_compress_lzma\r\n\r\nlibarchive/test/test_write_compress_lzma.c:191: Assertion failed: used2 &gt; used1\r\n   Description: Compression-level=0 wrote 689 bytes; default wrote 759 bytes\r\n::::::::::::::\r\n/tmp/libarchive_test.2011-08-22T13.35.59-000/test_write_compress_xz.log\r\n::::::::::::::\r\ntest_write_compress_xz\r\n\r\nlibarchive/test/test_write_compress_xz.c:199: Assertion failed: used2 &gt; used1\r\n   Description: Compression-level=0 wrote 736 bytes; default wrote 804 bytes\r\n\r\n\r\n<b>What version are you using?</b>\nlibarchive 2.8.4, xz 5.0.3\r\n\r\n<b>On what operating system?</b>\nSolaris 9 Sparc\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure, current build options are a bit convoluted due to defaults from build system:\r\nprefix=&quot;/opt/csw&quot; exec_prefix=&quot;/opt/csw&quot; bindir=&quot;/opt/csw/bin&quot; sbindir=&quot;/opt/csw/sbin&quot; libexecdir=&quot;/opt/csw/libexec&quot; datadir=&quot;/opt/csw/share&quot; sysconfdir=&quot;/etc/opt/csw&quot; sharedstatedir=&quot;/opt/csw/share&quot; localstatedir=&quot;/var/opt/csw&quot; libdir=&quot;/opt/csw/lib&quot; infodir=&quot;/opt/csw/share/info&quot; lispdir=&quot;/opt/csw/share/emacs/site-lisp&quot; includedir=&quot;/opt/csw/include&quot; mandir=&quot;/opt/csw/share/man&quot; docdir=&quot;/opt/csw/share/doc&quot; sourcedir=&quot;/opt/csw/src&quot; CPPFLAGS=&quot;-I/opt/csw/include/cryptopp -I/opt/csw/include&quot; CFLAGS=&quot;-xO3 -m32 -xarch=v8&quot; CXXFLAGS=&quot;-xO3 -m32 -xarch=v8&quot; LDFLAGS=&quot;-m32 -xarch=v8 -L/opt/csw/lib&quot; FFLAGS=&quot;-xO3 -m32 -xarch=v8&quot; FCFLAGS=&quot;-xO3 -m32 -xarch=v8&quot; ASFLAGS=&quot;&quot; OPTFLAGS=&quot;-xO3 -m32 -xarch=v8&quot; CC=&quot;/opt/SUNWspro/bin/cc&quot; CXX=&quot;/opt/SUNWspro/bin/CC&quot; CC_HOME=&quot;/opt/SUNWspro&quot; CC_VERSION=&quot;Sun C 5.9 SunOS_sparc Patch 124867-16 2010/08/11&quot; CXX_VERSION=&quot;Sun C++ 5.9 SunOS_sparc Patch 124863-26 2010/10/14&quot; GARCH=&quot;sparc&quot; GAROSREL=&quot;5.9&quot; GARPACKAGE=&quot;trunk&quot; LD_OPTIONS=&quot;-R/opt/csw/lib/\\$ISALIST -R/opt/csw/lib&quot; PKG_CONFIG_PATH=&quot;/opt/csw/lib/pkgconfig&quot; DESTDIR=&quot;/home/dam/mgar/pkg/libarchive/trunk/work/solaris9-sparc/install-isa-sparcv8&quot; /home/dam/mgar/pkg/libarchive/trunk/work/solaris9-sparc/build-isa-sparcv8/libarchive-2.8.4/configure --prefix=/opt/csw --exec_prefix=/opt/csw --bindir=/opt/csw/bin --sbindir=/opt/csw/sbin --libexecdir=/opt/csw/libexec --datadir=/opt/csw/share --sysconfdir=/etc/opt/csw --sharedstatedir=/opt/csw/share --localstatedir=/var/opt/csw --libdir=/opt/csw/lib --infodir=/opt/csw/share/info --includedir=/opt/csw/include --mandir=/opt/csw/share/man\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nSun Studio 12\r\n\r\n<b>Please provide any additional information below.</b>\nI can provice an account on the buildfarm equipped with Solaris if necessary.",
            "published" : "2011-08-22T11:43:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the report.  This is an error with the test that has already been fixed.  The fix will be in the next release.\r\n\r\nPlease let us know if you find any other problems!\r\n",
            "published" : "2011-08-23T05:03:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 172,
        "title" : "Build fix for __INTERIX",
        "summary" : "Build fix for __INTERIX",
        "stars" : 1,
        "starred" : false,
        "status" : "Waiting",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "duft.markus",
          "htmlLink" : "https://code.google.com/u/104893259507466075957/"
        },
        "updated" : "2011-08-27T22:49:15.000Z",
        "published" : "2011-08-23T10:08:29.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "duft.markus",
              "htmlLink" : "https://code.google.com/u/104893259507466075957/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. try to build on interix\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nbuild should succeed, but it doesn't. the type uintptr_t is unknown. the problem is in archive.h, which includes none of stdint.h or inttypes.h. the original problem here is, that SFU 3.5 (which was for windows 2000 and XP) does not have any of those two.\r\n\r\ni have a small patch attached, that make interix include inttypes.h, which is there in vanilla interix since 5.2 (which fixes all vanilla interixen except 3.5, which then still fails (it fails now anyway)).\r\n\r\nHowever there is a library of mine (suacomp), which is installed with Gentoo Prefix for interix, which is the environment i'm fixing this for. This library provides stdint.h and inttypes.h for all interix versions, so it'll then work even on interix 3.5\r\n\r\n<b>What version are you using?</b>\n\r\n2.8.4\r\n\r\n<b>On what operating system?</b>\n\r\nWindows w/ Interix (SFU).\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nGentoo Prefix for Windows, emerge --info attached (contains compiler versions, etc.)\r\n\r\n<b>Please provide any additional information below.</b>",
            "published" : "2011-08-23T10:08:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1720000000",
              "fileName" : "emerge-info-vm1.txt",
              "fileSize" : 3310,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "1720000001",
              "fileName" : "libarchive-interix.patch",
              "fileSize" : 565,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "archive.h doesn't use uintptr_t.\r\n\r\nCan you provide the full compiler error you're seeing?\r\n",
            "published" : "2011-08-23T15:38:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-08-27T22:49:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 173,
        "title" : "parsing ISO: read_entries() doesn't read child folders content",
        "summary" : "parsing ISO: read_entries() doesn't read child folders content",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "budnik27",
          "htmlLink" : "https://code.google.com/u/100346282239568645365/"
        },
        "updated" : "2011-08-27T22:46:49.000Z",
        "published" : "2011-08-26T09:39:07.000Z",
        "closed" : "2011-08-27T22:46:49.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 168
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "budnik27",
              "htmlLink" : "https://code.google.com/u/100346282239568645365/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Write a file at the DVD.\r\n2. Append a folder to the DVD, which must contain child folders and files.\r\n3. Grab ISO-image.\r\n4. While parsing ISO-image, folder content is missing.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nUsing ASHAMPOO BURNING STUDIO 6 FREE write file &quot;abc.exe&quot; on a clear DVD-RW.\r\nThen update DVD, apending folder 345, which contains subfolder &quot;fld&quot; with files.\r\nSo windows explorer show DVD-disc structure normally:\r\nE:/abc.exe\r\nE:/345\r\nE:/345/fld\r\nE:/345/fld/somefile\r\n...\r\n\r\nThen grab ISO-image. While parsing ISO9660 using libarchive, folder 345 content becomes missing. It shows only:\r\nE:/abc.exe\r\nE:/345\r\n\r\n<b>What version are you using?</b>\n2.8.4\r\n\r\n<b>On what operating system?</b>\nwindows 7 sp1, vista, 2003, xp.\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nMS Visual Studio 2008\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n POSSIBLE SOLUTION:\r\n\r\nmodule=&quot;archive_read_support_format_iso9660.c&quot;\r\nfunction=&quot;read_entries(struct archive_read *a)&quot;\r\n\r\n&lt;current code&gt;\r\n\twhile ((file = next_entry(iso9660)) != NULL &amp;&amp;\r\n\t    (file-&gt;mode &amp; AE_IFMT) == AE_IFDIR) {\r\n\t\tr = read_children(a, file);\r\n\t\tif (r != ARCHIVE_OK)\r\n\t\t\treturn (r);\r\n&lt;/current code&gt;\r\n\r\n&lt;fixed code&gt;\r\n\twhile ((file = next_entry(iso9660)) != NULL) {\r\n        if ((file-&gt;mode &amp; AE_IFMT) == AE_IFDIR) {\r\n\t\t    r = read_children(a, file);\r\n\t\t    if (r != ARCHIVE_OK)\r\n\t\t\t    return (r);\r\n        }\r\n&lt;/fixed code&gt;",
            "published" : "2011-08-26T09:39:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is a duplicate of issue #168.\r\n\r\nI believe the issue is fixed in the HEAD of the release/2.8 branch.  If you can test that, we would appreciate it.\r\n\r\nIf you have any small sample archives that we can include in the test suite, that could help.\r\n",
            "published" : "2011-08-27T22:46:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "168"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 174,
        "title" : "On windows, archive_entry_set_pathname fullp path name won't work",
        "summary" : "On windows, archive_entry_set_pathname fullp path name won't work",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "thierryb@filewave.com",
          "htmlLink" : "https://code.google.com/u/106556843621018335062/"
        },
        "updated" : "2011-09-25T06:45:49.000Z",
        "published" : "2011-08-29T12:40:44.000Z",
        "closed" : "2011-09-25T06:45:49.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. create a decompressor\r\n2. in the archive_entry_set_pathname set a path like c:/...\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI expect the file to be extract to the path I give but the problem is the cleanup_pathname_win changes te ':' into '_'.\r\n\r\n\r\n<b>What version are you using?</b>\n\r\n2.8.4\r\n\r\n<b>On what operating system?</b>\n\r\nWindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nVC2010\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2011-08-29T12:40:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "This is a serious issue for us and is completely preventing us from using libarchive on windows.\r\nThere is no good workaround to this.\r\nFor instance setting the current directory to be the target directory won't work in a multi-threaded environment.",
            "published" : "2011-09-06T12:30:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The attached patch changes cleanup_pathname_win to accept a leading drive letter.  (The patch is for libarchive/trunk, but the code is very similar in libarchive/2.8.)\r\n\r\nCan you please try this and let us know if it fixes the issue you're having?\r\n",
            "published" : "2011-09-08T05:22:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1740002000",
              "fileName" : "archive-write-disk-accept-windows-drive.patch",
              "fileSize" : 576,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "I managed to apply it to my libarchive 2.8.\r\nIt works except if the drive letter is is lowercase. May I suggest you to use isalpha(*src) instead?\r\n\r\nI've just seen in your code that trunk is using UTF16. That sounds like a good move since it is not very well documented as to what encidong is currently used (or maybe I dodn't look in the right places).",
            "published" : "2011-09-08T08:22:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I fixed this issue in r3692 for libarchive/trunk.\r\nThe attached patch is for libarchive/2.8.\r\nPlease let us know if the patch works.\r\n",
            "published" : "2011-09-11T10:44:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1740004000",
              "fileName" : "issue174.patch",
              "fileSize" : 4092,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "Thanks a lot.",
            "published" : "2011-09-12T09:26:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "This issue has been fixed in r3692(for trunk) or r3730(for 2.8).",
            "published" : "2011-09-25T06:45:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 175,
        "title" : "Simplify filter bidding",
        "summary" : "Simplify filter bidding",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-08-31T04:11:18.000Z",
        "published" : "2011-08-29T22:46:33.000Z",
        "closed" : "2011-08-31T04:11:18.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Saw the XZ filter doing 8 different byte comparisons and a lot of needless boilerplate each comparison, and ended up simplifying quite a few filter bid sections. Patch attached. All tests (still) pass.",
            "published" : "2011-08-29T22:46:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1750000000",
              "fileName" : "simplify_filter_bidding.patch",
              "fileSize" : 4003,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Nice work!\r\n\r\nCommitted to trunk at r3663.",
            "published" : "2011-08-31T04:11:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 176,
        "title" : "Const-ify several static arrays",
        "summary" : "Const-ify several static arrays",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-09-01T08:27:51.000Z",
        "published" : "2011-08-31T14:43:27.000Z",
        "closed" : "2011-09-01T08:27:51.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "This const-ifies any remaining static arrays in libarchive proper that can be marked this way; it also grabs a few low hanging arrays in the test code. This shrinks the binaries slightly as writable space for these variables doesn't need to be allocated when loading the library.",
            "published" : "2011-08-31T14:43:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1760000000",
              "fileName" : "const_arrays.patch",
              "fileSize" : 3784,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for your pointing out and patch.\r\nI committed it in r3666.",
            "published" : "2011-09-01T08:27:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 177,
        "title" : "Fix --without-zlib compilation",
        "summary" : "Fix --without-zlib compilation",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-09-01T08:34:12.000Z",
        "published" : "2011-08-31T14:48:43.000Z",
        "closed" : "2011-09-01T08:34:12.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I/usr/include/libxml2 -Wall -Werror -g -O2 -MT libarchive/archive_write_set_format_iso9660.lo -MD -MP -MF libarchive/.deps/archive_write_set_format_iso9660.Tpo -c libarchive/archive_write_set_format_iso9660.c  -fPIC -DPIC -o libarchive/.libs/archive_write_set_format_iso9660.o\r\nlibarchive/archive_write_set_format_iso9660.c:942:12: error: ‘wb_set_offset’ declared ‘static’ but never defined [-Werror=unused-function]\r\ncc1: all warnings being treated as errors\r\n",
            "published" : "2011-08-31T14:48:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1770000000",
              "fileName" : "fix_without_zlib_compile.patch",
              "fileSize" : 997,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for your report and patch.\r\nI committed it in r3667.",
            "published" : "2011-09-01T08:34:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 178,
        "title" : "compile issue on MSVC2010 with lzma support",
        "summary" : "compile issue on MSVC2010 with lzma support",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "thierryb@filewave.com",
          "htmlLink" : "https://code.google.com/u/106556843621018335062/"
        },
        "updated" : "2011-09-06T12:31:13.000Z",
        "published" : "2011-08-31T15:55:57.000Z",
        "closed" : "2011-09-01T08:59:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. compile libarchive with lzma support on windows\r\n\r\n<b>What is the expected output? What do you see instead?</b>\ncompile error\r\n\r\n<b>What version are you using?</b>\n2.8.4\r\n\r\n<b>On what operating system?</b>\nWindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nMSVC 2010\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n\r\nThe error is in the function archive_compressor_xz_init_stream in the file archive_write_set_compression_xz,\r\n\r\nThe current code does:\r\nstate-&gt;stream = (lzma_stream)LZMA_STREAM_INIT;\r\n\r\nThis is an assignment and not an initialization. MSVC doesn't like it.\r\n\r\nThe solution is to do the following:\r\n    memset(&amp;state-&gt;stream, 0, sizeof(lzma_stream));\r\n\r\n\r\n",
            "published" : "2011-08-31T15:55:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for your pointing out.\r\nI already fixed about this in trunk but I forgot to merge it from trunk.\r\nSo I merged the fix from trunk in r3668.",
            "published" : "2011-09-01T08:59:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "Thanks a lot. Our current biggest issue is #174. It makes libarchive unisable on windows...",
            "published" : "2011-09-06T12:31:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 179,
        "title" : "test_read_format_mtree failed",
        "summary" : "test_read_format_mtree failed",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-09-11T18:40:29.000Z",
        "published" : "2011-09-06T08:51:28.000Z",
        "closed" : "2011-09-11T18:40:29.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "test_read_format_mtree failed on both Ubuntu and FreeBSD8.\r\nI have not seen it at least on Windows.\r\n\r\ntest_read_format_mtree\r\n\r\nlibarchive/test/test_read_format_mtree.c:130: archive_entry_mtime(ae) != min_int64\r\n      archive_entry_mtime(ae)=0 (0x0, 00)\r\n      min_int64=-9223372036854775808 (0x8000000000000000, 01000000000000000000000)\r\nlibarchive/test/test_read_format_mtree.c:134: archive_entry_mtime(ae) != min_int64\r\n      archive_entry_mtime(ae)=0 (0x0, 00)\r\n      min_int64=-9223372036854775808 (0x8000000000000000, 01000000000000000000000)\r\n",
            "published" : "2011-09-06T08:51:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks.  I did add some tests to verify the handling of very large values in mtree files.\r\nThese tests pass on Mac OS, so it looks like this is a platform-specific problem.\r\n\r\nI'll look into it.\r\n",
            "published" : "2011-09-08T05:39:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Oh.  I see.  archive_entry_mtime() deals with time_t, and the test here uses a 64-bit value which overflows a 32-bit time_t.\r\n\r\nI'll take another look at the mtree integer parsing; it should probably clip time values to the range of time_t.",
            "published" : "2011-09-08T05:51:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Modified mtree code so that very old files return mtime() of TIME_T_MIN and very young files return mtime() of TIME_T_MAX.  Adjusted test to verify these (without making lots of unsubstantiated platform assumptions).\r\n\r\n",
            "published" : "2011-09-11T18:40:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 180,
        "title" : "No support for building Windows x64 using CMake",
        "summary" : "No support for building Windows x64 using CMake",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "BitOgre",
          "htmlLink" : "https://code.google.com/u/103172279784129150409/"
        },
        "updated" : "2011-09-11T16:17:25.000Z",
        "published" : "2011-09-08T19:45:47.000Z",
        "closed" : "2011-09-11T16:17:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "BitOgre",
              "htmlLink" : "https://code.google.com/u/103172279784129150409/"
            },
            "content" : "Using CMake, I get an error when trying to create a Microsoft VS solution file with the option -G &quot;Visual Studio 9 2008 Win64&quot;.  It would be nice to be able to use this library in x64 binaries.",
            "published" : "2011-09-08T19:45:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"Using CMake, I get an error when trying to create a Microsoft VS solution file with the option -G \"Visual Studio 9 2008 Win64\".  It would be nice to be able to use this library in x64 binaries.\"\r\n\r\nWhat error?\r\n\r\nWhat version of libarchive?\r\n\r\nWhat version of cmake?\r\n\r\nWhat command did you use?\r\n",
            "published" : "2011-09-09T03:44:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "BitOgre",
              "htmlLink" : "https://code.google.com/u/103172279784129150409/"
            },
            "content" : "After more testing, it appears to be a configuration error that I was able to fix.  Sorry for wasting your time.",
            "published" : "2011-09-09T17:29:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "No problem.  Let us know if you find other problems.\r\n",
            "published" : "2011-09-11T16:17:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 181,
        "title" : "archive_compressor_program_finish returns failure on Windows when it actually succeeded",
        "summary" : "archive_compressor_program_finish returns failure on Windows when it actually succeeded",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "BitOgre",
          "htmlLink" : "https://code.google.com/u/103172279784129150409/"
        },
        "updated" : "2011-09-13T08:49:59.000Z",
        "published" : "2011-09-08T21:39:56.000Z",
        "closed" : "2011-09-13T08:49:59.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "BitOgre",
              "htmlLink" : "https://code.google.com/u/103172279784129150409/"
            },
            "content" : "In the function archive_compressor_program_finish on Windows, it is very likely that the compressing program will terminate well before the call to waitpid.  When this happens, the call to OpenProcess in __la_waitpid will fail even though everything completed successfully.  This will result in the local variable status being unmodified which was never initialized in the first place and result in archive_compressor_program_finish failing.\r\n\r\nThis is happening when I run the test_write_compress_program on a Windows Vista 64 bit system and the test fails when it should not.",
            "published" : "2011-09-08T21:39:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for your reporting.\r\nI fixed this issue in libarchive/trunk r3706.\r\nThat initialize the variable `status' at the beginning of __la_waitpid. ",
            "published" : "2011-09-13T08:49:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 182,
        "title" : "ZLIB for Windows expects ZLIB_WINAPI to be defined",
        "summary" : "ZLIB for Windows expects ZLIB_WINAPI to be defined",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "BitOgre",
          "htmlLink" : "https://code.google.com/u/103172279784129150409/"
        },
        "updated" : "2011-09-25T06:57:09.000Z",
        "published" : "2011-09-09T17:48:33.000Z",
        "closed" : "2011-09-25T06:57:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "BitOgre",
              "htmlLink" : "https://code.google.com/u/103172279784129150409/"
            },
            "content" : "I do not know what version of ZLib libarvice is normally built against in Windows.  I use zlib from http://zlib.net/zlib125.zip and in order to get libarchive to build correctly and pass all tests, I have to modify archive_windows.h to include the following lines:\r\n\r\n#ifdef HAVE_ZLIB_H\r\n#define ZLIB_WINAPI\r\n#endif\r\n\r\n<b>What steps will reproduce the problem?</b>\n1. Downloaded http://zlib.net/zlib125.zip\r\n2. Extracted files to $(BASE_DIR) and renamed zlib-1.2.5 to zlib\r\n3. Built zlib binaries using solution in $(BASE_DIR)\\zlib\\contrib\\vstudio\\vc9\r\n4. CMake -G &quot;Visual Studio 9 2008&quot; -DZLIB_INCLUDE_DIR=$(BASE_DIR)\\zlib -DZLIB_LIBRARY=$(BASE_DIR)\\zlib\\contrib\\vstudio\\vc9\\x86\\ZlibStatRelease\\zlibstat.lib\r\n5. built libarchive files with the following command: &quot;$(VS90COMNTOOLS)\\vsvars32.bat&quot; &amp;&amp; vcbuild libarchive.sln &quot;Release|Win32&quot;\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expect step 5 to complete with no errors.  What I saw was linker errors that indicated libarchive could not find the zlib symbols.\r\n\r\nWhat version are you using? 2.8.5\r\nOn what operating system? Windows Vista x64\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nMicrosoft Visual Studio 2008\r\nVersion 9.0.30729.1 SP\r\nMicrosoft .NET Framework\r\nVersion 3.5 SP1\r\n\r\n",
            "published" : "2011-09-09T17:48:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I just added your suggestion to archive_windows.h in libarchive/trunk.\r\n\r\nPlease test this and let us know if it fixes the problem; if it does, we'll merge it into the 2.8 branch.\r\n",
            "published" : "2011-09-11T16:16:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-09-11T16:16:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "The changes of r3697 caused a link error with another zlib made on msys.\r\nThat sort of zlib has been provided by GnuWin32.\r\nI updated the change and committed it in r3702.",
            "published" : "2011-09-12T07:55:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I fixed this in r3702 for trunk or r3731 for libarchive/2.8.",
            "published" : "2011-09-25T06:57:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 183,
        "title" : "tar.gz files are not correctly extracted with version 2.8.x, but correct with 3.x",
        "summary" : "tar.gz files are not correctly extracted with version 2.8.x, but correct with 3.x",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "simon.brandner",
          "htmlLink" : "https://code.google.com/u/111109299047066547096/"
        },
        "updated" : "2011-09-18T21:51:12.000Z",
        "published" : "2011-09-13T12:20:26.000Z",
        "closed" : "2011-09-18T21:51:12.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.brandner",
              "htmlLink" : "https://code.google.com/u/111109299047066547096/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.compile the attached implementation with 2.8.0 under Ubuntu LTS or Meego:\r\ncmake .\r\nmake\r\n2. call the resulting exec: ./TESTtestingAgent\r\n3.inspect the extracted files in ./out/ folder\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe extracted files should  contain valid content. But they are unreadable. cat ./out/testing* brings nothing. opening the files with vim results in a long row of: &quot;^@^@^@^@^@&quot; \r\n\r\n<b>What version are you using?</b>\n2.8.0\r\nWith 3.x it works\r\n\r\n<b>On what operating system?</b>\nUbuntu LTS and Meego 1.1\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nUbuntu prepackaged lead to errors\r\nInstallation of libarchive 3 with cmake works.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI did some small additions to the example untar.c file. I realized that extracting my test.tar.gz files were not correctly readable then.\r\nI downloaded the most recent version from the SVN trunk, had to change the &quot;off_t offset&quot; type to   &quot;int64_t offset&quot; in the &quot;copy_data&quot; function to get it compiled. Then the files were correctly extracted.\r\n--&gt; Is it possible, that the packaged untar.c in the examples folder is optimized for more recent version? Do I need an extra step in the older versions which I may have forgotten? \r\n--&gt; I currently assume that it is not an issue of the library - it would have come up long ago, but maybe there is something in the provided untar.c example.\r\n--&gt; I attached a reduced version of my example implementation which reuses a lot form the untar.c. I must admit it is not totally tiny, but does not much more than extract an included file. Qt is unfortunately required. I hope you can deal with it.\r\n\r\n\r\nRegards,\r\n\r\nSimon\r\n",
            "published" : "2011-09-13T12:20:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1830000000",
              "fileName" : "for_libarchive_issues.tar.gz",
              "fileSize" : 16328,
              "mimetype" : "application/x-gzip; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.brandner",
              "htmlLink" : "https://code.google.com/u/111109299047066547096/"
            },
            "content" : "Hello all,\r\n\r\nFinally I realised it is the compiler flag, which is already mentioned in the source code of untar.c.\r\nadding:\r\nSET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} \"-D_FILE_OFFSET_BITS=64\")\r\nin the CMakeLists.txt\r\nor appending -D_FILE_OFFSET_BITS=64 to the gcc/g++ command line \r\nmakes it work.\r\nIssue may be closed, as it is no Software error..\r\nThe new libarchives got rid of the off_t, why they are independent from this flag..\r\n\r\nThen I can still complain about the not-updated untar.c. In the actual SVN trunk it has still the \"off_t offset\" in line 203, although \"int64_t offset\" would be correct then.\r\n\r\nRegards,\r\n\r\nSimon\r\n\r\n",
            "published" : "2011-09-13T12:54:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the report:  I just committed a fix to untar.c to fix the issue you found:\r\n\r\n\r\nIndex: untar.c\r\n===================================================================\r\n--- untar.c\t(revision 3713)\r\n+++ untar.c\t(working copy)\r\n@@ -200,7 +200,11 @@\r\n \tint r;\r\n \tconst void *buff;\r\n \tsize_t size;\r\n+#if ARCHIVE_VERSION >= 3000000\r\n+\tint64_t offset;\r\n+#else\r\n \toff_t offset;\r\n+#endif\r\n \r\n \tfor (;;) {\r\n \t\tr = archive_read_data_block(ar, &buff, &size, &offset);\r\n",
            "published" : "2011-09-18T21:51:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 184,
        "title" : "用一个文件名打开一个存在于一个包中的文件(open a file in a archive with a filename)",
        "summary" : "用一个文件名打开一个存在于一个包中的文件(open a file in a archive with a filename)",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "nii.zelda",
          "htmlLink" : "https://code.google.com/u/113243699072691329271/"
        },
        "updated" : "2012-11-08T02:57:59.000Z",
        "published" : "2011-09-15T05:25:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nii.zelda",
              "htmlLink" : "https://code.google.com/u/113243699072691329271/"
            },
            "content" : "我发现libarchive存在一个问题就是如果我想用一个文件名字去打开存在于归档文件的文件时，岂不是是要遍历一个这个归档文件直到找到文件的名字相同的文件才能打开（i was tired when open a file in achive with a filename , i must itertor the archvie ,and find a file 's filename match input one,oh! so fuck）",
            "published" : "2011-09-15T05:25:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Translated to English by Babelfish: \"I discovered that libarchive has a problem is when I want to use a document name opens exists in the archived file document, is must traversal this archived file until to find the document the name same document to be able to open\"",
            "published" : "2011-10-16T02:16:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "yunjie.liu",
              "htmlLink" : "https://code.google.com/u/117851591127161064629/"
            },
            "content" : "这是tar格式限制，你查看\r\nhttp://en.wikipedia.org/wiki/Tar_(file_format) 中的关于Random access的说明",
            "published" : "2012-11-08T02:57:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 185,
        "title" : "bsdtar unzips incorrectly with 0 byte files ...again ",
        "summary" : "bsdtar unzips incorrectly with 0 byte files ...again ",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "basinilya",
          "htmlLink" : "https://code.google.com/u/101373709489840853839/"
        },
        "updated" : "2011-09-20T06:39:12.000Z",
        "published" : "2011-09-18T17:24:31.000Z",
        "closed" : "2011-09-20T05:22:05.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "basinilya",
              "htmlLink" : "https://code.google.com/u/101373709489840853839/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. wget http://downloads.sourceforge.net/soapui/soapui-4.0.0-linux-bin.zip\r\n2. echo &quot;eea616ac0c460678b3dea8283d6bd02d  soapui-4.0.0-linux-bin.zip&quot; | md5sum -c\r\n3. bsdtar -xf soapui-4.0.0-linux-bin.zip\r\n4. ls -l soapui-4.0.0\r\n\r\nWhat is the expected output?\r\n-rwxr-xr-x 1 il il  5394 Jun 14 10:06 HelloWS-soapui-project.xml\r\nWhat do you see instead?\r\n-rwxr-xr-x 1 il il    0 Jun 14 10:06 HelloWS-soapui-project.xml\r\n\r\n<b>What version are you using?</b>\n2.8.5\r\n\r\n<b>On what operating system?</b>\nArchlinux 64\r\n\r\nHow did you build?\r\npre-packaged binary\r\n\r\nIt's a regression. Downgrade to 2.8.4-2 helps.\r\nsee https://bugs.archlinux.org/task/26044\r\n",
            "published" : "2011-09-18T17:24:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I think I know the cause of this.\r\n\r\nIt would be tremendously helpful if someone could find a small (<4k) Zip file that demonstrates the problem, so we can add it to our regression test.",
            "published" : "2011-09-18T21:46:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "basinilya",
              "htmlLink" : "https://code.google.com/u/101373709489840853839/"
            },
            "content" : "here you go",
            "published" : "2011-09-19T08:13:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1850002000",
              "fileName" : "test.zip",
              "fileSize" : 662,
              "mimetype" : "application/zip; charset=binary"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks.  This is the same problem I committed a fix for yesterday.  I've added your file to the regression suite in r3724.\r\n\r\nFor our records, can you please tell us how this Zip file was created?  Including the software, version, preferably the exact command line used?\r\n",
            "published" : "2011-09-20T05:22:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "basinilya",
              "htmlLink" : "https://code.google.com/u/101373709489840853839/"
            },
            "content" : "> how this Zip file was created?\r\nI downloaded the big file from above URL and deleted all contents except one with Total Commander",
            "published" : "2011-09-20T06:39:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 186,
        "title" : "bsdtar ignores mtree entries with missing content= files and does not exit with error and a non-zero status",
        "summary" : "bsdtar ignores mtree entries with missing content= files and does not exit with error and a non-zero status",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jos.backus",
          "htmlLink" : "https://code.google.com/u/113275891512114144129/"
        },
        "updated" : "2011-11-05T20:02:25.000Z",
        "published" : "2011-09-20T00:45:58.000Z",
        "closed" : "2011-11-05T04:27:40.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jos.backus",
              "htmlLink" : "https://code.google.com/u/113275891512114144129/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nlizzy:/tmp% cat t\r\n#!/bin/sh\r\n\r\nmkdir dir\r\ndate &gt; dir/foo\r\nls -l dir\r\n\r\n(\r\ncat &lt;&lt; EOT\r\n#mtree\r\ndir/myfoo type=file uid=0 gid=0 mode=0644 content=dir/foo\r\nEOT\r\n) &gt; m\r\nbsdtar -cf good.tar @m\r\necho $?\r\necho good:\r\nbsdtar -tvf good.tar\r\n\r\n(\r\ncat &lt;&lt; EOT\r\n#mtree\r\ndir/myfoo type=file uid=0 gid=0 mode=0644 content=dir/nothere\r\nEOT\r\n) &gt; m\r\nbsdtar -cf bad.tar @m\r\necho $?\r\necho bad:\r\nbsdtar -tvf bad.tar\r\n% \r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nAn error message and a non-zero exit status upon encountering the faulty mtree specification (because it refers to a nonexistent file).\r\n\r\nInstead, the entry is silently ignored and bsdtar exits with a zero status.\r\n\r\nlizzy:/tmp% ./t\r\nFreeBSD lizzy 9.0-BETA2 FreeBSD 9.0-BETA2 #151: Tue Aug 30 10:13:26 PDT 2011\r\nroot@lizzy:/usr/obj/usr/src/sys/LIZZY i386\r\nbsdtar 2.8.5 - libarchive 2.8.5\r\ntotal 4\r\n-rw-r--r-- 1 jos wheel 29 Sep 8 22:25 foo\r\n0\r\ngood:\r\n-rw-r--r-- 0 0 0 29 Sep 8 22:25 dir/myfoo\r\n0\r\nbad:\r\nlizzy:/tmp% \r\n\r\n<b>What version are you using?</b>\n\r\nbsdtar 2.8.5 - libarchive 2.8.5\r\n\r\n<b>On what operating system?</b>\n\r\nFreeBSD lizzy 9.0-BETA2 FreeBSD 9.0-BETA2 #151: Tue Aug 30 10:13:26 PDT 2011\r\nroot@lizzy:/usr/obj/usr/src/sys/LIZZY i386\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nlizzy:/tmp% gcc -v\r\nUsing built-in specs.\r\nTarget: i386-undermydesk-freebsd\r\nConfigured with: FreeBSD/i386 system compiler\r\nThread model: posix\r\ngcc version 4.2.2 20070831 prerelease [FreeBSD]\r\nlizzy:/tmp% \r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI'm seeing the same problem on Linux (Funtoo) so it doesn't look like a platform issue.\r\n\r\n",
            "published" : "2011-09-20T00:45:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this has been recently fixed in libarchive/trunk by r3744, which fixes the error handling for @<archive>.\r\n\r\nIf you could repeat your test with libarchive/trunk, I would appreciate knowing if this fixes it for you.  You can also try applying the attached diff to the source for bsdtar 2.8.5.\r\n\r\n",
            "published" : "2011-11-05T04:27:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1860001000",
              "fileName" : "bsdtar-at-error-handling.patch",
              "fileSize" : 701,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jos@catnook.com",
              "htmlLink" : "https://code.google.com/u/112016033127482819014/"
            },
            "content" : "r3748 works, but the error message is a little strange because we creating, not reading bad.tar:\r\n\r\nlizzy:/tmp% bsdtar --version\r\nbsdtar 3.0.0a - libarchive 3.0.0a\r\nlizzy:/tmp% sh -x ./t \r\n+ mkdir dir\r\n+ date\r\n+ ls -l dir\r\ntotal 4\r\n-rw-r--r--  1 jos  wheel  29 Nov  4 22:55 foo\r\n+ cat\r\n+ bsdtar -cf good.tar @m\r\n+ echo 0\r\n0\r\n+ echo good:\r\ngood:\r\n+ bsdtar -tvf good.tar\r\n-rw-r--r--  0 0      0          29 Nov  4 22:55 dir/myfoo\r\n+ cat\r\n+ bsdtar -cf bad.tar @m\r\nbsdtar: Error reading archive m: Can't open dir/nothere\r\nbsdtar: Error exit delayed from previous errors.\r\n+ echo 1\r\n1\r\n+ echo bad:\r\nbad:\r\n+ bsdtar -tvf bad.tar\r\nlizzy:/tmp% \r\n\r\nThanks, Tim!",
            "published" : "2011-11-05T05:57:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The error message says there is an error reading 'm', which is exactly correct.\r\n\r\nIf you can think of a better way to express this error, please let me know.\r\n",
            "published" : "2011-11-05T19:30:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jos@catnook.com",
              "htmlLink" : "https://code.google.com/u/112016033127482819014/"
            },
            "content" : "Oops, you're right, sorry. I was focusing on the wrong thing (archive creation). The message is fine. Again, thanks for fixing this, Tim.",
            "published" : "2011-11-05T20:02:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 187,
        "title" : "Add libcdio as dependency and use it for ISO9660 and UDF (iso) files",
        "summary" : "Add libcdio as dependency and use it for ISO9660 and UDF (iso) files",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "markg85",
          "htmlLink" : "https://code.google.com/u/115178530551802636285/"
        },
        "updated" : "2011-09-22T15:40:21.000Z",
        "published" : "2011-09-22T13:42:43.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "markg85",
              "htmlLink" : "https://code.google.com/u/115178530551802636285/"
            },
            "content" : "Hi,\r\n\r\nCurrently libarchive supports reading and writing ISO9660 but there is no read nor write support for UDF thus miking it, at the moment, impossible to open an UDF iso without mounting it or using fuse.\r\n\r\nLibcdio: http://www.gnu.org/software/libcdio/ is exactly there to support those formats and works for ISO9660, UDF, audio cd's and perhaps something else (didn't look into it that deep).\r\n\r\nMy proposal is to drop the current read support of ISO9660 and start using libcdio for that and UDF files. Another possibility is copying the UDF parts from libcdio if you really don't want a dependency on there.. I don't think that's the best way to go though.\r\n\r\nBig advantage is that archive applications can be used to open udf iso files once this is implemented.\r\n\r\nRegards,\r\nMark",
            "published" : "2011-09-22T13:42:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "markg85",
              "htmlLink" : "https://code.google.com/u/115178530551802636285/"
            },
            "content" : "Sorry, i pressed \"Save changes\" to quick. Please change the type to Enhancement.\r\nAlso this makes issue #27 obsolete once implemented.",
            "published" : "2011-09-22T13:45:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I haven't looked deeply, but I did notice that cdio_open() requires a filename.\r\n\r\nLibarchive can't use this.  It doesn't read files, it reads \"streams\", which can come from many sources, not just files.  See the archive_read man page for the description of archive_read_open():  http://code.google.com/p/libarchive/wiki/ManPageArchiveRead3\r\n\r\nIf libcdio can accomodate input sources other than files, then it may be possible to integrate.  Until that happens, programs that use libarchive can use libcdio beside it to handle ISO and UDF formats that libarchive can't handle.  Since libarchive's format modules are all optional, it's easy for a program to create a libarchive handle that recognizes formats other than ISO, ask libarchive to taste a new file and if that fails, try opening the file with libcdio.\r\n\r\nBut that's completely outside of libarchive proper.\r\n\r\nIf libcdio has some more flexible way of accessing the data, then it may be an option.\r\n",
            "published" : "2011-09-22T15:40:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 188,
        "title" : "read_mtree() silently discards mtree specifications whose lines exceed 256 characters",
        "summary" : "read_mtree() silently discards mtree specifications whose lines exceed 256 characters",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jos@catnook.com",
          "htmlLink" : "https://code.google.com/u/112016033127482819014/"
        },
        "updated" : "2011-11-04T04:36:00.000Z",
        "published" : "2011-09-26T00:03:19.000Z",
        "closed" : "2011-11-04T04:36:00.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jos@catnook.com",
              "htmlLink" : "https://code.google.com/u/112016033127482819014/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nWhile creating an archive, feed bsdtar an mtree file as input with at least one line exceeding 256 characters. This causes read_mtree() to return ARCHIVE_FATAL, which in turn causes read_header() to return ARCHIVE_FATAL. After that I lost track and couldn't determine why an error message is not generated, although that seems appropriate imo.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nAn error message indicating invalid input.\r\nNothing. An empty archive is created, and bsdtar exits non-zero.\r\n\r\n<b>What version are you using?</b>\ntrunk, r3729\r\n\r\n<b>On what operating system?</b>\nFreeBSD lizzy.catnook.local 9.0-BETA2 FreeBSD 9.0-BETA2 #164: Mon Sep 19 10:17:54 PDT 2011     root@lizzy.catnook.local:/usr/obj/usr/src/sys/LIZZY  i386\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nUsing built-in specs.\r\nTarget: i386-undermydesk-freebsd\r\nConfigured with: FreeBSD/i386 system compiler\r\nThread model: posix\r\ngcc version 4.2.2 20070831 prerelease [FreeBSD]\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nI'm not sure what the correct fix is. Ideally there should be enough room for the target archive filename and the content filename, both which can be of PATH_MAX size.\r\n\r\nFor now I plan on using the following local patch at $WORK:\r\n\r\nIndex: libarchive/archive_read_support_format_mtree.c\r\n===================================================================\r\n--- libarchive/archive_read_support_format_mtree.c      (revision 3732)\r\n+++ libarchive/archive_read_support_format_mtree.c      (working copy)\r\n@@ -818,7 +818,7 @@\r\n        last_entry = NULL;\r\n \r\n        for (counter = 1; ; ++counter) {\r\n-               len = readline(a, mtree, &amp;p, 256);\r\n+               len = readline(a, mtree, &amp;p, 3072);\r\n                if (len == 0) {\r\n                        mtree-&gt;this_entry = mtree-&gt;entries;\r\n                        free_options(global);\r\n",
            "published" : "2011-09-26T00:03:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try libarchive/trunk r3744.\r\n\r\nI believe this fixes the tar bug which prevents the error message from being propagated all the way out.\r\n\r\nIf you can verify that, then I'll happily extend the line length used in the mtree reader.",
            "published" : "2011-11-03T05:37:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jos@catnook.com",
              "htmlLink" : "https://code.google.com/u/112016033127482819014/"
            },
            "content" : "In the failure case I now see:\r\n\r\nbsdtar: Error reading archive (null): Line too long\r\nbsdtar: Error exit delayed from previous errors.\r\n\r\nand $? is 1. Much better :)\r\n\r\nPlease bump the line length in the mtree reader - I picked 3072 because it's at least 2 * PATH_MAX (destination and content= fields) plus leaving plenty of room for other metadata fields.\r\n\r\nThanks!\r\n",
            "published" : "2011-11-03T18:53:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for helping to verify that.\r\n\r\nI fixed the (null) display here and then bumped the line length limit to 64k.  (The limit is just a sanity-check in case we're reading something that's really malformed; there's no compelling reason to economize.)",
            "published" : "2011-11-04T04:36:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 189,
        "title" : "libarchive allows an archive to be added to itself",
        "summary" : "libarchive allows an archive to be added to itself",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "joseph.koshy",
          "htmlLink" : "https://code.google.com/u/104885024828582528215/"
        },
        "updated" : "2011-11-03T05:22:09.000Z",
        "published" : "2011-10-30T08:58:00.000Z",
        "closed" : "2011-11-03T05:22:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joseph.koshy",
              "htmlLink" : "https://code.google.com/u/104885024828582528215/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n  % ./bsdtar --version\r\n  bsdtar 3.0.0a - libarchive 3.0.0a\r\n\r\nCreate an archive:\r\n\r\n  % touch foo; ./bsdtar cf a.tar foo\r\n\r\nAdd the archive to itself:\r\n\r\n  % ./bsdtar -cvf a.tar a.tar\r\n  a a.tar\r\n\r\nThe addition goes through successfully, without and error message.\r\nThe resulting file has the following content:\r\n\r\n  % ./bsdtar -tvf a.tar\r\n  -rw-r--r--  0 elftoolchain 0           0 Oct 30 14:02 a.tar\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n  An error message was expected.\r\n\r\n<b>What version are you using?</b>\n\r\n  SVN -HEAD.\r\n\r\n<b>On what operating system?</b>\n\r\n  NetBSD 5.0.2\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n  % ./configure &amp;&amp; make\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n  % uname -sr\r\n  NetBSD 5.0.2\r\n\r\n  % gcc -v\r\n  Using built-in specs.\r\n  Target: i386--netbsdelf\r\n  Configured with: /usr/src/tools/gcc/../../gnu/dist/gcc4/configure --enable-long-long --disable-multilib --enable-threads --disable-symvers --build=x86_64-unknown-netbsd4.99.72 --host=i386--netbsdelf --target=i386--netbsdelf --enable-__cxa_atexit\r\n  Thread model: posix\r\n  gcc version 4.1.3 20080704 prerelease (NetBSD nb2 20081120)\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nIn &quot;libarchive/archive_write.c&quot;, the function _archive_write_header()\r\nassumes that the device ID for an archive file cannot be zero.\r\n\r\n    if (a-&gt;skip_file_dev != 0 &amp;&amp;\r\n        archive_entry_dev(entry) == a-&gt;skip_file_dev &amp;&amp;\r\n        a-&gt;skip_file_ino != 0 &amp;&amp; \r\n        archive_entry_ino(entry) == a-&gt;skip_file_ino) {\r\n            archive_set_error(&amp;a-&gt;archive, 0,\r\n                &quot;Can't add archive to itself&quot;);\r\n            return (ARCHIVE_FAILED);\r\n    }\r\n\r\nPOSIX only requires that the dev_t type be a arithmetic type and does\r\nnot place restrictions on the legal values of a dev_t type.  In\r\nNetBSD, device IDs of zero are legal.\r\n\r\n  % uname -sr\r\n  NetBSD 5.0.2\r\n  % pwd\r\n  /home/elftoolchain/trunk/ar\r\n  % stat -f '%N: %d %Sd' ar.a\r\n  ar.a: 0 wd0a\r\n  % ls -l /dev/wd0a\r\n  brw-r-----  1 root  operator  0, 0 Aug 25  2010 /dev/wd0a\r\n\r\nThus this error check will not work correctly on NetBSD.\r\n\r\nSee also: http://sourceforge.net/apps/trac/elftoolchain/ticket/353",
            "published" : "2011-10-30T08:58:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joseph.koshy",
              "htmlLink" : "https://code.google.com/u/104885024828582528215/"
            },
            "content" : "The attached patch makes the check in \"archive_write.c\" more portable.\r\nWith this patch, bsdtar behaves as expected:\r\n\r\n  % ./bsdtar -cvf a.tar a.tar\r\n  a a.tar: Can't add archive to itself\r\n\r\n\r\n",
            "published" : "2011-10-30T09:07:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1890001000",
              "fileName" : "libarchive.patch",
              "fileSize" : 583,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This patch is insufficient.  It works for bsdtar because bsdtar sets the 'skip_file_XXX' values and (on POSIX systems) always sets the dev/ino for each entry.  This is not true of all libarchive clients.  In particular, programs that generate contents in memory often skip these values; your patch would break such clients badly.\r\n\r\nIf any numeric dev_t value is legal, then you need to add another variable to track whether skip_file_dev and skip_file_ino values have been set or not and check the rest of the code to make sure that flag is set and obeyed correctly.  (Fortunately, there are only a couple of places these values are used.)\r\n\r\nIt's probably desirable to also skip this check if archive_entry_dev() or archive_entry_ino64 is not set.  archive_entry already has some logic to track which values have been set; that could easily be extended to track the dev/ino values as well.\r\n",
            "published" : "2011-10-30T20:35:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "joseph.koshy",
              "htmlLink" : "https://code.google.com/u/104885024828582528215/"
            },
            "content" : "Sorry, I only have a passing acquaintance with libarchive and cannot\r\nproduce a perfect patch for you.\r\n\r\nThe intent of filing this bug report is to alert you to the fact that\r\ncode such as that in file \"archive_write.c\" referenced above, is\r\nincorrect.\r\n\r\nIt is incorrect because it assumes that '0' is some kind of sentinel\r\nvalue for device IDs and inode numbers.  Even in FreeBSD, where I\r\npresume libarchive was originally developed, the constant 'NODEV' is\r\ndefined as ((dev_t) -1).  IIRC, earlier versions of FreeBSD used to\r\nhave devices with a device id of zero (like NetBSD does today).\r\n\r\nThe 'NODEV' constant is not defined by POSIX.  IIRC portable code can\r\nonly rely on the pair (device_id, inode_number) uniquely naming a file\r\non a system.  Portable code cannot assume that specific values of a\r\ndevice id or an inode number are 'special' across all POSIX-compliant\r\nOSes.\r\n",
            "published" : "2011-11-01T05:38:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe libarchive/trunk r3743 fixes this.\r\n\r\nThanks for the report!\r\n",
            "published" : "2011-11-03T05:22:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 190,
        "title" : "Failure to find libiconv when building on Mac (but only if liblzma is installed)",
        "summary" : "Failure to find libiconv when building on Mac (but only if liblzma is installed)",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-11-06T19:13:13.000Z",
        "published" : "2011-11-05T20:17:37.000Z",
        "closed" : "2011-11-06T19:13:13.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.  Install liblzma and cmake using MacPorts\r\n2.  cmake .\r\n3.  make\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThe build breaks with errors linking the iconv library.\r\nUninstalling liblzma fixes it again.\r\nApparently there is a problem either with how iconv is being detected or with how liblzma is being detected that results in libarchive using mismatched header/libraries for iconv.\r\n\r\n<b>Please use labels and text to provide additional information.</b>\n\r\n\r\n",
            "published" : "2011-11-05T20:17:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've constructed a small sample Cmake project that illustrates the problem.\r\n\r\nThis project builds correctly only if liblzma is not installed.  In particular, the first command line below builds successfully, the second fails.  (This uses cmake installed through MacPorts.)\r\n\r\n$ sudo port uninstall liblzma && cmake . && make\r\n\r\n$ sudo port install liblzma && cmake . && make\r\n",
            "published" : "2011-11-06T03:59:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1900001000",
              "fileName" : "demo.c",
              "fileSize" : 160,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "1900001001",
              "fileName" : "CMakeLists.txt",
              "fileSize" : 424,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-11-06T04:06:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Failure to find libiconv when building on Mac."
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-11-06T04:06:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Failure to find libiconv when building on Mac (but only if liblzma is installed)"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm starting to suspect this is really a bug in CMake.  In the CMakeLists.txt above, the obvious fix is to change line 10 to read:\r\n\r\ninclude_directories(BEFORE ${ICONV_INCLUDE_DIR})\r\n\r\nThat should ensure that the correct include directory for iconv.h gets searched first.  But as far as I can tell, this line does nothing;  The include directory -- in this case, /usr/include -- doesn't seem to be added to the compiler flags.",
            "published" : "2011-11-06T17:52:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "A-ha!  It is a CMake bug (or perhaps I should say, part of an attempt for CMake to work around a number of nasty compiler bugs):\r\n\r\nhttp://www.cmake.org/Bug/view.php?id=8598\r\n",
            "published" : "2011-11-06T18:05:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Traced further; now it looks like a GCC bug (GCC ignores -I/usr/include so there is no way to tell GCC to find /usr/include/iconv.h before it finds /opt/local/include/iconv.h).\r\n\r\nIt seems the only workaround for this is to prefer the MacPorts iconv library in /opt/local to the system iconv library in /usr.\r\n",
            "published" : "2011-11-06T18:18:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The following line added early in CMakeLists.txt seems to do the trick.\r\n\r\nlist(APPEND CMAKE_PREFIX_PATH /opt/local)\r\n\r\nThis also fixes the build of libarchive.  (libarchive/trunk r3753)\r\n\r\nIs there a reason this should be conditional?  If so, on what?  (Making it depend on \"having MacPorts installed\" seems a little circular, since one test for MacPorts installation is the existence of that directory.)",
            "published" : "2011-11-06T19:12:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-11-06T19:13:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 191,
        "title" : "st_blocks and st_blksize are not set by archive_entry_stat",
        "summary" : "st_blocks and st_blksize are not set by archive_entry_stat",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "brampton",
          "htmlLink" : "https://code.google.com/u/brampton/"
        },
        "updated" : "2011-11-09T06:25:25.000Z",
        "published" : "2011-11-07T03:52:17.000Z",
        "closed" : "2011-11-09T06:25:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brampton",
              "htmlLink" : "https://code.google.com/u/brampton/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Call archive_entry_stat() on a valid entry\r\n2. The returned struct stat does not have valid st_blocks and st_blksize, and in fact are uninitialised.\r\n\r\nWhat is the expected output?\r\n\r\nThe struct stat have valid st_blocks and st_blksize.\r\n\r\nWhat version are you using?  2.8.5\r\n\r\nOn what operating system? Debian Linux\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI have attached a very simple patch that fixes this problem. It sets the blocks to be ceil(size / 512), and sets blksize to be 4096 (for lack of a better value).",
            "published" : "2011-11-07T03:52:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1910000000",
              "fileName" : "libarchive-st_blocks.patch",
              "fileSize" : 714,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "This doesn't make a lot of sense to me- I would perhaps expect these values (and the rest of the unused struct) to be zeroed out, but setting them to misleading values doesn't seem to make a whole lot of sense.\r\n\r\nI would propose the following patch instead that ensures the entire struct is zeroed before it gets filled, which is future-proof for new fields and cross-platform as well.",
            "published" : "2011-11-09T02:38:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1910001000",
              "fileName" : "stat-calloc-not-malloc.patch",
              "fileSize" : 431,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brampton",
              "htmlLink" : "https://code.google.com/u/brampton/"
            },
            "content" : "I would agree on the st_blksize perhaps having a misleading value, but I chose 4096 as that's a memory page, and seems a sensible size to use. Programs such as \"cat\" will use this as a hint to what size buffer to allocate.\r\n\r\nAlso, st_blocks is typically the number of 512 byte blocks it would take to store this file. So ceil(size/512) expresses that.\r\n\r\nFor reference, I've encountered an issue with archivemount (a FUSE filesystem app that mounts zip files) was passing this struct directly through FUSE. So commands like \"ls\" were failing to show valid values (because st_blocks was invalid).\r\n\r\nAnyway, I've sent a patch to archivemount that will explicitly set these two fields before passing it to FUSE. It should perhaps be documented which fields libarchive does and does not set in the stats struct.",
            "published" : "2011-11-09T03:11:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've changed the code in question to zero out the entire struct when it is allocated.\r\n\r\nI've also made some updates to the archive_entry_stat.3 manpage to clarify the fields affected by archive_entry_stat() and archive_entry_copy_stat().\r\n",
            "published" : "2011-11-09T06:25:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 192,
        "title" : "Tests fail without libz enabled",
        "summary" : "Tests fail without libz enabled",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-11-12T05:01:20.000Z",
        "published" : "2011-11-09T03:41:34.000Z",
        "closed" : "2011-11-12T05:01:20.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Without libz enabled, two of the zip tests have unprotected assertions as is done in several other tests. The attached patch fixes this.",
            "published" : "2011-11-09T03:41:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1920000000",
              "fileName" : "fix-failing-tests-no-libz.patch",
              "fileSize" : 2639,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Good idea, but I'm not happy about depending on the exact wording of the message.\r\n\r\ntest_compat_gzip.c uses the following logic to determine whether gzip is supported via libz, which is essentially a test on whether libarchive was compiled with libz or not:\r\n\r\n        r = archive_read_support_filter_gzip(a);\r\n        if (r == ARCHIVE_WARN) {\r\n                skipping(\"gzip reading not fully supported on this platform\");\r\n                assertEqualInt(ARCHIVE_OK, archive_read_free(a));\r\n                return;\r\n        }\r\n\r\nWe could possibly use this exact logic in test_compat_zip and test_read_format_zip to select whether to run libz-dependent tests, or we could extend archive_read_support_format_zip() to return ARCHIVE_WARN in like fashion if Zip support was \"incomplete.\"  The latter idea does appeal to me, though practically speaking, the former would adapt better if we ever wanted to extend the Zip handler to support other compression methods.\r\n",
            "published" : "2011-11-09T06:31:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "So you're asking me to do it differently in these two cases, even though this exact same check is already used in these files? Do you want me to fix the regressions, or refactor the code? I think they are separate concerns and I'm only worried about the simple fact that tests fail here that should not.\r\n\r\nSee: test_compat_zip.c:51, test_read_format_zip:67, test_read_format_zip:123",
            "published" : "2011-11-09T14:55:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "If you're willing to refactor the code a bit, that would be marvelous.  I try to improve every file I touch, and this has been bugging me for a while.\r\n\r\nIn this case, I think it just requires adding a function to those files, something like the following (typed off the top of my head), and then using it appropriately:  if (have_libz()) { ... test that depends on libz ... }\r\n\r\nstatic int\r\nhave_libz(void)\r\n{\r\n       struct archive *a = archive_read_new();\r\n       int r = archive_read_support_filter_gzip(a);\r\n       archive_read_finish(a);\r\n       return (r == ARCHIVE_OK) ? 1 : 0;\r\n}",
            "published" : "2011-11-09T16:26:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "I'll see what I can put together to clean this up- it should be pretty easy to refactor this out as you stated into a little helper method. Thanks for the quick response.",
            "published" : "2011-11-09T16:31:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Patch version 2. This cleans up all places where the libz error could be thrown and checks for ARCHIVE_FATAL when appropriate.",
            "published" : "2011-11-10T23:09:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1920005000",
              "fileName" : "test-libz-enabled-errors.patch",
              "fileSize" : 8658,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Very nice!\r\n\r\nI normally balk at relying on configuration macros such as HAVE_LIBZ but it's appropriate in this case and much neater than the approach I came up with.\r\n\r\nI made a couple of changes --- your edits pointed out a bug in the original test code that I corrected, and I also added some verification that archive_error_string() and archive_errno() actually get set when there is an error.\r\n\r\nCommitted at r3765.",
            "published" : "2011-11-12T05:01:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 193,
        "title" : "ctime/mtime filter with date <= epoch fails",
        "summary" : "ctime/mtime filter with date <= epoch fails",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-11-09T06:34:51.000Z",
        "published" : "2011-11-09T03:47:11.000Z",
        "closed" : "2011-11-09T06:34:51.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "This is due to using time &gt; 0 as the condition for both the filter and to see whether it is enabled. This is very broken if you have a file timestamped on your system before January 1, 1970 and use that as the filter-by file (--newer-than or --newer-mtime-than). You'll end up with every file included instead of just those that are newer.\r\n\r\nAdd a new flag that stores only the enabled/disabled status of these two filters, and then use this whenever we are doing boolean check on the value.",
            "published" : "2011-11-09T03:47:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1930000000",
              "fileName" : "new-filter-correct-behavior.patch",
              "fileSize" : 3404,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Very nicely done.\r\n\r\nCommitted in r3762.",
            "published" : "2011-11-09T06:34:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 194,
        "title" : "Quiet fuzz test stderr",
        "summary" : "Quiet fuzz test stderr",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-11-09T14:51:07.000Z",
        "published" : "2011-11-09T03:49:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "This quiets the stderr messages produced by the various libraries/external programs during fuzz testing.\r\n\r\n[Is this the best way? I'm not sure. I was looking for a way to basically send the stderr stream to the test log file but couldn't find the fdreopen/dup/etc. gymnastics to do so.]",
            "published" : "2011-11-09T03:49:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1940000000",
              "fileName" : "test-fuzz-be-quiet.patch",
              "fileSize" : 391,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The cmake \"make test\" and autoconf \"make check\" test wrappers already capture stderr, I believe.\r\n\r\nI'm not entirely convinced it's a good thing to even try to handle this here.  Certainly fdreopen()/etc. games are inappropriate because of the portability requirements for the test harness.  (The test harness needs to be very portable and can't rely on configuration logic as heavily as the actual product code does.)\r\n",
            "published" : "2011-11-09T06:47:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "\"make check\" most definitely does not. Output attached.\r\n\r\nI'm fine with whatever you decide to do, but the problem here is the garbage output:\r\n1. makes you think a test failed\r\n2. makes it a lot harder to find the tests that are actually failing\r\n\r\nThis was just the quickest solution I could come up with.\r\n\r\n$ make --version\r\nGNU Make 3.82\r\nBuilt for x86_64-unknown-linux-gnu\r\nCopyright (C) 2010  Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.\r\n\r\n$ uname -a\r\nLinux galway 3.1.0-4-ARCH #1 SMP PREEMPT Mon Nov 7 22:47:18 CET 2011 x86_64 Intel(R) Core(TM)2 Quad CPU Q9400 @ 2.66GHz GenuineIntel GNU/Linux\r\n",
            "published" : "2011-11-09T14:51:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1940002000",
              "fileName" : "make-check-output.txt",
              "fileSize" : 62383,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 195,
        "title" : "Cleanups of archive_read_support_* code",
        "summary" : "Cleanups of archive_read_support_* code",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-11-20T22:53:37.000Z",
        "published" : "2011-11-09T03:57:19.000Z",
        "closed" : "2011-11-20T22:53:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Changes include:\r\n** Make changes to this common idiom:\r\n-\tconst void *h;\r\n \tconst unsigned char *p;\r\n...\r\n-\tif ((h = __archive_read_ahead(a, 6, NULL)) == NULL)\r\n+\tif ((p = __archive_read_ahead(a, 6, NULL)) == NULL)\r\n...\r\n-\tp = (const unsigned char *)h;\r\n\r\nWe don't need the unsigned char vs char vs void differentiation in any fixed case- we can simply use unsigned char all the time.\r\n\r\n** Use memcmp when possible instead of repeated single byte compares, and in two cases strncmp (we are not comparing strings; we are simply looking for magic bytes that happen to be ASCII characters).\r\n** Spacing issues in code between operators- always use a space.\r\n\r\nAll tests continue to pass.",
            "published" : "2011-11-09T03:57:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1950000000",
              "fileName" : "archive-read-support-cleanups.patch",
              "fileSize" : 14561,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Hmmm... if tests are passing, then we're missing some tests, since this looks wrong to me:\r\n\r\n-\t\tif (strncmp(key, \"LIBARCHIVE.xattr.\", 17)==0)\r\n+\t\tif (strcmp(key, \"LIBARCHIVE.xattr.\") == 0)\r\n\r\nThis handles keys that start with a particular prefix, so should use strncmp() or memcmp().\r\n\r\nRest of it looks pretty good so far, but I probably won't have time to study it in any detail for a couple more days.\r\n",
            "published" : "2011-11-09T06:41:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Good catch- that was a bad replacement on my part. Apparently there is no test for that attribute, I will see if I can come up with one (although I have no idea how xattr works).",
            "published" : "2011-11-09T14:58:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed most of this to trunk.\r\n\r\nI fixed the xattr issue mentioned above.  I also took the opportunity to do some additional minor cleanup in this area of the tar code (in particular, I managed to eliminate some more casts).\r\n\r\nThe Zip changes are in my local tree and will get committed along\r\nwith some other Zip changes I have in progress.\r\n\r\nThanks again!  (I look forward to your xattr test.  It should be a simple matter of creating a file on disk with some xattrs, using bsdtar to tar it up, then adding a simple read test to libarchive that extracts and verifies that the xattrs are getting read out of the file correctly..)",
            "published" : "2011-11-20T22:53:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 196,
        "title" : "Testing nlinks on dirs in cpio tests fails on BTRFS (Linux)",
        "summary" : "Testing nlinks on dirs in cpio tests fails on BTRFS (Linux)",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2011-11-12T05:23:14.000Z",
        "published" : "2011-11-10T16:35:21.000Z",
        "closed" : "2011-11-12T05:23:14.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "affected:\r\n* cpio/test/test_option_c.c\r\n* cpio/test/test_format_newc.c\r\n\r\nThese tests both have one assert guarded by the following:\r\n#ifndef NLINKS_INACCURATE_FOR_DIRS\r\n &lt;assert here&gt;\r\n#endif\r\n\r\nBTRFS on Linux does not populate the nlinks attribute with 2 for directories (it is 1, regardless of empty state or not, but this should not be depended on). Thus, two tests fail here when run with a testing directory on this filesystem, but pass on other filesystems.\r\n\r\nFrankly, the test and guard seem bogus to me- we should be checking if the value was faithfully copied off of the filesystem (by calling stat and seeing the nlinks value from the struct encoded in the data), not whether it is set to an absolute value of 2. This would remove all of the NLINKS define mess from the picture completely.\r\n\r\nBoth 2.8.X and the eventual 3.0 are broken in this respect on these tests.",
            "published" : "2011-11-10T16:35:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Excellent point!\r\n\r\nFixed in libarchive/trunk r3766 by removing the NLINKS_INACCURATE flag entirely and changing those tests to stat() the directory on disk and use that to verify the value in the archive.",
            "published" : "2011-11-12T05:23:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 197,
        "title" : "typo in assertion in bsdcpio_test",
        "summary" : "typo in assertion in bsdcpio_test",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "toscano.pino@tiscali.it",
          "htmlLink" : "https://code.google.com/u/112596846669485839055/"
        },
        "updated" : "2011-11-12T20:49:50.000Z",
        "published" : "2011-11-12T16:48:59.000Z",
        "closed" : "2011-11-12T20:49:50.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "toscano.pino@tiscali.it",
              "htmlLink" : "https://code.google.com/u/112596846669485839055/"
            },
            "content" : "The test_option_c.c source of bsdcpio_test has a typo in a check for different ino number.\r\n(This typo, due to a coincidence of very low device number used, triggered a failure during my build on GNU/Hurd.)\r\n\r\nAttached there is a patch that fixes the issue; it has been successfully tested on a Debian 2.8.5 libarchive, on a vanilla 2.8 release branch and on trunk.",
            "published" : "2011-11-12T16:48:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1970000000",
              "fileName" : "bsdcpio_test_typo.diff",
              "fileSize" : 449,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks!\r\n\r\nCommitted to trunk r3768 and 2.8 branch r3770.\r\n",
            "published" : "2011-11-12T20:49:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 198,
        "title" : "archive_strncat valgrind Invalid read of size 1",
        "summary" : "archive_strncat valgrind Invalid read of size 1",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "brampton",
          "htmlLink" : "https://code.google.com/u/brampton/"
        },
        "updated" : "2011-11-17T05:40:15.000Z",
        "published" : "2011-11-16T04:51:11.000Z",
        "closed" : "2011-11-17T05:40:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brampton",
              "htmlLink" : "https://code.google.com/u/brampton/"
            },
            "content" : "archive_strncat seems to read one byte beyond the end of the string. This causes valgrind to print this error:\r\n\r\n==30961== Invalid read of size 1\r\n==30961==    at 0x4E4FF09: __archive_strncat (archive_string.c:155)\r\n==30961==    by 0x4E4F739: archive_read_format_zip_read_header (archive_read_support_format_zip.c:422)\r\n==30961==    by 0x4E3A6AB: archive_read_next_header2 (archive_read.c:454)\r\n==30961==    by 0x40326B: main (archivemount.c:408)\r\n==30961==  Address 0x6820300 is 0 bytes after a block of size 10,240 alloc'd\r\n==30961==    at 0x4C2779D: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==30961==    by 0x4E3C4F5: archive_read_open_fd (archive_read_open_fd.c:82)\r\n==30961==    by 0x40312A: main (archivemount.c:369)\r\n\r\n<b>What version are you using?</b>\n2.8.5\r\n\r\n<b>On what operating system?</b>\nDebian Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n./configure\r\nmake\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThis seems to stem from __archive_strncat(..):\r\n        while (*pp &amp;&amp; s &lt; n) {\r\n                pp++;\r\n                s++;\r\n        }\r\npp is being dereferenced when s=n, which is beyond where it should be reading. This doesn't actually cause any bugs because the &quot;s &lt; n&quot; check is in there, but because *pp is checked first valgrind flags this as a error.\r\n\r\nTo keep valgrind quiet you just need to change it to:\r\n        while (s &lt; n &amp;&amp; *pp) {\r\n                pp++;\r\n                s++;\r\n        }\r\n\r\nAlso, this change now makes it agree with the comment just a few lines above.",
            "published" : "2011-11-16T04:51:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This seems to have been fixed in libarchive/trunk some time ago (as part of a much larger redesign of libarchive's internal string management functions).\r\n\r\nI've applied your one-line fix to the libarchive/2.8 branch.\r\n\r\nThanks!\r\n\r\n(Please try out the libarchive 3.0.0a test distribution if you have a chance.)",
            "published" : "2011-11-17T05:40:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 199,
        "title" : "Infinite loop in ISO reader",
        "summary" : "Infinite loop in ISO reader",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2011-11-24T19:39:04.000Z",
        "published" : "2011-11-20T22:13:41.000Z",
        "closed" : "2011-11-24T19:39:04.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. With current trunk bsdtar\r\n2. Download the attached file\r\n3. bsdtar tvf fuzz-failure.iso\r\n\r\nI found this on my local build after running the fuzz tester for a few hours.  I'm using the autoconf build on Mac OS X 10.7.\r\n\r\nI've reproduced the hang using the CMake build as well.\r\n\r\nThe hang occurs in archive_read_support_format_iso9660.c in rede_add_entry, due to a loop in the re-&gt;parent chain (appears to be 19 elements long).\r\n",
            "published" : "2011-11-20T22:13:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "1990000000",
              "fileName" : "fuzz-failure.iso",
              "fileSize" : 1214464,
              "mimetype" : "application/x-iso9660-image; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for the report.\r\nI fixed this in r3823.",
            "published" : "2011-11-21T02:13:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "After updating to get your fix, I ran test_fuzz overnight and had another crash that appears to be caused by the same root problem.  (The case I just found was a crash in build_pathname because file->parent == file, so the recursive function exhausted the stack.)\r\n\r\nI think the real problem is in next_cache_entry where we relocate a directory tree.  If the RE/CL/PL data is corrupted, we can end up moving a directory to be a child of itself.  That can cause a variety of problems later on.\r\n\r\nI think we should add a check before moving a directory to make sure that moving the directory won't cause a loop.   I don't yet understand the code here well enough to know what error handling is appropriate:  We should certainly not move the directory in this case.  I'm not sure if we can return an ARCHIVE_WARN for this entry, though.\r\n",
            "published" : "2011-11-23T07:14:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm going to re-open this bug until we get more details.\r\n\r\nAlso see Issue 115, which may be another report with the same root cause..",
            "published" : "2011-11-23T09:29:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I rewrote the code to resolve this issue and committed it in r3835.\r\nPlease try it and let me know the result.\r\nI also will run test_fuzz to find a weakness in the ISO reader.",
            "published" : "2011-11-24T04:13:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is a much better way to handle this.\r\n\r\nI'm marking this bug 'fixed'.\r\n",
            "published" : "2011-11-24T19:39:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 200,
        "title" : "Problem in extraction of png files ",
        "summary" : "Problem in extraction of png files ",
        "stars" : 1,
        "starred" : false,
        "status" : "WorksForMe",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "manju.basavarasappa",
          "htmlLink" : "https://code.google.com/u/110923159911894573826/"
        },
        "updated" : "2011-12-30T06:58:03.000Z",
        "published" : "2011-11-29T16:09:58.000Z",
        "closed" : "2011-12-30T06:58:03.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "manju.basavarasappa",
              "htmlLink" : "https://code.google.com/u/110923159911894573826/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.Extract a .png file\r\n2.Files gets extracted in the correct order\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\nExtracted files should be of correct size and correct information.\r\nInstead all the file size is 0 \r\n\r\n<b>What version are you using?</b>\n2.8.5\r\n\r\n<b>On what operating system?</b>\nLinux \r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nCC=ntoarmv7-gcc ./configure --host=armv5-nto --without-bz2lib --without-lzmadec --without-lzma --without-openssl --without-xml2 --without-expat --disable-bsdcpio --disable-bsdtar --prefix=/home/manju\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nntoarmv7-gcc /Built on Ubuntu\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2011-11-29T16:09:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What kind of archive are you extracting the PNG files from?\r\n\r\nWhat program are you using to do the extraction?\r\n\r\nAre you building for a 32-bit or a 64-bit system?  If you're using a 32-bit system, did you define _FILE_OFFSET_BITS=64 when building your program?",
            "published" : "2011-11-30T04:47:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "manju.basavarasappa",
              "htmlLink" : "https://code.google.com/u/110923159911894573826/"
            },
            "content" : "What kind of archive are you extracting the PNG files from?\r\n\r\nThe PNG files are zipped as pkzip files \r\n\r\n\r\nWhat program are you using to do the extraction?\r\n\r\nHave used the example code provided by the website to extract the pkzip files \r\n \r\nAre you building for a 32-bit or a 64-bit system?  If you're using a 32-bit system, did you define _FILE_OFFSET_BITS=64 when building your program?\r\nWe are building for a 32 bit arm processor . I did not define _FILE_OFFSET_BITS=64 while building the program ",
            "published" : "2011-12-08T15:02:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try again with _FILE_OFFSET_BITS=64.\r\n\r\nLibarchive is always built with this setting, so programs that use libarchive must also do so.  (It is possible in theory to have libarchive support programs that are built with or without this, but it requires some complex macro trickery that no one has yet built.)",
            "published" : "2011-12-09T05:38:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm going to close this as WorksForMe since it appears this could have been a mistake in building the program that used libarchive.\r\n\r\nIf you have any additional information, please add it and we'll take another look.",
            "published" : "2011-12-30T06:58:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WorksForMe"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 201,
        "title" : "test_compat_zip failure without zlib",
        "summary" : "test_compat_zip failure without zlib",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2011-12-02T06:30:16.000Z",
        "published" : "2011-11-30T04:13:29.000Z",
        "closed" : "2011-12-02T06:30:16.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "It seems the recent changes of test_compat_zip are causing this failure.\r\n \r\nPlease see an attached log file.",
            "published" : "2011-11-30T04:13:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2010000000",
              "fileName" : "test_compat_zip.log",
              "fileSize" : 7977,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The streaming Zip reader now knows how to correctly skip entries when it does not recognize the compression.\r\n\r\nSo now bsdtar should be able to list contents for Zip files with any kind of compression, even though it does not know how to extract them.\r\n\r\n",
            "published" : "2011-12-02T06:30:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-12-02T06:30:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 202,
        "title" : "bsdcpio stores incorrect mode in archive",
        "summary" : "bsdcpio stores incorrect mode in archive",
        "stars" : 2,
        "starred" : false,
        "status" : "WorksForMe",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "montgomery.dean",
          "htmlLink" : "https://code.google.com/u/102910587608981694138/"
        },
        "updated" : "2014-11-14T04:31:08.000Z",
        "published" : "2011-12-08T20:22:59.000Z",
        "closed" : "2014-11-14T04:31:08.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 8,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "montgomery.dean",
              "htmlLink" : "https://code.google.com/u/102910587608981694138/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Arch Linux running via NFS disk-less.\r\n2. Installing a kernel from the disk-less client calls /sbin/mkinitcpio\r\n3. /sbin/mkinitcpio uses bsdcpio to create the image.\r\n4. The resulting /boot/initramfs-linux.img causes kernel panic failing to find init.\r\n5. Extract the /boot/initramfs-linux.img\r\n6. NOTE: executable bits are missing from important files...\r\n....\r\ndrwxr-xr-x 2 root root   27 2011-11-08 16:06 hooks\r\n-rw------- 1 root root 3512 2011-11-08 16:06 init\r\n-rw------- 1 root root 5021 2011-11-08 16:06 init_functions\r\ndrwxr-xr-x 5 root root 4096 2011-11-08 16:06 lib\r\ndrwxr-xr-x 2 root root    6 2011-11-08 16:06 new_root\r\n....\r\nroot@server# ll sbin\r\ntotal 308\r\n-rw------- 1 root root  30472 2011-11-08 16:06 blkid\r\n-rw------- 1 root root 128776 2011-11-08 16:06 modprobe\r\n-rw------- 1 root root 149380 2011-11-08 16:06 udevadm\r\nroot@server# ll bin\r\ntotal 368\r\n-rw------- 1 root root 338548 2011-11-08 16:06 busybox\r\n-rw------- 1 root root  19936 2011-11-08 16:06 ipconfig\r\n-rw------- 1 root root  15228 2011-11-08 16:06 nfsmount\r\n\r\n===========\r\nFixed by editing /sbin/mkinitcpio and changing bsdcpio to regular cpio around line 358:\r\n===========\r\nbsdcpio $( (( QUIET )) &amp;&amp; echo '--quiet' ) -0oH newc |\r\n== changed to ==\r\ncpio $( (( QUIET )) &amp;&amp; echo '--quiet' ) -0oH newc |\r\n===========\r\n\r\nThen recreate\r\nMy guess is bsdcpio doesn't work well on nfs root filesystem.\r\n\r\nIssue was reported on Arch Linux forum and I was asked to repost with libarchive.\r\nhttps://bbs.archlinux.org/viewtopic.php?id=129937",
            "published" : "2011-12-08T20:22:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the report.  We really appreciate it.\r\n\r\nCan you please try a couple of quick experiments to help us narrow the problem:\r\n\r\n1) bsdcpio --version\r\n\r\n2) Try reproducing the problem with a single file.   Something like the following, possibly:\r\n\r\n$ echo foo > foo && chmod +x foo && echo 'foo\\0' | bsdcpio -0oH newc > foo.cpio\r\n\r\nPlease attach the resulting foo.cpio file to this bug report so I can inspect it.\r\n\r\nTrying the above with an NFS root filesystem and again on a non-NFS root would also be helpful.  (I doubt it makes any difference, but it would be nice to verify.)\r\n",
            "published" : "2011-12-09T05:22:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "montgomery.dean",
              "htmlLink" : "https://code.google.com/u/102910587608981694138/"
            },
            "content" : "[root@arch home]# bsdcpio --version\r\nbsdcpio 2.8.5 -- libarchive 2.8.5\r\n\r\n--\r\n\r\nI ran the following foo script and it create a working archive with no errors...\r\necho foo > foo && chmod +x foo && find foo -print0 | bsdcpio -0oH newc > foo.cpio\r\nrm foo; cat foo.cpio | cpio -i\r\n\r\nI've attached mkinitcpio and the results of two images created by modifying line 358 (bsdcpio|cpio)\r\n",
            "published" : "2011-12-10T00:02:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2020002000",
              "fileName" : "mkinitcpio",
              "fileSize" : 11603,
              "mimetype" : "text/x-shellscript; charset=us-ascii"
            }, {
              "attachmentId" : "2020002001",
              "fileName" : "initramfs-linux.img.gz.cpio",
              "fileSize" : 2514161,
              "mimetype" : "application/x-gzip; charset=binary"
            }, {
              "attachmentId" : "2020002002",
              "fileName" : "initramfs-linux.img.gz.bsdcpio",
              "fileSize" : 2514272,
              "mimetype" : "application/x-gzip; charset=binary"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The bsdcpio-generated archive definitely has different permissions on the entries than the one generated by GNU cpio.  (I presume that when you say \"regular cpio\", you mean \"GNU cpio\".)\r\n\r\nYou weren't able to reproduce this problem with a simple cpio usage, so it's not just that you're using an NFS root.\r\n\r\nI looked through the mkinitcpio script and don't see anything in there that should modify how bsdcpio behaves, so it should be possible to reproduce this with a find | bsdcpio from the command line.\r\n\r\nI'll continue to experiment and see if I can reproduce this.  If you can find a way to consistently reproduce this, I'd be very interested in knowing how.",
            "published" : "2011-12-10T23:25:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Here are a few ideas for diagnosing this:\r\n\r\n * edit mkinitcpio so that it does not remove the BUILDROOT directory but instead prints out the path: comment out the \"rm -rf\" command in the cleanup function around line 68 and replace it with the following command\r\n       echo \"BUILDROOT: $BUILDROOT\"\r\n\r\n * Run mkinitcpio to build an image and note the BUILDROOT directory.  That directory will be left behind so you can now experiment.\r\n\r\n$ cd <buildroot>\r\n$ find . -print0 | bsdcpio -0oH newc | bsdcpio -tv\r\n\r\nThis should reproduce the previous problem.  Assuming it does, then we can try pruning down to a narrower test case:\r\n\r\n1) Try removing the -print0 and the -0 option.\r\n2) Try dropping the -H newc option\r\n3) Try narrowing the 'find' command to just a few files or a smaller directory.\r\n\r\nOnce you've narrowed it as much as you can, let's see what strace says:\r\n\r\n$ find <file> | strace bsdcpio -oH newc -O /dev/null\r\n\r\nIn particular, we want to see what bsdcpio is seeing when it invokes stat64() on the file.\r\n\r\nWhat version of Arch Linux are you using?  Is there a recipe posted somewhere for setting up an NFS root similar to the one you're using?  I've installed the current Arch Linux on my system here and haven't had any luck reproducing the issue you've mentioned.\r\n",
            "published" : "2011-12-11T01:11:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Changing summary to better reflect the actual problem.",
            "published" : "2011-12-31T05:03:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "bsdcpio stores incorrect mode in archive"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Changing to \"Waiting\" state; I've had no luck reproducing this on my systems here.  If anyone does find a way to consistently reproduce it, please let me know.\r\n",
            "published" : "2012-01-22T22:48:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Two years and no one has managed to find a way to consistently reproduce this problem, so I'm going to close it.\r\n\r\n",
            "published" : "2014-11-14T04:31:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WorksForMe"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 203,
        "title" : "build failure on GNU/Hurd, due to PATH_MAX",
        "summary" : "build failure on GNU/Hurd, due to PATH_MAX",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Other" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "toscano.pino@tiscali.it",
          "htmlLink" : "https://code.google.com/u/112596846669485839055/"
        },
        "updated" : "2011-12-26T02:47:15.000Z",
        "published" : "2011-12-25T23:36:45.000Z",
        "closed" : "2011-12-26T02:47:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "toscano.pino@tiscali.it",
              "htmlLink" : "https://code.google.com/u/112596846669485839055/"
            },
            "content" : "libarchive 3.0.2 fails to compile on GNU/Hurd, as PATH_MAX (optional in POSIX and generally not recommended) is not available; there are two unconditional usages of it.\r\n\r\nThe attached patch fixes the two places:\r\n* libarchive/archive_write_set_format_xar.c:\r\ngets rid of the temporary buffer &quot;path&quot; used, by directly calling archive_strncpy() with the correct start and size of the &quot;b&quot; buffer, capping it to &quot;rsize&quot; as done now\r\n* libarchive/test/test_sparse_basic.c:\r\ngets the current working directory in the same way as used in other places of {bsdcpio,bsdtar,libarchive}_test (maybe a common implementation for all of them would be an ideal solution?)\r\n\r\nThe patch compiles against a vanilla 3.0.2 and on SVN/3.0 branch (r4001); unit tests all pass when tested on GNU/Linux.",
            "published" : "2011-12-25T23:36:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2030000000",
              "fileName" : "path_max.diff",
              "fileSize" : 1721,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for the report.\r\nI fixed this issue and committed it in r4006 on release/3.0 branch and in r4004 and r4005 on trunk.",
            "published" : "2011-12-26T02:47:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-OpSys-All", "OpSys-Other" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 204,
        "title" : "Fix shadowed local in archive_read_support_format_iso9660.c",
        "summary" : "Fix shadowed local in archive_read_support_format_iso9660.c",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "martin.matuska@vx.sk",
          "htmlLink" : "https://code.google.com/u/108918814184443187504/"
        },
        "updated" : "2011-12-26T23:48:43.000Z",
        "published" : "2011-12-26T23:01:05.000Z",
        "closed" : "2011-12-26T23:48:43.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "martin.matuska@vx.sk",
              "htmlLink" : "https://code.google.com/u/108918814184443187504/"
            },
            "content" : "Revision 3835 introduced a shadow declaration in archive_read_support_format_iso9660.c.\r\n\r\n&quot;archive_read_support_format_iso9660.c:1965: warning: declaration of 'p' shadows a previous local&quot;\r\n\r\nSolution: use a different variable name than 'p' (e.g. 'r').\r\nProposed fix attached.\r\n\r\nPlease also merge to release/2.8",
            "published" : "2011-12-26T23:01:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2040000000",
              "fileName" : "archive_read_support_format_iso9660.c.patch",
              "fileSize" : 870,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I committed your patch in r4014 svn/trunk ,in r4015 svn/release/3.0 and\r\nin r4016 svn/release/2.8.",
            "published" : "2011-12-26T23:48:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 205,
        "title" : "Unable to build static release under win32",
        "summary" : "Unable to build static release under win32",
        "stars" : 2,
        "starred" : false,
        "status" : "Started",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "christophe.baribaud",
          "htmlLink" : "https://code.google.com/u/101771517392602088979/"
        },
        "updated" : "2012-03-06T04:26:43.000Z",
        "published" : "2011-12-27T10:25:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nset CMAKE_PREFIX_PATH=c:\\devlibs\r\nbsdtar xf libarchive-3.0.2.tar.gz\r\ncd libarchive-3.0.2\r\nmd builds\r\ncd builds\r\ncmake -DCMAKE_INSTALL_PREFIX=/devlibs -DCMAKE_BUILD_TYPE=Release -G &quot;NMake Makefiles&quot; ..\r\nnmake install\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe system should build. It does'nt link and complaints about mix of static and dynamic libraries, mix of debug and release, and expat can't be linked\r\nAfter fix, libarchive\\test\\test_write_format_zip.c fails to compile because it uses S_IFLNK, which is not defined under Windows platform\r\n\r\n<b>What version are you using?</b>\n3.0.2\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual C++ 2005 (VS8)\r\n\r\n<b>Please provide any additional information below.</b>\nSee attached patch for a fix proposal.\r\nUsing /mt (static runtime library) instead of /md (msvctr80.dll and so on) might be incorrect, and should depend on the way other libraries like expat, bz2, etc. were built. This part of my fix might be wrong",
            "published" : "2011-12-27T10:25:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2050000000",
              "fileName" : "patch1.patch",
              "fileSize" : 1551,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "I can verify that the \"#ifdef S_IFLNK\" is needed to build using VS2005; I just independently made the same discovery before searching the issues db.\r\n\r\nI'm not using it as a static library, so I can't speak to the cmake changes",
            "published" : "2011-12-28T05:38:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I fixed the build failure about S_IFLNK in r3992 using AE_IFLNK instead of S_IFLNK.",
            "published" : "2011-12-28T17:11:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I improved CMakeLists.txt to check libraries whether a macro such as XML_STATIC\r\nis needed to link or not.\r\n\r\nTo christophe.baribaud, we never use or rely on BUILD_SHARED_LIBS since we always\r\ncreate both shared libarchive library and static one. And so your patch might not\r\nwork completely.",
            "published" : "2012-03-06T04:26:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 206,
        "title" : "Hard link fail under win32",
        "summary" : "Hard link fail under win32",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "christophe.baribaud",
          "htmlLink" : "https://code.google.com/u/101771517392602088979/"
        },
        "updated" : "2011-12-28T16:50:26.000Z",
        "published" : "2011-12-27T10:52:07.000Z",
        "closed" : "2011-12-28T16:50:26.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nnmake test\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nCTest -R disk_hardlink\r\nTest 139 - libarchive_test_write_disk_hardlink (Failed)\r\n\r\n<b>What version are you using?</b>\n3.0.2\r\n\r\n<b>On what operating system?</b>\nWindows 2000 SP4\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual C++ 2005 (VS8)\r\n\r\n<b>Please provide any additional information below.</b>\nThe Windows API function CreateHardLinkW seem not understand the &quot;\\\\?\\&quot; prefix, used to tell Windows API functions that we want long path names (up to 32768 wide characters). This should not be necessary, since this function only works with NTFS filesystems, were long paths are native.\r\nThe attached path removes the &quot;\\\\?\\&quot; prefix. Then, tests using hardlinks are PASSED.",
            "published" : "2011-12-27T10:52:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2060000000",
              "fileName" : "patch2.patch",
              "fileSize" : 666,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "I did further testing on various Windows platforms, using the attached program.\r\nIt appears that windows 2000 doesn't accept the \"\\\\?\\\" prefix when using CreateHardLinkW (tests 5 and 7 fail with error code 123)\r\nWindows XP and Windows seven 64 do accept the prefix\r\nTo use long path names (more the MAX_PATH long), it is necessary to prepend \"\\\\?\\\" (test 8 fails on all platforms)\r\n",
            "published" : "2011-12-28T10:48:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2060001000",
              "fileName" : "test_hl.cpp",
              "fileSize" : 6404,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "2060001001",
              "fileName" : "CMakeLists.txt",
              "fileSize" : 1778,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "Based on the previous tests, I propose the attached patch. It works under Windows 2000 for hard links dealing with paths up to MAX_PATH wide characters. There is no limitation on other platforms.\r\nI haven't found any way to create a hard link for paths more than MAX_PATH long on Windows 2000. It might not be possible.\r\n",
            "published" : "2011-12-28T11:15:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2060002000",
              "fileName" : "patch5.patch",
              "fileSize" : 954,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you very much for your great effort.\r\nI fixed this based on your path, slightly changing style, adding a handling\r\nof \\\\?\\UNC\\ prefix in order not to leave \"UNC\\\" string at the beginning of the path. ",
            "published" : "2011-12-28T16:50:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 207,
        "title" : "Unable to archive one character long files under win32",
        "summary" : "Unable to archive one character long files under win32",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "christophe.baribaud",
          "htmlLink" : "https://code.google.com/u/101771517392602088979/"
        },
        "updated" : "2011-12-27T12:38:08.000Z",
        "published" : "2011-12-27T11:29:15.000Z",
        "closed" : "2011-12-27T12:38:08.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\necho &quot;hello&quot; &gt;t\r\nbsdtar cf archive t\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nbsdtar: Can't FindFirstFileW: Unknown error\r\n\r\n<b>What version are you using?</b>\n3.0.2\r\n\r\n<b>On what operating system?</b>\nWindows 2000 SP4\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual C++ 2005 (VS8)\r\n\r\n<b>Please provide any additional information below.</b>\nThe Windows API function GetFullPathNameW need extra buffer space when the name part of the path is one character long (it looks like a bug in the API, at least on Win2K platform...). The attached patch allocates 2 extra wide characters, making the &quot;bsdtar cf archive t&quot; test pass. ",
            "published" : "2011-12-27T11:29:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2070000000",
              "fileName" : "patch3.patch",
              "fileSize" : 682,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I fixed it in r4007 svn/trunk and in r4008 svn/release/3.0.",
            "published" : "2011-12-27T12:38:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 208,
        "title" : "test_write_compress_program hangs",
        "summary" : "test_write_compress_program hangs",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "christophe.baribaud",
          "htmlLink" : "https://code.google.com/u/101771517392602088979/"
        },
        "updated" : "2011-12-27T17:17:26.000Z",
        "published" : "2011-12-27T16:29:53.000Z",
        "closed" : "2011-12-27T17:17:26.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nAs mentioned by Michihiro NAKAJIMA using my previous patch, the command bsdtar -cf foo.tar.gz  --use-compress-program gzip foo-files\r\nnever returns\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe program never ends\r\n\r\n<b>What version are you using?</b>\n3.0.2\r\n\r\n<b>On what operating system?</b>\nWindows 2000 SP4\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual C++ 2005 (VS8)\r\n\r\n<b>Please provide any additional information below.</b>\nOne way to solve the issue is to close duplicate handles when creating the pipes between bsdtar and the child process. When the child process ends, it closes the last instance of the pipe handle, and so make the ReadFile function return. My proposition don't use any &quot;sleep&quot; function call, so doesn't depend on time.\r\nI also filled the &quot;stderr&quot; handle of the child process, just in case",
            "published" : "2011-12-27T16:29:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2080000000",
              "fileName" : "patch4.patch",
              "fileSize" : 4240,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for you effort to fix this issue.\r\n\r\nI fixed this based on your patch in r4018 svn/trunk and in r4019 svn/release/3.0.",
            "published" : "2011-12-27T17:17:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 209,
        "title" : "libarchive already depends on cmake 2.8, should just make it official",
        "summary" : "libarchive already depends on cmake 2.8, should just make it official",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mitchblank",
          "htmlLink" : "https://code.google.com/u/100241022542969287054/"
        },
        "updated" : "2011-12-29T03:02:43.000Z",
        "published" : "2011-12-28T04:45:24.000Z",
        "closed" : "2011-12-29T03:02:43.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Try configuring libarchive 3.0.2 on windows using cmake 2.6.4\r\n\r\n<b>What is the expected output? What do you see instead?</b>\ncompiler error:  &quot;No 32-bit integer type was found.&quot;\r\n\r\n<b>What version are you using?</b>\n3.0.2\r\n\r\n<b>On what operating system?</b>\nwindows server 2003R2\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake 2.6.4\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2005\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nlibarchive cannot be configured using cmake 2.6.x because config.h.in uses &quot;@SIZE_OF_*_CODE@&quot;.  These variables are only set in cmake 2.8 versions of Modules/CheckTypeSize.cmake.\r\n\r\nNear the top of libarchive's CMakeLists.txt file there is:\r\n  CMAKE_MINIMUM_REQUIRED(VERSION 2.6.3 FATAL_ERROR)\r\n\r\nand a little further down there is:\r\n  # Provide ADD_TEST_28 macro to approximate CMake 2.8 ADD_TEST(NAME).\r\n  # TODO: Require CMake 2.8 and drop this workaround (perhaps late 2010).\r\n  INCLUDE(AddTest28)\r\n\r\nIt sounds like you should just do this now, since cmake 2.6 doesn't work today anyhow",
            "published" : "2011-12-28T04:45:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for pointing this out.\r\n\r\nI've made this change in trunk and in the 3.0 branch.  It will be in the next release builds.\r\n",
            "published" : "2011-12-29T03:02:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 210,
        "title" : "possible memory leak in function create_dir in archive_write_disk_windows",
        "summary" : "possible memory leak in function create_dir in archive_write_disk_windows",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kpfenning@bluewin.ch",
          "htmlLink" : "https://code.google.com/u/105474076039754216215/"
        },
        "updated" : "2011-12-28T17:04:35.000Z",
        "published" : "2011-12-28T13:36:16.000Z",
        "closed" : "2011-12-28T17:04:35.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kpfenning@bluewin.ch",
              "htmlLink" : "https://code.google.com/u/105474076039754216215/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Implemented the example: A Complete Extractor on windows\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nNo Memory Leaks but Visual C++ reports memory leaks in debug mode.\r\n\r\n<b>What version are you using?</b>\nSVN release/3.0 r3986\r\n\r\n\r\n<b>On what operating system?</b>\nWindows XP\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nCmake2.8\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual C++ 2008\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nWhen testing I got memory leaks reported by Visual C++ debugger\r\nI traced the code and found that in the function \r\ncreate_dir() in archive_write_disk_windows.c a call to free(full) may be missing. See code extract below:\r\n\r\n\r\n\r\n\t/*\r\n\t * Apply __la_win_permissive_name_w to path in order to\r\n\t * remove '../' path string.\r\n\t */\r\n\tfull = __la_win_permissive_name_w(path);\r\n\tif (full == NULL)\r\n\t\terrno = EINVAL;\r\n\telse if (CreateDirectoryW(full, NULL) != 0) {\r\n\t\tif (mode != mode_final) {\r\n\t\t\tle = new_fixup(a, path);\r\n\t\t\tle-&gt;fixup |=TODO_MODE_BASE;\r\n\t\t\tle-&gt;mode = mode_final;\r\n\t\t}\r\n                free(full); &lt;&lt;================ Probably missing\r\n\t\treturn (ARCHIVE_OK);\r\n\t} else {\r\n\t\tla_dosmaperr(GetLastError());\r\n\t}\r\n\tfree(full);\r\n\r\n\r\n\r\n",
            "published" : "2011-12-28T13:36:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I fixed it in r4021 svn/trunk and in r4022 svn/release/3.0.",
            "published" : "2011-12-28T17:04:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 211,
        "title" : "Unable to traverse deep trees on Windows",
        "summary" : "Unable to traverse deep trees on Windows",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "christophe.baribaud",
          "htmlLink" : "https://code.google.com/u/101771517392602088979/"
        },
        "updated" : "2012-01-19T08:51:21.000Z",
        "published" : "2011-12-28T15:45:12.000Z",
        "closed" : "2012-01-19T08:51:21.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Create a directory tree c:\\abcdefx\\... longer than MAX_PATH\r\n2. bsdtar cf archive c:\\abcdefx\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nbsdtar: c:/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx: Unable to continue traversing directory tree\r\n\r\n<b>What version are you using?</b>\nrelease/3.0 r4019\r\n\r\n<b>On what operating system?</b>\nWindows 2000\r\nWindows Seven 64 bits\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual C++ 2005 (VS8)\r\n\r\n<b>Please provide any additional information below.</b>\nIn tree_ascend function, SetCurrentDirectory(&quot;..&quot;) fails. It seems that Windows can't use relative path if the full path exceeds MAX_PATH, even under windows seven.\r\nI do think that tree traversal should only use absolute paths, with the \\\\?\\ prefix, under Windows.",
            "published" : "2011-12-28T15:45:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "The new directory traversal code has been implemented in libarchive 3.0.\r\nThe new code completely supports the long path longer than MAX_PATH.\r\nIf bsdtar uses that, this issue will be resolved.\r\n",
            "published" : "2011-12-28T17:45:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "If you need the tar that can handle a deep directory tree, try attached patch.\r\nIt uses the new directory traversal code in bsdtar.",
            "published" : "2011-12-29T02:55:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2110002000",
              "fileName" : "tar.patch",
              "fileSize" : 16358,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "Great, it works!\r\nI succeded in saving and restoring deep hierarchies using bsdtar under Windows using your patch.\r\nAfter having applied your patch, the test \"test_windows.c\" fails (steps 15 and 16). I fixed it locally by adding:\r\n#if defined(_WIN32) && !defined(__CYGWIN__)\r\n\t/* ASCII version APIs do not accept the path which begin with\r\n\t * \"//?/\" prefix. */\r\n\tif (strncmp(path, \"//?/\", 4) == 0 || strncmp(path, \"\\\\\\\\?\\\\\", 4) == 0)\r\n\t\tpath += 4;\r\n#endif\r\nat the begining of write_hierarchy function.\r\nI would have been easier to remove tests 15 and 16 from test_windows.c, since they look strange (the \\\\?\\ prefix is a Windows internal workaround, not sure that it has any sense in the bsdtar command line)",
            "published" : "2011-12-29T14:40:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I already fixed that test failure in r4024 svn/trunk. Please apply that change\r\nto your libarchive code and try it again.\r\n\r\nWindows console command accepts \\\\?\\ prefix. For example, mkdir command can make\r\nthe very long path that is longer than MAX_PATH when you add the \"\\\\?\\\" prefix to\r\nthe path. Without \"\\\\?\\\" prefix, mkdir command fail for the path, but, with the\r\n\"\\\\?\\\" prefix, mkdir command succeed.\r\nI'm not sure that all console commands properly handle \"\\\\?\\\" prefix because\r\nusing \"\\\\?\\\" to type command causes cmd.exe crash after type command printed\r\nthe contents of the file the full path of which is longer than MAX_PATH.",
            "published" : "2011-12-30T06:18:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "bsdtar now uses the new directory traversals code.\r\nThat would be released as libarchive 3.1.",
            "published" : "2012-01-19T08:51:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 212,
        "title" : "\"grep -e\" (used in configure.ac) is not portable, should use $GREP or stick to portable options",
        "summary" : "\"grep -e\" (used in configure.ac) is not portable, should use $GREP or stick to portable options",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mitchblank",
          "htmlLink" : "https://code.google.com/u/100241022542969287054/"
        },
        "updated" : "2011-12-31T18:54:54.000Z",
        "published" : "2011-12-28T21:42:27.000Z",
        "closed" : "2011-12-29T02:50:34.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. ran ./configure on a Solaris 10 machine\r\n2. noticed errors (although configure still seemed to mostly succeed)\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nchecking support for ARCHIVE_CRYPTO_MD5_LIBMD... yes\r\ngrep: illegal option -- e\r\ngrep: illegal option -- m\r\ngrep: illegal option -- d\r\nUsage: grep -hblcnsviw pattern file . . .\r\nchecking support for ARCHIVE_CRYPTO_RMD160_LIBMD... no\r\n\r\n\r\n<b>What version are you using?</b>\n3.0.2\r\n\r\n<b>On what operating system?</b>\nSolaris 10\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nCONFIG_SHELL=/usr/bin/ksh SHELL=/usr/bin/ksh /usr/bin/ksh ./configure\r\n\r\n(I had problems with running libarchive's ./configure script under Solaris's /bin/sh in the past, so I always force it to use ksh, but that's unrelated to this issue)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nn/a\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nIn my case I worked around the issue by putting /usr/xpg4/bin in my $PATH before running ./configure.  Another workaround would be to change:\r\n          test -n &quot;$(echo $mdLIBS | grep -e $4)&quot; || mdLIBS=&quot;$mdLIBS $4&quot;\r\nto the more portable:\r\n          test -n &quot;$(echo $mdLIBS | grep .$4)&quot; || mdLIBS=&quot;$mdLIBS $4&quot;\r\n\r\nAnother option would be to use $GREP, which the ./configure script already populates as the location of a more fully-featured grep (in my case it finds GNU grep installed as &quot;ggrep&quot;)",
            "published" : "2011-12-28T21:42:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you.  I've changed the line in question to use\r\n\r\n      $GREP .$4\r\n\r\nwhich will hopefully be portable enough.",
            "published" : "2011-12-29T02:50:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "Actually, I think I gave you a piece of incorrect advice (sorry).  The \".$4\" won't match if it's looking for the first thing in $mdLIBS.  My initial glance at the code made it look like that wasn't possible anyway, but now I realize it probably is.\r\n\r\nThe simplest fix is to just change \r\n\r\n  echo $mdLIBS\r\n\r\nto something like\r\n\r\n  echo _ $mdLUBS\r\n\r\ni.e. just make sure there is something on the line at the front that won't match the \"$4\"",
            "published" : "2011-12-30T09:34:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I thought this too, at first, but if you look at how $mdLIBS is built, you'll notice there's always a space just before the library name, so \".$4\" really will work correctly.",
            "published" : "2011-12-31T02:20:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "I don't think that is correct.  The leading space will be lost when it's expanded on the \"echo\" command line:\r\n\r\n$ a=\" foo\"\r\n$ echo $a | grep .foo\r\nbash: exit 1\r\n\r\nIf it were in double quotes like:\r\n   echo \"$mdLIBS\" | grep .$4\r\nthen it would be safe.  But that would interfere with the double quotes around the larger expression.\r\n\r\nSo I think the best thing would be to just do:\r\n  echo _$mdLIBS\r\n\r\nThat way:\r\n  1. it's safe even if $mdLIBS loses its leading space in some transformation\r\n  2. there's no risk of $mdLIBS being considered a flag to echo (although if $mdLIBS had something like \"-n\" in it that would be pretty weird :-)",
            "published" : "2011-12-31T05:27:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Ah.  Yes, you are exactly right.\r\n\r\nI've made your suggested change to trunk as r4050 and the 3.0 branch as r4051.\r\nThanks for the careful analysis!\r\n",
            "published" : "2011-12-31T18:54:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 213,
        "title" : "copyfile API not available on all versions of OS/X",
        "summary" : "copyfile API not available on all versions of OS/X",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mitchblank",
          "htmlLink" : "https://code.google.com/u/100241022542969287054/"
        },
        "updated" : "2011-12-30T06:50:17.000Z",
        "published" : "2011-12-29T06:28:38.000Z",
        "closed" : "2011-12-30T06:50:17.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. compile against the OS/X 10.4u SDK\r\n2. witness errors in archive_read_disk_entry_from_file.c complaining about COPYFILE_* constants missing\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n\r\n<b>What version are you using?</b>\n3.0.2\r\n\r\n<b>On what operating system?</b>\nOS/X 10.5, forcing compile against the 10.4u SDK by manipulating CFLAGS, etc\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n./configure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc version 4.0.1 (Apple Inc. build 5488)\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThis one-line patch fixes this issue:\r\n\r\n--- libarchive-3.0.2/libarchive/archive_read_disk_entry_from_file.c.ORIG        2011-12-28 21:54:54.000000000 -0800\r\n+++ libarchive-3.0.2/libarchive/archive_read_disk_entry_from_file.c     2011-12-28 21:55:22.000000000 -0800\r\n@@ -246,7 +246,7 @@\r\n        return (r);\r\n }\r\n \r\n-#ifdef __APPLE__\r\n+#if defined(__APPLE__) &amp;&amp; defined(HAVE_COPYFILE_H)\r\n /*\r\n  * The Mac OS &quot;copyfile()&quot; API copies the extended metadata for a\r\n  * file into a separate file in AppleDouble format (see RFC 1740).\r\n",
            "published" : "2011-12-29T06:28:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-12-30T06:01:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-OSX" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed to libarchive/trunk r4035 and libarchive/3.0 r4036.\r\n",
            "published" : "2011-12-30T06:50:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 214,
        "title" : "MNT_NOATIME constant not universally available",
        "summary" : "MNT_NOATIME constant not universally available",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mitchblank",
          "htmlLink" : "https://code.google.com/u/100241022542969287054/"
        },
        "updated" : "2011-12-30T06:54:49.000Z",
        "published" : "2011-12-29T06:31:22.000Z",
        "closed" : "2011-12-30T06:54:49.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. compile on a platform without a MNT_NOATIME constant (OS/X 10.4 is one, but I'm sure many older UNIXes qualify)\r\n2. compile fails in archive_read_disk_posix.c\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n\r\n<b>What version are you using?</b>\n3.0.2\r\n\r\n<b>On what operating system?</b>\nOS/X 10.5, building against the 10.4u SDK\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc version 4.0.1 (Apple Inc. build 5488)\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThis trivial patch fixes it:\r\n\r\n\r\n--- libarchive-3.0.2/libarchive/archive_read_disk_posix.c.ORIG  2011-12-28 22:05:12.000000000 -0800\r\n+++ libarchive-3.0.2/libarchive/archive_read_disk_posix.c       2011-12-28 22:05:45.000000000 -0800\r\n@@ -1321,9 +1321,11 @@\r\n                t-&gt;current_filesystem-&gt;synthetic = 0;\r\n #endif\r\n \r\n+#if defined(MNT_NOATIME)\r\n        if (sfs.f_flags &amp; MNT_NOATIME)\r\n                t-&gt;current_filesystem-&gt;noatime = 1;\r\n        else\r\n+#endif\r\n                t-&gt;current_filesystem-&gt;noatime = 0;\r\n \r\n #if defined(HAVE_READDIR_R)\r\n",
            "published" : "2011-12-29T06:31:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Change committed in libarchive/trunk r4037 and libarchive/3.0 r4038\r\n",
            "published" : "2011-12-30T06:54:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 215,
        "title" : "Could linking against CoreFoundation on OS/X be make ./configure-time selectable",
        "summary" : "Could linking against CoreFoundation on OS/X be make ./configure-time selectable",
        "stars" : 1,
        "starred" : false,
        "status" : "Done",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mitchblank",
          "htmlLink" : "https://code.google.com/u/100241022542969287054/"
        },
        "updated" : "2013-06-13T02:54:43.000Z",
        "published" : "2011-12-29T06:42:21.000Z",
        "closed" : "2013-06-13T02:54:43.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. compile on OS/X\r\n2. notice that it links against &quot;-framework CoreServices&quot;\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n\r\n<b>What version are you using?</b>\n3.0.2\r\n\r\n<b>On what operating system?</b>\nOS/X 10.5, building against the 10.4u SDK\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n./configure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc version 4.0.1 (Apple Inc. build 5488)\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI understand that linking against CoreFoundation has advantages for dealing with unicode pathnames, but it also has some disadvantages.  For example, if you are building against the (maximally portable) 10.4u SDK it precludes building the library 64-bit, even if you don't need the unicode filesystem support.\r\n\r\nMy brief look at the code makes me think that the library will generally work without the CoreFoundation stuff (although maybe not as well).. so maybe a &quot;./configure --without-CoreFoundation&quot; flag would be appropriate.\r\n\r\nFor now I've worked around this locally by patching archive_string.c to change all of the &quot;#if defined(__APPLE__)&quot; to &quot;#if 0&quot; and modifying ./configure to avoid adding &quot;-framework CoreServices&quot; to $LIBS",
            "published" : "2011-12-29T06:42:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Such a configuration flag seems reasonable.\r\n\r\nDo you have a  patch?  Even something incomplete is a help.\r\n\r\n(Hint:  \"/bin/sh build/autogen.sh\" regenerates the configure script if you have the right tools installed.)\r\n",
            "published" : "2011-12-30T06:00:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-12-30T06:01:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-OSX" ]
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "I guess I could try to make a patch, although my autoconf skills are *very* rusty these days",
            "published" : "2011-12-30T06:05:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "I think this bug can be retired; I just tried out libarchive 3.1.2 and it doesn't seem to be using CoreFoundation anymore",
            "published" : "2013-06-13T02:43:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Closing.  Thanks.",
            "published" : "2013-06-13T02:54:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Done"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 216,
        "title" : "bsdtar output truncated",
        "summary" : "bsdtar output truncated",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "christophe.baribaud",
          "htmlLink" : "https://code.google.com/u/101771517392602088979/"
        },
        "updated" : "2011-12-30T19:13:25.000Z",
        "published" : "2011-12-29T14:14:51.000Z",
        "closed" : "2011-12-30T19:13:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. create a very long path (more than 256 chars)\r\n2. archive this path i.e. bsdtar archive my_path\r\n3. dump the archive i.e. bsdtar tf archive\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nWhen the name of the path is longer than 256 chars, the systems prints random chars at the end of the string. Example :\r\nabcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/abcdefx/\\023¿c\\215'&lt;@\r\n\r\n<b>What version are you using?</b>\nrelease/3.0 r4034, and a patch to allow long paths\r\n\r\n<b>On what operating system?</b>\nWindows 2000 SP4 and Windows seven 64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual C++ 2005 (VS8)\r\n\r\n<b>Please provide any additional information below.</b>\nThe function safe_fprintf located in file tar/util.c make the wrong assumption that vsnprintf returns the number of characters needed if the provided buffer is too short. The Windows version of this function returns -1 (Microsoft designed this function before the normalization...)\r\nTo know the number of characters needed, it is necessary to use the _vscprintf function. See attached patch",
            "published" : "2011-12-29T14:14:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2160000000",
              "fileName" : "patch6.patch",
              "fileSize" : 449,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.baribaud",
              "htmlLink" : "https://code.google.com/u/101771517392602088979/"
            },
            "content" : "My previous patch broke build under Linux... This one is better",
            "published" : "2011-12-29T15:43:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2160001000",
              "fileName" : "patch7.patch",
              "fileSize" : 646,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "Historically, some UNIXes used to return snprintf()==-1 on overflow as well.  I'm not sure if any of them are in common use today, but for maximum portability I usually recommend just calling snprintf() in a loop, like:\r\n\r\n   for (;;) {\r\n       int want = snprintf(buf, size, ...);\r\n       if (want < 0)\r\n             want = size * 2;   /* try a bigger buffer */\r\n       else if (want <= size)\r\n          break;\r\n       buf = realloc(...., want);\r\n       size = want;\r\n   }",
            "published" : "2011-12-29T20:31:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I prefer to avoid #if conditionals when we can reasonably do so.  The approach in Comment 2 above seems pretty promising.\r\n\r\nNow we just need a test for this...\r\n",
            "published" : "2011-12-30T05:56:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2011-12-30T06:01:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Unfortunately, VC6 does not provide _vscprintf function.\r\nSo, I agree with Tim.",
            "published" : "2011-12-30T06:27:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I fixed this issue in r4042 svn/trunk and in r4043 svn/release/3.0 based on mitchblank's suggestion.",
            "published" : "2011-12-30T19:13:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 217,
        "title" : "make error",
        "summary" : "make error",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ondrej.holy",
          "htmlLink" : "https://code.google.com/u/116468128122919226047/"
        },
        "updated" : "2011-12-30T23:47:55.000Z",
        "published" : "2011-12-30T21:09:07.000Z",
        "closed" : "2011-12-30T21:57:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondrej.holy",
              "htmlLink" : "https://code.google.com/u/116468128122919226047/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. ./configure\r\n2. make\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nlibarchive/archive_read_support_format_7zip.c: In function ‘read_Bools’:\r\nlibarchive/archive_read_support_format_7zip.c:1573: error: ‘avail’ may be used uninitialized in this function\r\nmake[1]: *** [libarchive/archive_read_support_format_7zip.lo] Error 1\r\nmake[1]: Leaving directory `/libarchive'\r\nmake: *** [all] Error 2\r\n\r\n<b>What version are you using?</b>\nI tried libarchive 3.0.2 stable and trunk, both versions end with error.\r\n\r\n<b>On what operating system?</b>\nUbuntu 10.04 i386\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nsvn checkout http://libarchive.googlecode.com/svn/trunk/ .\r\nbuild/autogen.sh\r\n./configure\r\nmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc version 4.4.3\r\n\r\n<b>Please provide any additional information below.</b>\nBuilding with cmake is ok. The patch is attached to fix issued error.\r\n",
            "published" : "2011-12-30T21:09:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2170000000",
              "fileName" : "archive_read_support_format_7zip.c.patch",
              "fileSize" : 82,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks!\r\n\r\nCommitted to trunk r4045 and release/3.0 r4046.\r\n\r\nPlease let us know if you find any other problems.",
            "published" : "2011-12-30T21:57:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mitchblank",
              "htmlLink" : "https://code.google.com/u/100241022542969287054/"
            },
            "content" : "I guess -Werror is on for some reason?  Do you have that set in $CFLAGS or something?  Otherwise I don't see why that would have been an error - it's just a warning when I build.\r\n\r\nThe patch isn't technically needed, either.  \"avail\" is always set before it's actually referenced, but the compiler can't see that",
            "published" : "2011-12-30T21:59:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondrej.holy",
              "htmlLink" : "https://code.google.com/u/116468128122919226047/"
            },
            "content" : "That is right, -Werror is on, but I do not know the reason, why configure script writes the flag to Makefile, because $CFLAGS is empty.\r\n\r\nI understand, that it is not basically error, but gcc does not know it.",
            "published" : "2011-12-30T22:40:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "We do try to humor compilers in order to keep a clean warning-free build.  ;-)\r\n\r\n-Werror should not be set on stable releases (even if we could get a perfectly clean build on every compiler available today, compilers will change over the life of the release).  However, it is set on libarchive/trunk and on testing releases in order to catch as many code nits as possible during development and testing.\r\n\r\nIf you ever see -Werror set on a build from a stable libarchive release, please let me know and I'll dig into it.",
            "published" : "2011-12-30T23:47:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 218,
        "title" : "Empty contents extracting Zip files with bsdcpio",
        "summary" : "Empty contents extracting Zip files with bsdcpio",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ondrej.holy",
          "htmlLink" : "https://code.google.com/u/116468128122919226047/"
        },
        "updated" : "2011-12-30T23:53:11.000Z",
        "published" : "2011-12-30T21:51:48.000Z",
        "closed" : "2011-12-30T23:53:11.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondrej.holy",
              "htmlLink" : "https://code.google.com/u/116468128122919226047/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. cat error.zip | ./bsdcpio -i\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExtracted file index.html is empty, but using unzip it contains 7.5 KB of data.\r\n\r\n<b>What version are you using?</b>\nI tried libarchive trunk, 3.0.2 and 2.8.5, all versions showed error.\r\n\r\n<b>On what operating system?</b>\nUbuntu 10.04 i386\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n./configure\r\nmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc version 4.4.3\r\n\r\n<b>Please provide any additional information below.</b>\nProblem file is attached. Unfortunately I do not know which program created this file, I found it somewhere on the internet. It is not first one, but I can not find another now.\r\n",
            "published" : "2011-12-30T21:51:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2180000000",
              "fileName" : "error.zip",
              "fileSize" : 2555,
              "mimetype" : "application/zip; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try the attached patch (which should apply to libarchive/trunk or libarchive/3.0.2) and let me know what you see.\r\n",
            "published" : "2011-12-30T22:40:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2180001000",
              "fileName" : "cpio-unknown-filesize.patch",
              "fileSize" : 499,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ondrej.holy",
              "htmlLink" : "https://code.google.com/u/116468128122919226047/"
            },
            "content" : "File is extracted alright.",
            "published" : "2011-12-30T22:54:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fix committed to libarchive/trunk r4047 and libarchive/3.0 branch as r4048.\r\n\r\nThanks for the report!  Please let us know if you find any other issues.",
            "published" : "2011-12-30T23:53:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Empty contents extracting Zip files with bsdcpio",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 219,
        "title" : "default build of r4072 with clang produces several compiler warnings",
        "summary" : "default build of r4072 with clang produces several compiler warnings",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "sean@rogue-research.com",
          "htmlLink" : "https://code.google.com/u/111485087241853199227/"
        },
        "updated" : "2012-01-24T06:55:55.000Z",
        "published" : "2012-01-03T21:02:03.000Z",
        "closed" : "2012-01-24T06:55:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sean@rogue-research.com",
              "htmlLink" : "https://code.google.com/u/111485087241853199227/"
            },
            "content" : "With svn r4072 I used CMake 2.8.7 and clang and there are a few warnings:\r\n\r\n[  8%] Building C object libarchive/CMakeFiles/archive.dir/archive_read_support_format_7zip.c.o/libarchive-read-only/libarchive/archive_read_support_format_7zip.c:1385:18: warning: comparison of unsigned expression &lt; 0 is always false [-Wtautological-compare]\r\n                    t_avail_in &lt; 0 || t_avail_out &lt;= 0) {\r\n                    ~~~~~~~~~~ ^ ~\r\n\r\n\r\n[ 11%] Building C object libarchive/CMakeFiles/archive.dir/archive_string.c.o/libarchive-read-only/libarchive/archive_string.c:2156:29: warning: passing 'const char **' to parameter of type 'char **' discards qualifiers in nested pointer types\r\n      [-Wincompatible-pointer-types]\r\n                size_t result = iconv(cd, &amp;inp, &amp;remaining, &amp;outp, &amp;avail);\r\n                                          ^~~~\r\n/usr/include/iconv.h:73:30: note: passing argument to parameter here\r\n        char ** __restrict /*inbuf*/,  size_t * __restrict /*inbytesleft*/,\r\n                                    ^\r\n\r\n\r\n[ 39%] Building C object libarchive/test/CMakeFiles/libarchive_test.dir/read_open_memory.c.o/libarchive-read-only/libarchive/test/read_open_memory.c:144:11: warning: comparison of unsigned expression &lt; 0 is always false [-Wtautological-compare]\r\n        if (size &lt; 0) {\r\n            ~~~~ ^ ~\r\n",
            "published" : "2012-01-03T21:02:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The first and third items here have been fixed in trunk:  Michihiro just committed a fix for the first (removing the comparison) and I just committed a fix for the third (changing the variable to a signed type).\r\n\r\nThe second one appears to be a configuration issue:  The CMakeLists.txt file is supposed to automatically determine whether the iconv() on your system uses const char ** or char ** for the second parameter (there are several implementations of iconv in use with differing signatures).  Apparently, the CmakeLists.txt isn't correctly determining this for you.\r\n\r\nWhat operating system?  What version of clang?\r\n\r\nWhat iconv are you using?  (Many systems have GNU libiconv installed as a separate package in addition to a system libiconv or iconv in libc.)\r\n\r\nDo the tests pass for you?\r\n",
            "published" : "2012-01-04T03:28:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sean@rogue-research.com",
              "htmlLink" : "https://code.google.com/u/111485087241853199227/"
            },
            "content" : "I can confirm the warnings are fixed (except the iconv one).\r\n\r\nI'm using Mac OS X 10.7.2 with a recent build of clang from its svn.  I'm using whichever iconv comes with the OS. I didn't try the tests, but have just tried now with r4086:\r\n\r\n100% tests passed, 0 tests failed out of 231\r\n",
            "published" : "2012-01-04T16:03:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm going to close this as \"Fixed\".\r\n\r\nThe iconv issue is subtle:  The CMake script tries to determine whether your iconv uses \"char **\" or \"const char **\" for that argument by trying to compile a sample program each way and seeing if it fails.  Of course, a compile warning won't cause that to fail, so this configuration test doesn't prevent a warning at build time; it only ensures that you won't get a compile failure.",
            "published" : "2012-01-24T06:55:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 220,
        "title" : "Support for static compiled zlib",
        "summary" : "Support for static compiled zlib",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "wildhuji",
          "htmlLink" : "https://code.google.com/u/104776166409635866119/"
        },
        "updated" : "2012-03-02T00:53:32.000Z",
        "published" : "2012-01-05T10:10:50.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "wildhuji",
              "htmlLink" : "https://code.google.com/u/104776166409635866119/"
            },
            "content" : "I would like to compile libarchive with zlib support, but I would like to link libarchive with a static version of zlib (zlib.a). But it seems that this case is not implemented in libarchive build process ? --includedir and --libdir have no effect on configure script, zlib is still &quot;not present&quot;. \r\n\r\nThank you !\r\n",
            "published" : "2012-01-05T10:10:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What operating system?\r\n\r\nWhat compiler?\r\n\r\nHow are you running ./configure?\r\n\r\nWhat directory is zlib.a in?\r\n",
            "published" : "2012-01-08T23:14:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "wildhuji",
              "htmlLink" : "https://code.google.com/u/104776166409635866119/"
            },
            "content" : "OS : Linux, Solaris, AIX and BSD\r\nCompiler : gcc\r\nfor the ./configure, i use : ./configure --enable-static --disable-bsdtar --disable-bsdcpio --disable-xattr --disable-acl --disable-largefile --with-pic --without-bz2lib --without-lzmadec --without-lzma --without-lzma --without-xml2 --without-expat\r\n\r\nAnd the directory of zlib.a, I can move it where you want. (Actually it is : ../zlib/zlib.a)\r\n\r\nI don't manage to say to the ./configure to watch in \"../zlib/\" to find headers and static lib of zlib. So, it says zlib not present.\r\n\r\nThank you.",
            "published" : "2012-01-08T23:23:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "I also can't work out how to configure my own zlib and bzip2 include folders and static libs.  This applies to several (all?) unix type platforms.\r\n\r\nI've tried --with-zlib=\"../zlib\" --with-bzip=\"..bzip\", but this doesn't seem to have any effect.  Is there hack to do this?  It's not always easy to get xxx-devel pkgs on all platforms.",
            "published" : "2012-03-01T05:51:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "i'm using 3.0.3",
            "published" : "2012-03-01T05:59:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Solved it by editing #defines in config.h.in.\r\nThen run configure.\r\nThen add include paths to Makefile.am.\r\nThen make.",
            "published" : "2012-03-02T00:53:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 221,
        "title" : "archive_read_finish is rather brittle in repeat calls",
        "summary" : "archive_read_finish is rather brittle in repeat calls",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2012-01-10T05:35:38.000Z",
        "published" : "2012-01-08T17:42:23.000Z",
        "closed" : "2012-01-10T04:52:53.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "It isn't necessarily correct to call this function twice, but I'm seeing some rather odd behavior overall that seems like it could be better handled by libarchive.\r\n\r\nTest program attached, which covers three different (mis)use cases:\r\n\r\n1: ./test (no args) : create new archive object, try to finish/free it twice. The second time spits up the &quot;Programmer error&quot; warning. Probably fine as is.\r\n2. ./test null : attempt to finish/free NULL. Segmentation faults. Totally against the principle of the normal free() call which handles NULL pointers just fine, so one would expect this function to do so as well.\r\n3. ./test open : similar case to 1, except we actually open a file descriptor. This results in no &quot;Programmer error&quot; warning but a segfault instead.\r\n\r\n1 and 3 would be fine if 2 didn't occur, but having to guard all calls to archive_read_finish() in a NULL check seems a bit extreme. It would make defensive coding a lot easier if archive_read_free() accepted NULL and returned without segfaulting.",
            "published" : "2012-01-08T17:42:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2210000000",
              "fileName" : "test.c",
              "fileSize" : 813,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What version of libarchive are you looking at?  Libarchive 3.0.2 has this at the top of archive_read_free in archive_read.c:\r\n\r\n    if (_a == NULL)\r\n        return (ARCHIVE_OK);\r\n\r\nSo, I think your case 2 is already fixed.  I think your case 1 is the correct behavior (and consistent with libc free() behavior).  The segfault in your case 3 is of concern if it's still happening in libarchive 3.0.2.",
            "published" : "2012-01-08T23:12:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Sorry I totally forgot that. I am using 3.0.2 on my system, and that is what I used for the example program.\r\n\r\n$ grep 'define ARCHIVE_VERSION_NUMBER' /usr/include/archive.h \r\n\r\n$ bsdtar --version\r\nbsdtar 3.0.2 - libarchive 3.0.2\r\n\r\n$ uname -a\r\nLinux galway 3.2.0-1-ARCH #1 SMP PREEMPT Thu Jan 5 11:34:46 CET 2012 x86_64 Intel(R) Core(TM)2 Quad CPU Q9400 @ 2.66GHz GenuineIntel GNU/Linux\r\n\r\n\r\nHere is the output when I compile and link test.c:\r\n\r\n$ ./test \r\nnew\r\nfinish 1\r\nfinish 2\r\nPROGRAMMER ERROR: Function archive_read_free invoked with invalid archive handle.\r\nAborted\r\n\r\n$ ./test null\r\nnew\r\nSegmentation fault\r\n\r\n$ ./test open\r\nnew\r\n2\r\nfinish 1\r\nfinish 2\r\nSegmentation fault\r\n",
            "published" : "2012-01-08T23:20:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Oh.  I found it.  archive_read_free() and archive_write_free() are virtual, so you can't look them up against a NULL pointer.\r\n\r\nI've added the NULL check at the virtual wrappers in r4106.\r\n\r\nYour test program now passes ./test null and the other cases abort with PROGRAMMER ERROR.  (Which is consistent with free(1), which does not permit freeing the same memory more than once.)",
            "published" : "2012-01-10T04:51:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Merged to the 3.0 branch.\r\n",
            "published" : "2012-01-10T04:52:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Awesome, thanks! I've fixed my buggy program code in the meantime but this is great for consistency, appreciate you looking into it.",
            "published" : "2012-01-10T05:35:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 222,
        "title" : "archive creation fails for vmlinux image on ext4",
        "summary" : "archive creation fails for vmlinux image on ext4",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Critical", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "d@falconindy.com",
          "htmlLink" : "https://code.google.com/u/113526245087495060456/"
        },
        "updated" : "2012-01-13T05:44:06.000Z",
        "published" : "2012-01-08T17:44:41.000Z",
        "closed" : "2012-01-13T05:44:06.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 13,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. build a linux kernel\r\n2. on ext4, bsdtar cf foo.tar vmlinux\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expect an uncompressed tar archive. bsdtar throws a write error early in the process and I end up with a truncated archive. This doesn't happen when I try to write the archive to tmpfs, with the vmlinux file still on ext4.\r\n\r\n\r\n<b>What version are you using?</b>\nlibarchive 3.0.2\r\n\r\n\r\n<b>On what operating system?</b>\n(Arch) Linux, kernel v3.2.0.\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nBuilt with:\r\n\r\n./configure --prefix=/usr --without-xml2\r\nCFLAGS=&quot;-march=generic -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2&quot;\r\nLDFLAGS=&quot;-Wl,-O1,--sort-common,--as-needed,-z,relro,--hash-style=gnu&quot;\r\n\r\n-- Rebuilding without these CFLAGS and LDFLAGS does not affect the outcome.\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.6.2\r\nglibc 2.15\r\nbinutils 2.22\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nI've attached an strace of the same process performed on ext4 vs. tmpfs. You'll notice an EFAULT return from write(2) on the ext4 sample early in the archive creation. Also strange is that the previous write before the EFAULT write doesn't return the full requested amount, which is odd when dealing with a real file on disk.\r\n\r\nRunning bsdtar under valgrind does not exhibit the error, (which makes sense since the address space is modified).",
            "published" : "2012-01-08T17:44:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2220000000",
              "fileName" : "ext4.log",
              "fileSize" : 14831,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "2220000001",
              "fileName" : "devshm.log",
              "fileSize" : 156198,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I would love to see a backtrace from the point at which the EFAULT occurs.  This suggests a problem in archive_write_client_write() (which has logic to try to recover from short writes), but I'm looking at that code and don't see anything obvious.  I'm not sure why you're seeing a short write (full disk?) but whatever is causing that should be handled more gracefully than this.\r\n\r\nI'm very perplexed why in one case you see writes and reads alternating (one large read, several small writes), and in the other case, you see a bunch of reads before there are any writes.  I'm pretty sure that's related to whatever else is going on here.\r\n\r\nHmmm....  Is it possible that you're using the wrong archive.h?  I would expect to see problems like this if you somehow used the libarchive 2.8.5 archive.h with the libarchive 3.0.2 library (or vice-versa).  Some of the arguments have changed size (e.g. 32-bit versus 64-bit integers), and some of the behaviors here look like numbers are getting mixed up.\r\n",
            "published" : "2012-01-08T23:01:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "Sure thing. Attached is a full backtrace from where the EFAULT occurs. No CFLAGS/LDFLAGS involved in the build to avoid optimizations.\r\n\r\nNo possibility of running out of disk space, I've got over 1TB free on that particular partition.\r\n\r\nSorry for not mentioning -- this x86_64. I wouldn't expect any changes here for argument size.\r\n\r\nWrong archive.h isn't possible (wouldn't that be a build-sys bug, anyways?). The debug build I used to generate this backtrace was compiled with libarchive 3.0.2 installed to the root FS. 2.8.5 is nowhere in sight ;)",
            "published" : "2012-01-08T23:22:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2220002000",
              "fileName" : "libarchive-bt-full-no-opti",
              "fileSize" : 4627,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "Also worth noting that building libarchive 2.8.5 and LD_PRELOAD'ing the .so with the build tree's bsdtar doesn't exhibit this behavior.",
            "published" : "2012-01-08T23:33:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "I checked this out into a git repo to make bisecting easier -- was able to track this down to:\r\n\r\nhttp://code.google.com/p/libarchive/source/detail?r=3277\r\n\r\nSure enough, if I hack the build to remove the HAVE_LINUX_FIEMAP_H define, 3.0.2 generates a binary that can archive this file.",
            "published" : "2012-01-09T00:04:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Ah.  Good detective work!\r\n\r\nBetween the backtrace and your comment about sparse file support, I think I know where the problem is.  It looks like archive_write_pax_data isn't correctly copying contents through when the file is sparse.  In particular, it's not accounting for data that was already written from the buffer when deciding how much can be written.\r\n\r\nI haven't tested the attached patch, but I think it's at least on the right track.  To test it, please unarchive the resulting tar file and verify (with `cmp`) that the result matches the original file.\r\n",
            "published" : "2012-01-09T04:23:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2220005000",
              "fileName" : "sparse-file.patch",
              "fileSize" : 441,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "Perfect! bsdtar doesn't report a truncated write, and cmp returns 0 for the original file compared to the one extracted out of the newly written archive.",
            "published" : "2012-01-09T04:31:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Tim, I've just committed a test for archiving sparse files.\r\nIt fails without your patch.",
            "published" : "2012-01-09T06:09:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks, Michihiro!\r\n\r\nI think this might merit a 3.0.3 release.  If you agree, I'll have time for that tomorrow.\r\n\r\n",
            "published" : "2012-01-09T17:03:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2012-01-10T06:35:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Priority-Medium", "Priority-Critical" ]
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Tim, I agree with you. We should do it!",
            "published" : "2012-01-10T07:39:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "Hey guys, I don't mean to nag, but is 3.0.3 actually on the horizon? I've got libarchive 3.0.2 in Arch Linux's testing repo and holding up some other devs. I don't want to move it to our stable repos as is, knowing that it adversely affects kernel builds.\r\n\r\nIf 3.0.3 is actually going to be tarballed up in the next day or so, awesome! Otherwise, please let me know that you won't get to it until later so I can backport this patch to our 3.0.2 package. I'm fine with both of these scenarios; I just need some insight into your schedules so I can make a decision.",
            "published" : "2012-01-13T04:35:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Libarchive 3.0.3 was posted to the Downloads section today.  Thanks for your patience.\r\n",
            "published" : "2012-01-13T05:44:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 223,
        "title" : "test failure: test_read_disk_directory_traversals",
        "summary" : "test failure: test_read_disk_directory_traversals",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "pipping.elias",
          "htmlLink" : "https://code.google.com/u/113501031579999651195/"
        },
        "updated" : "2012-01-10T23:13:09.000Z",
        "published" : "2012-01-09T23:30:27.000Z",
        "closed" : "2012-01-10T23:13:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pipping.elias",
              "htmlLink" : "https://code.google.com/u/113501031579999651195/"
            },
            "content" : "Here is the content of test_read_disk_directory_traversals.log:\r\n\r\n&lt;&lt;SNIP\r\ntest_read_disk_directory_traversals\r\n\r\nlibarchive/test/test_read_disk_directory_traversals.c:944: File at has atime 886622, 1325262976 seconds ago\r\n\r\n   Description: Atime must not be restored\r\nlibarchive/test/test_read_disk_directory_traversals.c:945: File at/f1 has atime 886600, 1325262998 seconds ago\r\n\r\nlibarchive/test/test_read_disk_directory_traversals.c:946: File at/f2 has atime 886611, 1325262987 seconds ago\r\n&lt;&lt;SNAP\r\n\r\nThis is on linux, with libarchive 3.0.2",
            "published" : "2012-01-09T23:30:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Can you provide any more details?\r\n\r\nWhich linux distribution?  Version?\r\n\r\nWhat filesystem is /tmp using?\r\n\r\nAre any filesystems mounted with the noatime flag?\r\n",
            "published" : "2012-01-10T06:34:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pipping.elias",
              "htmlLink" : "https://code.google.com/u/113501031579999651195/"
            },
            "content" : "This is on linux 3.1.6.\r\nThe distribution is exherbo linux.\r\nI'm on ext4 with noatime.",
            "published" : "2012-01-10T10:00:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "It seems restoring atime test should be passed.\r\nPlease try attached patch.",
            "published" : "2012-01-10T11:19:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2230003000",
              "fileName" : "noatime.patch",
              "fileSize" : 1605,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pipping.elias",
              "htmlLink" : "https://code.google.com/u/113501031579999651195/"
            },
            "content" : "With that patch applied, I don't get a test failure.",
            "published" : "2012-01-10T19:12:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I committed a fix in r4119(trunk) and r4120(release/3.0).",
            "published" : "2012-01-10T23:13:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 224,
        "title" : "Mishandling CD9660 images with RockRidge extensions from FreeBSD makefs",
        "summary" : "Mishandling CD9660 images with RockRidge extensions from FreeBSD makefs",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "junguk.kim",
          "htmlLink" : "https://code.google.com/u/114777153887007477353/"
        },
        "updated" : "2012-02-07T21:26:54.000Z",
        "published" : "2012-01-17T20:28:07.000Z",
        "closed" : "2012-02-07T21:26:54.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "junguk.kim",
              "htmlLink" : "https://code.google.com/u/114777153887007477353/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nhammer# cat &gt; this_is_a_test_file.txt\r\nThis is a test file.\r\nhammer# cat this_is_a_test_file.txt \r\nThis is a test file.\r\nhammer# ln -s this_is_a_test_file.txt this_is_a_test_file.tmp\r\nhammer# ls -la\r\ntotal 6\r\ndrwxr-xr-x  2 root  wheel  512  1 17 15:05 .\r\ndrwxr-xr-x  4 root  wheel  512  1 17 15:04 ..\r\nlrwxr-xr-x  1 root  wheel   23  1 17 15:05 this_is_a_test_file.tmp -&gt; this_is_a_test_file.txt\r\n-rw-r--r--  1 root  wheel   21  1 17 15:05 this_is_a_test_file.txt\r\nhammer# cd ..\r\nhammer# makefs -t cd9660 -o rockridge tmp.iso tmp\r\nhammer# tar tfv tmp.iso\r\ndrwx------  2 0      0        2048 12 31  1969 .\r\nlrwxr-xr-x  1 0      0          23  1 17 15:05 this_is_a_test_file.tmp -&gt; this_is_a_test_file.txt\r\n-rw-r--r--  1 0      0           0  1 17 15:05 this_is_a_test_file.txt link to this_is_a_test_file.tmp\r\nhammer# mkdir tmp2\r\nhammer# cd tmp2\r\nhammer# tar xfv ../tmp.iso\r\nx .\r\nx this_is_a_test_file.tmp\r\nx this_is_a_test_file.txt: Can't create 'this_is_a_test_file.txt'\r\ntar: Error exit delayed from previous errors.\r\nhammer# ls -la\r\ntotal 4\r\ndrwx------  2 root  wheel  512  1 17 15:07 .\r\ndrwxr-xr-x  5 root  wheel  512  1 17 15:06 ..\r\nlrwxr-xr-x  1 root  wheel   23  1 17 15:05 this_is_a_test_file.tmp -&gt; this_is_a_test_file.txt\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nhammer# mkisofs -R -o tmp2.iso tmp\r\nSetting input-charset to 'UTF-8' from locale.\r\nTotal translation table size: 0\r\nTotal rockridge attributes bytes: 421\r\nTotal directory bytes: 0\r\nPath table size(bytes): 10\r\nMax brk space used 0\r\n176 extents written (0 MB)\r\nhammer# tar tfv tmp2.iso\r\ndrwxr-xr-x  2 0      0        2048  1 17 15:05 .\r\n-rw-r--r--  1 0      0          21  1 17 15:05 this_is_a_test_file.txt\r\nlrwxr-xr-x  1 0      0           0  1 17 15:05 this_is_a_test_file.tmp -&gt; this_is_a_test_file.txt\r\nhammer# mkdir tmp2\r\nhammer# cd tmp2\r\nhammer# tar xfv ../tmp2.iso\r\nx .\r\nx this_is_a_test_file.txt\r\nx this_is_a_test_file.tmp\r\nhammer# ls -la\r\ntotal 6\r\ndrwxr-xr-x  2 root  wheel  512  1 17 15:08 .\r\ndrwxr-xr-x  5 root  wheel  512  1 17 15:08 ..\r\nlrwxr-xr-x  1 root  wheel   23  1 17 15:05 this_is_a_test_file.tmp -&gt; this_is_a_test_file.txt\r\n-rw-r--r--  1 root  wheel   21  1 17 15:05 this_is_a_test_file.txt\r\n\r\n\r\n<b>What version are you using?</b>\n\r\nhammer# tar --version\r\nbsdtar 2.8.5 - libarchive 2.8.5\r\n\r\n\r\n<b>On what operating system?</b>\n\r\nhammer# uname -mprs\r\nFreeBSD 10.0-CURRENT amd64 amd64\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nBuilt in FreeBSD base.\r\n(Note: Both libarchive 2.8.5 and 3.0.3 built directly from sources show the same behaviour.)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nhammer# cc --version\r\ncc (GCC) 4.2.1 20070831 patched [FreeBSD]\r\nCopyright (C) 2007 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI can mount the image and everything works fine, e.g.,\r\n\r\nhammer# mkdir tmp3\r\nhammer# mdconfig -a -t vnode -f tmp.iso\r\nmd0\r\nhammer# mount_cd9660 /dev/md0 tmp3\r\nhammer# ls -l tmp3\r\ntotal 0\r\nlrwxr-xr-x  1 root  wheel  23  1 17 15:05 this_is_a_test_file.tmp -&gt; this_is_a_test_file.txt\r\n-rw-r--r--  1 root  wheel  21  1 17 15:05 this_is_a_test_file.txt\r\nhammer# cat tmp3/this_is_a_test_file.txt \r\nThis is a test file.\r\nhammer# cat tmp3/this_is_a_test_file.tmp\r\nThis is a test file.\r\n\r\nThis CD9660 image is attached as a reference.  Please note this problem is critical because it prevented me from verifying FreeBSD 9.0-RELEASE CD-ROMs:\r\n\r\nhammer# tar tfv FreeBSD-9.0-RELEASE-amd64-disc1.iso &gt; /dev/null\r\ntar: Ignoring out-of-order file (usr/sbin/chown) 83736576 &lt; 564533248\r\ntar: Ignoring out-of-order file (usr/share/man/man3/getlogin_r.3.gz) 617725952 &lt; 618725376\r\ntar: Ignoring out-of-order file (usr/share/man/man3/FD_CLR.3.gz) 618008576 &lt; 618725376\r\ntar: Ignoring out-of-order file (usr/share/man/man3/FD_ISSET.3.gz) 618008576 &lt; 618725376\r\ntar: Ignoring out-of-order file (usr/share/man/man3/FD_SET.3.gz) 618008576 &lt; 618725376\r\ntar: Ignoring out-of-order file (usr/share/man/man3/FD_ZERO.3.gz) 618008576 &lt; 618725376\r\ntar: Ignoring out-of-order file (usr/share/man/man5/malloc.conf.5.gz) 619102208 &lt; 623835136\r\ntar: Ignoring out-of-order file (usr/share/man/man8/inetd.8.gz) 624113664 &lt; 625053696\r\ntar: Ignoring out-of-order file (usr/share/zoneinfo/Europe/Oslo) 640262144 &lt; 640591872\r\ntar: Ignoring out-of-order file (usr/share/zoneinfo/Europe/Istanbul) 640348160 &lt; 640591872\r\ntar: Ignoring out-of-order file (usr/share/zoneinfo/Europe/Nicosia) 640391168 &lt; 640591872\r\ntar: Error exit delayed from previous errors.\r\n\r\nPlease also note there are 'Ignoring out-of-order file' issue.  I don't know how to reproduce it, though.",
            "published" : "2012-01-17T20:28:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2240000000",
              "fileName" : "tmp.iso.bz2",
              "fileSize" : 571,
              "mimetype" : "application/x-bzip2; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "junguk.kim",
              "htmlLink" : "https://code.google.com/u/114777153887007477353/"
            },
            "content" : "It is little hackish but I was able to work around the wrong hardlink problem with the attached patch.  I still don't know how to reproduce or fix the 'Ignoring out-of-order file' issue. :-/",
            "published" : "2012-01-17T23:51:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2240001000",
              "fileName" : "libarchive.diff",
              "fileSize" : 1688,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "junguk.kim",
              "htmlLink" : "https://code.google.com/u/114777153887007477353/"
            },
            "content" : "This patch is the same patch redone against 3.0.3.",
            "published" : "2012-01-18T00:13:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2240002000",
              "fileName" : "patch-archive_read_support_format_iso9660.c",
              "fileSize" : 1569,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "junguk.kim",
              "htmlLink" : "https://code.google.com/u/114777153887007477353/"
            },
            "content" : "I found another problem.  It seems makefs generated .rr_moved directory is not properly handled.\r\n\r\nhammer# mkdir tmp\r\nhammer# cd tmp\r\nhammer# mkdir -p this/is/very/long/directory/structure/which/generates/rr_moved/directory\r\nhammer# touch this/is/very/long/directory/structure/which/generates/rr_moved/directory/test.txt\r\nhammer# ls -l this/is/very/long/directory/structure/which/generates/rr_moved/directory\r\ntotal 0\r\n-rw-r--r--  1 root  wheel  0  1 17 19:38 test.txt\r\nhammer# cd ..\r\nhammer# makefs -t cd9660 -o rockridge tmp.iso tmp\r\nhammer# tar tfv tmp.iso\r\ndrwx------  3 0      0        2048 12 31  1969 .\r\ndrwxr-xr-x  3 0      0        2048  1 17 19:38 this\r\n-rw-r--r--  1 0      0           0  1 17 19:38 .rr_moved/generates/rr_moved/directory/test.txt\r\ndrwxr-xr-x  3 0      0        2048  1 17 19:38 this/is\r\ndrwxr-xr-x  3 0      0        2048  1 17 19:38 this/is/very\r\ndrwxr-xr-x  3 0      0        2048  1 17 19:38 this/is/very/long\r\ndrwxr-xr-x  3 0      0        2048  1 17 19:38 this/is/very/long/directory\r\ndrwxr-xr-x  3 0      0        2048  1 17 19:38 this/is/very/long/directory/structure\r\ndrwxr-xr-x  3 0      0        2048  1 17 19:38 this/is/very/long/directory/structure/which\r\ndrwxr-xr-x  3 0      0        2048  1 17 19:38 this/is/very/long/directory/structure/which/generates\r\ndrwxr-xr-x  3 0      0        2048  1 17 19:38 this/is/very/long/directory/structure/which/generates/rr_moved\r\ndrwxr-xr-x  2 0      0        2048  1 17 19:38 this/is/very/long/directory/structure/which/generates/rr_moved/directory\r\nhammer# mkdir test\r\nhammer# cd test\r\nhammer# tar xfv ../tmp.iso \r\nx .\r\nx this\r\nx .rr_moved/generates/rr_moved/directory/test.txt\r\nx this/is\r\nx this/is/very\r\nx this/is/very/long\r\nx this/is/very/long/directory\r\nx this/is/very/long/directory/structure\r\nx this/is/very/long/directory/structure/which\r\nx this/is/very/long/directory/structure/which/generates\r\nx this/is/very/long/directory/structure/which/generates/rr_moved\r\nx this/is/very/long/directory/structure/which/generates/rr_moved/directory\r\nhammer# find . -name test.txt\r\n./.rr_moved/generates/rr_moved/directory/test.txt\r\n\r\nI can mount this image just fine:\r\n\r\nhammer# mdconfig -a -t vnode -f tmp.iso\r\nmd0\r\nhammer# mount_cd9660 /dev/md0 /cdrom\r\nhammer# ls -al /cdrom\r\ntotal 8\r\ndrwxr-xr-x   3 root  wheel  2048 12 31  1969 .\r\ndrwxr-xr-x  24 root  wheel  2048  1 16 18:34 ..\r\ndrwxr-xr-x   3 root  wheel  2048  1 17 19:38 .rr_moved\r\ndrwxr-xr-x   3 root  wheel  2048  1 17 19:38 this\r\nhammer# ls -al /cdrom/.rr_moved\r\ntotal 4\r\ndrwxr-xr-x  3 root  wheel  2048  1 17 19:38 .\r\ndrwxr-xr-x  3 root  wheel  2048 12 31  1969 ..\r\nhammer# find /cdrom -name test.txt\r\n/cdrom/this/is/very/long/directory/structure/which/generates/rr_moved/directory/test.txt\r\n\r\nmkisofs generated file is good, however:\r\n\r\nhammer# mkisofs -R -o tmp2.iso tmp\r\nSetting input-charset to 'UTF-8' from locale.\r\nTotal translation table size: 0\r\nTotal rockridge attributes bytes: 2995\r\nTotal directory bytes: 22528\r\nPath table size(bytes): 166\r\nMax brk space used 0\r\n186 extents written (0 MB)\r\nhammer# mkdir test\r\nhammer# cd test\r\nhammer# tar xfv ../tmp2.iso\r\nx .\r\nx this\r\nx this/is\r\nx this/is/very\r\nx this/is/very/long\r\nx this/is/very/long/directory\r\nx this/is/very/long/directory/structure\r\nx this/is/very/long/directory/structure/which\r\nx this/is/very/long/directory/structure/which/generates\r\nx this/is/very/long/directory/structure/which/generates/rr_moved\r\nx this/is/very/long/directory/structure/which/generates/rr_moved/directory\r\nx this/is/very/long/directory/structure/which/generates/rr_moved/directory/test.txt\r\nhammer# find . -name test.txt\r\n./this/is/very/long/directory/structure/which/generates/rr_moved/directory/test.txt",
            "published" : "2012-01-18T00:49:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "junguk.kim",
              "htmlLink" : "https://code.google.com/u/114777153887007477353/"
            },
            "content" : "I am attaching the file with this problem.",
            "published" : "2012-01-18T00:52:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2240004000",
              "fileName" : "tmp.iso.bz2",
              "fileSize" : 1041,
              "mimetype" : "application/x-bzip2; charset=binary"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "bsdtar reads ISO files sequentially from the beginning.\r\n\r\nThis is good:  it allows bsdtar to read compressed ISO images directly, since it does not have to seek around within the image.\r\n\r\nThis is a problem:  Some ISO images cannot be accurately read this way; it depends on how the program that created the ISO image structured the data within the ISO.  The makefs program that was recently imported into FreeBSD does not order the data in a way that can always be cleanly read by libarchive.\r\n\r\nYou might also look at makefs to see if it's layout calculations can be improved.  In particular, it would be nice if it consistently put directory information before the file bodies referenced by those directories.  (This is what causes the \"Ignoring out-of-order file\" warnings.  This is also why the .rr_moved directory gets extracted the way it does; makefs apparently puts the .rr_moved directory before the file body but puts the file body before the splice point, so libarchive does not have full information about the directory relocation at the time it has to extract the file body to disk.)\r\n",
            "published" : "2012-01-18T01:45:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I fixed this issue(the original problem) in trunk.\r\nAttached patch files are for 2.8.5 and 3.0.3.\r\n",
            "published" : "2012-01-19T08:47:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2240006000",
              "fileName" : "issue224-2.8.5.patch",
              "fileSize" : 815,
              "mimetype" : "text/x-diff; charset=us-ascii"
            }, {
              "attachmentId" : "2240006001",
              "fileName" : "issue224-3.0.3.patch",
              "fileSize" : 815,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "junguk.kim",
              "htmlLink" : "https://code.google.com/u/114777153887007477353/"
            },
            "content" : "The patch fixed the issue, thanks!  Please close this issue.\r\nAs Tim pointed out, \"out-of-order\" issue is not easy to fix ATM.",
            "published" : "2012-01-21T01:20:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "",
            "published" : "2012-02-07T21:26:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 225,
        "title" : "Troubles extracting some Zip archives in bsdtar 3.x",
        "summary" : "Troubles extracting some Zip archives in bsdtar 3.x",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "gginiu",
          "htmlLink" : "https://code.google.com/u/103808910748211041439/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2012-01-24T05:25:10.000Z",
        "published" : "2012-01-20T11:59:10.000Z",
        "closed" : "2012-01-24T05:25:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "gginiu",
              "htmlLink" : "https://code.google.com/u/103808910748211041439/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Find archive that does not work, for example http://download.narechk.net/dos32a-912-bin.zip \r\n2. bsdtar -xf dos32a-912-bin.zip\r\n3. It says &quot;binw/: Can't remove already-existing dir&quot;\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nArchive should be unpacked. It works with unzip command and worked with libarchive 2.x.\r\n\r\n<b>What version are you using?</b>\n\r\n3.0.3\r\n\r\n<b>On what operating system?</b>\n\r\nLinux x86_64 (ArchLinux 64-bit)\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\npre-packaged binary\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\ngcc 4.6.2\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI don't know what archives return this error - there are zip archives that work. Other example could be minecraft.jar, and probably lot more.\r\n",
            "published" : "2012-01-20T11:59:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It appears to be specific to the new seeking Zip reader, because it works just fine if you use:\r\n   cat dos32a-912-bin.zip | bsdtar -xf -\r\n\r\nI'll take a careful look at it over the weekend.\r\n",
            "published" : "2012-01-21T05:05:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Troubles extracting some Zip archives in bsdtar 3.x",
              "status" : "Accepted",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Ah.  I see.  The archive in question was created on Windows.  The new seeking Zip reader interprets all non-POSIX files as regular files.  In particular, the 'binw' entry here is getting interpreted as a plain file.  This causes the restore-to-disk code to complain when it tries to replace the 'binw' directory that has already been created with a plain file.\r\n\r\nI think this is an easy fix, but I'll need to do a little research to make sure I understand how non-POSIX Zip implementations record the file type.  (I suspect it's based on filename.)",
            "published" : "2012-01-22T22:47:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is fixed in libarchive/trunk r4190.\r\n\r\nIf this looks good to you, I'll merge it for inclusion in the next 3.0 release.\r\n",
            "published" : "2012-01-23T03:23:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "gginiu",
              "htmlLink" : "https://code.google.com/u/103808910748211041439/"
            },
            "content" : "That was fast! I just verified that it works now, thanks!",
            "published" : "2012-01-23T12:37:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "giniusan",
              "htmlLink" : "https://code.google.com/u/112798092122751744773/"
            },
            "content" : "I applied r4190 on top of 3.0.3 and all tests passed for me. I did not tested trunk though (and now that I did, I can confirm #231)",
            "published" : "2012-01-23T20:18:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Merged in r4199.\r\n\r\nThanks for the report!  Please let us know if you find any other issues.",
            "published" : "2012-01-24T05:25:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 226,
        "title" : "Infinite loop on an XPS (zip) file",
        "summary" : "Infinite loop on an XPS (zip) file",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ejsheldrake",
          "htmlLink" : "https://code.google.com/u/106596353514746533088/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2012-03-04T13:50:48.000Z",
        "published" : "2012-01-22T10:30:38.000Z",
        "closed" : "2012-01-24T06:53:31.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ejsheldrake",
              "htmlLink" : "https://code.google.com/u/106596353514746533088/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Use evince or one of the xpstopng type tools from libgxps to open DefendYourComputer_brochure_HiResNoBleed.xps from http://www.microsoft.com/download/en/details.aspx?id=11479\r\n<b>2.</b>\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe xpstopng program should output some png images of the xps document, but instead the xpstopng program hangs using 100% of a CPU.\r\n\r\n<b>What version are you using?</b>\nlibarchive 3.0.3\r\n\r\n<b>On what operating system?</b>\nFedora 16\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nI built from the 3.0.3 tarball after discovering libarchive 2.8.5 gave a &quot;bad zip file&quot; error for that file, and rebuilt various packages for 3.0.3.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.6.2-1.fc16\r\n\r\n<b>Please provide any additional information below.</b>\nXPS documents are zip files containing XML and other files. libgxps is used by evince (the gnome.org document viewer) to display xps files, and libgxps uses libarchive to read zip files.\r\n\r\n&quot;unzip -t&quot; and &quot;7z t&quot; report no problems with that file.\r\n\r\n&quot;zipinfo -v&quot; reports &quot;There are an extra 16 bytes preceding this file.&quot; for every file in that xps file.\r\n\r\nThe first part of the backtrace from killing the program looks like this:\r\n#0  archive_read_format_zip_read_data_skip (a=0x628030)\r\n    at libarchive/archive_read_support_format_zip.c:1096\r\n        p = \r\n    0x62c140 &quot;X\\210o\\225FN\\350\\311\\317\\030\\352x\\003\\236\\301&quot;, &lt;incomplete sequence \\332&gt;\r\n        buff = \r\n    0x62c140 &quot;X\\210o\\225FN\\350\\311\\317\\030\\352x\\003\\236\\301&quot;, &lt;incomplete sequence \\332&gt;\r\n        bytes_avail = 16\r\n        zip = 0x625c90\r\n#1  0x00007ffff6a5ab11 in archive_read_data_skip (_a=0x628030)\r\n    at libarchive/archive_read.c:687\r\n        a = 0x628030\r\n        r = 6404160\r\n        buff = 0x60aee0\r\n        size = 6380352\r\n        offset = 140737334465838\r\n#2  0x00007ffff7bc7787 in ?? () from /usr/lib64/libgxps.so.2\r\n\r\nI've attached a possible fix.",
            "published" : "2012-01-22T10:30:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2260000000",
              "fileName" : "libarchive-3.0.3-infinite-loop.patch",
              "fileSize" : 521,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Your patch looks promising.\r\n\r\nDo you have a (small) sample XPS file that we could add to the libarchive test suite to ensure that this doesn't break again in the future?",
            "published" : "2012-01-22T18:22:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ejsheldrake",
              "htmlLink" : "https://code.google.com/u/106596353514746533088/"
            },
            "content" : "I don't think all XPS documents have those 16 extras bytes preceding each file that zipinfo reports, since another one I downloaded from microsoft doesn't, but both files I've created just now using the XPS Document Writer printer in Windows XP do.\r\n\r\ntestpage.xps is from printing a printer test page - I could reproduce the bug with this one.\r\n\r\nnotepad-test-file.xps is smaller, just a line of text printed from notepad, but I couldn't reproduce the bug with this file.",
            "published" : "2012-01-22T21:55:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2260002000",
              "fileName" : "testpage.xps",
              "fileSize" : 70745,
              "mimetype" : "application/zip; charset=binary"
            }, {
              "attachmentId" : "2260002001",
              "fileName" : "notepad-test-file.xps",
              "fileSize" : 15920,
              "mimetype" : "application/zip; charset=binary"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ejsheldrake",
              "htmlLink" : "https://code.google.com/u/106596353514746533088/"
            },
            "content" : "Another test file that I can reproduce the bug with, this time without the Windows logo, which is on printer test pages.",
            "published" : "2012-01-22T22:33:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2260003000",
              "fileName" : "simple.xps",
              "fileSize" : 62333,
              "mimetype" : "application/zip; charset=binary"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The \"16 bytes garbage between entries\" is not garbage (I don't know why zipinfo reports it this way).  It's a 16-byte marker that is inserted just after each entry so that streaming Zip readers (such as libarchive when it doesn't have a seek callback) can detect the end of an entry.  These markers are only inserted when the writer doesn't know the length of an entry when it starts writing it.\r\n\r\nSo here's an accurate description of the problem:  The streaming Zip reader hangs when reading an uncompressed entry using length-at-end where the length-at-end marker falls exactly at the end of a block.\r\n\r\nI'm very impressed that you found this!  Based on the above, I now know how to build a test for this, but it might be a few more days before I can put all of the pieces together.",
            "published" : "2012-01-23T05:36:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I finally worked up a test that reliably reproduces the failure, it uses the small Notepad-generated file you sent us.\r\n\r\nThe test and the fix were committed to trunk as r4191 (first draft of the test) and r4201 (complete test and fix).\r\n\r\nThese changes were merged to libarchive/3.0 at r4203.\r\n",
            "published" : "2012-01-24T06:53:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vicedar",
              "htmlLink" : "https://code.google.com/u/114870438611057535948/"
            },
            "content" : "If anyone needs a link at github: https://github.com/libarchive/libarchive/commit/f7cd53ca1eda0d08fc3b3876ed474321b9f70ac7\r\nThanks for the fix :)",
            "published" : "2012-03-04T13:50:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 227,
        "title" : "MacOS extended attribute",
        "summary" : "MacOS extended attribute",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2012-01-22T23:02:55.000Z",
        "published" : "2012-01-22T23:02:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Split out from Issue 155:  A general test suite used to verify file backup and copy utilities on Mac OS has found that bsdtar 2.6.2 sometimes drops extended attributes.\r\n\r\nSee Issue 155 for more details.\r\n\r\nThe source code for the particular test is here:\r\n   https://github.com/neoneye/AnalyzeCopy/blob/master/Tests/70_extended_attributes.rb\r\n\r\nThe test fails part 'A'.\r\n\r\nThis needs to be re-tested with libarchive 3.0 or later, of course, since 2.6.2 is using the Apple patches to bsdtar for copyfile() support that have since been reimplemented and folded down into libarchive proper.",
            "published" : "2012-01-22T23:02:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 228,
        "title" : "MacOS: bsdtar 2.6.2 drops ACLs on broken symlinks",
        "summary" : "MacOS: bsdtar 2.6.2 drops ACLs on broken symlinks",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2012-01-22T23:06:09.000Z",
        "published" : "2012-01-22T23:06:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Split out from Issue 155:  A general test suite used to verify file backup and copy utilities on Mac OS has found that bsdtar 2.6.2 will drop ACL information when archiving broken symlinks.\r\n\r\nSee Issue 155 for more details.\r\n\r\nThe source code for the particular test is here:\r\n   https://github.com/neoneye/AnalyzeCopy/blob/master/Tests/82_symlink_acl.rb\r\n\r\nThe test fails part 'A'.  (The symlink itself is archived and restored properly, but the ACL is dropped.)\r\n\r\nThis needs to be re-tested with libarchive 3.0 or later, of course, since 2.6.2 is using the Apple patches to bsdtar for copyfile() support that have since been reimplemented and folded down into libarchive proper.\r\n",
            "published" : "2012-01-22T23:06:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 229,
        "title" : "MacOS: bsdtar doesn't save/restore hard linked directories",
        "summary" : "MacOS: bsdtar doesn't save/restore hard linked directories",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2012-01-22T23:23:12.000Z",
        "published" : "2012-01-22T23:10:36.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Split out from Issue 155:  A general test suite used to verify file backup and copy utilities on Mac OS has found that bsdtar 2.6.2 will drop hard linked directories\r\n\r\nSee Issue 155 for more details.\r\n\r\nThe source code for the particular test is here:\r\n   https://github.com/neoneye/AnalyzeCopy/blob/master/Tests/90_hardlink_dir.rb\r\n\r\nThe test fails part 'A'.  (The hard linked directory is restored as two separate directories.)\r\n\r\nThis needs to be re-tested with libarchive 3.0 or later, of course, since 2.6.2 is using the Apple patches to bsdtar for copyfile() support that have since been reimplemented and folded down into libarchive proper.\r\n\r\n\r\n",
            "published" : "2012-01-22T23:10:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2012-01-22T23:23:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "MacOS: bsdtar doesn't save/restore hard linked directories"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 230,
        "title" : "MacOS: bsdtar doesn't save/restore bkuptime",
        "summary" : "MacOS: bsdtar doesn't save/restore bkuptime",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Low", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2012-01-22T23:23:23.000Z",
        "published" : "2012-01-22T23:20:27.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Split out from Issue 155:  A general test suite used to verify file backup and copy utilities on Mac OS has found that bsdtar 2.6.2 does not save/restore bkuptime.\r\n\r\nSee Issue 155 for more details.\r\n\r\nThe source code for the particular test is here:\r\n   https://github.com/neoneye/AnalyzeCopy/blob/master/Tests/91_bkuptime.rb\r\n\r\nThe test fails part 'A'.  (The file is copied but the backup time is not preserved.)\r\n\r\nArchiving bkuptime should be routine:  It's easy to extend archive_entry to support a new time, and easy to add another attribute to the pax writer to save it.\r\n\r\nRestoring bkuptime should also be routine.\r\n\r\nThe hard part is figuring out when bkuptime should be restored.  I don't think backup time should be restored by default.  The restored file is, after all, a new file.  The policy in bsdtar has been to tie extra metadata to the -p option, though that might be inappropriate as well.\r\n\r\nI'm marking this as &quot;Low Priority&quot; since I expect it to only be used behind a special option, and therefore expect it to receive very little use.\r\n",
            "published" : "2012-01-22T23:20:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2012-01-22T23:23:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "MacOS: bsdtar doesn't save/restore bkuptime"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 231,
        "title" : "r4190 makes test_compat_zip failed.",
        "summary" : "r4190 makes test_compat_zip failed.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2012-01-24T05:18:33.000Z",
        "published" : "2012-01-23T10:06:38.000Z",
        "closed" : "2012-01-24T05:18:33.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "The log is:\r\n\r\ntest_compat_zip\r\n\r\n..\\..\\..\\libarchive\\libarchive\\test\\test_compat_zip.c(362): 1327314468 != archive_entry_mtime(ae)\r\n      1327314468=1327314468 (0x4f1d3624, 011707233044)\r\n      archive_entry_mtime(ae)=1327253268 (0x4f1c4714, 011707043424)\r\n..\\..\\..\\libarchive\\libarchive\\test\\test_compat_zip.c(367): 1327314476 != archive_entry_mtime(ae)\r\n      1327314476=1327314476 (0x4f1d362c, 011707233054)\r\n      archive_entry_mtime(ae)=1327253276 (0x4f1c471c, 011707043434)\r\n..\\..\\..\\libarchive\\libarchive\\test\\test_compat_zip.c(362): 1327314468 != archive_entry_mtime(ae)\r\n      1327314468=1327314468 (0x4f1d3624, 011707233044)\r\n      archive_entry_mtime(ae)=1327253268 (0x4f1c4714, 011707043424)\r\n..\\..\\..\\libarchive\\libarchive\\test\\test_compat_zip.c(367): 1327314476 != archive_entry_mtime(ae)\r\n      1327314476=1327314476 (0x4f1d362c, 011707233054)\r\n      archive_entry_mtime(ae)=1327253276 (0x4f1c471c, 011707043434)\r\n..\\..\\..\\libarchive\\libarchive\\test\\test_compat_zip.c:362: Summary: Failed 2 times\r\n..\\..\\..\\libarchive\\libarchive\\test\\test_compat_zip.c:367: Summary: Failed 2 times\r\n",
            "published" : "2012-01-23T10:06:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks.  It works in my time zone; I missed that it was timezone-dependent.\r\n\r\nFixed in r4198.\r\n",
            "published" : "2012-01-24T05:18:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 232,
        "title" : "Trunk build broken, r4195 and r4193 I believe",
        "summary" : "Trunk build broken, r4195 and r4193 I believe",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2012-01-24T06:57:33.000Z",
        "published" : "2012-01-23T19:38:59.000Z",
        "closed" : "2012-01-24T05:12:56.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Patch attached, I'm catching these with -Werror and I'm not sure if you are using that before checkin.",
            "published" : "2012-01-23T19:38:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2320000000",
              "fileName" : "fix-trunk-build.patch",
              "fileSize" : 902,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Looks like the first issue here has already been addressed.\r\n\r\nI just committed the second part.\r\n\r\nThanks!\r\n",
            "published" : "2012-01-24T05:12:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "I think the first issue is still broken.\r\n\r\nThe warning is:\r\nlibarchive/archive_acl.c: In function ‘archive_acl_text_w’:\r\nlibarchive/archive_acl.c:546:14: error: ‘r’ may be used uninitialized in this function [-Werror=uninitialized]\r\n\r\nAnd the case is quite clear- if you enter the while() loop on line 534 and short circuit before r is set on line 535, r is undefined. There are several ways to solve this but I picked the one with the least amount of changes necessary.",
            "published" : "2012-01-24T05:49:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Oh.  Yes, you're right.  I was looking at the previous while() loop, which did have a fix very similar to what you were proposing.\r\n\r\nFixed in r4202.  Thanks so much for pointing this out.  (Apparently your compiler is not the same as mine.)\r\n",
            "published" : "2012-01-24T06:44:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "For current reference, although we do tend to stay close to the bleeding edge of gcc:\r\n\r\n$ uname -a && gcc --version\r\nLinux galway 3.2.1-2-ARCH #1 SMP PREEMPT Mon Jan 23 12:40:01 UTC 2012 x86_64 Intel(R) Core(TM)2 Quad CPU Q9400 @ 2.66GHz GenuineIntel GNU/Linux\r\n\r\ngcc (GCC) 4.6.2 20111223 (prerelease)\r\nCopyright (C) 2011 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n",
            "published" : "2012-01-24T06:57:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 233,
        "title" : "Filenames in an ISO image get \";1\" appended",
        "summary" : "Filenames in an ISO image get \";1\" appended",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "nalimilan@club.fr",
          "htmlLink" : "https://code.google.com/u/108295546205388051394/"
        },
        "updated" : "2015-03-04T05:06:38.000Z",
        "published" : "2012-01-27T14:33:02.000Z",
        "closed" : "2015-03-04T05:06:38.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nalimilan@club.fr",
              "htmlLink" : "https://code.google.com/u/108295546205388051394/"
            },
            "content" : "I mouted an ISO9660 CD image and all filenames in it ended with &quot;;1&quot;, which made the install program to fail. The image can be downloaded from [1] (although it's probably illegal to install and use it if you don't have a SAS license).\r\n\r\nI suspect the problem is in libarchive since I tried two different programs that use it: GNOME's file-roller, and gvfs-archive. libarchive's version is 2.8.5 (Fedora 16).\r\n\r\n\r\n1: http://torrents.thepiratebay.org/4006488/SAS_v9.0.0_with_licence.4006488.TPB.torrent\r\n",
            "published" : "2012-01-27T14:33:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this bug has been fixed since libarchive 2.8.5.\r\n\r\nPlease test again if you have a chance and let us know.\r\n",
            "published" : "2015-03-04T05:06:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 234,
        "title" : "Fix typos in test directory",
        "summary" : "Fix typos in test directory",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2012-01-29T18:19:14.000Z",
        "published" : "2012-01-29T17:22:53.000Z",
        "closed" : "2012-01-29T18:19:14.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "Fix some typos in the test directory:\r\n\r\n'encorded', 'encdoed', 'sencod' and an extra space.",
            "published" : "2012-01-29T17:22:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2340000000",
              "fileName" : "libarchive.diff",
              "fileSize" : 2010,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Committed at r4214\r\n\r\nThanks!\r\n",
            "published" : "2012-01-29T18:19:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 235,
        "title" : "SVN trunk fails to build on OSX: ld: malformed version number: 13.900",
        "summary" : "SVN trunk fails to build on OSX: ld: malformed version number: 13.900",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2012-01-30T02:43:46.000Z",
        "published" : "2012-01-29T22:59:58.000Z",
        "closed" : "2012-01-30T02:43:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "Code from SVN trunk fails to build because of a restriction on the version numbers on OSX. It looks like the same problem as http://comments.gmane.org/gmane.comp.window-managers.enlightenment.devel/30780 : \r\n\r\n&quot;The format of number is X[.Y[.Z]] where X must be a positive non-zero number less than or equal to 65535, and .Y and .Z are optional and if present must be non-negative numbers less than or equal to 255.  If the\r\nversion number is not specified, it has a value of 0.  This option is also called -dylib_current_version for compatibility.\r\n\r\nSo on OS X v_mic can't be larger than 255. Should we make this default for\r\nall platforms, or just for darwin?&quot;",
            "published" : "2012-01-29T22:59:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The version here is intended to just be larger than any real 3.0 release, to indicate that the trunk is being prepared for 3.1.  So I've just changed it to 200 instead of 900.\r\n\r\nThanks for tracking that down!",
            "published" : "2012-01-30T02:43:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 236,
        "title" : "bsdtar often fails to create valid 7zip archives",
        "summary" : "bsdtar often fails to create valid 7zip archives",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2014-01-05T16:59:14.000Z",
        "published" : "2012-01-29T23:54:50.000Z",
        "closed" : "2012-01-30T06:18:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "On OSX using code from SVN trunk on 2012-01-29, bsdtar is often failing to create valid 7zip archives. For example:\r\n\r\nmkdir foo &amp;&amp; dd if=/dev/zero of=foo/foo bs=1k count=100\r\nbsdtar cf foo.7z --format 7zip foo\r\nbsdtar tf foo.7z\r\n\r\nThe error displayed is:\r\nbsdtar: Damaged 7-Zip archive\r\n\r\nI've verified this problem also exists on FreeBSD 9.0-STABLE.",
            "published" : "2012-01-29T23:54:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "This happens when creating 7zip archives without empty files.\r\nI just fixed this in trunk r4216.",
            "published" : "2012-01-30T06:18:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zohar.meridor",
              "htmlLink" : "https://code.google.com/u/106276608939877445719/"
            },
            "content" : "On libarchive 3.1.2 I get the message \"Damaged 7-Zip archive\" for valid 7z.\r\nFiles are attached.\r\nThanks",
            "published" : "2013-12-26T08:40:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zohar.meridor",
              "htmlLink" : "https://code.google.com/u/106276608939877445719/"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2360002000",
              "fileName" : "36e5b3da62c7f872e24605fab327efc050d265b2e000b2a2f30d0c2752b27c27.7z",
              "fileSize" : 839162,
              "mimetype" : "application/octet-stream",
              "isDeleted" : true
            }, {
              "attachmentId" : "2360002001",
              "fileName" : "4c83a03cc67640d1b7ae6879b414d46c44ca921146a4c20677695a64070d9b46.7z",
              "fileSize" : 2438554,
              "mimetype" : "application/octet-stream",
              "isDeleted" : true
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zohar.meridor",
              "htmlLink" : "https://code.google.com/u/106276608939877445719/"
            },
            "content" : "On libarchive 3.1.2 I get the message \"Damaged 7-Zip archive\" for valid 7z.\r\nThanks",
            "published" : "2014-01-05T16:59:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 237,
        "title" : "7zip handler generates (null) error message when invalid options given",
        "summary" : "7zip handler generates (null) error message when invalid options given",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2012-02-14T08:18:07.000Z",
        "published" : "2012-01-30T00:02:43.000Z",
        "closed" : "2012-02-14T08:18:07.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "When a 7zip archive is being created but invalid --options parameters are specified, instead of an error message bsdtar displays:\r\n\r\nbsdtar: (null)\r\n\r\ne.g.\r\n\r\nbsdtar cf foo.7z --format 7zip --options a foo",
            "published" : "2012-01-30T00:02:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "The attached patch fixes the issue.",
            "published" : "2012-01-30T09:16:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2370001000",
              "fileName" : "archive_7zip.diff",
              "fileSize" : 611,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "This is not only for 7zip writer.\r\n\r\nFollowing command line can cause the same issue.\r\n(ar format writer does not support any options.)\r\n%./bsdtar cf foo.ar --format ar --options a foo\r\nbsdtar: (null)\r\n",
            "published" : "2012-02-07T21:13:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for the report.\r\nI fixed this issue. I will close this.",
            "published" : "2012-02-14T08:18:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 238,
        "title" : "archiving fails on linux 2.6.18 using reiserfs",
        "summary" : "archiving fails on linux 2.6.18 using reiserfs",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "d@falconindy.com",
          "htmlLink" : "https://code.google.com/u/113526245087495060456/"
        },
        "updated" : "2012-02-07T21:23:44.000Z",
        "published" : "2012-02-04T16:35:25.000Z",
        "closed" : "2012-02-07T21:23:44.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "&gt; What steps will reproduce the problem?\r\nWith source files on reiserfs: bsdtar cf foo.tar &lt;directory-with-files&gt;\r\n\r\n\r\n&gt; What is the expected output? What do you see instead?\r\nI see a lot of errors: &quot;bsdtar: FIEMAP failed: Invalid argument&quot; for every file. The resulting archive has only directories in it.\r\n\r\n\r\n&gt; What version are you using?\r\n3.0.3, with patches backported to fix a recent issue with non-POSIX zips.\r\n\r\n\r\n&gt; On what operating system?\r\nArch Linux (32-bit) running on a 2.6.18 kernel in an OpenVZ container. This isn't my VPS, but the reporter of the issue was nice enough to give me an account on the VPS to \r\n\r\n\r\n&gt; How did you build?  (cmake, configure, or pre-packaged binary)\r\nBuilt with ./configure --prefix=/usr --without-xml2\r\n\r\n\r\n&gt; What compiler or development environment (please include version)?\r\ngcc 4.6.2\r\nbinutils 2.22\r\nglibc 2.15\r\n\r\n\r\n&gt; Please provide any additional information below.\r\nI've attached a patch that fixes the problem by merely returning from sparse_setup() with ARCHIVE_OK when the FIEMAP call fails for _any_ reason. In this particular case, ioctl() is returning EINVAL, which is not one of the &quot;whitelisted&quot; error codes. libarchive is smart enough to fall back on more conventional methods of reading the file and continues on.\r\n\r\nPrior to this patch, a large number of tests are failing (as expected). I've attached the failing output for those. With the patch applied, the test suite passes on both the affected machine and my unaffected machine (which has a working FIEMAP ioctl).",
            "published" : "2012-02-04T16:35:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2380000000",
              "fileName" : "ignore-fiemap-setup-errors.patch",
              "fileSize" : 875,
              "mimetype" : "text/x-diff; charset=us-ascii"
            }, {
              "attachmentId" : "2380000001",
              "fileName" : "failing-tests.tar.xz",
              "fileSize" : 54408,
              "mimetype" : "application/x-xz; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Gale.G.Ning",
              "htmlLink" : "https://code.google.com/u/102900605047621654300/"
            },
            "content" : "the same in 2.6.32 kernel in OpenVZ container.",
            "published" : "2012-02-06T02:33:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for the report.\r\nI committed a fix as your patch.",
            "published" : "2012-02-07T21:23:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 239,
        "title" : "bsdtar - error while setting EA whilst unpacking non writable file with -p option",
        "summary" : "bsdtar - error while setting EA whilst unpacking non writable file with -p option",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ukaszg",
          "htmlLink" : "https://code.google.com/u/105346639545289416094/"
        },
        "updated" : "2012-02-08T10:36:47.000Z",
        "published" : "2012-02-07T20:54:12.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ukaszg",
              "htmlLink" : "https://code.google.com/u/105346639545289416094/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. touch file \r\n2. setfattr -n user.foo -v bar file\r\n3. bsdtar -cpzf file.tar.gz ./file &amp;&amp; rm -f file\r\n4. bsdtar -xpf file.tar.gz\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nfile should be unpacked (it gets that far), and extended attributes should be set (they are not due the file being non-writable)\r\n\r\n<b>What version are you using?</b>\ntried both 2.8.5 and 3.0.3\r\n\r\n<b>On what operating system?</b>\nCRUX Linux 64bit version\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nusing official Pkgbuild (and changing version to latest), which would be ./configure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n&gt; automake --version\r\nautomake (GNU automake) 1.11.2\r\nCopyright (C) 2011 Free Software Foundation, Inc.\r\nLicense GPLv2+: GNU GPL version 2 or later &lt;http://gnu.org/licenses/gpl-2.0.html&gt;\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.\r\n\r\nWritten by Tom Tromey &lt;tromey@redhat.com&gt;\r\n       and Alexandre Duret-Lutz &lt;adl@gnu.org&gt;.\r\n&gt; make --version\r\nGNU Make 3.82\r\nBuilt for x86_64-unknown-linux-gnu\r\nCopyright (C) 2010  Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.\r\n&gt; gcc --version\r\ngcc (CRUX) 4.5.3\r\nCopyright (C) 2010 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n&gt; uname -a\r\nLinux curry 3.2.1 #2 SMP Fri Jan 20 20:39:23 CET 2012 x86_64 Intel(R) Core(TM) i3-2310M CPU @ 2.10GHz GenuineIntel GNU/Linux\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-02-07T20:54:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ukaszg",
              "htmlLink" : "https://code.google.com/u/105346639545289416094/"
            },
            "content" : "I made a mistake in reproduce steps.\r\nThere should be step:\r\n2,5 (two and a half). chmod a-w file ",
            "published" : "2012-02-08T10:36:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 240,
        "title" : "bsdtar archive creation permission errors are not very good",
        "summary" : "bsdtar archive creation permission errors are not very good",
        "stars" : 7,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2012-02-08T15:43:32.000Z",
        "published" : "2012-02-08T15:43:32.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "The following happens when I try to create an archive in a directory I don't have permission in:\r\n\r\n$ bsdtar cJf foobar.com.tar.xz foobar.com/\r\nbsdtar: lzma compression failed: lzma_code() call returned status 11\r\n\r\n$ bsdtar cjf foobar.com.tar.xz foobar.com/\r\nbsdtar: Failed to clean up compressor\r\n\r\n$ bsdtar czf foobar.com.tar.xz foobar.com/\r\nbsdtar: Failed to clean up compressor\r\n\r\n$ bsdtar --version\r\nbsdtar 3.0.3 - libarchive 3.0.3\r\n\r\nThese messages were less than helpful until I figured out the real problem. By comparison, GNU tar in the same situation:\r\n\r\n$ tar czf foobar.com.tar.gz foobar.com/\r\ntar (child): foobar.com.tar.gz: Cannot open: Permission denied\r\ntar (child): Error is not recoverable: exiting now\r\n",
            "published" : "2012-02-08T15:43:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 241,
        "title" : "CAB decompression not 64bit compatible",
        "summary" : "CAB decompression not 64bit compatible",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "thierryb@filewave.com",
          "htmlLink" : "https://code.google.com/u/106556843621018335062/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2012-03-17T07:35:26.000Z",
        "published" : "2012-02-13T23:12:46.000Z",
        "closed" : "2012-02-15T18:26:35.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. download http://download.windowsupdate.com/microsoftupdate/v6/wsusscan/wsusscn2.cab\r\n2. extract that archive\r\n3. extract package.cab (even with cabextract) =&gt;failure\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nwhen libarchive is built for 64bit (I'm on OSX) the files decompressed from CABs are corrupt\r\n\r\n<b>What version are you using?</b>\n3.0.3\r\n\r\n<b>On what operating system?</b>\nOSX 10.6.8\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nI tried both configure and cmake. I'm running the whole thing under xcode\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nxcode 4.1 with llvm-gcc 4.2\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n32 bit compile is working fine.",
            "published" : "2012-02-13T23:12:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for pointing out the issue.\r\n\r\nPlease try the attached patch and let me know the result.",
            "published" : "2012-02-14T02:26:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "ggcueroad"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2410001000",
              "fileName" : "issu241.patch",
              "fileSize" : 776,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I found our CAB reader still made corrupted data after issue241.patch applied.\r\npackage23.cab and package24.cab were corrupted on both 32bit and 64bit platform.\r\nThat was an another bug. :-<\r\nI made a new patch, issue241-2.patch. Please try the new one.",
            "published" : "2012-02-14T06:42:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2410002000",
              "fileName" : "issue241-2.patch",
              "fileSize" : 1217,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "That 2nd patch seems to work beautifully. Thanks.",
            "published" : "2012-02-14T10:55:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "Hi again,\r\nNow I tried it on windows and it fails to extract any file from a cab, with error \"LZX decompression failed (-25)\".\r\nIs there some configuration I'm missing? I'm building with lzma support, cab support is by default. I don;t have bz2 or zlib, nor libxml2, nor expat.",
            "published" : "2012-02-15T11:00:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "I'm gong to declare the bug for libarchive.",
            "published" : "2012-02-15T12:40:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "I've declared the bug as a separate issue (#243).",
            "published" : "2012-02-15T14:12:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for creation issue 243. I appreciate it.\r\nI will close this issue.",
            "published" : "2012-02-15T18:26:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Issue 251 has been merged into this issue.",
            "published" : "2012-03-17T07:35:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 242,
        "title" : "libarchive-3.0.3 fails to build with --without-zlib",
        "summary" : "libarchive-3.0.3 fails to build with --without-zlib",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ssuominen.private",
          "htmlLink" : "https://code.google.com/u/107258097015623059114/"
        },
        "updated" : "2012-03-05T09:10:10.000Z",
        "published" : "2012-02-15T01:29:17.000Z",
        "closed" : "2012-03-05T09:10:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ssuominen.private",
              "htmlLink" : "https://code.google.com/u/107258097015623059114/"
            },
            "content" : "libarchive-3.0.3\r\nzlib-1.2.6\r\n\r\n$ ./configure --without-zlib\r\n\r\n[ ... snip ... ]\r\n\r\n/bin/sh ./libtool --tag=CC   --mode=link gcc -Wall -g -O2 -static  -o bsdtar tar/bsdtar-bsdtar.o tar/bsdtar-cmdline.o tar/bsdtar-getdate.o tar/bsdtar-read.o tar/bsdtar-subst.o tar/bsdtar-tree.o tar/bsdtar-util.o tar/bsdtar-write.o  libarchive.la libarchive_fe.la  -lacl -lattr -llzma -lbz2  -lxml2 -lz -lm  -lnettle\r\nlibtool: link: gcc -Wall -g -O2 -o bsdtar tar/bsdtar-bsdtar.o tar/bsdtar-cmdline.o tar/bsdtar-getdate.o tar/bsdtar-read.o tar/bsdtar-subst.o tar/bsdtar-tree.o tar/bsdtar-util.o tar/bsdtar-write.o  ./.libs/libarchive.a ./.libs/libarchive_fe.a -lacl -lattr -llzma -lbz2 -lxml2 -lz -lm -lnettle\r\n./.libs/libarchive.a(archive_write_set_format_7zip.o): In function `compression_init_encoder_deflate':\r\n/tmp/libarchive-3.0.3/libarchive/archive_write_set_format_7zip.c:1759: undefined reference to `compression_unsupported_encoder'\r\ncollect2: ld returned 1 exit status\r\nmake[1]: *** [bsdtar] Error 1\r\n",
            "published" : "2012-02-15T01:29:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2420000000",
              "fileName" : "config.log",
              "fileSize" : 1161577,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ssuominen.private",
              "htmlLink" : "https://code.google.com/u/107258097015623059114/"
            },
            "content" : "config.log is from what ./configure generated and this one is just stdout snatched to textfile",
            "published" : "2012-02-15T01:31:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2420001000",
              "fileName" : "build.log",
              "fileSize" : 116339,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ssuominen.private",
              "htmlLink" : "https://code.google.com/u/107258097015623059114/"
            },
            "content" : "also reported here, http://bugs.gentoo.org/show_bug.cgi?id=403733",
            "published" : "2012-02-15T01:31:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for the report.\r\nI made a patch for this. Please try it.",
            "published" : "2012-02-15T19:26:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2420003000",
              "fileName" : "nozlib.patch",
              "fileSize" : 658,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I found that there is test failure without zlib.\r\nPlease apply an additional patch for make check-TEST.",
            "published" : "2012-02-15T20:46:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2420004000",
              "fileName" : "nozlib-test.patch",
              "fileSize" : 885,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ssuominen.private",
              "htmlLink" : "https://code.google.com/u/107258097015623059114/"
            },
            "content" : "works for me, thanks, please get this into version control asap",
            "published" : "2012-03-05T09:00:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I already committed the patches.\r\nI'll close this issue.",
            "published" : "2012-03-05T09:10:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 243,
        "title" : "CAB decompression doesn't work when libarchive built with MSVC2010 (express)",
        "summary" : "CAB decompression doesn't work when libarchive built with MSVC2010 (express)",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "thierryb@filewave.com",
          "htmlLink" : "https://code.google.com/u/106556843621018335062/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2012-02-25T02:44:58.000Z",
        "published" : "2012-02-15T12:43:21.000Z",
        "closed" : "2012-02-25T02:44:58.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 18,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. download http://download.windowsupdate.com/microsoftupdate/v6/wsusscan/wsusscn2.cab\r\n2. extract files from that archive =&gt; Error LZX Decompression failed (-25)\r\n\r\n\r\n<b>What version are you using?</b>\nlibarchive 3.0.3\r\n\r\n<b>On what operating system?</b>\nWindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake on MSVC2010 express. I'm not using zlib, nor bz2, really just libarchive as a static lib.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nMSVC 2010 express\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nInterestingly our build box is using MSVC2008 pro and the packages from there have a correct behaviour.",
            "published" : "2012-02-15T12:43:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "BTW, the error occurs when reading data from the archive. Getting the header and opening the cab file works.",
            "published" : "2012-02-15T12:44:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "I just checked and indeed if I compile libarchive with MSVC2008 and run archive_test test_read_format_cab, I get no failure\r\nWhen I compile with MSVC2010, I get:\r\n\r\nExercising: libarchive 3.0.3\r\n 66: test_read_format_cab                              FAIL\r\n\r\nTotals:\r\n  Tests run:                1\r\n  Tests failed:             1\r\n  Assertions checked:     612\r\n  Assertions failed:       16\r\n  Skips reported:           1\r\n\r\nFailing tests:\r\n  66: test_read_format_cab (16 failures)\r\n\r\nDetails for failing tests: C:\\Users\\thierry\\AppData\\Local\\Temp/libarchive_test.e\r\nxe.2012-02-15T14.26.31-000",
            "published" : "2012-02-15T13:27:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "",
            "published" : "2012-02-15T18:27:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I compiled libarchvie with MSVC2010 on Windows XP 32bit.\r\nIt works fine as well as compiled with MSVC2008.\r\n\r\nIs your Windows 7 a 64Bit platform ?\r\nCan I see your config.h cmake made, both for MSVC2010 and for MSVC2008 ?",
            "published" : "2012-02-15T18:49:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "Hi,\r\n\r\nMy windows is indeed 64 bit but I'm building 32 bit software.\r\nI'm using MSVC2010 express version 10.0.40219.1 SP1.\r\nHere is attached the config.h you asked for. I had tried to use the MSVC2008 config to build with MSVC2010 but it was still bogus. If it can help I just got a report that on a OSX 10.7 Lion machine, one of our developers is also experiencing the issue (LZX decompression failed (-25)). I haven't had time to test it myself yet.\r\n\r\nTo be totally clear, to run the test, I go to libarchive\\test and run ..\\..\\bin\\libarchive_test 66\r\n\r\nPrior to that I simply run cmake . && nmake.\r\n\r\nThanks for your quick replies. It is really appreciated.",
            "published" : "2012-02-16T00:08:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2430005000",
              "fileName" : "config.h",
              "fileSize" : 31986,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "2430005001",
              "fileName" : "config.h.2008",
              "fileSize" : 31986,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "aha, I've just tried trunk and it works wayyyyyy better. Is it safe to use trunk?\r\nWe're not releasing before a long time so I guess my question is: is 3.0.4 (or whatever is the next release) going to be based off of trunk?",
            "published" : "2012-02-16T00:19:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "I just tried trunk and thought that would fix it because it seems it is able to extract at least some files and the unit tests are not showing errors but... the git repo's last change is dated from Feb 2nd, so older than what was fixed in issue 241...",
            "published" : "2012-02-16T00:34:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "We've migrated our source repository to GitHub.\r\nYou can get the latest source code from https://github.com/libarchive/libarchive\r\n",
            "published" : "2012-02-16T00:53:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Attached file shows the difference between my config.h and you config.h for MSVC2010.\r\nI wonder why your config.h does not define HAVE_STDINT_H macro and related definitions,\r\nHAVE_INT*_T and HAVE_UINT*_T.\r\nIt seems the configuration for MSVC2010 didn't correctly be handled.\r\nI doubt you might run cmake for MSVC2010 though CMakeCache.txt for MSVC2008 remained\r\nsince config.h and config.h.2008 you updated were the same. it looks strange to me.\r\nIf so, I recommend making a build directory for cmake.\r\n  % make build-msvc2010\r\n  % cd build-msvc2010\r\n  % cmake -G <generator-name> /path/to/libarchive/source\r\nIt's clear and safety when you try different compilers against one source tree.\r\n",
            "published" : "2012-02-16T01:37:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2430009000",
              "fileName" : "config.h.diff",
              "fileSize" : 1543,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "I have run cmake with MSVC 2010 on a clean source tree. So that is not the problem.\r\nMaybe it is because. I somehow messed up the upload. Here is the correct MSVC 2010 config.h. I can't use yours because I don't have bz2 and all the others.\r\n\r\nI've seen that the source is available on github. I must have been pulling from a different repo then.\r\n\r\nThanks a lot. I'll try latest trunk and see if it is better.",
            "published" : "2012-02-16T07:09:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2430010000",
              "fileName" : "config.h",
              "fileSize" : 0,
              "mimetype" : "application/x-empty; charset=binary"
            } ]
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "other attempt for getting config.h...",
            "published" : "2012-02-16T07:13:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2430011000",
              "fileName" : "config.h",
              "fileSize" : 31958,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "I just tried trunk and it works.... After some more check it seems the problem occurs when building in release.. This might very well be a miscompilation somewhere.",
            "published" : "2012-02-16T08:35:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "I think i'm approaching the problem. I tried a trunk and it works. And the actual thing that makes it work is that I'm building it in debug. Release fails...",
            "published" : "2012-02-16T08:45:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "It looks like a compiler issue in release. I was able to to up to -O1 (O2 and Ox fail).\r\nAre you able to reproduce that on your side too?\r\n\r\n",
            "published" : "2012-02-16T15:34:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you very much for your great investigation.\r\nI found out where the code was unexpectedly changed by MSVC optimization.\r\n\r\nPlease try an attached patch.",
            "published" : "2012-02-17T02:39:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "ggcueroad"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2430015000",
              "fileName" : "cabmsvc2010.patch",
              "fileSize" : 909,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "Thanks, that worked beautifully",
            "published" : "2012-02-17T18:30:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I'll close this issue.",
            "published" : "2012-02-25T02:44:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 244,
        "title" : "ssize_t not found when building on cygwin with cl.exe.",
        "summary" : "ssize_t not found when building on cygwin with cl.exe.",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "eric.larour",
          "htmlLink" : "https://code.google.com/u/112477867539756562728/"
        },
        "updated" : "2014-08-27T01:30:04.000Z",
        "published" : "2012-02-21T16:19:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "eric.larour",
              "htmlLink" : "https://code.google.com/u/112477867539756562728/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. win7, cygwin, using cl.exe compiler from x64 sdk. \r\n2. configure and then make\r\n\r\n<b>What is the expected output? What do you see instead?</b>\ncode configures well, but does not compile. Sounds like ssize \r\ntypedef is not being found, leading to compile error. Also, many \r\nmacros are not defined, which is probably why ssize is not defined. See output log. \r\n\r\n<b>What version are you using?</b>\n3.0.03\r\n\r\n\r\n<b>On what operating system?</b>\nwin7, 64 build.\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ncl.exe\r\ncl.exe --version\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 16.00.30319.01 for x64\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\ncl : Command line warning D9002 : ignoring unknown option '--version'\r\ncl : Command line error D8003 : missing source filename\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n",
            "published" : "2012-02-21T16:19:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2440000000",
              "fileName" : "config.h",
              "fileSize" : 29946,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "2440000001",
              "fileName" : "config.log",
              "fileSize" : 2224655,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "2440000002",
              "fileName" : "outlog",
              "fileSize" : 106590,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Nothing here looks particularly alarming except for the lack of \"ssize_t\" and \"pid_t\".\r\n\r\nWhere are those declared on your system?\r\n\r\nIf they are not declared anywhere, try adding\r\n\r\n#define ssize_t int\r\n#define pid_t int\r\n\r\nto the bottom of your config.h and then see how far you get.  (That will help identify if those are the only missing definitions.)  If this fixes it and those types are in fact not defined anywhere in your system, we may have to add additional configure tests to automate this.\r\n\r\nBetter:  If they are defined somewhere, let's make sure we're looking for that header and add the appropriate #include to archive_platform.h just before archive_windows.h is included (with appropriate guards, of course).\r\n",
            "published" : "2012-02-22T06:04:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "ssize_t not found when building on cygwin with cl.exe.",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vincent.torri",
              "htmlLink" : "https://code.google.com/u/112323602167314360722/"
            },
            "content" : "SSIZE_T exists see http://msdn.microsoft.com/en-us/library/windows/desktop/aa383751%28v=vs.85%29.aspx\r\n\r\ndefining ssize_t to an int if not good as there can be a problem with 64 bits architecture.\r\n\r\nthe GNU C library defined pid_t as an int so it should be good with an int.",
            "published" : "2014-08-26T06:28:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Try adding the following to archive_windows.h and let us know what happens:\r\n\r\n  #include <BaseTsd.h>\r\n\r\n  #define ssize_t SSIZE_T\r\n",
            "published" : "2014-08-27T01:30:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 245,
        "title" : "Test failure, file corruption on ARMv5 platforms",
        "summary" : "Test failure, file corruption on ARMv5 platforms",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "leming",
          "htmlLink" : "https://code.google.com/u/109851770875930016196/"
        },
        "updated" : "2012-03-14T05:18:40.000Z",
        "published" : "2012-03-02T23:57:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 9,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "leming",
              "htmlLink" : "https://code.google.com/u/109851770875930016196/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Using bsdtar to create an archive in a chroot, sudo -u nobody, on an ARMv5 platform.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpected is an archive with files intact. What is seen is consistent (though seemingly arbitrary) zeroing in the first 1024 bytes of some files within the resultant archive.\r\n\r\n<b>What version are you using?</b>\n3.0.3\r\n\r\n<b>On what operating system?</b>\nArch Linux ARM\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n./configure --prefix=/usr --without-xml2\r\nmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nGCC 4.6.2 (snapshot 4.6-20120120), GLIBC 2.15 (snapshot 20111227)\r\n\r\nCFLAGS=&quot;-march=armv5te -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2&quot;\r\n\r\n<b>Please provide any additional information below.</b>\nOne test failure during 'make check':\r\ntest_sparse_basic\r\n\r\nlibarchive/test/test_sparse_basic.c:285: blocks != archive_entry_sparse_count(ae)\r\n      blocks=5 (0x5, 05)\r\n      archive_entry_sparse_count(ae)=0 (0x0, 00)\r\nlibarchive/test/test_sparse_basic.c:300: blocks != data_blocks\r\n      blocks=5 (0x5, 05)\r\n      data_blocks=0 (0x0, 00)\r\nlibarchive/test/test_sparse_basic.c:285: blocks != archive_entry_sparse_count(ae)\r\n      blocks=2 (0x2, 02)\r\n      archive_entry_sparse_count(ae)=0 (0x0, 00)\r\nlibarchive/test/test_sparse_basic.c:300: blocks != data_blocks\r\n      blocks=2 (0x2, 02)\r\n      data_blocks=0 (0x0, 00)\r\nlibarchive/test/test_sparse_basic.c:285: blocks != archive_entry_sparse_count(ae)\r\n      blocks=20 (0x14, 024)\r\n      archive_entry_sparse_count(ae)=0 (0x0, 00)\r\nlibarchive/test/test_sparse_basic.c:300: blocks != data_blocks\r\n      blocks=20 (0x14, 024)\r\n      data_blocks=0 (0x0, 00)\r\nlibarchive/test/test_sparse_basic.c:335: blocks != archive_entry_sparse_count(ae)\r\n      blocks=5 (0x5, 05)\r\n      archive_entry_sparse_count(ae)=0 (0x0, 00)\r\nlibarchive/test/test_sparse_basic.c:335: blocks != archive_entry_sparse_count(ae)\r\n      blocks=5 (0x5, 05)\r\n      archive_entry_sparse_count(ae)=0 (0x0, 00)\r\nlibarchive/test/test_sparse_basic.c:285: Summary: Failed 3 times\r\nlibarchive/test/test_sparse_basic.c:300: Summary: Failed 3 times\r\nlibarchive/test/test_sparse_basic.c:335: Summary: Failed 2 times",
            "published" : "2012-03-02T23:57:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "It seems the filesystem `make check` was running on does not support FIEMAP and\r\nthe test_sparse_basic should be skipped\r\n\r\nPlease try attached patch.",
            "published" : "2012-03-11T15:14:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2450001000",
              "fileName" : "test_sparse.diff",
              "fileSize" : 553,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "leming",
              "htmlLink" : "https://code.google.com/u/109851770875930016196/"
            },
            "content" : "Received the same exact failure and log for test_sparse_basic as above with the patch.\r\n\r\nThe error appears to be more processor related than anything else, at least to me. Some more information that is hopefully useful: the platform that is experiencing the failure is a Marvell Kirkwood 88F6281 SoC (ARMv5tel).  Running the same set of circumstances that causes a failure on a Pandaboard (TI OMAP 4430 ARMv7l) running the v5 filesystem we have shows no test failure, no file corruption. It's also not experienced on PLX NAS7280 SoC (ARMv6l) platforms that use the same v5 system.\r\n\r\nIf it would help to attach any of the resultant archives with the corruption, I can do that.",
            "published" : "2012-03-11T16:54:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Without access to the system, tracking this down will be tricky, but if you can give us some more details, maybe we can get there.\r\n\r\n  * Are all three of these ARM systems running the same Linux kernel?  The sparse warnings have been reported elsewhere on older kernels.\r\n\r\n  * Are all three ARM systems using the same filesystem?  (If the bug is related to sparse files, then it may vary with the specific filesystem, as different Linux filesystems report sparse file information differently.)\r\n\r\n  * What exact command line are you using to create the archive?\r\n\r\n  * If you can generate a small file archive that demonstrates the problem and upload it to this bug, that might also help.\r\n\r\n  * You mention \"corruption\"; does that appear when you try to extract the archive?  What program are you using to extract it?",
            "published" : "2012-03-11T19:08:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "leming",
              "htmlLink" : "https://code.google.com/u/109851770875930016196/"
            },
            "content" : "The three different systems are running three different kernels respective to their architecture, though all of them at least 3.1.\r\n\r\nAll three were tested using the same base filesystem and packages required to build libarchive.\r\n\r\nThe command is 'bsdtar -cf - <files> | xz -c -z -'  (FWIW, switching out bsdtar with tar here negates any corruption, and is the current workaround)\r\n\r\nThe corruption that happens is during the creation of the archive, not during extraction.  The files that end up with problems are all fine prior to packaging.  Extraction is done also with bsdtar by the system, with the same results using tar for extraction.\r\n\r\nAttached is an archive built using bsdtar, the file to note within the archive is \"usr/share/file/magic.mgc\" which shows the zeroing at the beginning:\r\n0000000    0000    0000    0000    0000    0000    0000    0000    0000\r\n*\r\n00a2a30    0000    0000    0000    0000    6143    636c    0000    0000\r\n\r\ncompared to the good file:\r\n0000000    041c    f11e    0008    0000    0000    0000    0000    0000\r\n0000010    0000    0000    0000    0000    0000    0000    0000    0000\r\n*\r\n00000e0    0000    0000    0000    0000    0000    0020    1f3d    0005",
            "published" : "2012-03-13T00:08:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2450004000",
              "fileName" : "file-5.11-1-arm.pkg.tar.xz",
              "fileSize" : 164124,
              "mimetype" : "application/x-xz; charset=binary"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Yeah, that's what I suspected.  For some reason, bsdtar is storing this particular file as a sparse file.  It asked the kernel (using FIEMAP) and believes that the first half of the file (approximately) is empty.\r\n\r\nCan you try again with the most recent code from github?  We've fixed a couple of issues related to FIEMAP support recently that may be related to this.  Though that doesn't really explain why you would be seeing this only on ARMv5.  That's very peculiar.\r\n\r\nFor what it's worth, here's the relevant parts of that archive:\r\n\r\nThe extended tar attributes that come shortly before the file body.  Note the GNU.sparse attributes that specify this is being stored as a sparse file:\r\n\r\n\r\n00040a00  32 30 20 63 74 69 6d 65  3d 31 33 33 31 35 39 37  |20 ctime=1331597|\r\n00040a10  30 37 39 0a 32 30 20 61  74 69 6d 65 3d 31 33 33  |079.20 atime=133|\r\n00040a20  31 35 39 37 30 38 30 0a  32 32 20 47 4e 55 2e 73  |1597080.22 GNU.s|\r\n00040a30  70 61 72 73 65 2e 6d 61  6a 6f 72 3d 31 0a 32 32  |parse.major=1.22|\r\n00040a40  20 47 4e 55 2e 73 70 61  72 73 65 2e 6d 69 6e 6f  | GNU.sparse.mino|\r\n00040a50  72 3d 30 0a 34 34 20 47  4e 55 2e 73 70 61 72 73  |r=0.44 GNU.spars|\r\n00040a60  65 2e 6e 61 6d 65 3d 75  73 72 2f 73 68 61 72 65  |e.name=usr/share|\r\n00040a70  2f 66 69 6c 65 2f 6d 61  67 69 63 2e 6d 67 63 0a  |/file/magic.mgc.|\r\n00040a80  33 31 20 47 4e 55 2e 73  70 61 72 73 65 2e 72 65  |31 GNU.sparse.re|\r\n00040a90  61 6c 73 69 7a 65 3d 32  32 36 35 37 31 32 0a 00  |alsize=2265712..|\r\n00040aa0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n\r\nAnd the file itself is stored with this header, which indicates that the archive is storing only a single block of 1599559 bytes that start at offset 666153.\r\n\r\n\r\n00040e00  31 0a 36 36 36 31 35 33  0a 31 35 39 39 35 35 39  |1.666153.1599559|\r\n00040e10  0a 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n00040e20  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n*\r\n\r\nThis is clearly screwy; 666153 is not at all a round number.  Holes in large files like this should always comprise an exact number of filesystem blocks.\r\n",
            "published" : "2012-03-13T06:20:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "leming",
              "htmlLink" : "https://code.google.com/u/109851770875930016196/"
            },
            "content" : "Using a git pull as of about an hour ago, the file corruption seems to have disappeared.  The test_sparse_basic test still fails with the same as above, however.",
            "published" : "2012-03-14T04:42:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The test failure is probably just a test issue.  Do you know whether that kernel/filesystem supports FIEMAP?\r\n\r\nThe most likely explanation of both issues:  FIEMAP isn't supported on that system.  The tests are reporting failures on tests that simply aren't relevant and should be skipped.  The 3.0.3 version of libarchive is trying to invoke FIEMAP, failing, and then trying to parse a garbage response.",
            "published" : "2012-03-14T04:56:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "leming",
              "htmlLink" : "https://code.google.com/u/109851770875930016196/"
            },
            "content" : "I'll look more into FIEMAP support and see what I can come up with.  Since everything works in git I'd say this is a non-issue at the point.  Thanks for your time in helping to troubleshoot.",
            "published" : "2012-03-14T05:18:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 246,
        "title" : "Could you please consider forcing the build of release from the CMakeLists?",
        "summary" : "Could you please consider forcing the build of release from the CMakeLists?",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "thierryb@filewave.com",
          "htmlLink" : "https://code.google.com/u/106556843621018335062/"
        },
        "updated" : "2012-03-12T08:00:44.000Z",
        "published" : "2012-03-05T10:58:11.000Z",
        "closed" : "2012-03-11T15:18:29.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "The thing is that on windows it is preferable to build both debug and release. It is currently impossible without patching the cmakelists.txt to remove the line that sets the current build as release.\r\nAFAIK cmake anyway defaults to release, so could you guys remove that line?\r\n",
            "published" : "2012-03-05T10:58:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Instead of removing the line, I suggest the following patch.\r\n\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -7,7 +7,9 @@ SET(CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/build/cmake\")\r\n if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY)\r\n   set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${libarchive_BINARY_DIR}/bin)\r\n endif()\r\n-SET(CMAKE_BUILD_TYPE \"Release\")\r\n+IF(NOT CMAKE_BUILD_TYPE)\r\n+  SET(CMAKE_BUILD_TYPE \"Release\")\r\n+ENDIF(NOT CMAKE_BUILD_TYPE)\r\n\r\n # On MacOS, prefer MacPorts libraries to system libraries.\r\n # I haven't come up with a compelling argument for this to be conditional.\r\n",
            "published" : "2012-03-06T04:06:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "That sounds good to me: not overriding my settings on the command line.\r\nIf you allow that in it means I will be able to use libarchive 3.0.4 finally without patching it.\r\n",
            "published" : "2012-03-06T07:58:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I committed a fix about this issue and I'll close this.",
            "published" : "2012-03-11T15:18:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "Thanks a lot.",
            "published" : "2012-03-12T08:00:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 247,
        "title" : "Unicode filenames inside RAR not working",
        "summary" : "Unicode filenames inside RAR not working",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "simon.bailey@prismit.com.au",
          "htmlLink" : "https://code.google.com/u/101982852811856813968/"
        },
        "updated" : "2012-03-12T01:50:13.000Z",
        "published" : "2012-03-06T03:13:12.000Z",
        "closed" : "2012-03-12T01:50:13.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 25,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nAttached RAR file contains one file called &quot;テスト３.xlsx&quot;.\r\nRead filenames in attached file with archive_read_next_header and archive_entry_pathname_w.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpected filename == &quot;テスト３.xlsx&quot;, but get &quot;テスト３&quot;.\r\n\r\n<b>What version are you using?</b>\n3.0.3\r\n\r\n<b>On what operating system?</b>\nWin7-64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nCmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVS2010\r\n\r\n<b>Please provide any additional information below.</b>\n64-bit build.",
            "published" : "2012-03-06T03:13:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2470000000",
              "fileName" : "unicode-subfile.rar",
              "fileSize" : 12385,
              "mimetype" : "application/x-rar; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for you report.\r\nPlease try attached patch and let me know the result.\r\n",
            "published" : "2012-03-06T10:20:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2470001000",
              "fileName" : "rar_unicode.patch",
              "fileSize" : 1446,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Works perfectly.  Thanks.",
            "published" : "2012-03-06T22:14:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Previous patch fixed the sample case you uploaded but I found there were unicode\r\nfilenames that bsdtar/libarchive did not correctly parse like this filename\r\nabcdefghijklmnopqrsテスト.txt.\r\nPlease use new attached patch instead of old one.",
            "published" : "2012-03-07T04:27:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2470003000",
              "fileName" : "rar_unicode2.patch",
              "fileSize" : 2545,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "I will try it.  Does this also work on platforms where sizeof wchar_t == 4?",
            "published" : "2012-03-07T04:38:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Not working on Ubuntu, just for this file.  Perhaps because wchar_t == 4 on that platform.",
            "published" : "2012-03-07T06:12:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "What error message did you see ? It works on my Ubuntu and FreeBSD machine.\r\n\r\nWe never assume that unicode filenames in RAR archives are wchar_t even on Windows\r\nplatform.\r\n",
            "published" : "2012-03-07T07:35:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "I've run some tests, and it doesn't seem to be working on Linux for me.  These are my results...\r\n\r\nResults for Patches 1 and 2\r\nWin64: Pass\r\nUbuntu: Error 84 - \"Pathname cannot be converted from UTF-16BE to current locale.\"\r\nCentos: Error 84 (only tested patch 2)\r\n\r\nThe error only occurs on the Unicode filename after the call to archive_read_next_header.  Otherwise, it's all working.\r\n\r\nUbuntu system details:\r\nOS=2.6.35-30-generic #56-Ubuntu x86_64\r\nLanguage option=English-US\r\ngcc=4.4.5 (Ubuntu/Linaro 4.4.4-14ubuntu5)\r\n\r\n",
            "published" : "2012-03-08T03:19:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "echo $LANG ?\r\nDoes your test program call setlocale(LC_ALL, \"\") ?\r\nlibarchive uses the result of nl_langinfo(CODESET) for iconv.\r\nIf \"./libarchive_test test_read_format_rar\" or \"make check-TESTS\" pass,\r\nyour test program surely does not call setlocale() or LANG=C.",
            "published" : "2012-03-08T03:39:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "$LANG == en_US.UTF-8\r\n\r\nThe unit tests do pass.  I've now added setlocale(LC_ALL, \"\") to my test program and this cures the error message.  I didn't realise I had to do that.\r\n\r\nThe only problem now is that when I assign\r\n\r\nstd::wstring str = archive_entry_pathname_w(entry);\r\n\r\nthe endianess of the wchars are wrong, so I get the wrong symbols out.  The bytes are all there - just in the wrong order.\r\n",
            "published" : "2012-03-08T05:05:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Also - is there any way to get at the raw filename to avoid the conversion to the current locale, and hence avoid the need to call setlocale?  \r\n\r\nMy project is also a library and I don't want to change the locale of the calling program.",
            "published" : "2012-03-08T05:25:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "There is not currently a way to get the \"raw\" filename.  That could be added, though it's a pretty complex interface (requiring that you handle a pointer to a block of memory with a length and an associated encoding specification).  It's probably simpler to require your clients to call setlocale().  (If no one ever calls set locale, you're basically limited to ASCII, which is the root source of the error you saw.)\r\n\r\nWrong endianness is worrisome; that should not happen.\r\n\r\nCan you dump the output of archive_entry_pathname(entry) (which should be valid UTF-8) and archive_entry_pathname_w(entry) (which should be Unicode wchar_t)?",
            "published" : "2012-03-08T06:04:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Hoping there's no bugs in my dumping code...\r\n\r\nstring テスト３.xlsx\r\ne3,83,86,e3,82,b9,e3,83,88,ef,bc,93,2e,78,6c,73,78,\r\n\r\nwstring (funny symbols)\r\nc6,30,0,0,b9,30,0,0,c8,30,0,0,13,ff,0,0,2e,0,0,0,78,0,0,0,6c,0,0,0,73,0,0,0,78,0,0,0,\r\n",
            "published" : "2012-03-08T06:17:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "With respect to the raw filename - I could actually just use the UTF8.  I don't understand why converting from Unicode to Unicode requires locale info?",
            "published" : "2012-03-08T06:23:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Which platform does that happen, Windows or Ubuntu ?",
            "published" : "2012-03-08T07:00:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : ">>I don't understand why converting from Unicode to Unicode requires locale info?\r\n1. As I said libarchive uses nl_langinfo(CODESET) on POSIX system to know what the current locale is. libarchive cannot decide what character-set libarchive convert filenames from Unicode to with iconv unless libarchive gets the current locale info.\r\n2. libarchive uses mbrtowc function to translate multi-byte string to wchar_t string and mbrtowc entirely depends on the current locale. (some iconv can handle wchar_t but it's GNU' specific.)\r\n\r\nThere are many platforms. We have to consider that although modern Unix like system uses UTF-8 locale by default non UTF-8 locale is still used, and wchar_t is not Unicode on every plaform and the format of wchar_t is not specified by POSIX. \r\n",
            "published" : "2012-03-08T08:07:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Dump of strings is from Ubuntu. Windows is working fine in all respects. ",
            "published" : "2012-03-08T08:22:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "To Tim, I'm thinking of the raw interface for an internal use in the case of\r\ndoing bsdtar cf foo.tar @bar. If the bar archive includes the non-ASCII filename\r\nthe current locale does not support, that archive conversion may fail.\r\nIf archive_entry(archive_mstring) can hold raw filename and its encoding\r\nbsdtar can properly copy the filenames on whatever the current locale is.",
            "published" : "2012-03-08T08:28:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 18,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "On linux, libarchive 3.0.3 uses mbsnrtowcs to translate a filename from MBS to WCS.\r\n\r\n1. Cloud you try to use mbsnrtowcs with the output of archive_entry_pathname(entry)\r\nto get WCS, and compare the result to  the output of archive_entry_pathname_w(entry) ?\r\nI believe those two must be the same.\r\n\r\n2. Cloud you try following patch ? It disables mbsnrtowcs and uses mbrtowc instead.\r\n\r\ndiff --git a/libarchive/archive_string.c b/libarchive/archive_string.c\r\nindex 550d7e7..c848958 100644\r\n--- a/libarchive/archive_string.c\r\n+++ b/libarchive/archive_string.c\r\n@@ -589,7 +589,7 @@ archive_wstring_append_from_mbs_in_codepage(struct archive_wstring *dest,\r\n \treturn (ret);\r\n }\r\n \r\n-#elif defined(HAVE_MBSNRTOWCS)\r\n+#elif defined(HAVE_MBSNRTOWCS) && 0/* Disabled */\r\n \r\n /*\r\n  * Convert MBS to WCS.\r\n",
            "published" : "2012-03-09T04:45:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 19,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "1. Yes - identical.\r\n\r\n2. The behaviour of the library is unchanged - the endianness of archive_entry_pathname_w still seems wrong.",
            "published" : "2012-03-09T05:26:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 20,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "> string テスト３.xlsx\r\n> e3,83,86,e3,82,b9,e3,83,88,ef,bc,93,2e,78,6c,73,78,\r\n\r\n> wstring (funny symbols)\r\n> c6,30,0,0,b9,30,0,0,c8,30,0,0,13,ff,0,0,2e,0,0,0,78,0,0,0,6c,0,0,0,73,0,0,0,78,0,0,0,\r\n\r\nAssuming you're on a little-endian system (such as an Intel/AMD desktop or laptop), that looks exactly correct.  c6,30,0,0 is the four-byte integer 0x30c6, which is the Unicode code point for 'KATAKANA LETTER TE' (テ).\r\n\r\nWhy do you believe there is a byte-order problem?\r\n\r\n",
            "published" : "2012-03-10T06:32:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 21,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : ">Why do you believe there is a byte-order problem?\r\n\r\nI'm running the same code on Win and Ubuntu.  The code is something like\r\n\r\nstd::wstring str = archive_entry_pathname_w(entry);\r\nstd::wcout << str;\r\nif (str == expectedFilename)\r\n   ...\r\n\r\nOn windows, wcout displays the expected filename and the IF is true.\r\n\r\nOn Ubuntu, wcout displays funny symbols and the IF is false.\r\n\r\nPerhaps it's problem with my setting of locale on Ubuntu?\r\n",
            "published" : "2012-03-10T10:24:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 22,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "dump expectedFilename ?\r\n\r\nDoes your test program invoke std::wcout.imbue(std::locale(\"\")) or std::wcout.imbue(std::locale(\"en_US.UTF-8\")) ?\r\n\r\nI don't think the output of mbsnrtowcs/mbrtowc glibc provides is wrong, do you?",
            "published" : "2012-03-10T11:31:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 23,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Guys - I have found that the conversion problem on different platforms is occurring in my own library function - not related to libarchive.  It was that that was generating the funny symbols I was seeing.  Libarchive is indeed producing the right result on Windows and Ubuntu.  My bad - sorry for that!",
            "published" : "2012-03-12T01:19:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 24,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "No problem.  After working on libarchive's character-conversion logic, I think everyone here understands how tricky it can be to get it right.\r\n\r\nGlad you figured it out!\r\n\r\nI'll close this.",
            "published" : "2012-03-12T01:50:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 248,
        "title" : "add support for lrzip's new libs",
        "summary" : "add support for lrzip's new libs",
        "stars" : 3,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "da_audiophile@yahoo.com",
          "htmlLink" : "https://code.google.com/u/100018150098783595329/"
        },
        "updated" : "2013-02-17T02:07:08.000Z",
        "published" : "2012-03-09T20:20:17.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "da_audiophile@yahoo.com",
              "htmlLink" : "https://code.google.com/u/100018150098783595329/"
            },
            "content" : "Would be very powerful if you can add support for lrzip's new libs.  This would enable more distros to use this fast, multi-threaded compression for example in package managers.\r\n\r\nLink to upstream code: http://lrzip.kolivas.org/\r\n\r\n&quot;The major feature addition in this latest version is largely thanks to the work of Michael Blumenkrantz in the form of a liblrzip library! This means you can now link in lrzip compression and decompression into any other application. There is a range of APIs available to use this capability from the simplest gzip equivalent lrzip_compress and lrzip_decompress functions to ones that expose all the low level features knobs and dials in lrzip. There are also a couple of demo examples of using these functions included in the source code, but in their simplest form they should be very easy to use. I look forward to seeing package managers, archivers and maybe even git and so on having lrzip support in the future ;)&quot;",
            "published" : "2012-03-09T20:20:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "See\r\n   https://github.com/libarchive/libarchive/wiki/LibarchiveAddingReadFilter\r\nfor documentation on how to write this type of integration.\r\n\r\n",
            "published" : "2012-03-10T06:35:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "da_audiophile@yahoo.com",
              "htmlLink" : "https://code.google.com/u/100018150098783595329/"
            },
            "content" : "@kientzle - I have 0 experience coding in c.  If your comment directed at me?",
            "published" : "2012-03-11T17:57:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "My comment was directed to whoever might volunteer to implement this.  ;-)\r\n\r\nFor what it's worth, lrzip has been suggested before.  Integrating lrzip compression directly into libarchive (or any other archiving library) might not actually work very well; lrzip is designed to compress files, not streams, and so it might make more sense for the package manager or other program to use libarchive to package into a file and then invoke lrzip separately to compress the file.\r\n\r\nIntegrating lrzip decompression might work very well; it sounds like lrzip does work effectively with streams when decompressing.",
            "published" : "2012-03-11T19:16:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "da_audiophile@yahoo.com",
              "htmlLink" : "https://code.google.com/u/100018150098783595329/"
            },
            "content" : "@kientzle - Excellent news, it is my understanding that only decompression is needed to be included into libarchive (compression can be linked to the bin lrzip itself).  My whole purpose in requesting inclusion of lrzip decompression into libarchive is so pacman (Arch Linux package manager) can support the format.\r\n\r\nThis is according to the lead developer, Allan:  https://bugs.archlinux.org/task/23968\r\n\r\nI am grateful for any help implementing the inclusion of lrzip decompression into libarchive.",
            "published" : "2012-03-12T19:45:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "In response to one of the observations posted in that thread:  Yes, libarchive is BSD-licensed.\r\n   * This does not preclude it linking with and using a library that is published under a different license.\r\n   * In fact, libarchive utilizes many libraries (libz, libbz2, libiconv, etc, etc) that are not BSD-licensed.\r\n   * Any glue code contributed to libarchive should be under the same license, of course.\r\n",
            "published" : "2012-03-13T06:03:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "xivonidas",
              "htmlLink" : "https://code.google.com/u/118193881697801785453/"
            },
            "content" : "With https://github.com/libarchive/libarchive/pull/28 merged, I think this issue can be closed.",
            "published" : "2013-02-17T02:07:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 249,
        "title" : "Uncompressed CAB fails to read subfile when archive has certain structure",
        "summary" : "Uncompressed CAB fails to read subfile when archive has certain structure",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "simon.bailey@prismit.com.au",
          "htmlLink" : "https://code.google.com/u/101982852811856813968/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2012-03-20T23:42:55.000Z",
        "published" : "2012-03-15T04:13:07.000Z",
        "closed" : "2012-03-15T06:27:08.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 10,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nTry to extract &quot;folder/test2.txt&quot; from the *uncompressed* archive (attached).\r\n\r\n(Using streams interface - not file-based interface).\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nError &quot;-30&quot; returned when attempting the actual extract.\r\n\r\n<b>What version are you using?</b>\n3.0.3\r\n\r\n<b>On what operating system?</b>\nProblem replicated on Win64 and Ubuntu.\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake (win), configure (ubuntu)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nMSVC 2010, gcc\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n1. The problem seems to be related to subfolders.  If I put the files in a flat structure, it's ok.  When there are failures, it's always the files that are within subfolders that fail - never the files in the root.\r\n\r\n2. The same code works properly when using the compressed version of the same file structure (also attached - mszip).\r\n\r\n3. Another library can open the uncompressed archive correctly, so the archive seems ok.\r\n\r\n4. Archive created on Windows using &quot;cabarc -p -r -m NONE n c:\\temp\\uncompress-arch-cab-bug.cab *.*&quot;\r\n",
            "published" : "2012-03-15T04:13:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2490000000",
              "fileName" : "mszip-arch-cab-bug.cab",
              "fileSize" : 139,
              "mimetype" : "application/vnd.ms-cab-compressed; charset=binary"
            }, {
              "attachmentId" : "2490000001",
              "fileName" : "uncompressed-arch-cab-bug.cab",
              "fileSize" : 146,
              "mimetype" : "application/vnd.ms-cab-compressed; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for the reporting.\r\nCould you try the attached patch?\r\n",
            "published" : "2012-03-15T05:58:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "ggcueroad"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2490001000",
              "fileName" : "issue249.patch",
              "fileSize" : 851,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Initial test is successful.  Thanks again!",
            "published" : "2012-03-15T06:10:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "There are additional patches against CAB reader for issue 241 and 243.\r\nI recommend you to apply those patches.",
            "published" : "2012-03-15T06:16:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "shall do",
            "published" : "2012-03-15T06:17:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I'll close this.",
            "published" : "2012-03-15T06:27:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I found that the patch I uploaded made another bug that listing filenames failed.\r\nPlease use a new patch instead.",
            "published" : "2012-03-20T05:17:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2490006000",
              "fileName" : "issue249-2.patch",
              "fileSize" : 3252,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "I did notice some CAB issues with another CAB file that I have.  I will try this patch.",
            "published" : "2012-03-20T05:19:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "There was a case previous patch didn't fix.\r\nCould you try this 3rd version patch?",
            "published" : "2012-03-20T11:03:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2490008000",
              "fileName" : "issue249-3.patch",
              "fileSize" : 3698,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Currently all my tests are passing with this latest patch.",
            "published" : "2012-03-20T23:42:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 250,
        "title" : "problem extracting from CAB file",
        "summary" : "problem extracting from CAB file",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "thierryb@filewave.com",
          "htmlLink" : "https://code.google.com/u/106556843621018335062/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2012-09-18T11:52:08.000Z",
        "published" : "2012-03-16T09:31:19.000Z",
        "closed" : "2012-09-18T11:52:08.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. download http://download.windowsupdate.com/microsoftupdate/v6/wsusscan/wsusscn2.cab\r\n2. try to list the files inside\r\n\r\nThe portion of code that gets the filenames:\r\n    archive_entry *entry = 0;\r\n    int r = ARCHIVE_OK;\r\n    while((r = archive_read_next_header(_archive, &amp;entry)) != ARCHIVE_EOF) {\r\n        if (r != ARCHIVE_OK) {\r\n            dlog(kErrorMessage, &quot;error while reading from archive '%1'&quot;, archive_error_string(_archive));\r\n            break;\r\n        }\r\n        \r\n        ret += QString::fromUtf8(archive_entry_pathname( entry ));\r\n    }\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe archive contains 26 items\r\nInstead it finds the 2 first items and then fails with fatal error\r\n\r\n<b>What version are you using?</b>\ntried with both 3.3 and trunk \r\n\r\n<b>On what operating system?</b>\nWindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake with lzma support (nothing else so far)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nMSVC 2010 and 2008 (both express), 32 bit\r\n\r\nMicrosoft is updating its offline catalog every 2 weeks. The new version from this week started showing the problem.",
            "published" : "2012-03-16T09:31:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for your report. I really appreciate it!\r\n\r\nCould you try the attached patch?\r\nThe patch is against 3.0.3 + issue 241,243 and 249, not plain 3.0.3.",
            "published" : "2012-03-17T07:17:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "ggcueroad"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2500001000",
              "fileName" : "issue250.patch",
              "fileSize" : 2875,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I believe this issue has been fixed.\r\nI'll close this.",
            "published" : "2012-09-18T11:52:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 251,
        "title" : "Broken files extracted from .cab files.",
        "summary" : "Broken files extracted from .cab files.",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dscharrer",
          "htmlLink" : "https://code.google.com/u/107295895513704203750/"
        },
        "updated" : "2012-03-17T07:35:25.000Z",
        "published" : "2012-03-17T04:56:33.000Z",
        "closed" : "2012-03-17T07:35:25.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 241
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dscharrer",
              "htmlLink" : "https://code.google.com/u/107295895513704203750/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Download arx_demo_english.zip ( list of download locations: http://wiki.arx-libertatis.org/Getting_the_game_data#Demo )\r\n2. Extract the zip file (with bsdtar or another utility).\r\n3. Extract the .cab files:\r\n$ bsdtar xvf Setup1.cab\r\n$ bsdtar xvf Setup2.cab\r\n$ bsdtar xvf Setup3.cab\r\n4. Verify the files:\r\n$ md5sum data.pak SFX.pak SPEECH.pak\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nExpected (produced by running the installer under wine or by using cabextract instead of bsdtar)\r\n5d7ba6e6c79ebf7fbb232eaced9e8ad9  data.pak\r\nea1b3e6d6f4906905d4a34f07e9a59ac  SFX.pak\r\n62ca7b1751c0615ee131a94f0856b389  SPEECH.pak\r\n\r\nActual results:\r\n335b02892c7304eb10a14dc63e18f094  data.pak\r\n913f8166d2a3d6fe5bf698469873d19d  SFX.pak\r\n9f8282f43dd72565fb0d5bb30d6bbc99  SPEECH.pak\r\n\r\n<b>What version are you using?</b>\n3.0.3\r\n\r\n<b>On what operating system?</b>\nGentoo Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nGentoo ebuild\r\nUSE flags: acl bzip2 e2fsprogs iconv kernel_linux lzma zlib -expat -nettle -static-libs -xattr\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nx86_64 system\r\ngcc 4.6.2\r\nxz-utils 5.0.3\r\nbzip2 1.0.6-r3\r\nzlib 1.2.6\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThe bsdtar-extracted files cannot be loaded by the game, but the cabextract-extracted / installed files can.\r\n",
            "published" : "2012-03-17T04:56:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "This is the same as issue 241.\r\nPlease get a patch for issue 241 and try it.\r\nThere are other patches for CAB reader, see issue 243, 249 and 250.",
            "published" : "2012-03-17T07:35:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "241"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 252,
        "title" : "Please document ISO writing capability",
        "summary" : "Please document ISO writing capability",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "chealer",
          "htmlLink" : "https://code.google.com/u/100797722714829254381/"
        },
        "updated" : "2012-04-04T05:37:19.000Z",
        "published" : "2012-03-19T21:04:18.000Z",
        "closed" : "2012-04-04T05:10:44.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "chealer",
              "htmlLink" : "https://code.google.com/u/100797722714829254381/"
            },
            "content" : "libarchive 3 now supports writing ISO files. It would be nice to mention this in libarchive(3) and libarchive-formats(5).",
            "published" : "2012-03-19T21:04:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I added some more information to those man pages in the github sources.\r\n",
            "published" : "2012-04-04T05:10:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "chealer",
              "htmlLink" : "https://code.google.com/u/100797722714829254381/"
            },
            "content" : "Thank you very much. A detail: there should be a space between \"ISO\" and \"9660\" (when it's not in a system name, anyway).",
            "published" : "2012-04-04T05:37:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 253,
        "title" : "change permissions for files in zip archives created not on unix",
        "summary" : "change permissions for files in zip archives created not on unix",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "alexkozlov0",
          "htmlLink" : "https://code.google.com/u/111387644617572127572/"
        },
        "updated" : "2012-03-23T06:33:56.000Z",
        "published" : "2012-03-21T09:12:24.000Z",
        "closed" : "2012-03-23T06:33:56.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexkozlov0",
              "htmlLink" : "https://code.google.com/u/111387644617572127572/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. extract any zip archive created not on unix\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nFile with permissions 666 (like in infozip's case)\r\nFile with permissions 777\r\n\r\n<b>What version are you using?</b>\n3.0.3, latest git\r\n\r\n<b>On what operating system?</b>\nFreeBSD\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.2.1",
            "published" : "2012-03-21T09:12:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2530000000",
              "fileName" : "patch-archive_read_support_format_zip.c.txt",
              "fileSize" : 511,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks.  This has been committed to git master.",
            "published" : "2012-03-23T06:33:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 254,
        "title" : "libarchive-3.0.3 fails some tests (--without-expat --with-xml2) ?",
        "summary" : "libarchive-3.0.3 fails some tests (--without-expat --with-xml2) ?",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ssuominen.private",
          "htmlLink" : "https://code.google.com/u/107258097015623059114/"
        },
        "updated" : "2012-03-22T07:47:53.000Z",
        "published" : "2012-03-22T07:47:53.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ssuominen.private",
              "htmlLink" : "https://code.google.com/u/107258097015623059114/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. ./configure --with-xml2 --without-expat\r\n2. make\r\n3. make check\r\n\r\nAnd/or:\r\n\r\n1. ./configure --with-xml2 --without-expat\r\n2. make\r\n3. make check\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nWould you please take a look at http://bugs.gentoo.org/398427 ? Thanks!\r\n\r\n<b>What version are you using?</b>\n\r\n3.0.3\r\n\r\n<b>On what operating system?</b>\n\r\nLinux, Gentoo, x86 and x86_64, glibc-2.13, 2.14, 2.15, gcc 4.5, 4.6\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-03-22T07:47:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 255,
        "title" : "GCC 4.7.0 compile and test fixes",
        "summary" : "GCC 4.7.0 compile and test fixes",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dpmcgee",
          "htmlLink" : "https://code.google.com/u/115186494647441743699/"
        },
        "updated" : "2012-05-13T16:48:30.000Z",
        "published" : "2012-03-27T23:03:25.000Z",
        "closed" : "2012-04-03T15:34:06.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 11,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Fixes the following compile error exposed with GCC 4.7.0:\r\n\r\n    libarchive/archive_string.c: In function 'cesu8_to_unicode':\r\n    libarchive/archive_string.c:2450:11: error: 'wc' may be used uninitialized in this function [-Werror=uninitialized]\r\n    cc1: all warnings being treated as errors\r\n\r\nAs well as a test failure that depends on signed integer wraparound,\r\nwhich is a very bad thing to do in C [1]. Add a bit more magic to ensure\r\nthe assert is not optimized to always being false. This is still\r\nextremely brittle, and a better way should probably be figured out, but\r\nthis ensures it works as before in all compilers.\r\n",
            "published" : "2012-03-27T23:03:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2550000000",
              "fileName" : "0001-Fixes-for-GCC-4.7.0.patch",
              "fileSize" : 2446,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'd be very happy to know a more portable way to determine that \"min_time is an integer variable that holds the smallest possible value for a signed integer\".   Wraparound should work the same on all 2s-complement machines, barring only compilers that are clever enough to realize that wraparound is impossible.  ;-)\r\n\r\nOne alternative that comes immediately to mind is to actually compute the minimum signed integer.  I think this works:\r\n\r\n    const static int mi = (int)~((unsigned int)~0) >> 1); /* Compute INT_MIN */\r\n    if (x == mi) {\r\n       /* x == INT_MIN */\r\n    }\r\n\r\nAnother option is to try to take advantage of the fact that there are exactly two numbers in 2s complement for which x == -x:\r\n\r\n   if (x == -x && x != 0) {\r\n      /* x == INT_MIN */\r\n   }\r\n\r\nWhich do you think is better?\r\n\r\n",
            "published" : "2012-03-28T03:55:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "As long as we're in the business of assuming two's complement (which seems pretty reasonable this day and age, there are also many assumptions we are using the ASCII character set).\r\n\r\nOf course, on 64-bit machines, time_t isn't an int (32-bits) it is 64-bits. This seems to work for any size integral type, with no need for types, or signed/unsigned stuff which would be a lot harder with an opaque time_t type:\r\n\r\n    min_val = 1; /* initialized so value is cast automatically and left shift doesn't complain */\r\n    min_val <<= (sizeof(min_val) * 8 - 1);\r\n\r\nI would probably prefer using this as it doesn't depend on overflow whatsoever, only that two's complement is the representation used. Updated patch attached.",
            "published" : "2012-03-28T04:37:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2550002000",
              "fileName" : "0001-Fixes-for-GCC-4.7.0.patch",
              "fileSize" : 2473,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Hmmm....  You are assuming that time_t is signed.  The standard doesn't require this.  I made the same mistake in Comment #1 above.  The original code handled this but of course is broken by standard compiler optimizations so we need something better.\r\n\r\nSo we're back to the basic problem statement: The library is documented to return the smallest possible time_t value if the value in the file is earlier than can be represented in the platform time_t.  But there is no portable TIME_T_MIN that we can rely on.  I believe the logic in archive_read_support_format_mtree() does this correctly but of course copying that code into the test suite isn't an ideal answer (the point of the test suite is to verify whether the code in the library is correct).\r\n\r\nNow that I've thought about this for a couple of days, I now recall that my original idea was this: if the value returned is the *minimum* then subtracting one can't produce a smaller value.  That seems pretty straightforward and actually makes no assumptions at all about 2s complement arithmetic; the same would be true on a decimal or ternary computer.  Maybe I didn't express that idea very well in the initial code?",
            "published" : "2012-03-28T15:54:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "Hmm. What are you proposing for the \"can't produce a smaller value\" check then? The compiler, with a signed value in play, will assume it can subtract one, so it will optimize away any \"x < x - 1\" type check as it will assume that is not possible.\r\n\r\nAlso, from POSIX [1], throw integer assumptions away:\r\n    time_t and clock_t shall be integer or real-floating types.\r\n\r\nI'm assuming the value encoded in the test archive is INT64_MIN? What if you just cast the returned value of archive_entry_mtime() to an int64_t (guaranteed width type), and then just checked equality to INT64_MIN; if that is not true, fall back to INT32_MIN. If that isn't true (indicating an unsigned time_t type, or an actual failure), then you can rely on unsigned wraparound as that is not undefined behavior, subtract 1, and ensure it is greater than 0.\r\n\r\n[1] http://pubs.opengroup.org/onlinepubs/009695399/basedefs/sys/types.h.html",
            "published" : "2012-03-28T16:13:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I think the following will work well in practice:\r\n\r\n     time_t min_time = archive_entry_mtime();\r\n     volatile time_t t = min_time - 1;\r\n     assert(t >= min_time);\r\n\r\nMaking 't' volatile should suffice to prevent the compiler from optimizing the assert to min_time - 1 >= min_time \r\n\r\nYou're right that this would fail if time_t were a floating point type.  If we see such a platform, then we'll have to revisit this again.  (If time_t were floating point, then there are other things here that would need to be reconsidered anyway.)\r\n\r\nCan you try this with GCC 4.7.0?  The change amounts to declaring 't' volatile and changing the assert(t >= 0) to assert(t >= min_time)\r\n",
            "published" : "2012-03-29T03:46:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Apparently, POSIX has recently reconsidered the idea of a floating-point time_t, so I think we're on safe ground there:\r\n\r\nhttp://austingroupbugs.net/view.php?id=327\r\n",
            "published" : "2012-03-30T02:35:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dpmcgee",
              "htmlLink" : "https://code.google.com/u/115186494647441743699/"
            },
            "content" : "volatile seems to get everything \"working\" again. Patch attached that successfully compiles and passes all tests on GCC 4.7.0.",
            "published" : "2012-04-03T13:19:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2550007000",
              "fileName" : "0001-Fixes-for-GCC-4.7.0.patch",
              "fileSize" : 2086,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for your help, Dan!\r\n\r\nI've applied this patch to the sources on Github.\r\n",
            "published" : "2012-04-03T15:33:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2012-04-03T15:34:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 261 has been merged into this issue.",
            "published" : "2012-05-13T16:48:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 256,
        "title" : "LZO support",
        "summary" : "LZO support",
        "stars" : 8,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "SwiftGeek",
          "htmlLink" : "https://code.google.com/u/116097715929567761978/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2012-11-07T09:59:04.000Z",
        "published" : "2012-04-03T22:02:34.000Z",
        "closed" : "2012-11-07T09:59:04.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "SwiftGeek",
              "htmlLink" : "https://code.google.com/u/116097715929567761978/"
            },
            "content" : "Please add LZO support. Just because it's faster than blink of the eye ;)",
            "published" : "2012-04-03T22:02:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "That would be a nice addition.  We have extensive documentation on how to add new compression filters:\r\n\r\nhttps://github.com/libarchive/libarchive/wiki/LibarchiveAddingReadFilter",
            "published" : "2012-04-04T04:46:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nimetonmaili",
              "htmlLink" : "https://code.google.com/u/114876730337694363621/"
            },
            "content" : "No volunteers? This'd be a brilliant addition.",
            "published" : "2012-10-17T17:34:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "SwiftGeek",
              "htmlLink" : "https://code.google.com/u/116097715929567761978/"
            },
            "content" : "And nice round issue number",
            "published" : "2012-10-17T17:36:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I added lzop reader and writer using an external lzop program last week.\r\nAnd I just improved the lzop reader to use liblzo2 library.",
            "published" : "2012-10-19T04:52:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I committed the change to use liblzo2 library for reading and writing archives if available.\r\nbsdtar and bsdcpio have --lzop option to use LZO compression.",
            "published" : "2012-11-07T09:59:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 257,
        "title" : "libarchive fails to process zip files with garbage padding at end",
        "summary" : "libarchive fails to process zip files with garbage padding at end",
        "stars" : 4,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "alexkozlov0",
          "htmlLink" : "https://code.google.com/u/111387644617572127572/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2013-11-26T12:15:18.000Z",
        "published" : "2012-04-11T00:29:38.000Z",
        "closed" : "2013-11-24T00:06:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 19,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexkozlov0",
              "htmlLink" : "https://code.google.com/u/111387644617572127572/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. wget ftp://ftp.adobe.com/pub/adobe/magic/acrobatviewer/unix/1.x/viewer.bin\r\n2. bsdtar tvf viewer.bin\r\n\r\nWhat is the expected output?\r\nThe zip file listing.\r\n\r\nWhat do you see instead?\r\nbsdtar: Invalid central directory signature\r\nbsdtar: Error exit delayed from previous errors.\r\n\r\n<b>What version are you using?</b>\n3.0.4, git\r\n\r\n<b>On what operating system?</b>\nFreeBSD 9.x\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.2\r\n\r\n<b>Please provide any additional information below.</b>\nNow that libarchive have seekable zip reader, it can fallback to Central directory at the end of the zip file instead of terminating with error.",
            "published" : "2012-04-11T00:29:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is a very strange file.  It's not technically an SFX Zip archive.  It's really the concatenation of a shell script and a Zip archive (actually, a JAR).\r\n\r\nIt is not a fully correct Zip file (the end-of-central-directory record says the central directory starts at 0x298fa5, but the central directory actually starts a 0x2a0fa5.  This is why bsdtar reports \"Invalid Central Directory\"; it is following the references in the file but the Central Directory isn't where it should be.\r\n\r\nIt appears that Info-Zip has some special logic for such.  Libarchive would have to learn how to scan forward from the location indicated until it finds the real start of the central directory, then use the resulting offset to bias all future file location calculations.\r\n",
            "published" : "2012-04-11T06:15:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "libarchive fails to process some sfx zip files"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexkozlov0",
              "htmlLink" : "https://code.google.com/u/111387644617572127572/"
            },
            "content" : "It seems that sfx archives like this is normal for infozip. From unzipsfx.txt (unzip 6.0):\r\nRegular unzip may still be used to extract the  embedded  archive  as  with  any normal zipfile, although it will generate a warning about extra bytes at the  beginning  of  the  zipfile. Despite this, however, the self-extracting archive is technically not a valid ZIP archive, and PKUNZIP may be unable to test or extract it. This limitation is due to the simplistic manner in which the archive is created; the internal directory structure is not updated to reflect the extra bytes prepended to the original zipfile.\r\n\r\nI can try and produce the patch for libarchive that implements this logic. ",
            "published" : "2012-04-23T20:10:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please do try to implement this feature.  All of the logic is in archive_read_format_zip.c.\r\nHere is how I think this will need to work:\r\n  * Change slurp_central_directory so that it searches forward for the PK\\001\\002 signature value  (archive_read_format_zip_streamable_read_header has similar logic to find the next local file header.)\r\n  * Keep track of the offset from where the central directory should have been and where it actually was.\r\n\r\nThe offset value will need to be used in _seekable_read_header() and possibly other places to adjust the offsets where you look for files.\r\n",
            "published" : "2012-04-24T04:34:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I made a patch for this issue.\r\nPlease try the attached patch.",
            "published" : "2012-12-03T06:11:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2570004000",
              "fileName" : "zip_sfx.patch",
              "fileSize" : 2283,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexkozlov0",
              "htmlLink" : "https://code.google.com/u/111387644617572127572/"
            },
            "content" : "I tried patch with a few sfx archives (viewer.bin, q2-314-demo-x86.exe) and it works fine. Thank you.",
            "published" : "2012-12-31T21:25:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zohar.meridor",
              "htmlLink" : "https://code.google.com/u/106276608939877445719/"
            },
            "content" : "Hi, \r\nI still get this problem on latest version (3.1.2) which already has this patch.\r\nThe file causing this problem is attached.\r\nMany thanks",
            "published" : "2013-11-20T12:55:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2570006000",
              "fileName" : "2cf890d021b6e657ba8efb22ca119eb793173c72058117bf213c7bcce1ae179c.zip",
              "fileSize" : 86343,
              "mimetype" : "application/zip"
            } ]
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexkozlov0",
              "htmlLink" : "https://code.google.com/u/111387644617572127572/"
            },
            "content" : "The attached file is not a sfx, just a very broken zip archive. It has weird version to extract: 0x603 and wrong centraldir_start (0x50890000 instead of 0x15089), centraldir_size (0x92002 instead of 0x91) fields. If you correct these[1], it opens just fine.\r\n\r\n1)\r\n00015125 02 91\r\n00015127 92 00\r\n00015129 00 89\r\n0001512b 89 15\r\n0001512c 50 00",
            "published" : "2013-11-23T18:53:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexkozlov0",
              "htmlLink" : "https://code.google.com/u/111387644617572127572/"
            },
            "content" : "Actually, correcting centraldir_start is enough:\r\n0001512c 50 00\r\n0001512d 01 15",
            "published" : "2013-11-23T20:04:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tim@kientzle.com",
              "htmlLink" : "https://code.google.com/u/111480963336027327802/"
            },
            "content" : "centraldir_start looks fine to me.\r\n\r\nThe problem:  This file has 22 bytes of garbage appended to the end.\r\nLibarchive is not currently able to find the end-of-central-directory record when it doesn't occur at the very end of the archive.  There's a comment in archive_read_support_format_zip.c about this:\r\n\r\narchive_read_format_zip_seekable_bid(struct archive_read *a, int best_bid)\r\n ...\r\n        /* TODO: More robust search for end of central directory record. */\r\n\r\nInstead of simply grabbing the last 22 bytes, this function should probably\r\nread the last 8k or so and scan backwards from the end to try to locate the\r\nend-of-central-directory record.\r\n\r\nThat would also fix reading archives that have file comments at the end.\r\n\r\nThis would explain why the Zip seekable reader doesn't process this file.\r\n\r\nI don't immediately see why the streaming reader doesn't like it.  I'll\r\ndig a little further.\r\n\r\n",
            "published" : "2013-11-23T21:23:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2013-11-23T21:24:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexkozlov0",
              "htmlLink" : "https://code.google.com/u/111387644617572127572/"
            },
            "content" : "I can read the sources wrong, but it seems to me that zip_reader is already searching last 16k for EOCD: https://github.com/libarchive/libarchive/blob/master/libarchive/archive_read_support_format_zip.c#L271",
            "published" : "2013-11-23T22:08:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 12,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It was searching but it was not correctly recording the location of EOCD when\r\nit did find it.  So a later adjustment step was going awry.\r\n\r\nI've just pushed a fix for this to github.  Please test and let me know what you see.\r\n",
            "published" : "2013-11-24T00:06:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "libarchive fails to process zip files with garbage padding at end",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 13,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 339 has been merged into this issue.",
            "published" : "2013-11-24T00:18:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 14,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexkozlov0",
              "htmlLink" : "https://code.google.com/u/111387644617572127572/"
            },
            "content" : "Ah, I have not checked code line by line, just general algorithm, it's similar to my POC for this issue.\r\nI can confirm that all zip files from this issue and also zip file from 339 opens fine.\r\nThanks for fixing this.\r\n\r\nBtw, search for first CD from presumed position to EOCD trick (comment #3) doesn't work with 2cf89..9c.zip file, it fails with assert cd_start(0x150089) > eocd_start(0x1511b),\r\nbut the current adjustment algorithm works properly. Clever.",
            "published" : "2013-11-24T01:27:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2570014000",
              "fileName" : "list_zipcd.pl",
              "fileSize" : 2498,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 15,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zohar.meridor",
              "htmlLink" : "https://code.google.com/u/106276608939877445719/"
            },
            "content" : "hi thank you for you reply and help!\r\nhow can I get the fix for this issue?",
            "published" : "2013-11-24T13:53:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 16,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "You'll need to get the up-to-date source code from:\r\n\r\nhttps://github.com/libarchive/libarchive\r\n\r\nThe specific change that fixes this issue is:\r\n\r\nhttps://github.com/libarchive/libarchive/commit/37908ea3c9731a34c9a6216001fddbcf73ca5940\r\n\r\n(though you'll also need\r\n\r\nhttps://github.com/libarchive/libarchive/commit/1579f4ba819c632046790a0d9be0610cfbd548a7\r\n\r\nIf you rely on pre-built packages, you'll need to contact whoever you got that package from and pass this information along to them.\r\n\r\n",
            "published" : "2013-11-24T15:56:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 17,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alexkozlov0",
              "htmlLink" : "https://code.google.com/u/111387644617572127572/"
            },
            "content" : "Is it makes sense to add the attached patch to archivers/libarchive port or you plan to release a new version soon?",
            "published" : "2013-11-24T18:36:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2570017000",
              "fileName" : "patch-libarchive__archive_read_support_format_zip.c",
              "fileSize" : 3990,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 18,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zohar.meridor",
              "htmlLink" : "https://code.google.com/u/106276608939877445719/"
            },
            "content" : "works great on the file I uploaded here - thanks",
            "published" : "2013-11-26T12:15:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 258,
        "title" : "VS2010 build fails due to type truncation warnings (64->32)",
        "summary" : "VS2010 build fails due to type truncation warnings (64->32)",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2012-12-03T11:36:44.000Z",
        "published" : "2012-04-12T15:39:43.000Z",
        "closed" : "2012-12-03T11:36:44.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Use the Visual Studio 10 x64 generator and try and build the code.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThe build should complete. It actually fails unless /WX (warnings as errors) is turned off.\r\n\r\n<b>What version are you using?</b>\n\r\n3.0.4\r\n\r\n<b>On what operating system?</b>\n\r\nWindows Server 2008 R2.\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\ncmake using Visual Studio 10 x64 generator.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nVisual Studio 2010 with SP1 (10.0.40219.1 SP1Rel).\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI don't know if they would affect archives or files larger than 4GB, but the warnings mostly appear to be about conversion from size_t to DWORD.\r\n",
            "published" : "2012-04-12T15:39:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Bruce:  Since we don't all have VS2010 handy, could you paste the errors you're seeing into this bug so we can track them down and see what options there are for fixing them?\r\n",
            "published" : "2012-04-13T06:31:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "libarchive\\archive_crypto.c(93): warning C4267: 'initializing' : conversion from 'size_t' to 'DWORD', possible loss of data\r\nlibarchive\\archive_match.c(1712): warning C4267: '=' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_extract.c(157): warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_filter_gzip.c(202): warning C4244: 'return' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_filter_uu.c(510): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_filter_uu.c(549): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_filter_uu.c(615): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_7zip.c(3102): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\n2>C:\\Users\\bcran\\Desktop\\libarchive-3.0.4\\libarchive\\archive_read_support_format_7zip.c(3108): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_7zip.c(3163): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_7zip.c(3175): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_7zip.c(3180): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_7zip.c(3373): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_7zip.c(3560): warning C4267: '+=' : conversion from 'size_t' to 'uint32_t', possible loss of data\r\nlibarchive\\archive_read_support_format_7zip.c(3704): warning C4267: '=' : conversion from 'size_t' to 'uint32_t', possible loss of data\r\nlibarchive\\archive_read_support_format_7zip.c(3719): warning C4267: '=' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_cab.c(553): warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_cab.c(1072): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_cab.c(1938): warning C4244: 'return' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_cab.c(2201): warning C4267: '=' : conversion from 'size_t' to 'int32_t', possible loss of data\r\nlibarchive\\archive_read_support_format_cab.c(2587): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_cab.c(2967): warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_cab.c(3129): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_cab.c(3137): warning C4334: '<<' : result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)\r\nlibarchive\\archive_read_support_format_lha.c(845): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_lha.c(947): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_lha.c(1641): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_lha.c(2022): warning C4267: '+=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_lha.c(2030): warning C4267: '-=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_lha.c(2484): warning C4334: '<<' : result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)\r\nlibarchive\\archive_read_support_format_lha.c(2494): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_mtree.c(449): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_mtree.c(572): warning C4244: '+=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_mtree.c(585): warning C4244: '+=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_mtree.c(831): warning C4244: 'return' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_rar.c(1186): warning C4267: '=' : conversion from 'size_t' to 'unsigned char', possible loss of data\r\nlibarchive\\archive_read_support_format_rar.c(1603): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_rar.c(1731): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_rar.c(2257): warning C4334: '<<' : result of 32-bit shift implicitly converted to 64 bits (was 64-bit shift intended?)\r\nlibarchive\\archive_read_support_format_raw.c(160): warning C4244: 'return' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(625): warning C4244: 'return' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(755): warning C4244: 'return' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1681): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1692): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1703): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1717): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1721): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1734): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1804): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1807): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1812): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1815): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1818): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1820): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1854): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1894): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(1914): warning C4267: 'function' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(2204): warning C4244: 'function' : conversion from '__int64' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(2208): warning C4244: 'function' : conversion from '__int64' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_read_support_format_tar.c(2359): warning C4244: 'function' : conversion from '__int64' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_string.c(489): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(495): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(510): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_string.c(553): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_string.c(554): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_string.c(730): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_string.c(2148): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(2325): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(2394): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(3481): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(3582): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(3582): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(3588): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(3665): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_string.c(3670): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\narchive_util.c(242): warning C4267: 'function' : conversion from 'size_t' to 'DWORD', possible loss of data\r\narchive_util.c(296): warning C4267: 'function' : conversion from 'size_t' to 'DWORD', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(630): warning C4244: 'return' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(862): warning C4244: 'return' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(927): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(951): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1048): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1060): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1105): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1199): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1207): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1228): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1299): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1307): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1334): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1342): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1366): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1421): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_7zip.c(1515): warning C4267: '=' : conversion from 'size_t' to 'unsigned int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(2892): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(2915): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3514): warning C4267: 'function' : conversion from 'size_t' to 'unsigned char', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3545): warning C4267: 'function' : conversion from 'size_t' to 'unsigned char', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3547): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3548): warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3553): warning C4267: 'function' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3558): warning C4267: 'function' : conversion from 'size_t' to 'unsigned char', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3571): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3573): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3575): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(3579): warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(4258): warning C4267: 'function' : conversion from 'size_t' to 'unsigned char', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(4281): warning C4267: '+=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(5451): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(5519): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(5522): warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6019): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6083): warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6110): warning C4267: 'initializing' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6114): warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6151): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6268): warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6270): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6271): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6285): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(6289): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_iso9660.c(7510): warning C4267: '+=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_mtree.c(323): warning C4244: '=' : conversion from '__int64' to 'int', possible loss of data\r\nlibarchive\\archive_write_set_format_pax.c(694): warning C4244: '=' : conversion from 'int64_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_disk_windows.c(600): warning C4267: '=' : conversion from 'size_t' to 'DWORD', possible loss of data\r\nlibarchive\\archive_read_disk_windows.c(701): warning C4267: '=' : conversion from 'size_t' to 'DWORD', possible loss of data\r\nlibarchive\\archive_read_disk_windows.c(1269): warning C4267: '=' : conversion from 'size_t' to 'int', possible loss of data\r\nlibarchive\\archive_read_disk_windows.c(2237): warning C4267: 'function' : conversion from 'size_t' to 'DWORD', possible loss of data\r\n",
            "published" : "2012-04-13T08:32:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "Also a few warnings found by static analysis that may be bugs:\r\n\r\narchive_read_support_format_tar.c(706) - buffer overflow:\r\nheader->magic is only 6 characters wide (char\tmagic[6]).\r\nmemcmp(header->magic, \"ustar  \\0\", 8) == 0)\r\n\r\nlibarchive\\archive_ppmd7.c(993): warning C6297: Arithmetic overflow: 32-bit value is shifted, then cast to 64-bit value. Results might not be an expected value\r\n\r\narchive_read_disk_windows.c(2043): warning C6250: Calling 'VirtualFree' without the MEM_RELEASE flag might free memory but not address descriptors (VADs). This causes address space leaks\r\n",
            "published" : "2012-04-13T09:00:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I believe this issue including warnings found by static analysis\r\nhas been fixed in master branch.\r\nI will close this issue.",
            "published" : "2012-12-03T11:36:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 259,
        "title" : "symlink support/emulation/fallback on Windows",
        "summary" : "symlink support/emulation/fallback on Windows",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "CamaradeTux",
          "htmlLink" : "https://code.google.com/u/109614977970127858474/"
        },
        "updated" : "2013-07-04T02:19:26.000Z",
        "published" : "2012-04-28T22:23:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "CamaradeTux",
              "htmlLink" : "https://code.google.com/u/109614977970127858474/"
            },
            "content" : "Hi,\r\n\r\nI'd like to have some kind of support for symlinks on windows. I'll probably be writing the code myself in the coming days but first, I'd like to discuss how to approach the problem.\r\n\r\nOn windows, symlinks can only be created by users with admin rights. That means that they're most often going to be unusable from libarchive and a fallback is therefore needed.\r\n\r\nHardlinks could do the trick to some extent but, quoting http://blogs.msdn.com/b/b8/archive/2012/01/16/building-the-next-generation-file-system-for-windows-refs.aspx :\r\n  &quot;The NTFS features we have chosen to not support in ReFS are: named streams, object IDs, short names, compression, file level encryption (EFS), user data transactions, sparse, hard-links, extended attributes, and quotas.&quot;\r\nReFS is coming in Windows 8 enterprise/server editions, as some kind of test, and actually can't be booted from. It's not there and not widespread yet, but it's definitely coming.\r\n\r\nApparently, junction points will still exist and they could maybe used but they're not perfect either I think.\r\n\r\nAs far as I'm concerned, I'd try to create regular symlinks if running as admin and otherwise, create a copy of the file, and not try any middle-ground (at least for now).\r\n\r\nAre there any comments about this? Also, if not running as admin and there is a symlink pointing to a file outside of the archive, should that file be copied?",
            "published" : "2012-04-28T22:23:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "There are two problems:\r\n\r\nFirst, how to put Windows filesystem objects into an archive?  Last I checked, there were several different variations of \"link\" on Windows filesystems with varying semantics across different versions of Windows.  Whether one or all of these should be archived as a \"symlink\" is an open question.  (Fortunately, the pax format provides a way to carry additional information, so we might be able to archive different things as \"symlink\" with an additional property to indicate what type of link it really was originally.)  It would be interesting to see if any Windows-specific archivers (such as Microsoft's CAB tools or PKZIP) do anything interesting here.\r\n\r\nSecond, how should \"symlinks\" in a tar archive be restored onto Windows?  The Cygwin folks have been wrestling with this problem for years and have come up with some workable answers.\r\n",
            "published" : "2012-04-28T23:42:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pgquiles@elpauer.org",
              "htmlLink" : "https://code.google.com/u/114935191070192080609/"
            },
            "content" : "Tim,\r\n\r\nWhatever approach is taken in regards to symlinks, one must be chosen. This issue in libarchive is breaking some very popular downloads, e. g. OpenSSL.\r\n\r\nI think taking the same approach as 7-zip is one possible and savvy choice. At least, it works and the code is already there.\r\n",
            "published" : "2013-07-03T13:35:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Sounds like you know more about this than I do.  (It's been a long time\r\nsince I did significant work with Windows.)\r\n\r\nPlease take a look at libarchive/archive_read_disk_windows.c and \r\nlibarchive/archive_write_disk_windows.c and see if you can help us\r\nfigure out how to improve this.\r\n",
            "published" : "2013-07-04T02:19:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 260,
        "title" : "\"bsdtar -cJ foo\" crashes (assert failure) due to close(-1)",
        "summary" : "\"bsdtar -cJ foo\" crashes (assert failure) due to close(-1)",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2013-10-18T08:32:59.000Z",
        "published" : "2012-05-06T07:42:04.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Run bsdtar -cJ foo\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nAn error message should be displayed. Instead, on Windows an assert failure from the CRT is shown with &quot;Expression: (fh &gt;= 0 &amp;&amp; (unsigned)fh &lt; (unsigned)_nhandle)&quot; because close() was called with -1 in:\r\n\r\nfile_close():242\r\narchive_write_client_close():438\r\narchive_compression_xz_close():434\r\narchive_write_open():472\r\nopen_filename():124\r\narchive_write_open_filename():79\r\n\r\n\r\n<b>What version are you using?</b>\n\r\n3.0.4\r\n\r\n<b>On what operating system?</b>\n\r\nWindows Server 2008 R2\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nCMake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nVisual Studio 2010 10.0.40219.1 SP1Rel\r\n\r\n",
            "published" : "2012-05-06T07:42:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "This crash also occurs when trying to create an archive in a directory without write permissions - e.g. on a CD. This time libarchive was built with Visual Studio 2012, and the crash occurs both in debug and release builds.\r\n\r\nmsvcr110d.dll!_close\r\napp.exe!file_close\r\napp.exe!archive_write_client_close\r\napp.exe!__archive_write_close_filter\r\napp.exe!archive_write_open\r\napp.exe!open_filename\r\napp.exe!archive_write_open_filename_w\r\napp.exe!create_archive\r\napp.exe!main\r\napp.exe!__tmain\r\napp.exe!_tmainCRTStartup\r\napp.exe!mainCRTStartup",
            "published" : "2013-10-18T08:31:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "I've also since upgraded to libarchive 3.1.2.",
            "published" : "2013-10-18T08:32:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 261,
        "title" : "Code with undefined behaviour fails to build on Hurd",
        "summary" : "Code with undefined behaviour fails to build on Hurd",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.henriksson",
          "htmlLink" : "https://code.google.com/u/111568587401827597992/"
        },
        "updated" : "2012-05-13T16:48:29.000Z",
        "published" : "2012-05-13T09:57:02.000Z",
        "closed" : "2012-05-13T16:48:29.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 255
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.henriksson",
              "htmlLink" : "https://code.google.com/u/111568587401827597992/"
            },
            "content" : "Building with gcc 4.7 on Hurd fails. Forwarding problem description from Debian GNU/Hurd porters with detailed description.\r\n\r\nOriginal bug report available at:\r\nhttp://bugs.debian.org/cgi-bin/bugreport.cgi?bug=672690\r\n\r\n\r\nFrom: Samuel Thibault &lt;sthibault@debian.org&gt;\r\n\r\nHello,\r\n\r\nlibarchive currently FTBFS on hurd-i386, see \r\n\r\nhttps://buildd.debian.org/status/fetch.php?pkg=libarchive&amp;arch=hurd-i386&amp;ver=3.0.4-1%2Bb1&amp;stamp=1336821322\r\n\r\nThis build was done with gcc-4.7, which is probably the &quot;culprit&quot;, by\r\noptimizing yet more. The issue is with the following piece of code:\r\n\r\n\tmin_time = archive_entry_mtime(ae);\r\n\tassert(min_time &lt;= 0);\r\n\t/* Simply asserting min_time - 1 &gt; 0 breaks with some compiler optimizations. */\r\n\tt = min_time - 1;\r\n\tassert(t &gt; 0);\r\n\r\nThis is supposed to check for overflowing when subtracting 1 from the\r\nminimum time_t value.  Problem is: that is undefined in C, and the\r\ncompiler is thus allowed to do anything, including always raising the\r\nassertion, since we have already checked that the integer is negative,\r\nso subtracting 1 to it is not supposed to make it positive (again,\r\noverflow is undefined).  Printing t, for instance, fixes the test, since\r\nthe compiler then actually computes t, but without it the assert always\r\ngets triggered. I tried to reproduce it with i386, without success, but\r\nanyway, the piece of code really has undefined behavior.\r\n\r\nSamuel\r\n\r\n\r\n-- System Information:\r\nDebian Release: wheezy/sid\r\n  APT prefers testing\r\n  APT policy: (990, 'testing'), (500, 'unstable'), (500, 'stable'), (1, 'experimental')\r\nArchitecture: amd64 (x86_64)\r\n\r\nKernel: Linux 3.0.4 (SMP w/8 CPU cores)\r\nLocale: LANG=fr_FR.UTF-8, LC_CTYPE=fr_FR.UTF-8 (charmap=UTF-8)\r\nShell: /bin/sh linked to /bin/bash\r\n",
            "published" : "2012-05-13T09:57:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This was raised earlier in Issue 255.  Please read that thread for more details about the logic behind this code.  (If you know of a better way to test the assertion that \"the variable min_time holds the smallest possible time_t value\", I'd be very interested.)\r\n\r\nA fix for this has already been committed to libarchive:\r\nhttps://github.com/libarchive/libarchive/commit/da8ac32da9e5ee4a27674de4442e24c26cb2aa6a",
            "published" : "2012-05-13T16:48:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "255"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 262,
        "title" : "Subfile in certain RAR cannot be read",
        "summary" : "Subfile in certain RAR cannot be read",
        "stars" : 8,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "simon.bailey@prismit.com.au",
          "htmlLink" : "https://code.google.com/u/101982852811856813968/"
        },
        "updated" : "2014-09-04T09:48:59.000Z",
        "published" : "2012-05-14T07:52:30.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 11,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nFirst call to archive_read_data_block fails on subfile &quot;PowerPointSlides1.ppt&quot;.  Returns ARCHIVE_FAILED.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nShould be able to extract this file.  Works in other RAR reader.\r\n\r\n<b>What version are you using?</b>\n3.0.4\r\n\r\n<b>On what operating system?</b>\nUbuntu \r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nCustom build solution, based on configure.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nGCC 4.4.5\r\n\r\n<b>Please provide any additional information below.</b>\nCompiled for 32 bits.\r\nListing the file in the archive works.  It fails on extract.",
            "published" : "2012-05-14T07:52:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2620000000",
              "fileName" : "PowerPointSlides1.rar",
              "fileSize" : 1807462,
              "mimetype" : "application/x-rar; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pascal.weisenburger",
              "htmlLink" : "https://code.google.com/u/112588522212751930105/"
            },
            "content" : "I can confirm this issue with the latest libarchive release. The error that libarchive reports when trying to extract the file is \"Parsing filters is unsupported\".\r\n\r\nI have several rar files that cannot be read by libarchive because of this (e.g. the official, but non-free \"unrar\" and the \"theunarchiver\" programs can read this kind of files); everything else works perfectly and I would like to completely switch to libarchive. \r\n\r\nWould it be possible to support \"filters parsing\" (I'm no expert in this field, so I don't know what this actually means) or is this something that is unlikely to be implemented in the near future?\r\n",
            "published" : "2013-09-02T15:54:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zohar.meridor",
              "htmlLink" : "https://code.google.com/u/106276608939877445719/"
            },
            "content" : "I am having the same issue.\r\nAny new regarding this \"Parsing filters is unsupported\" issue on rar files?",
            "published" : "2013-11-13T15:06:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "panpingzhu@yahoo.com",
              "htmlLink" : "https://code.google.com/u/113278872911653779753/"
            },
            "content" : "I have the same issue. I did some debug, the reason is:\r\n\r\n    else if(symbol==257)\r\n    {\r\n      archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,\r\n                        \"Parsing filters is unsupported 1.\");\r\n      return (ARCHIVE_FAILED);\r\n    }\r\n",
            "published" : "2014-06-30T23:52:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "panpingzhu@yahoo.com",
              "htmlLink" : "https://code.google.com/u/113278872911653779753/"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "panpingzhu@yahoo.com",
              "htmlLink" : "https://code.google.com/u/113278872911653779753/"
            },
            "content" : "I did some debugging, and the reason was with the following code segment:\r\n\r\n    else if(symbol==257)\r\n    {\r\n      archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,\r\n                        \"Parsing filters is unsupported.\");\r\n      return (ARCHIVE_FAILED);\r\n    }\r\n",
            "published" : "2014-06-30T23:54:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "juanjomarin96",
              "htmlLink" : "https://code.google.com/u/102590783040593125503/"
            },
            "content" : "I have Fedora 20 and libarchive 3.1.2 (packages, libarchive-3.1.2-7.fc20.x86_64.rpm and libarchive-devel-3.1.2-7.fc20.x86_64.rpm) and I have the same issue. Certain subfiles cannot be read. I'm trying to use libarchive to open cbr files (basically, rar files with images files, usually jpeg). Some compressed files contains a subfile that produce that error \"Unrecognized image file format\". Even if I isolate the subfile in one compressed file, the problem persist.\r\n\r\nI attach a file with this problem. ",
            "published" : "2014-08-15T22:18:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "juanjomarin96",
              "htmlLink" : "https://code.google.com/u/102590783040593125503/"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2620005000",
              "fileName" : "013.cbr",
              "fileSize" : 1199089,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "juanjomarin96",
              "htmlLink" : "https://code.google.com/u/102590783040593125503/"
            },
            "content" : "I'm having the same issue \"Parsing filters is unsupported\" decompressing some rar files.\r\n\r\nMy system is a Fedora 20 x86_64 and I'm using the provided packages (libarchive-3.1.2-7.fc20.x86_64 and libarchive-devel-3.1.2-7.fc20.x86_64).\r\n\r\nI'm using libarchive to decompress cbr files. Certain images in some rar files are not decompressed by libarchive. This is something related with the content of the files, because the problem is reproducible when I isolate the file in a rar file.\r\n\r\nApart from my program, even bsdtar -xf shows the same error. I attach a rar file with the problem.\r\n\r\n$ bsdtar -xf sample.rar \r\n013.jpg: Parsing filters is unsupported.\r\nbsdtar: Error exit delayed from previous errors.",
            "published" : "2014-08-16T18:36:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "juanjomarin96",
              "htmlLink" : "https://code.google.com/u/102590783040593125503/"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "juanjomarin96",
              "htmlLink" : "https://code.google.com/u/102590783040593125503/"
            },
            "content" : "I'm having the same issue \"Parsing filters is unsupported\" decompressing some rar files.\r\n\r\nMy system is a Fedora 20 x86_64 and I'm using the provided packages (libarchive-3.1.2-7.fc20.x86_64 and libarchive-devel-3.1.2-7.fc20.x86_64).\r\n\r\nI'm using libarchive to decompress cbr files. Certain images in some rar files are not decompressed by libarchive. This is something related with the content of the files, because the problem is reproducible when I isolate the file in a rar file.\r\n\r\nApart from my program, even bsdtar -xf shows the same error. I attach a rar file with the problem.\r\n\r\n$ bsdtar -xf sample.rar \r\n013.jpg: Parsing filters is unsupported.\r\nbsdtar: Error exit delayed from previous errors.",
            "published" : "2014-08-16T18:37:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2620007000",
              "fileName" : "sample.rar",
              "fileSize" : 1199089,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 338 has been merged into this issue.",
            "published" : "2014-08-16T20:31:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cmihail@chromium.org",
              "htmlLink" : "https://code.google.com/u/115824416624139140536/"
            },
            "content" : "We're planning to use librarchive in Chromium but we've stumbled on the same issue: \"Parsing filters is unsupported\".\r\n\r\nI looked into the base code used by libarchive at https://code.google.com/p/theunarchiver/. For details see\r\nhttps://code.google.com/p/libarchive/issues/detail?id=40&colspec=ID%20Type%20Status%20Priority%20Milestone%20OpSys%20Owner%20Summary\r\n\r\nIt seems the problem is related with the fact that the RAR Virtual Machine is not implemented in libarchive. So that code must be also ported to libarchive.\r\n\r\nSince it's very important to our project, I'd like to work on it and merge the patch to libarchive.\r\n\r\nAre you fine with porting the filters support from thelibunarchiver to libarchive?\r\n\r\nThanks,\r\nMihail",
            "published" : "2014-08-29T02:21:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "zeniko",
              "htmlLink" : "https://code.google.com/u/zeniko/"
            },
            "content" : "FYI: I have a working port of TheUnarchiver's RARVM to portable C at https://code.google.com/p/sumatrapdf/source/browse/trunk/ext/unarr/ . It currently supports RAR v2.0 and v3.0 archives, including parsing filters and solid compressions (which libarchive doesn't support, either). It's however LGPL licensed same as TheUnarchiver.",
            "published" : "2014-09-04T09:48:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 263,
        "title" : "'a' is not defined in close_and_restore_time() when HAVE_UTIMES undefined",
        "summary" : "'a' is not defined in close_and_restore_time() when HAVE_UTIMES undefined",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "macton",
          "htmlLink" : "https://code.google.com/u/105595823502776413734/"
        },
        "updated" : "2012-11-11T11:36:59.000Z",
        "published" : "2012-05-17T04:05:10.000Z",
        "closed" : "2012-11-11T11:36:59.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "macton",
              "htmlLink" : "https://code.google.com/u/105595823502776413734/"
            },
            "content" : "Build without HAVE_UTIMES defined\r\n\r\nIn libarchive/archive_read_disk_posix.c : 1892\r\n'a' is not in close_and_restore_time():\r\n\r\nCan replace with:\r\n(void)t;\r\n(void)rt;\r\n",
            "published" : "2012-05-17T04:05:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for pointing out.\r\nI committed the fix.",
            "published" : "2012-11-11T11:36:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 264,
        "title" : "mtree file generation issue",
        "summary" : "mtree file generation issue",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "allan.mcrae",
          "htmlLink" : "https://code.google.com/u/104093793714374073720/"
        },
        "updated" : "2012-09-26T02:24:14.000Z",
        "published" : "2012-05-21T07:05:03.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 11,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allan.mcrae",
              "htmlLink" : "https://code.google.com/u/104093793714374073720/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. mkdir tmp &amp;&amp; cd tmp\r\n2. mkdir foo bar\r\n3. bsdtar -cf foo.mtree --format=mtree --options='!all,type' *\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe current output is:\r\n#mtree\r\nbar type=dir\r\nfoo type=dir\r\n\r\nI would expect:\r\n#mtree\r\nbar type=dir\r\n..\r\nfoo type=dir\r\n..\r\n\r\n\r\n<b>What version are you using?</b>\n3.0.4\r\n\r\n<b>On what operating system?</b>\nArch Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n./configure --prefix=/usr --without-xml2\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc version 4.7.0 20120505 (prerelease) (GCC) \r\n\r\n<b>Please provide any additional information below.</b>\nWhen reading the currently generated mtree file, libarchive thinks the entries are for &quot;foo&quot; and &quot;foo/bar&quot;. This is correct for the mtree file that is generated.\r\n\r\nThe first entry &quot;bar type=dir&quot; has no &quot;/&quot; in so is treated as a relative path.  As it is a directory, all subsequent entries are considered to be within that directory.\r\n\r\nManually adding the &quot;..&quot; moves the current directory back down to the base level and then libarchive reads the entries correctly as &quot;foo&quot; and &quot;bar&quot;",
            "published" : "2012-05-21T07:05:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allan.mcrae",
              "htmlLink" : "https://code.google.com/u/104093793714374073720/"
            },
            "content" : "Attached is a patch that fixes this issue.\r\n\r\nTest with:\r\nmkdir test && cd test\r\nmkdir foo bar\r\ntouch foo/foo bar/bar baz\r\nbsdtar -cf test.mtree --format=mtree --options='!all,type'\r\n\r\nWhich gives the following mtree file:\r\n\r\n#mtree\r\nbar type=dir\r\nbar/bar type=file\r\n..\r\nbaz type=file\r\nfoo type=dir\r\nfoo/foo type=file\r\n\r\n\r\nTechnically there probably should be a \"..\" at the end too (as we are exiting the foo directory), but this is cosmetic being at the end of the file.\r\n",
            "published" : "2012-06-06T13:55:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2640001000",
              "fileName" : "0001-Fix-mtree-generation.patch",
              "fileSize" : 3047,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allan.mcrae",
              "htmlLink" : "https://code.google.com/u/104093793714374073720/"
            },
            "content" : "Attached is an updated patch.  The only change is to print the cosmetic \"..\" at the end of the mtree file if needed.",
            "published" : "2012-06-18T03:14:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2640002000",
              "fileName" : "0001-Fix-mtree-generation.patch",
              "fileSize" : 3390,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I agree there is a bug here, but I fear your fix is making it worse.  The libarchive mtree writer is supposed to support two very different mtree variants:\r\n  * The \"old\" variant (which uses \"..\" entries to navigate the hierarchy)\r\n  * The \"NetBSD\" variant (which stores full path names).  This is the format generated by \"mtree -C\" on NetBSD.\r\n\r\nWhen reading mtree files, the two formats can be distinguished by the presence of '/' in the pathname.  The \"old\" variant NEVER has a '/' in the pathname; the \"NetBSD\" variant ALWAYS has a '/' in the pathname.\r\n\r\nFor example, for the directory generated by \"mkdir bar && touch bar/bar\", either of the two following files are correct:\r\n\r\n  #mtree (\"old\" variant)\r\n  bar type=dir\r\n    bar type=file\r\n  ..\r\n\r\nOR\r\n\r\n  #mtree (NetBSD -C variant)\r\n  ./bar type=dir\r\n  bar/bar type=file\r\n\r\nThe NetBSD variant has the advantage that it can be easily filtered with standard tools like 'grep'.  Unfortunately, it's not as widely supported as the old variant.\r\n\r\nThe output you showed in Comment #1 above has some entries with '/' and some without, which makes it invalid for either variant.",
            "published" : "2012-06-18T05:03:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allan.mcrae",
              "htmlLink" : "https://code.google.com/u/104093793714374073720/"
            },
            "content" : "As far as I can tell, there is nothing disallowing the use of both relative and and full pathnames in the \"mtree v2.0\" (NetBSD -C) format.  The 2.0 format only allows for full pathnames, in addition to the relative path name method of specification.  The only thing I see wrong with the output is that it does not have the \"v2.0\" string to confirm it is allowed full paths to files in it.  Note that the libarchive mtree reader can read the mixed format fine.\r\n\r\nI can readily provide a patch to have libarchive generate the v2.0 format by just adding a leading ./ in front of directories in the root path.  However, unless I am missing something completely obvious...  I can not see a way to tell libarchive/bsdtar to generate the \"old\" variant.  Is that supposed to be available now?",
            "published" : "2012-06-18T05:50:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allan.mcrae",
              "htmlLink" : "https://code.google.com/u/104093793714374073720/"
            },
            "content" : "Following this up... How would you like me to fix this issue?\r\n\r\nIf writing both versions of mtree file needs to be available, I propose providing writing functions for the v1 and v2 versions of the mtree format, and picking one for the current to default to. That would give (e.g.) archive_write_set_format_mtree_v1 and archive_write_set_format_mtree_v2.\r\n\r\nThe read function would not need multiple versions as it already deals with both format types.",
            "published" : "2012-07-31T10:12:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The \"v1\" and \"v2\" names are ones that I made up when I created the mtree.5 manpage.  We should probably abandon those names, as noone else uses them.  I also made up the \"#mtree\" initial line requirement (wishful thinking on my part).  Again, that should be abandoned as it doesn't match current practice.  (I thought some form of signature line would be necessary to do good auto-detection of mtree files, but Michihiro did some work that seems to have proven you can do reasonable auto-detect without i.)\r\n\r\nMixing the two formats is certainly possible but I doubt that the various tools are consistent in how they handle it (there's some ambiguity in the NetBSD manpages about how this works).  Best to generate just one or the other.\r\n\r\nPersonally, I would like to see the NetBSD format be the default, as it's more useful in general.  So I would propose that:\r\n   archive_write_set_format_mtree --- generate the NetBSD -C format\r\n   archive_write_set_format_mtree_??? --- generate the older format\r\n\r\nI'm not sure what a good name might be.  \"legacy\" is a little judgmental.  Perhaps \"formatted\"?  or \"indented\"?  Or maybe you have a better idea?\r\n\r\nOr perhaps the older format should be the default and the NetBSD -C format should be called \"full\"?",
            "published" : "2012-08-01T05:24:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allan.mcrae",
              "htmlLink" : "https://code.google.com/u/104093793714374073720/"
            },
            "content" : "How about \"archive_write_set_format_mtree_classic\" for the indented version?",
            "published" : "2012-08-01T05:41:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "That sounds great.",
            "published" : "2012-08-01T15:42:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allan.mcrae",
              "htmlLink" : "https://code.google.com/u/104093793714374073720/"
            },
            "content" : "Attached is a patch that fixes mtree generation to always prefix files in the root directory with \"./\".   This results in the mtrees generated in the \"NetBSD -C variant\" format.\r\n\r\nAdding another function to generate the classic indented format requires much larger changes to the mtree writer.  I will not have time to address that in the short term...",
            "published" : "2012-09-08T09:20:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2640009000",
              "fileName" : "0001-Fix-mtree-generation.patch",
              "fileSize" : 1200,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I just committed support for generating an older format.\r\nI also added the ability to read the \"NetBSD -D\" variant a few days ago.",
            "published" : "2012-09-26T02:24:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 265,
        "title" : "a format limit",
        "summary" : "a format limit",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "nii.zelda",
          "htmlLink" : "https://code.google.com/u/113243699072691329271/"
        },
        "updated" : "2012-05-26T03:31:16.000Z",
        "published" : "2012-05-25T03:28:51.000Z",
        "closed" : "2012-05-26T03:31:16.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nii.zelda",
              "htmlLink" : "https://code.google.com/u/113243699072691329271/"
            },
            "content" : "libachive can work with xx.tar.gz, but xx.tar.xz; xx.tar.bz2 is not when archive_read_data is return -25(size_t) ",
            "published" : "2012-05-25T03:28:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "tar.xz and tar.bz2 both work for me.\r\n\r\nCan you provide example code that shows the problem?\r\n\r\nWhat version of libarchive are you using?\r\n\r\nWhat operating system are you using?\r\n\r\nHow are you compiling?\r\n\r\nDo you have libbz2 on your system?\r\n\r\nDo you have bunzip2 on your system?\r\n\r\nDo you have liblzma on your system?\r\n\r\nDo you have unxz on your system?\r\n\r\nCan you run the libarchive test suite?\r\n",
            "published" : "2012-05-25T03:47:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nii.zelda",
              "htmlLink" : "https://code.google.com/u/113243699072691329271/"
            },
            "content" : "oh! i find the error , i consider libarhive can be build with bz/lzma without libbz2 and liblzma",
            "published" : "2012-05-26T00:58:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Libarchive uses libbz2 and liblzma for bz and xz/lzma support.  If it is not built with them, it will try to run the bunzip2 or unxz command-line programs.  If you don't build it with the libraries and don't have the executables, then it won't work.\r\n",
            "published" : "2012-05-26T03:31:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 266,
        "title" : "Checks fail for bsdtar_test and bsdcpio_test when UID is too large",
        "summary" : "Checks fail for bsdtar_test and bsdcpio_test when UID is too large",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kristi.dev",
          "htmlLink" : "https://code.google.com/u/109589932535050147947/"
        },
        "updated" : "2012-06-03T18:22:35.000Z",
        "published" : "2012-06-03T18:16:07.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kristi.dev",
              "htmlLink" : "https://code.google.com/u/109589932535050147947/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Compile\r\n./configure\r\nmake\r\n2. Run checks\r\nmake check\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpect checks to pass.\r\nInstead, tests for bsdtar_test and bsdcpio_test fail (tests for libarchive all pass though).  Output snippets:\r\n\r\nTotals:\r\n  Tests run:               32\r\n  Tests failed:             6\r\n  Assertions checked:    6448\r\n  Assertions failed:      915\r\n  Skips reported:           2\r\n\r\nFailing tests:\r\n  1: test_basic (14 failures)\r\n  2: test_copy (886 failures)\r\n  13: test_option_b (2 failures)\r\n  15: test_option_gid_gname (8 failures)\r\n  22: test_option_r (2 failures)\r\n  24: test_option_uid_uname (3 failures)\r\n\r\nDetails for failing tests: /tmp/bsdtar_test.2012-06-03T11.10.53-000\r\n\r\nFAIL: bsdtar_test\r\n\r\n=========\r\nTotals:\r\n  Tests run:               27\r\n  Tests failed:             2\r\n  Assertions checked:     772\r\n  Assertions failed:       16\r\n  Skips reported:           4\r\n\r\nFailing tests:\r\n  1: test_basic (13 failures)\r\n  12: test_option_c (3 failures)\r\n\r\nDetails for failing tests: /tmp/bsdcpio_test.2012-06-03T11.10.57-000\r\n\r\nFAIL: bsdcpio_test\r\n\r\n\r\n<b>What version are you using?</b>\nlibarchive 3.0.4\r\n\r\n<b>On what operating system?</b>\nDebian 6.0.4\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc (Debian 4.4.5-8) 4.4.5\r\n\r\n<b>Please provide any additional information below.</b>\nMy UID is 13025302",
            "published" : "2012-06-03T18:16:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kristi.dev",
              "htmlLink" : "https://code.google.com/u/109589932535050147947/"
            },
            "content" : "log files attached",
            "published" : "2012-06-03T18:22:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2660001000",
              "fileName" : "logs.tar.gz",
              "fileSize" : 7655,
              "mimetype" : "application/x-gzip; charset=binary"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 267,
        "title" : "Support Microsoft Backup (MTF/BKF) format",
        "summary" : "Support Microsoft Backup (MTF/BKF) format",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "sjmurdoch",
          "htmlLink" : "https://code.google.com/u/114503061772900775403/"
        },
        "updated" : "2012-06-15T04:00:00.000Z",
        "published" : "2012-06-14T16:15:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sjmurdoch",
              "htmlLink" : "https://code.google.com/u/114503061772900775403/"
            },
            "content" : "A useful feature would be to support the MTF/BKF file format produced by Microsoft Backup (also known as NTBackup). There is an GPL implementation of a decoder, which I have cleaned up to compile on BSD-like platforms (see http://www.lightbluetouchpaper.org/2012/06/13/extracting-microsoft-windows-backup-bkf-files-on-mac-os-x/).\r\n\r\nInformation about the format can also be found scattered around the web, e.g.\r\n - http://laytongraphics.com/mtf/MTF_100a.PDF\r\n - http://laytongraphics.com/mtf/\r\n - http://www.fpns.net/willy/msbackup.htm",
            "published" : "2012-06-14T16:15:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "GPLed code can't be pulled directly into libarchive.\r\n\r\nBut it looks like there's enough format documentation here to enable someone to\r\nwrite this support from scratch if they wanted.",
            "published" : "2012-06-15T04:00:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 268,
        "title" : "Windows build broken (__func__ not supported)",
        "summary" : "Windows build broken (__func__ not supported)",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2012-12-02T12:14:59.000Z",
        "published" : "2012-06-29T08:36:16.000Z",
        "closed" : "2012-12-02T12:14:59.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "Commit 1e5f600ee3f891c9f3427acc3746db32996d77bc (libarchive/archive_read_support_filter_lrzip.c) on April 22nd broke the Windows build (Visual Studio 2010) because __func__ is C99 and isn't supported in Microsoft compilers - it needs to use the older non-standard __FUNCTION__.",
            "published" : "2012-06-29T08:36:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "This issue was fixed removing a use of __func__ macro in 65a05028.",
            "published" : "2012-12-02T12:14:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 269,
        "title" : "deprecated archive_read_open_file used in examples and code",
        "summary" : "deprecated archive_read_open_file used in examples and code",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2012-12-02T12:40:20.000Z",
        "published" : "2012-06-30T09:30:08.000Z",
        "closed" : "2012-12-02T12:40:20.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "According to archive.h line 410, archive_read_open_file is a deprecated synonym for ..._open_filename(). However, it's used in https://github.com/libarchive/libarchive/wiki/Examples and within the libarchive distribution:\r\n\r\ncpio\\cpio.c(911)\r\ncpio\\cpio.c(1013)\r\nexamples\\untar.c(161)\r\nexamples\\untar.c(162)\r\nexamples\\minitar\\minitar.c(364)\r\nlibarchive\\test\\test_read_format_ar.c(43)\r\nlibarchive\\test\\test_read_format_mtree.c(59)\r\nlibarchive\\test\\test_read_format_mtree.c(246)\r\nlibarchive\\test\\test_read_format_rar.c(45)\r\nlibarchive\\test\\test_read_format_rar.c(119)\r\nlibarchive\\test\\test_read_format_rar.c(153)\r\nlibarchive\\test\\test_read_format_rar.c(191)\r\nlibarchive\\test\\test_read_format_rar.c(325)\r\nlibarchive\\test\\test_read_format_rar.c(415)\r\nlibarchive\\test\\test_read_format_rar.c(507)\r\nlibarchive\\test\\test_read_format_rar.c(552)\r\nlibarchive\\test\\test_read_format_rar.c(644)\r\nlibarchive\\test\\test_read_format_rar.c(695)\r\nlibarchive\\test\\test_read_format_rar.c(742)\r\nlibarchive\\test\\test_read_format_rar.c(1035)\r\ntar\\read.c(183)\r\ntar\\write.c(614)",
            "published" : "2012-06-30T09:30:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for pointing out.\r\nI committed a fix for this issue not to use deprecated functions.",
            "published" : "2012-12-02T12:40:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 270,
        "title" : "archive_write_finish_entry(3) refers to non-existant archive_write_next_header",
        "summary" : "archive_write_finish_entry(3) refers to non-existant archive_write_next_header",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2015-03-04T05:10:42.000Z",
        "published" : "2012-06-30T18:29:54.000Z",
        "closed" : "2015-03-04T05:10:42.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "archive_write_finish_entry(3) contains the sentence:\r\n\r\nOrdinarily, clients never need to call this, as it is called automatically by archive_write_next_header() and archive_write_close() as needed.\r\n\r\nHowever, archive_write_next_header doesn't seem to exist in the current (3.0.4) libarchive sources.",
            "published" : "2012-06-30T18:29:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for reporting this.\r\n\r\nFixed in git 8452ba9\r\n",
            "published" : "2015-03-04T05:10:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 271,
        "title" : "bsdtar does not preserve executable flag when extracting zipfile",
        "summary" : "bsdtar does not preserve executable flag when extracting zipfile",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dieterplaetinck",
          "htmlLink" : "https://code.google.com/u/117951579568080774621/"
        },
        "updated" : "2012-12-02T12:43:25.000Z",
        "published" : "2012-07-04T23:11:13.000Z",
        "closed" : "2012-12-02T12:43:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dieterplaetinck",
              "htmlLink" : "https://code.google.com/u/117951579568080774621/"
            },
            "content" : "take a zipfile that contains a file that has an executable flag.\r\nfor example phantomjs-1.6.0-source.zip @ http://code.google.com/p/phantomjs/downloads/list\r\n\r\nit includes build.sh in the root dir.\r\nwhen you unzip with `unzip` build.sh has the +x flag.\r\nwhen you extract with `bsdtar -fx`, it doesn't.\r\n\r\nlibarchive 3.0.4-1 on arch linux 32bit.\r\n",
            "published" : "2012-07-04T23:11:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dieterplaetinck",
              "htmlLink" : "https://code.google.com/u/117951579568080774621/"
            },
            "content" : "also the executable flag is not visible when listing the contents:\r\n\r\n$ bsdtar tvf phantomjs-1.6.0-source.zip | grep build.sh\r\n-rw-rw-rw-  0 0      0        1586 Jun 20 23:28 phantomjs-1.6.0/build.sh\r\n\r\n",
            "published" : "2012-07-04T23:16:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "The sample file has a zip comment and our zip reader cannot find the central directory nor\r\nget the file mode in that case.\r\nCould you try the attached patch ?",
            "published" : "2012-11-06T06:27:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2710002000",
              "fileName" : "issue271.patch",
              "fileSize" : 1757,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I think Info-Zip looks at the last 16k of the file when looking for a central directory marker when there might be a comment.",
            "published" : "2012-11-07T06:47:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for helpful information.\r\nI will increase the number of the bytes to detect end of central directory with a comment.",
            "published" : "2012-11-07T09:48:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I committed a fix for this issue.\r\nI will close this issue.",
            "published" : "2012-12-02T12:43:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 272,
        "title" : "when compress files to .zip . How can i get files only decompress once.",
        "summary" : "when compress files to .zip . How can i get files only decompress once.",
        "stars" : 1,
        "starred" : false,
        "status" : "WorksForMe",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bjbyj_hl@163.com",
          "htmlLink" : "https://code.google.com/u/117727666540131987095/"
        },
        "updated" : "2012-07-07T03:56:56.000Z",
        "published" : "2012-07-06T02:05:23.000Z",
        "closed" : "2012-07-07T03:56:56.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bjbyj_hl@163.com",
              "htmlLink" : "https://code.google.com/u/117727666540131987095/"
            },
            "content" : "I use archive_write_set_format_zip to compress files to .zip, but i must decompress twice to get those files. how can i write file that like decompress once, what is it format?",
            "published" : "2012-07-06T02:05:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Are you also specifying archive_write_set_compression_gzip ??\r\n\r\nDon't do that.\r\n",
            "published" : "2012-07-06T04:10:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bjbyj_hl@163.com",
              "htmlLink" : "https://code.google.com/u/117727666540131987095/"
            },
            "content" : "Thanks.\r\nNo do archive_write_set_compression_gzip()，the result is my expect!",
            "published" : "2012-07-06T09:01:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2012-07-07T03:56:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WorksForMe"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 273,
        "title" : "Watcom libarchive build failures",
        "summary" : "Watcom libarchive build failures",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "adamyg",
          "htmlLink" : "https://code.google.com/u/105387162085743576420/"
        },
        "updated" : "2012-07-18T15:42:50.000Z",
        "published" : "2012-07-18T13:08:16.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "adamyg",
              "htmlLink" : "https://code.google.com/u/105387162085743576420/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. untar libarchive\r\n2. mkdir buildwc\r\n3. cd buildwc\r\n4. cmake -DCMAKE_BUILD_TYPE=Release -G &quot;Watcom WMake&quot; ..\r\n5. wmake\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\no. many redefinitions within 'archive_windows.h', examples\r\n    S_ISUID, S_ISGID, S_IRxxx ...\r\n     \r\no. redefinitions errors of functions referencing mode_t\r\n \r\n<b>What version are you using?</b>\n\r\ncurrent cmake and libarchive (3.0.4)\r\n\r\n<b>On what operating system?</b>\nWindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-07-18T13:08:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "adamyg",
              "htmlLink" : "https://code.google.com/u/105387162085743576420/"
            },
            "content" : "What compiler or development environment (please include version)?\r\no Open Watcom C32 Optimizing Compiler Version 1.9",
            "published" : "2012-07-18T13:27:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "There was a little effort about two years ago to make libarchive\r\nwork better with Watcom compilers, but there don't seem to be\r\nmany people using it.\r\n\r\nPatches eagerly solicited.",
            "published" : "2012-07-18T15:42:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 274,
        "title" : "duplicate hardlinks in archive when tar fed filelist (-T -)",
        "summary" : "duplicate hardlinks in archive when tar fed filelist (-T -)",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "sitkack",
          "htmlLink" : "https://code.google.com/u/103303914783020237997/"
        },
        "updated" : "2012-08-02T04:55:21.000Z",
        "published" : "2012-07-31T20:10:17.000Z",
        "closed" : "2012-08-01T05:08:48.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. with a directory tree containing hardlinks\r\n2. find . | bsdtar cv -T - -f output.tar\r\n3. witness duplicate hardlinks\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI expect\r\n\r\ntar cvf output.tar archived-directory\r\n-to match-\r\nfind archived-directory | tar cvf output.tar -T -\r\n\r\n<b>What version are you using?</b>\n\r\n(t.env)[worker@disk staging]$ bsdtar --version\r\nbsdtar 3.0.4 - libarchive 3.0.4\r\n\r\n\r\n<b>On what operating system?</b>\n\r\nLinux disk 2.6.32-220.el6.x86_64 #1 SMP Tue Dec 6 19:48:22 GMT 2011 x86_64 x86_64 x86_64 GNU/Linux\r\nCentOS release 6.2 (Final)\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nconfigure --prefix=&lt;some/dir&gt;\r\nmake\r\nmake install\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\ngcc --version\r\ngcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4)\r\nCopyright (C) 2010 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nfwiw, gnutar appears to have an identical bug\r\n\r\ntree root/\r\nroot/\r\n├── snap.a\r\n│   ├── hl.1\r\n│   └── random.bin\r\n└── snap.b\r\n    └── hl.2\r\n\r\nall of the child files (hl.1,random.bin and hl.2) are hardlinks.\r\n\r\n== success case, allowing tar to feed itself ==\r\n\r\n$bsdtar cvf test.root.nopipe.tar root\r\na root\r\na root/snap.b\r\na root/snap.a\r\na root/snap.a/hl.1\r\na root/snap.a/random.bin\r\na root/snap.b/hl.2\r\n\r\n$bsdtar tvf test.root.nopipe.tar \r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:34 root/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.b/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.a/\r\n-rw-rw-r--  0 worker worker 20971520 Jul 31 15:33 root/snap.a/hl.1\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.a/hl.1\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.b/hl.2 link to root/snap.a/hl.1\r\n\r\n== feeding tar via find ==\r\n\r\n$ find root | tar cvf test.root.pipe.tar -T -\r\nroot/\r\nroot/snap.b/\r\nroot/snap.b/hl.2\r\nroot/snap.a/\r\nroot/snap.a/hl.1\r\nroot/snap.a/random.bin\r\nroot/snap.b/\r\nroot/snap.b/hl.2\r\nroot/snap.b/hl.2\r\nroot/snap.a/\r\nroot/snap.a/hl.1\r\nroot/snap.a/random.bin\r\nroot/snap.a/hl.1\r\nroot/snap.a/random.bin\r\n\r\n$bsdtar tvf test.root.pipe.tar \r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:34 root/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.b/\r\n-rw-rw-r--  0 worker worker 20971520 Jul 31 15:33 root/snap.b/hl.2\r\ndrwxrwxr-x  0 worker worker        0 Jul 31 15:33 root/snap.a/\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/hl.1 link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.b/hl.2\r\ndrwxrwxr-x  0 worker worker        0 Jul 31 15:33 root/snap.b/\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.b/hl.2 link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.b/hl.2 link to root/snap.b/hl.2\r\ndrwxrwxr-x  0 worker worker        0 Jul 31 15:33 root/snap.a/\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/hl.1 link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/hl.1 link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.b/hl.2\r\n\r\nThere is a separate bug when bsdtar is fed a list of files from disk (-T file.lst) where the hardlinked files are each stored along with hardlinks to each stored file.\r\n\r\nI will submit this in a different but even though they are related\r\n\r\nbsdtar tvf test.filelst.bsd.tar \r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:34 root/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.b/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.a/\r\n-rw-rw-r--  0 worker worker 20971520 Jul 31 15:33 root/snap.a/hl.1\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.a/hl.1\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.b/hl.2 link to root/snap.a/hl.1\r\ndrwxrwxr-x  0 worker worker        0 Jul 31 15:33 root/snap.b/\r\n-rw-rw-r--  0 worker worker 20971520 Jul 31 15:33 root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.b/hl.2 link to root/snap.b/hl.2\r\ndrwxrwxr-x  0 worker worker        0 Jul 31 15:33 root/snap.a/\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/hl.1 link to root/snap.b/hl.2\r\n-rw-rw-r--  0 worker worker 20971520 Jul 31 15:33 root/snap.a/random.bin\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/hl.1 link to root/snap.a/random.bin\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.a/random.bin\r\n\r\n\r\n\r\n\r\n",
            "published" : "2012-07-31T20:10:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "hard link, hardlink",
            "published" : "2012-07-31T20:42:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 275 has been merged into this issue.",
            "published" : "2012-08-01T05:08:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is the expected result when -T is used without using -n.\r\n",
            "published" : "2012-08-01T05:08:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 275 has been merged into this issue.",
            "published" : "2012-08-01T15:40:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 275 has been merged into this issue.",
            "published" : "2012-08-02T04:55:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 275,
        "title" : "full target of hardlink stored, duplicate hardlinks in archive when tar fed filelist (-T file.lst",
        "summary" : "full target of hardlink stored, duplicate hardlinks in archive when tar fed filelist (-T file.lst",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "sitkack",
          "htmlLink" : "https://code.google.com/u/103303914783020237997/"
        },
        "updated" : "2012-08-02T04:55:21.000Z",
        "published" : "2012-07-31T20:18:17.000Z",
        "closed" : "2012-08-01T05:08:14.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 274
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 10,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. have a directory tree contained hardlinked files\r\n2. find dir-to-archive &gt; file.lst\r\n3. tar cvf archive.tar -T file.lst\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThat each hardlinked file is stored only once.\r\n\r\nInitial conditions\r\n\r\ntree root\r\nroot\r\n├── snap.a\r\n│   ├── hl.1\r\n│   └── random.bin\r\n└── snap.b\r\n    └── hl.2\r\n\r\nwhere all the leaves are hardlinked files.\r\n\r\nBuilding the tar\r\n\r\n    root\r\n    root/snap.b\r\n    root/snap.b/hl.2\r\n    root/snap.a\r\n    root/snap.a/hl.1\r\n    root/snap.a/random.bin\r\n\r\nbsdtar cvf test.filelst.bsd.tar -T file.lst\r\n\r\nthe output\r\n\r\n    $ bsdtar tvf test.filelst.bsd.tar \r\n    drwxrwxr-x  0 worker worker      0 Jul 31 15:34 root/\r\n    drwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.b/\r\n    drwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.a/\r\n    -rw-rw-r--  0 worker worker 20971520 Jul 31 15:33 root/snap.a/hl.1\r\n    hrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.a/hl.1\r\n    hrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.b/hl.2 link to root/snap.a/hl.1\r\n    drwxrwxr-x  0 worker worker        0 Jul 31 15:33 root/snap.b/\r\n    -rw-rw-r--  0 worker worker 20971520 Jul 31 15:33 root/snap.b/hl.2\r\n    hrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.b/hl.2 link to root/snap.b/hl.2\r\n    drwxrwxr-x  0 worker worker        0 Jul 31 15:33 root/snap.a/\r\n    hrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/hl.1 link to root/snap.b/hl.2\r\n    -rw-rw-r--  0 worker worker 20971520 Jul 31 15:33 root/snap.a/random.bin\r\n    hrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/hl.1 link to root/snap.a/random.bin\r\n    hrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.a/random.bin\r\n\r\n\r\nI can confirm that the file is 3x larger than it needs to be.\r\n\r\n$ du -ch test.filelst.bsd.tar\r\n61M     test.filelst.bsd.tar\r\n61M     total\r\n\r\n<b>What version are you using?</b>\n\r\n bsdtar --version\r\nbsdtar 3.0.4 - libarchive 3.0.4\r\n\r\n\r\n<b>On what operating system?</b>\n\r\n$ uname -a ; cat /etc/redhat-release \r\nLinux disk 2.6.32-220.el6.x86_64 #1 SMP Tue Dec 6 19:48:22 GMT 2011 x86_64 x86_64 x86_64 GNU/Linux\r\nCentOS release 6.2 (Final)\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n./configure --prefix=path\r\nmake\r\nmake install\r\n\r\nadded path/lib to LD_LIBRARY_PATH path/bin to path\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\ngcc --version\r\ngcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4)\r\nCopyright (C) 2010 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThis archive does not restore properly. It would appear that -T shouldn't be used on any of the *tar programs.\r\n\r\n$ bsdtar xvf ../test.filelst.bsd.tar \r\nx root/\r\nx root/snap.b/\r\nx root/snap.a/\r\nx root/snap.a/hl.1\r\nx root/snap.a/random.bin\r\nx root/snap.b/hl.2\r\nx root/snap.b/\r\nx root/snap.b/hl.2\r\nx root/snap.b/hl.2: Can't create 'root/snap.b/hl.2'\r\nx root/snap.a/\r\nx root/snap.a/hl.1: Can't create 'root/snap.a/hl.1'\r\nx root/snap.a/random.bin\r\nx root/snap.a/hl.1\r\nx root/snap.a/random.bin: Can't create 'root/snap.a/random.bin'\r\nbsdtar: Error exit delayed from previous errors.\r\n(t.env)[worker@disk temp]$ ls -ls\r\ntotal 4\r\n4 drwxrwxr-x. 4 worker worker 4096 Jul 31 15:34 root\r\n(t.env)[worker@disk temp]$ tree\r\n.\r\n└── root\r\n    ├── snap.a\r\n    │   └── hl.1\r\n    └── snap.b\r\n\r\n3 directories, 1 file\r\n",
            "published" : "2012-07-31T20:18:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "Attaching file with smaller contents than the example above.",
            "published" : "2012-07-31T20:22:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2750001000",
              "fileName" : "test.filelst.bsd.tar",
              "fileSize" : 120832,
              "mimetype" : "application/x-tar; charset=binary"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "hard link hardlink ## for searching",
            "published" : "2012-07-31T20:45:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "When you use -T in this fashion, you need to also use the -n option.\r\n\r\nThe archive is too large because you've asked bsdtar to archive everything more than once.\r\n\r\nBecause you've presented bsdtar with the files in a pretty odd order, the hardlink information is a little screwy.  It might be possible to make bsdtar's hardlink storage a little smarter to produce less-odd results when presented with odd requests like this.\r\n",
            "published" : "2012-08-01T05:06:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 276 has been merged into this issue.",
            "published" : "2012-08-01T05:07:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is a duplicate of Issue #274.\r\n",
            "published" : "2012-08-01T05:08:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "274"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "I gave the files to bsdtar in the order that `find` found them. And it created an archive that was corrupt that couldn't be properly restored. I haven't found a case where -T worked properly with any fileset created by find.\r\n\r\nAlso the manpage makes no mention of -n being required for -T and if it is, why not turn it on all the time?",
            "published" : "2012-08-01T05:47:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "These options have been implemented in many different tar programs for many, many years.\r\n\r\nbsdtar needs to be compatible with those other tar programs, so having -T always turn on -n is (regrettably) not feasible, since that would break compatibility with established software that didn't expect this behavior.\r\n\r\nYou're right; the manpage should probably mention -n under the description for -T.\r\n",
            "published" : "2012-08-01T15:40:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "mergedInto" : "274"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "Had I not done testing of my backup pipeline I would have not caught what you think is not a bug. find cannot successfully pipe a list of files with hardlinks into *tar -T - w/o generating corrupt files. They will not restore properly. And as nearly all of the filesets I am backing up contain a huge forest of hardlinks I would have been screwed.\r\n\r\nHow about detecting that (-T -) isn't being used with -n and OR that the file paths are coming in in-the pretty odd order. It would seem that this is historically broken in the *tars, how about a new flag? I shouldn't be able to create tar files using command line switches that do not error out but are un-extractable. What do you think?",
            "published" : "2012-08-02T01:54:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issuing an unconditional warning for using -T without -n would break the following case:\r\n\r\n$ cat dirs_to_backup\r\nfoo\r\nbar\r\n$ cat dirs_to_backup | tar cvf backup.tar -T -\r\na foo\r\na foo/file1\r\na foo/file2\r\na bar\r\na bar/file3\r\n\r\nI've added a comment to the man page suggesting the use of -n with -T.\r\n\r\nIf you must use 'find' to generate the lists of files, you should investigate cpio.  find and cpio were designed to work together (in 1977, if I remember correctly); tar's -T option is a poor substitute.\r\n\r\nThe only change I can think that might help in your situation is to watch for the very specific case of a hardlink referring to itself:\r\n   hrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.a/random.bin\r\n\r\nThat would at least cause the command line you tried to use to generate an error when the archive was being created.  I suspect the right place to test this is in archive_write.c just before _archive_write_header() calls a->format_write_header.\r\n\r\n\r\n\r\n",
            "published" : "2012-08-02T04:55:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "mergedInto" : "274"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 276,
        "title" : "hardlinks stored depending on order of arguments with -T",
        "summary" : "hardlinks stored depending on order of arguments with -T",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "sitkack",
          "htmlLink" : "https://code.google.com/u/103303914783020237997/"
        },
        "updated" : "2012-08-01T05:50:06.000Z",
        "published" : "2012-07-31T20:29:52.000Z",
        "closed" : "2012-08-01T05:07:23.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 275
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "This is related and possibly a duplicate of \r\n\r\nhttp://code.google.com/p/libarchive/issues/detail?id=275\r\nhttp://code.google.com/p/libarchive/issues/detail?id=274\r\n\r\n<b>What steps will reproduce the problem?</b>\n1. see the other bugs\r\n2. find root | bsdtar cv -T - -f test.pipe.bsd.tar # vs\r\n3. find root | tar cvf test.pipe.bsd.tar -T -\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nIn case 1) the targets of the hardlinks are stored where as in case 2) only a single copy of the file is archived but the tar still contains duplicate hardlinks.\r\n\r\n\r\n<b>What version are you using?</b>\n\r\nbsdtar --version\r\nbsdtar 3.0.4 - libarchive 3.0.4\r\n\r\n\r\n<b>On what operating system?</b>\n\r\n uname -a; cat /etc/redhat-release \r\nLinux disk 2.6.32-220.el6.x86_64 #1 SMP Tue Dec 6 19:48:22 GMT 2011 x86_64 x86_64 x86_64 GNU/Linux\r\nCentOS release 6.2 (Final)\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n gcc --version\r\ngcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4)\r\nCopyright (C) 2010 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n\r\n(t.env)[worker@disk staging]$ find root | bsdtar cv -T - -f test.pipe.bsd.tar \r\na root\r\na root/snap.b\r\na root/snap.a\r\na root/snap.a/hl.1\r\na root/snap.a/random.bin\r\na root/snap.b/hl.2\r\na root/snap.b\r\na root/snap.b/hl.2\r\na root/snap.b/hl.2\r\na root/snap.a\r\na root/snap.a/hl.1\r\na root/snap.a/random.bin\r\na root/snap.a/hl.1\r\na root/snap.a/random.bin\r\n\r\n\r\n(t.env)[worker@disk staging]$ bsdtar tvf test.pipe.bsd.tar \r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:34 root/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.b/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.a/\r\n-rw-rw-r--  0 worker worker  32768 Jul 31 16:15 root/snap.a/hl.1\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/random.bin link to root/snap.a/hl.1\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.b/hl.2 link to root/snap.a/hl.1\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.b/\r\n-rw-rw-r--  0 worker worker  32768 Jul 31 16:15 root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.b/hl.2 link to root/snap.b/hl.2\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.a/\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/hl.1 link to root/snap.b/hl.2\r\n-rw-rw-r--  0 worker worker  32768 Jul 31 16:15 root/snap.a/random.bin\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/hl.1 link to root/snap.a/random.bin\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/random.bin link to root/snap.a/random.bin\r\n\r\n\r\n== verses ==\r\n\r\n\r\n(t.env)[worker@disk staging]$ find root | tar cvf test.pipe.bsd.tar -T -\r\nroot/\r\nroot/snap.b/\r\nroot/snap.b/hl.2\r\nroot/snap.a/\r\nroot/snap.a/hl.1\r\nroot/snap.a/random.bin\r\nroot/snap.b/\r\nroot/snap.b/hl.2\r\nroot/snap.b/hl.2\r\nroot/snap.a/\r\nroot/snap.a/hl.1\r\nroot/snap.a/random.bin\r\nroot/snap.a/hl.1\r\nroot/snap.a/random.bin\r\n(t.env)[worker@disk staging]$ bsdtar tvf test.pipe.bsd.tar \r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:34 root/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.b/\r\n-rw-rw-r--  0 worker worker  32768 Jul 31 16:15 root/snap.b/hl.2\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.a/\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/hl.1 link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/random.bin link to root/snap.b/hl.2\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.b/\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.b/hl.2 link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.b/hl.2 link to root/snap.b/hl.2\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.a/\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/hl.1 link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/random.bin link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/hl.1 link to root/snap.b/hl.2\r\nhrw-rw-r--  0 worker worker      0 Jul 31 16:15 root/snap.a/random.bin link to root/snap.b/hl.2\r\n",
            "published" : "2012-07-31T20:29:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "I would expect this\r\n\r\n\r\nbsdtar tvf test.nopipe.bsd.tar \r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:34 root/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.b/\r\ndrwxrwxr-x  0 worker worker      0 Jul 31 15:33 root/snap.a/\r\n-rw-rw-r--  0 worker worker 20971520 Jul 31 15:33 root/snap.a/hl.1\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.a/random.bin link to root/snap.a/hl.1\r\nhrw-rw-r--  0 worker worker        0 Jul 31 15:33 root/snap.b/hl.2 link to root/snap.a/hl.1\r\n",
            "published" : "2012-07-31T20:30:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "mac tar exhibits the triple store behavior in both cases\r\n\r\n$ tar --version\r\nbsdtar 2.6.2 - libarchive 2.6.2\r\n\r\ntree staging/\r\nstaging/\r\n└── root\r\n    ├── snap.a\r\n    │   ├── hl.a\r\n    │   └── random.bin\r\n    └── snap.b\r\n        └── hl.b\r\n\r\n\r\n  509  find staging | tar cv -T - -f test.pipefirst.mac.tar\r\n  510  find staging | tar cvf test.pipelast.mac.tar -T -\r\n\r\n\r\nworker$ tar tvf test.pipefirst.mac.tar \r\ndrwxr-xr-x  3 worker worker users 0 Jul 31 13:31 staging/\r\ndrwxr-xr-x  4 worker worker users 0 Jul 31 13:31 staging/root/\r\ndrwxr-xr-x  4 worker worker users 0 Jul 31 13:32 staging/root/snap.a/\r\ndrwxr-xr-x  3 worker worker users 0 Jul 31 13:32 staging/root/snap.b/\r\n-rw-r--r--  3 worker worker users 32768 Jul 31 13:31 staging/root/snap.b/hl.b\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/hl.a link to staging/root/snap.b/hl.b\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/random.bin link to staging/root/snap.b/hl.b\r\ndrwxr-xr-x  4 worker worker users     0 Jul 31 13:31 staging/root/\r\ndrwxr-xr-x  4 worker worker users     0 Jul 31 13:32 staging/root/snap.a/\r\ndrwxr-xr-x  3 worker worker users     0 Jul 31 13:32 staging/root/snap.b/\r\n-rw-r--r--  3 worker worker users 32768 Jul 31 13:31 staging/root/snap.b/hl.b\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/hl.a link to staging/root/snap.b/hl.b\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/random.bin link to staging/root/snap.b/hl.b\r\ndrwxr-xr-x  4 worker worker users     0 Jul 31 13:32 staging/root/snap.a/\r\n-rw-r--r--  3 worker worker users 32768 Jul 31 13:31 staging/root/snap.a/hl.a\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/random.bin link to staging/root/snap.a/hl.a\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/hl.a link to staging/root/snap.a/hl.a\r\n-rw-r--r--  3 worker worker users 32768 Jul 31 13:31 staging/root/snap.a/random.bin\r\ndrwxr-xr-x  3 worker worker users     0 Jul 31 13:32 staging/root/snap.b/\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.b/hl.b link to staging/root/snap.a/random.bin\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.b/hl.b link to staging/root/snap.a/random.bin\r\nworker$ tar tvf test.pipelast.mac.tar \r\ndrwxr-xr-x  3 worker worker users 0 Jul 31 13:31 staging/\r\ndrwxr-xr-x  4 worker worker users 0 Jul 31 13:31 staging/root/\r\ndrwxr-xr-x  4 worker worker users 0 Jul 31 13:32 staging/root/snap.a/\r\ndrwxr-xr-x  3 worker worker users 0 Jul 31 13:32 staging/root/snap.b/\r\n-rw-r--r--  3 worker worker users 32768 Jul 31 13:31 staging/root/snap.b/hl.b\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/hl.a link to staging/root/snap.b/hl.b\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/random.bin link to staging/root/snap.b/hl.b\r\ndrwxr-xr-x  4 worker worker users     0 Jul 31 13:31 staging/root/\r\ndrwxr-xr-x  4 worker worker users     0 Jul 31 13:32 staging/root/snap.a/\r\ndrwxr-xr-x  3 worker worker users     0 Jul 31 13:32 staging/root/snap.b/\r\n-rw-r--r--  3 worker worker users 32768 Jul 31 13:31 staging/root/snap.b/hl.b\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/hl.a link to staging/root/snap.b/hl.b\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/random.bin link to staging/root/snap.b/hl.b\r\ndrwxr-xr-x  4 worker worker users     0 Jul 31 13:32 staging/root/snap.a/\r\n-rw-r--r--  3 worker worker users 32768 Jul 31 13:31 staging/root/snap.a/hl.a\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/random.bin link to staging/root/snap.a/hl.a\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.a/hl.a link to staging/root/snap.a/hl.a\r\n-rw-r--r--  3 worker worker users 32768 Jul 31 13:31 staging/root/snap.a/random.bin\r\ndrwxr-xr-x  3 worker worker users     0 Jul 31 13:32 staging/root/snap.b/\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.b/hl.b link to staging/root/snap.a/random.bin\r\nhrw-r--r--  3 worker worker users     0 Jul 31 13:31 staging/root/snap.b/hl.b link to staging/root/snap.a/random.bin\r\n",
            "published" : "2012-07-31T20:38:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "hard link hardlink\r\n",
            "published" : "2012-07-31T20:43:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is the same issue as reported in Issue #275.\r\n\r\nSame solution:  Use -n with -T always.\r\n",
            "published" : "2012-08-01T05:07:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "275"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sitkack",
              "htmlLink" : "https://code.google.com/u/103303914783020237997/"
            },
            "content" : "Why does the order of the arguments determine if the file is stored 3x with hardlinks overwriting it vs stored once and duplicate hardlinks?",
            "published" : "2012-08-01T05:50:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 277,
        "title" : "ppc64 tests failed (test_option_b, test_option_nodump,test_read_disk_directory_traversals)",
        "summary" : "ppc64 tests failed (test_option_b, test_option_nodump,test_read_disk_directory_traversals)",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dinarv",
          "htmlLink" : "https://code.google.com/u/115266088264796409529/"
        },
        "updated" : "2012-08-23T08:28:21.000Z",
        "published" : "2012-08-15T10:21:53.000Z",
        "closed" : "2012-08-23T02:59:07.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 10,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dinarv",
              "htmlLink" : "https://code.google.com/u/115266088264796409529/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.run make check after complilation\r\n2. or ./bsdtar_test test_option_b\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nTests should pass\r\n\r\n<b>What version are you using?</b>\n3.0.4\r\n\r\n<b>On what operating system?</b>\nopenSUSE Factory/12.2\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.7\r\n\r\n<b>Please provide any additional information below.</b>\nWhen omitting block size or set -b 1, the size of archive on ppc64 is 3072 but test expects 2048 here.\r\n\r\nBuild log: https://build.opensuse.org/package/rawlog?arch=ppc64&amp;package=libarchive&amp;project=Archiving&amp;repository=openSUSE_Factory_PowerPC\r\nTest logs and results are attached.",
            "published" : "2012-08-15T10:21:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2770000000",
              "fileName" : "ppc64_failed_tests.tar.bz2",
              "fileSize" : 341936,
              "mimetype" : "application/x-bzip2; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Apparently, your system is setting a lot of fflags on the test files that are confusing the tests.  If you examine one of the archives that's causing the test failure in test_option_b, you'll notice this bit:\r\n\r\nSCHILY.fflags=schg,compdirty,nocomprblk,dirsync,imagic,journal,securedeletion,sync,notail,topdir,reserved\r\n\r\nThis is causing the created archive to be larger than expected.\r\n\r\nWhat filesystem are you using?\r\n\r\nAre these file flags expected on your system?\r\n\r\nWe can either change the test so that these extra properties aren't being stored, or change the test to tolerate this extra data.\r\n",
            "published" : "2012-08-19T16:27:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dinarv",
              "htmlLink" : "https://code.google.com/u/115266088264796409529/"
            },
            "content" : "The filesystem we are using, ext3.\r\n\r\nBut setup should be the same for x86 and ppc, build environment was prepared in the same way.\r\n\r\nAlso ppc (32bit) doesn't have such build failures. we are only seeing failures under ppc64 (64bit)",
            "published" : "2012-08-19T17:11:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'll definitely need your help to debug this.\r\n\r\nThe first part of test_option_b does essentially the following:\r\n\r\n    $ echo file1 > file1\r\n    $ bsdtar -cf archive1.tar file1\r\n\r\nCan you run these manually and verify that the result is 3072 bytes on your PPC64 system and 2048 bytes on your PPC32 system?\r\n\r\nCan you please verify what fflags are set on file1 on each system?\r\n\r\nThe relevant code is around line 190 of libarchive/archive_read_disk_entry_from_file.c, which reads:\r\n\r\n                        unsigned long stflags;\r\n                        r = ioctl(fd, EXT2_IOC_GETFLAGS, &stflags);\r\n                        if (r == 0 && stflags != 0)\r\n                                archive_entry_set_fflags(entry, stflags, 0);\r\n\r\nIf the flags on disk are what we expect (nothing), then this code is reading the flags incorrectly on your ppc64 system.  If you could check in a debugger and find out what value stflags has just after the ioctl call here, that would certainly help.\r\n\r\nHarumph.  I don't think we have a Linux-specific test for libarchive to verify reading/writing flags from disk.  That would be a nice addition.\r\n\r\nThe only thing I can think of that might cause this would be a mismatch between the stflags variable here and what the kernel expects, but according to\r\n  http://lxr.free-electrons.com/source/include/linux/fs.h?a=powerpc#L344\r\nthe ioctl we're using here does expect a long argument.\r\n",
            "published" : "2012-08-19T17:41:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dinarv",
              "htmlLink" : "https://code.google.com/u/115266088264796409529/"
            },
            "content" : "yes on ppc32 archive size is 2048 and flags are 0\r\non ppc64 size is 3072 and flags eq 775818427",
            "published" : "2012-08-20T10:38:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dinarv",
              "htmlLink" : "https://code.google.com/u/115266088264796409529/"
            },
            "content" : "following fixes test_option_b on ppc64\r\nIndex: libarchive-3.0.4/libarchive/archive_read_disk_entry_from_file.c\r\n===================================================================\r\n--- libarchive-3.0.4.orig/libarchive/archive_read_disk_entry_from_file.c\r\n+++ libarchive-3.0.4/libarchive/archive_read_disk_entry_from_file.c\r\n@@ -197,7 +197,7 @@ archive_read_disk_entry_from_file(struct\r\n \t\t\t\tfd = open(path, O_RDONLY | O_NONBLOCK);\r\n \t\t}\r\n \t\tif (fd >= 0) {\r\n-\t\t\tunsigned long stflags;\r\n+\t\t\tint stflags;\r\n \t\t\tr = ioctl(fd, EXT2_IOC_GETFLAGS, &stflags);\r\n \t\t\tif (r == 0 && stflags != 0)\r\n \t\t\t\tarchive_entry_set_fflags(entry, stflags, 0);\r\n",
            "published" : "2012-08-22T13:50:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Ah.  It took me a while to track down.  I misread the ioctl declarations.  This ioctl does expect a pointer to an 'int' argument.\r\n\r\nI've made that change to the github sources.\r\n\r\nThanks for helping to track this down.\r\n\r\n",
            "published" : "2012-08-23T02:58:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2012-08-23T02:59:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dinarv",
              "htmlLink" : "https://code.google.com/u/115266088264796409529/"
            },
            "content" : "We still have bsdtar test_option_nodump and libarchive test_read_disk_directory_traversals tests failing.\r\n\r\nAgain those tests are fine for x86,x86_64,ppc32 but not ppc64\r\n\r\ntest_option_nodump fails in attempt to extract test2.tar created with --nodump option. It looks like it is empty.\r\n\r\ntest_read_disk_directory_traversals seems haven't produced any log files it just core dumps\r\n 65: test_read_disk_directory_traversals               /bin/sh: line 5: 45607 Segmentation fault      (core dumped) LIBARCHIVE_TEST_FILES=`cd .;/bin/pwd`/libarchive/test BSDTAR=`cd .;/bin/pwd`/bsdtar BSDTAR_TEST_FILES=`cd .;/bin/pwd`/tar/test BSDCPIO=`cd .;/bin/pwd`/bsdcpio BSDCPIO_TEST_FILES=`cd .;/bin/pwd`/cpio/test ${dir}$tst",
            "published" : "2012-08-23T07:31:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dinarv",
              "htmlLink" : "https://code.google.com/u/115266088264796409529/"
            },
            "content" : "This is fixes test_option_nodump. same issue actually.\r\nIndex: libarchive-3.0.4/libarchive/archive_read_disk_posix.c\r\n===================================================================\r\n--- libarchive-3.0.4.orig/libarchive/archive_read_disk_posix.c\r\n+++ libarchive-3.0.4/libarchive/archive_read_disk_posix.c\r\n@@ -984,7 +984,7 @@ next_entry(struct archive_read_disk *a,\r\n #elif defined(EXT2_IOC_GETFLAGS) && defined(EXT2_NODUMP_FL) &&\\\r\n       defined(HAVE_WORKING_EXT2_IOC_GETFLAGS)\r\n                if (S_ISREG(st->st_mode) || S_ISDIR(st->st_mode)) {\r\n-                       unsigned long stflags;\r\n+                       int stflags;\r\n\r\n                        t->entry_fd = open_on_current_dir(t,\r\n                            tree_current_access_path(t), O_RDONLY | O_NONBLOCK);\r\n\r\n\r\nAnd I no longer have a problem with test_read_disk_directory_traversals",
            "published" : "2012-08-23T08:28:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 278,
        "title" : "Read support for extra ZIP compression types on Windows",
        "summary" : "Read support for extra ZIP compression types on Windows",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "simon.bailey@prismit.com.au",
          "htmlLink" : "https://code.google.com/u/101982852811856813968/"
        },
        "updated" : "2012-08-31T02:57:47.000Z",
        "published" : "2012-08-31T01:01:39.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "simon.bailey@prismit.com.au",
              "htmlLink" : "https://code.google.com/u/101982852811856813968/"
            },
            "content" : "Is there any plan to support reading extra ZIP compression types on Windows?\r\n\r\nI am trying to read zips that are compressed using &quot;implode&quot; and &quot;shrink&quot; compression, but get &quot;not supported on this platform&quot; errors.",
            "published" : "2012-08-31T01:01:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Are these new Zip files?   As far as I understand, those methods are not widely supported.\r\n\r\nNo plan, but no objections either if someone wants to contribute patches.\r\n",
            "published" : "2012-08-31T02:57:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 279,
        "title" : "Possible memory leak upon failed archive_string reallocation",
        "summary" : "Possible memory leak upon failed archive_string reallocation",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "patrick@mezard.eu",
          "htmlLink" : "https://code.google.com/u/101548411346996344561/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2012-09-18T11:39:34.000Z",
        "published" : "2012-09-17T14:09:51.000Z",
        "closed" : "2012-09-18T11:39:34.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "patrick@mezard.eu",
              "htmlLink" : "https://code.google.com/u/101548411346996344561/"
            },
            "content" : "Reading recent changes, a coworker found this:\r\n\r\n  https://github.com/libarchive/libarchive/commit/221f63f2f804134622d744dc0d58e84d19e990e4.diff\r\n\r\ndiff --git a/libarchive/archive_string.c b/libarchive/archive_string.c\r\nindex 870cf37..d75966f 100644\r\n--- a/libarchive/archive_string.c\r\n+++ b/libarchive/archive_string.c\r\n@@ -306,6 +306,9 @@ struct archive_string *\r\n \t/* Now we can reallocate the buffer. */\r\n \tp = (char *)realloc(as-&gt;s, new_length);\r\n \tif (p == NULL) {\r\n+\t\t/* Prevent the duble free of as-&gt;s in archive_string_free\r\n+\t\t * since realloc function already freed the memory. */\r\n+\t\tas-&gt;s = NULL;\r\n \t\t/* On failure, wipe the string and return NULL. */\r\n \t\tarchive_string_free(as);\r\n \t\terrno = ENOMEM;/* Make sure errno has ENOMEM. */\r\n\r\nIt says realloc already freed as-&gt;s but on failure all manual entries I can find state that:\r\n\r\n&quot;&quot;&quot; If realloc() fails the original block is left untouched; it is not freed or moved.&quot;&quot;&quot;\r\n\r\nSo it looks this change introduced a leak. Did I miss something?\r\n\r\n--\r\nPatrick Mezard",
            "published" : "2012-09-17T14:09:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for the information. I fixed it.\r\nAlso , your report makes me find that there are some memory leaks around a handing\r\nof the 'realloc' function when it fails.",
            "published" : "2012-09-18T11:39:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 280,
        "title" : "How to delete file(s) from *.tar.gz archive with libarchive API",
        "summary" : "How to delete file(s) from *.tar.gz archive with libarchive API",
        "stars" : 2,
        "starred" : false,
        "status" : "Done",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kocur666",
          "htmlLink" : "https://code.google.com/u/105709757082725083496/"
        },
        "updated" : "2012-10-23T04:17:59.000Z",
        "published" : "2012-10-18T11:47:44.000Z",
        "closed" : "2012-10-18T15:45:58.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kocur666",
              "htmlLink" : "https://code.google.com/u/105709757082725083496/"
            },
            "content" : "<b>What version are you using?</b>\n3.0.4\r\n\r\n<b>On what operating system?</b>\nLinux piotr-desktop 2.6.32-25-generic #45-Ubuntu SMP Sat Oct 16 19:48:22 UTC 2010 i686 GNU/Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nUsing built-in specs.\r\nTarget: i486-linux-gnu\r\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu 4.3.4-10ubuntu1' --with-bugurl=file:///usr/share/doc/gcc-4.3/README.Bugs --enable-languages=c,c++,fortran,objc,obj-c++ --prefix=/usr --enable-shared --enable-multiarch --enable-linker-build-id --with-system-zlib --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --enable-nls --with-gxx-include-dir=/usr/include/c++/4.3 --program-suffix=-4.3 --enable-clocale=gnu --enable-libstdcxx-debug --enable-objc-gc --enable-mpfr --enable-targets=all --with-tune=generic --enable-checking=release --build=i486-linux-gnu --host=i486-linux-gnu --target=i486-linux-gnu\r\nThread model: posix\r\ngcc version 4.3.4 (Ubuntu 4.3.4-10ubuntu1)\r\n\r\n<b>Please provide any additional information below.</b>\nI have created an archive and i'd like to remove some data (directories/files) from it. Is it at all possible with libarchive? Because i know that tar can do that and if i use file roller in ubuntu i can also remove data from this archive.",
            "published" : "2012-10-18T11:47:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "tar.gz files cannot be modified in place.  (tar cannot do it, nor can file roller)\r\n\r\nYou can use libarchive to read the existing tar.gz and write only some of the data to a new tar.gz archive.  (If you see programs that claim to let you \"delete files from a tar.gz archive\", they are in fact copying the entire archive and omitting some items.)\r\n\r\nOutline:\r\n  * Open the old archive\r\n  * Open a new archive\r\n  * Read each entry from the old archive:  If you want to keep it, write the header to the new archive and then copy the data\r\n\r\nThis works in libarchive.  The bsdtar program (which uses libarchive) provides a convenient command-line interface to this capability.\r\n\r\nP.S.  When you refer to \"tar\", please be careful to specify which tar you are talking about, as there are many different implementations of the tar program:  GNU tar, star, bsdtar, AIX tar, Solaris tar, HP-UX tar, Heirloom tar, pdtar, OpenBSD tar, and many others.   Each of these implementations is different, each has slightly different options and capabilities.",
            "published" : "2012-10-18T15:45:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2012-10-18T15:45:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Done"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kocur666",
              "htmlLink" : "https://code.google.com/u/105709757082725083496/"
            },
            "content" : "Ok if i have to create a new archive that is no problem. Everything what i want to store from the old one in the new archive copies. But the problem is that when i have copied everything to the new one i still want to modify it (add new data). And my problem is that the new archive should be named as the old one. I thought about making temp archive to which i will be coping the old archive (without entries that i don' want) and than again coping from it to the main archive. For example:\r\n- /home/XXX/Desktop/test.tar.gz <- old archive\r\n- /tmp/test.tar.gz <- copied old archive (without some entries)\r\n- /home/XXX/Desktop/test.tar.gz <- entire copy of /tmp/test.tar.gz with possibility to add new entries\r\n\r\nIf there is some other way to does this i would be pleased to see it:]",
            "published" : "2012-10-22T06:56:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "A slightly better strategy is to create the new archive beside the old one and then rename:\r\n\r\n   - /home/XXX/Desktop/test.tar.gz <- old archive\r\n   - /home/XXX/Desktop/test.tar.gz.temp <- copied old archive (without some entries)\r\n\r\nThen rename test.tar.gz.temp to test.tar.gz.  This is much faster than copying again.\r\n\r\nYou can add new entries while you are writing the new archive.  Once you close it, things get more complicated.\r\n\r\nSo think about this:\r\n\r\n   * Open old archive for reading\r\n   * Open new archive for writing\r\n   * For each entry in old archive:\r\n   ** if you want to keep it, copy it to new archive\r\n   ** else skip it\r\n   * Close old archive\r\n   * For each new entry:\r\n   ** add it to new archive\r\n   * Close new archive\r\n\r\n   * Delete old archive\r\n   * Rename new archive to old archive\r\n\r\n",
            "published" : "2012-10-23T04:17:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 281,
        "title" : "update file in tar",
        "summary" : "update file in tar",
        "stars" : 1,
        "starred" : false,
        "status" : "NotABug",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "yunjie.liu",
          "htmlLink" : "https://code.google.com/u/117851591127161064629/"
        },
        "updated" : "2012-11-08T15:46:02.000Z",
        "published" : "2012-11-08T06:19:44.000Z",
        "closed" : "2012-11-08T15:44:36.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "yunjie.liu",
              "htmlLink" : "https://code.google.com/u/117851591127161064629/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.bsdtar cf test.tar test.txt\r\n2.modify text.txt\r\n3.bsdtar uf test.tar test.txt\r\n\r\n<b>What is the expected output? What do you see instead?</b>\ntest.tar should contain only 1 file ,that is texst.txt.\r\nbut text.tar contain 2 file,the name is same = test.txt\r\n\r\n<b>What version are you using?</b>\nversion 3.0.4\r\n\r\n<b>On what operating system?</b>\nWindows XP + MinGW\r\n \r\n ",
            "published" : "2012-11-08T06:19:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is how \"tar u\" has always worked.  Please try it on any other\r\ntar implementation (GNU tar, star, AIX tar, Solaris tar, pdtar,\r\nHeirloom Tar) and you'll see that.\r\n\r\nUpdating tar archives involves adding a new copy of the file\r\nat the end.  The tar format allows this.\r\n\r\nWhen extracting, both copies get extracted but the second\r\ncopy overwrites the first, so you get the desired result.\r\n",
            "published" : "2012-11-08T15:44:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2012-11-08T15:46:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "NotABug"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 282,
        "title" : "examples pass off_t* to expected int64_t*, causing pointer type incompatibility",
        "summary" : "examples pass off_t* to expected int64_t*, causing pointer type incompatibility",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "der.pitti",
          "htmlLink" : "https://code.google.com/u/107564545827215425270/"
        },
        "updated" : "2013-02-09T19:13:14.000Z",
        "published" : "2012-11-20T13:48:18.000Z",
        "closed" : "2013-02-09T19:13:14.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "der.pitti",
              "htmlLink" : "https://code.google.com/u/107564545827215425270/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. build examples/minitar/minitar.c on Linux 32 bit system\r\n2. build examples/untar.c on Linux 32 bit system\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nOn a 64 bit system, everything works. On a 32 bit system you get these warnings:\r\n\r\nexamples/minitar/minitar.c: In function ‘copy_data’:\r\nexamples/minitar/minitar.c:406:3: warning: passing argument 4 of ‘archive_read_data_block’ from incompatible pointer type [enabled by default]\r\nIn file included from examples/minitar/minitar.c:45:0:\r\n/usr/include/archive.h:420:15: note: expected ‘int64_t *’ but argument is of type ‘off_t *’\r\nexamples/untar.c: In function ‘copy_data’:\r\nexamples/untar.c:210:3: warning: passing argument 4 of ‘archive_read_data_block’ from incompatible pointer type [enabled by default]\r\nIn file included from examples/untar.c:60:0:\r\n/usr/include/archive.h:420:15: note: expected ‘int64_t *’ but argument is of type ‘off_t *’\r\n\r\nThis suggests that off_t* is a 32 bit type on 32 bit, unless you enable large file support. However, the functions are declared to expect a __LA_INT64_T, not an off_t, so the examples ought to be fixed.\r\n\r\n<b>What version are you using?</b>\n3.0.4\r\n\r\n<b>On what operating system?</b>\nUbuntu Linux 12.10\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure/make\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n$ gcc --version\r\ngcc (Ubuntu/Linaro 4.7.2-5ubuntu7) 4.7.2\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-11-20T13:48:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "der.pitti",
              "htmlLink" : "https://code.google.com/u/107564545827215425270/"
            },
            "content" : "This is the patch I applied to the Debian package.",
            "published" : "2012-11-20T14:01:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2820001000",
              "fileName" : "examples-offset-type.patch",
              "fileSize" : 1022,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "Fixed in commit 7da8d576848982f2b0264febf89cb8e3f3580af2",
            "published" : "2013-02-09T19:13:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 283,
        "title" : "Build failure due to __FBSDID(\"$FreeBSD$\") in untar.c",
        "summary" : "Build failure due to __FBSDID(\"$FreeBSD$\") in untar.c",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "benjamin.drung",
          "htmlLink" : "https://code.google.com/u/benjamin.drung/"
        },
        "updated" : "2013-02-09T19:12:33.000Z",
        "published" : "2012-11-20T14:33:18.000Z",
        "closed" : "2013-02-09T19:12:33.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "benjamin.drung",
              "htmlLink" : "https://code.google.com/u/benjamin.drung/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n$ gcc -O2 -o untar examples/untar.c $(pkg-config --cflags --libs libarchive)\r\nexamples/untar.c:56:10: error: expected declaration specifiers or '...' before string constant\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expect that the untar example compiles without problems. Removing the __FBSDID(&quot;$FreeBSD$&quot;) line makes it compile.\r\n\r\n<b>What version are you using?</b>\n3.0.4\r\n\r\n<b>On what operating system?</b>\nUbuntu 12.10\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nSee the command above using the system provided libarchive header files.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.7.2\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-11-20T14:33:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "Fixed in commit d19d180efd59d4d3b61e0818eac0d37d086aec55",
            "published" : "2013-02-09T19:12:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 284,
        "title" : "minitar segfaults when extracting tarballs",
        "summary" : "minitar segfaults when extracting tarballs",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "benjamin.drung",
          "htmlLink" : "https://code.google.com/u/benjamin.drung/"
        },
        "updated" : "2012-11-20T14:42:46.000Z",
        "published" : "2012-11-20T14:42:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "benjamin.drung",
              "htmlLink" : "https://code.google.com/u/benjamin.drung/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\ngcc -O2 -g -o minitar examples/minitar/minitar.c $(pkg-config --cflags --libs libarchive)\r\necho &quot;Deadbeaf&quot; &gt; foo\r\n./minitar -cf foo.tar foo\r\nrm foo\r\n./minitar -xf foo.tar\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe last command (./minitar -xf foo.tar) will abort with an segmentation fault instead of extracting the tarball. Here's the backtrace for the segmentation fault:\r\n#0  0x00007ffff78e6c01 in ?? () from /lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x0000000000401869 in errmsg (m=0x0) at examples/minitar/minitar.c:430\r\n#2  0x00000000004019c4 in copy_data (aw=&lt;optimized out&gt;, ar=&lt;optimized out&gt;) at examples/minitar/minitar.c:415\r\n#3  extract (filename=&lt;optimized out&gt;, filename@entry=0x7fffffffe3a5 &quot;foo.tar&quot;, do_extract=do_extract@entry=1, flags=4)\r\n    at examples/minitar/minitar.c:387\r\n#4  0x0000000000401496 in main (argc=&lt;optimized out&gt;, argv=0x7fffffffe070) at examples/minitar/minitar.c:210\r\n\r\nThe function errmsg is called with a NULL pointer as argument.\r\n\r\n<b>What version are you using?</b>\n3.0.4\r\n\r\n<b>On what operating system?</b>\nUbuntu 12.10 (amd64)\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nThe minitar was linked against the system provided libarchive 3.0.4-2.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.7.2\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-11-20T14:42:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 285,
        "title" : "memory leak in archive_write_pax_header()",
        "summary" : "memory leak in archive_write_pax_header()",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jbeck4004",
          "htmlLink" : "https://code.google.com/u/104168981691535740799/"
        },
        "updated" : "2012-12-02T16:45:25.000Z",
        "published" : "2012-11-28T02:58:25.000Z",
        "closed" : "2012-12-02T12:02:52.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jbeck4004",
              "htmlLink" : "https://code.google.com/u/104168981691535740799/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nThis was discovered by a static code analysis tool (Parfait), which reported:\r\n\r\nError: Memory leak (CWE 401)\r\n   Memory leak of pointer 'extra' allocated with archive_entry_new2(...)\r\n        at line 652 of components/libarchive/libarchive-3.0.4/libarchive/archive_write_set_format_pax.c in function 'archive_write_pax_header'.\r\n          'extra' allocated at line 645 with archive_entry_new2(...).\r\n\r\nLooking at the code, this appears correct. See the attached patch for a trivial fix.\r\n\r\n\r\nWhat is the expected output? What do you see instead? N/A\r\n\r\n\r\nWhat version are you using? 3.0.4\r\n\r\n\r\nOn what operating system? Solaris\r\n\r\n\r\nHow did you build?  (cmake, configure, or pre-packaged binary) configure\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-11-28T02:58:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2850000000",
              "fileName" : "archive_write_set_format_pax.c.patch",
              "fileSize" : 350,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for the patch but the patch is insufficient I think.\r\n1. archive_entry_free() should be used to release memory for an archive_entry object instead of free().\r\n2. There still remains memory leak allocated to 'extra' .\r\n\r\nSo, I committed a new attached patch instead.\r\n",
            "published" : "2012-12-02T12:02:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2850001000",
              "fileName" : "pax_memory_leak.patch",
              "fileSize" : 866,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jbeck4004",
              "htmlLink" : "https://code.google.com/u/104168981691535740799/"
            },
            "content" : "Yes, your patch is better; thank you.",
            "published" : "2012-12-02T16:45:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 286,
        "title" : "null pointer dereference in path_length()",
        "summary" : "null pointer dereference in path_length()",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jbeck4004",
          "htmlLink" : "https://code.google.com/u/104168981691535740799/"
        },
        "updated" : "2012-12-02T11:23:37.000Z",
        "published" : "2012-11-28T03:03:16.000Z",
        "closed" : "2012-12-02T11:23:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jbeck4004",
              "htmlLink" : "https://code.google.com/u/104168981691535740799/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nThis was discovered by a static code analysis tool (Parfait), which reported:\r\n\r\nError: Null pointer dereference (CWE 476)\r\n   Read from null pointer 'path'\r\n        at line 845 of components/libarchive/libarchive-3.0.4/libarchive/archive_write_set_format_zip.c in function 'path_length'.\r\n          Function 'archive_entry_pathname' may return constant 'NULL' at line 533, called at line 843.\r\n          Null pointer introduced at line 533 of components/libarchive/libarchive-3.0.4/libarchive/archive_entry.c in function 'archive_entry_pathname'.\r\n\r\nLooking at the code, this appears correct. See the attached patch for a simple fix.\r\n\r\nWhat is the expected output? What do you see instead? N/A\r\n\r\n\r\nWhat version are you using? 3.0.4\r\n\r\n\r\nOn what operating system? Solaris\r\n\r\n\r\nHow did you build?  (cmake, configure, or pre-packaged binary) configure\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-11-28T03:03:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2860000000",
              "fileName" : "archive_write_set_format_zip.c.patch",
              "fileSize" : 407,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I applied your patch to zip writer.\r\nThank you for the patch.",
            "published" : "2012-12-02T11:23:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 287,
        "title" : "null pointer dereference in archive_write_ar_header()",
        "summary" : "null pointer dereference in archive_write_ar_header()",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jbeck4004",
          "htmlLink" : "https://code.google.com/u/104168981691535740799/"
        },
        "updated" : "2012-12-02T11:13:01.000Z",
        "published" : "2012-11-28T03:05:47.000Z",
        "closed" : "2012-12-02T11:13:01.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jbeck4004",
              "htmlLink" : "https://code.google.com/u/104168981691535740799/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nThis was discovered by a static code analysis tool (Parfait), which reported:\r\n\r\nError: Null pointer dereference (CWE 476)\r\n   Read from null pointer 'pathname'\r\n        at line 168 of components/libarchive/libarchive-3.0.4/libarchive/archive_write_set_format_ar.c in function 'archive_write_ar_header'.\r\n          Function 'archive_entry_pathname' may return constant 'NULL' at line 533, called at line 167.\r\n          Null pointer introduced at line 533 of components/libarchive/libarchive-3.0.4/libarchive/archive_entry.c in function 'archive_entry_pathname'.\r\n\r\nLooking at the code, this appears correct. See the attached patch for a simple fix.\r\n\r\n\r\nWhat is the expected output? What do you see instead? N/A\r\n\r\n\r\nWhat version are you using? 3.0.4\r\n\r\n\r\nOn what operating system? Solaris\r\n\r\n\r\nHow did you build?  (cmake, configure, or pre-packaged binary) configure\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-11-28T03:05:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2870000000",
              "fileName" : "archive_write_set_format_ar.c.patch",
              "fileSize" : 442,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for reporting an issue and the patch.\r\nI just committed your patch.",
            "published" : "2012-12-02T11:13:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 288,
        "title" : "use after free in create_sconv_object()",
        "summary" : "use after free in create_sconv_object()",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jbeck4004",
          "htmlLink" : "https://code.google.com/u/104168981691535740799/"
        },
        "updated" : "2012-12-02T10:44:06.000Z",
        "published" : "2012-11-28T03:07:40.000Z",
        "closed" : "2012-12-02T10:44:06.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jbeck4004",
              "htmlLink" : "https://code.google.com/u/104168981691535740799/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nThis was discovered by a static code analysis tool (Parfait), which reported:\r\n\r\nError: Use after free (CWE 416)\r\n   Use after free of pointer '&lt;unknown&gt;'\r\n        at line 1124 of components/libarchive/libarchive-3.0.4/libarchive/archive_string.c in function 'create_sconv_object'.\r\n          Previously freed at line 1123 with free.\r\n          '&lt;unknown&gt;' was allocated at line 1112.\r\n\r\nLooking at the code, this appears correct. See the attached patch for a trivial fix.\r\n\r\n\r\nWhat is the expected output? What do you see instead? N/A\r\n\r\n\r\nWhat version are you using? 3.0.4\r\n\r\n\r\nOn what operating system? Solaris\r\n\r\n\r\nHow did you build?  (cmake, configure, or pre-packaged binary) configure\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2012-11-28T03:07:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2880000000",
              "fileName" : "archive_string.c.patch",
              "fileSize" : 341,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "This issue has been already fixed in master branch.",
            "published" : "2012-12-02T10:44:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 289,
        "title" : "master doesn't build with -DENABLE_XATTR=OFF",
        "summary" : "master doesn't build with -DENABLE_XATTR=OFF",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kcconley",
          "htmlLink" : "https://code.google.com/u/110722844173738874321/"
        },
        "updated" : "2012-12-03T23:31:15.000Z",
        "published" : "2012-12-03T11:08:36.000Z",
        "closed" : "2012-12-03T23:31:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kcconley",
              "htmlLink" : "https://code.google.com/u/110722844173738874321/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nconfigure w/ cmake -DENABLE_XATTR=OFF\r\nThen 'make'.\r\n\r\nThis produces compile errors in archive_write_disk_posix.c related to &quot;use of undeclared identifier 'XATTR_RESOURCEFORK_NAME'&quot;.\r\n\r\nAlso a related problem is if UF_COMPRESSED is not defined compilation also fails. Code referencing UF_COMPRESSED is not all properly guarded with preprocessor check defined(UF_COMPRESSED).\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nclean build.\r\n\r\n<b>What version are you using?</b>\n\r\nlatest 'master'\r\n\r\n<b>On what operating system?</b>\n\r\nDarwin (MacOS X 10.8, iOS 5.1)\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\ncmake (-DENABLE_XATTR=OFF)\r\nmake\r\n",
            "published" : "2012-12-03T11:08:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I just committed the fix.\r\nTry the latest code.",
            "published" : "2012-12-03T23:31:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-OpSys-All", "OpSys-OSX" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 290,
        "title" : "Update copyright years to include up to 2012.",
        "summary" : "Update copyright years to include up to 2012.",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kcconley",
          "htmlLink" : "https://code.google.com/u/110722844173738874321/"
        },
        "updated" : "2012-12-07T12:25:54.000Z",
        "published" : "2012-12-07T12:25:54.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kcconley",
              "htmlLink" : "https://code.google.com/u/110722844173738874321/"
            },
            "content" : "Update the copyright years in all the license texts to include up to year 2012.",
            "published" : "2012-12-07T12:25:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 291,
        "title" : "archive_read_append_filter with ARCHIVE_FILTER_COMPRESS causes segmentation fault",
        "summary" : "archive_read_append_filter with ARCHIVE_FILTER_COMPRESS causes segmentation fault",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-High", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2012-12-16T00:19:45.000Z",
        "published" : "2012-12-16T00:19:45.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Using archive_read_append_filter() function with ARCHIVE_FILTER_COMPRESS causes segmentation fault\r\nbecause a bidder initialization of the compress filter tries to read stream data from the upstream but\r\nthe upstream is not set on that stage. I think the code reading stream data should be moved from\r\nthe bidder initialization as comment in compress_bidder_init():archive_read_support_filter_compress.c.",
            "published" : "2012-12-16T00:19:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 292,
        "title" : "Memory errors in archive_read_next_header",
        "summary" : "Memory errors in archive_read_next_header",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "martin.sandsmark",
          "htmlLink" : "https://code.google.com/u/103650489331376871873/"
        },
        "updated" : "2012-12-18T11:33:36.000Z",
        "published" : "2012-12-18T10:21:41.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "martin.sandsmark",
              "htmlLink" : "https://code.google.com/u/103650489331376871873/"
            },
            "content" : "From valgrind:\r\n\r\n==30317== Invalid read of size 8\r\n==30317==    at 0x41B86C0: __wcslen_sse2 (wcslen-sse2.S:52)\r\n==30317==    by 0x406C3F5: _archive_read_next_header2 (archive_read.c:477)\r\n==30317==    by 0x406C4B0: _archive_read_next_header (archive_read.c:514)\r\n==30317==    by 0x40B644F: archive_read_next_header (archive_virtual.c:137)\r\n==30317==    by 0x804C29B: ??? (in /usr/bin/bsdtar)\r\n==30317==    by 0x412A4D2: (below main) (libc-start.c:226)\r\n==30317==  Address 0x44fd360 is 32 bytes inside a block of size 36 alloc'd\r\n==30317==    at 0x402BB7A: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\r\n==30317==    by 0x402BC04: realloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\r\n==30317==    by 0x40AEC37: archive_string_ensure (archive_string.c:307)\r\n==30317==    by 0x40AEB71: archive_wstring_ensure (archive_string.c:259)\r\n==30317==    by 0x40AEF39: archive_wstring_append_from_mbs (archive_string.c:595)\r\n==30317==    by 0x40B5356: archive_mstring_get_wcs (archive_string.c:3956)\r\n==30317==    by 0x405E333: archive_entry_pathname_w (archive_entry.c:540)\r\n==30317==    by 0x40A252A: read_mac_metadata_blob (archive_read_support_format_tar.c:1270)\r\n==30317==    by 0x40A157A: tar_read_header (archive_read_support_format_tar.c:738)\r\n==30317==    by 0x40A0AB8: archive_read_format_tar_read_header (archive_read_support_format_tar.c:472)\r\n==30317==    by 0x406C3F5: _archive_read_next_header2 (archive_read.c:477)\r\n==30317==    by 0x406C4B0: _archive_read_next_header (archive_read.c:514)\r\n",
            "published" : "2012-12-18T10:21:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I think this is a valgrind bug reported at https://bugs.kde.org/show_bug.cgi?id=307828\r\n not a libarchive bug.",
            "published" : "2012-12-18T11:33:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 293,
        "title" : "Leak in setup_mac_metadata?",
        "summary" : "Leak in setup_mac_metadata?",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-OSX" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kcconley",
          "htmlLink" : "https://code.google.com/u/110722844173738874321/"
        },
        "updated" : "2012-12-18T22:35:03.000Z",
        "published" : "2012-12-18T12:14:10.000Z",
        "closed" : "2012-12-18T22:35:03.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kcconley",
              "htmlLink" : "https://code.google.com/u/110722844173738874321/"
            },
            "content" : "Leak in setup_mac_metadata? 'buff' is never freed.\r\n\r\nPATCH is attached.",
            "published" : "2012-12-18T12:14:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2930000000",
              "fileName" : "setup_mac_metadata_leak.patch",
              "fileSize" : 1042,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for a report and the patch.\r\nI just committed the fix.",
            "published" : "2012-12-18T22:35:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "labels" : [ "-OpSys-All", "OpSys-OSX" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 294,
        "title" : "archive_read_open1() may return garbage value.",
        "summary" : "archive_read_open1() may return garbage value.",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kcconley",
          "htmlLink" : "https://code.google.com/u/110722844173738874321/"
        },
        "updated" : "2012-12-27T09:53:05.000Z",
        "published" : "2012-12-18T12:23:04.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kcconley",
              "htmlLink" : "https://code.google.com/u/110722844173738874321/"
            },
            "content" : "Variable 'e' should be set to ARCHIVE_?? at line libarchive/archive_read.c:519.",
            "published" : "2012-12-18T12:23:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The immediate fix is pretty obvious.\r\n\r\nBut this is the sort of problem that should have been caught by tests.  Do you see where our current tests need to be extended?",
            "published" : "2012-12-27T02:07:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kcconley",
              "htmlLink" : "https://code.google.com/u/110722844173738874321/"
            },
            "content" : "I caught it with the clang static analyzer. Consider making that a part of your developement cycle.",
            "published" : "2012-12-27T09:53:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 295,
        "title" : "No _oasis file in it?",
        "summary" : "No _oasis file in it?",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "francois.berenger.working",
          "htmlLink" : "https://code.google.com/u/104643459679942671506/"
        },
        "updated" : "2012-12-25T06:08:32.000Z",
        "published" : "2012-12-20T00:52:54.000Z",
        "closed" : "2012-12-25T06:08:32.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "francois.berenger.working",
              "htmlLink" : "https://code.google.com/u/104643459679942671506/"
            },
            "content" : "It would be nice to have one, then\r\nwe could put the package in OPAM easily.\r\n",
            "published" : "2012-12-20T00:52:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What is an _oasis file?\r\n\r\nWhat is OPAM?\r\n",
            "published" : "2012-12-22T08:25:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "francois.berenger.working",
              "htmlLink" : "https://code.google.com/u/104643459679942671506/"
            },
            "content" : "Sorry, I thought this library was an OCaml wrapper around the library of the same name.\r\n",
            "published" : "2012-12-25T01:07:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe you're looking for ocaml-archive, which is the OCaml wrapper for libarchive.\r\n\r\nThis is the C library that ocaml-archive wraps.\r\n\r\n",
            "published" : "2012-12-25T06:08:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 296,
        "title" : "Fix invalid truncation error during extraction",
        "summary" : "Fix invalid truncation error during extraction",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "benoit.amiaux",
          "htmlLink" : "https://code.google.com/u/111463876722869658670/"
        },
        "updated" : "2015-01-13T05:27:45.000Z",
        "published" : "2013-01-03T17:27:19.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "benoit.amiaux",
              "htmlLink" : "https://code.google.com/u/111463876722869658670/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Uncompress local zip file ( which I can't redistribute unfortunately )\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nExpected output is to uncompress this archive without any error.\r\nInstead we get a &quot;Truncated ZIP file data&quot; error\r\nUsing 7z, the file is uncompressed without errors, and &quot;test&quot; does not report any errors either\r\n\r\n\r\n<b>What version are you using?</b>\n\r\ntrunk@3e71a61e004b8535a84a90607edf4abdfa266d6e\r\n\r\n\r\n<b>On what operating system?</b>\n\r\nwindows 7 64-bit, using libarchive 32-bit\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\ncmake\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nvisual studio 2010\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nA quick fix is provided here https://github.com/bamiaux/libarchive/commit/3797b8b5d789db558db28e71df9c577f3d5e7dfc\r\n\r\nHowever, there are many occurences of &quot;if( bytes_avail &lt;= 0 )&quot; pattern throughout libarchive code base. It may mean this bug may be present elsewhere.\r\n\r\nThe issue is that while bytes_avail is null, zip-&gt;entry_bytes_remaining is not empty",
            "published" : "2013-01-03T17:27:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please repeat your tests with the current github master code.  Among other changes, the Zip support has been extensively overhauled.  The new Zip code seems much more robust.\r\n",
            "published" : "2015-01-13T05:27:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 297,
        "title" : "configure should use pkg-config to find libxml2",
        "summary" : "configure should use pkg-config to find libxml2",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ambrop7",
          "htmlLink" : "https://code.google.com/u/103518622461418658083/"
        },
        "updated" : "2013-01-15T23:46:50.000Z",
        "published" : "2013-01-15T23:45:21.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ambrop7",
              "htmlLink" : "https://code.google.com/u/103518622461418658083/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Try to cross-compile libarchive on Linux using the autotools build system.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nConfigure uses the &quot;xml2-config&quot; to find libxml2, which picks up the one on the build system and passes -I/usr/include/... etc. to the cross-compiler. Instead, configure should use pkg-config to find libxml2. If a proper HOST-pkg-config wrapper is present, this will make it look for libxml2 in the right place.\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nPlease use the PKG_ macros and do not call &quot;pkg-config&quot; directly, because &quot;pkg-config&quot; will still just pick up packages on the build system.",
            "published" : "2013-01-15T23:45:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ambrop7",
              "htmlLink" : "https://code.google.com/u/103518622461418658083/"
            },
            "content" : "This patch changes configure.ac to use pkg-config instead of libxml2-config. With this, libarchive cross-compiles successfully.",
            "published" : "2013-01-15T23:46:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "2970001000",
              "fileName" : "libarchive-3.0.4-cross-compile.patch",
              "fileSize" : 993,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 298,
        "title" : "APPLICATION_HANG_BlockedOn_FileIO while opening file libarchive-2.6.0.tar.gz ",
        "summary" : "APPLICATION_HANG_BlockedOn_FileIO while opening file libarchive-2.6.0.tar.gz ",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-Windows" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vlg789",
          "htmlLink" : "https://code.google.com/u/100950421826068635169/"
        },
        "updated" : "2015-01-13T05:25:09.000Z",
        "published" : "2013-01-25T16:03:20.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlg789",
              "htmlLink" : "https://code.google.com/u/100950421826068635169/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. initalize library\r\n\ta = archive_read_new();\r\n\tarchive_read_support_filter_all(a);\r\n\tarchive_read_support_format_all(a);\r\n\tarchive_read_support_format_raw(a);\r\n2. open libarchive-2.6.0.tar.gz file\r\n3. it hangs\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nNot to hang.\r\n\r\n<b>What version are you using?</b>\n\r\nlibarchive-libarchive-v3.1.1-2-g6d03231.zip\r\n\r\n<b>On what operating system?</b>\n\r\nWin7X64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nCmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nVisual Studio 2010\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n\r\nWAIT_CHAIN_COMMAND:  ~1s;k;;~0s;k;;\r\n\r\nBLOCKING_THREAD:  00001858\r\n\r\nDEFAULT_BUCKET_ID:  APPLICATION_HANG_BlockedOn_FileIO\r\n\r\nPRIMARY_PROBLEM_CLASS:  APPLICATION_HANG_BlockedOn_FileIO\r\n\r\nLAST_CONTROL_TRANSFER:  from 75d5dec1 to 770cf91d\r\n\r\nSTACK_TEXT:  \r\n003cf444 75d5dec1 00000070 00000000 00000000 ntdll!NtWriteFile+0x15\r\n003cf4a8 765e12cc 00000070 00515b20 00010000 KERNELBASE!WriteFile+0x113\r\n003cf4c4 01093806 00000070 00515b20 00010000 kernel32!WriteFileImplementation+0x76\r\n003cf4f8 0109b596 00000005 00515b20 00010000 Test2!__la_write+0x66 [d:\\archive\\libarchive\\libarchive-v3.1.1-2\\libarchive-libarchive-6d03231\\libarchive\\archive_windows.c @ 668]\r\n003cf54c 0109b33b 00525c00 00525d08 00010000 Test2!child_read+0x206 [d:\\archive\\libarchive\\libarchive-v3.1.1-2\\libarchive-libarchive-6d03231\\libarchive\\archive_read_support_filter_program.c @ 372]\r\n003cf570 0103a8ad 00525c00 00525c48 003cf5d8 Test2!program_filter_read+0x5b [d:\\archive\\libarchive\\libarchive-v3.1.1-2\\libarchive-libarchive-6d03231\\libarchive\\archive_read_support_filter_program.c @ 485]\r\n003cf598 01083c4b 00525c00 0000000e 003cf5bc Test2!__archive_read_filter_ahead+0x18d [d:\\archive\\libarchive\\libarchive-v3.1.1-2\\libarchive-libarchive-6d03231\\libarchive\\archive_read.c @ 1270]\r\n003cf5c8 010393fb 006374c8 00525c00 003cfbfc Test2!bzip2_reader_bid+0x2b [d:\\archive\\libarchive\\libarchive-v3.1.1-2\\libarchive-libarchive-6d03231\\libarchive\\archive_read_support_filter_bzip2.c @ 134]\r\n003cf60c 01038d57 00637418 003cf648 01cccccc Test2!choose_filters+0x7b [d:\\archive\\libarchive\\libarchive-v3.1.1-2\\libarchive-libarchive-6d03231\\libarchive\\archive_read.c @ 562]\r\n003cf63c 010407cc 00637418 00000000 0000cccc Test2!archive_read_open1+0x257 [d:\\archive\\libarchive\\libarchive-v3.1.1-2\\libarchive-libarchive-6d03231\\libarchive\\archive_read.c @ 506]\r\n003cf670 01037489 00637418 00631d0e 00002800 Test2!archive_read_open_filename_w+0x19c [d:\\archive\\libarchive\\libarchive-v3.1.1-2\\libarchive-libarchive-6d03231\\libarchive\\archive_read_open_filename.c @ 212]\r\n003cfbfc 01037a8c 00631d0e ee1b1a4a 00000000 Test2!CFiletar::OpenFile+0x49 [d:\\1\\test2\\test2\\filetar.cpp @ 34]\r\n003cfd0c 0109d25f 00000002 00631cc0 00631da8 Test2!wmain+0x6c [d:\\1\\test2\\test2\\test2.cpp @ 18]\r\n003cfd5c 0109d08f 003cfd70 765e33aa 7efde000 Test2!__tmainCRTStartup+0x1bf [f:\\dd\\vctools\\crt_bld\\self_x86\\crt\\src\\crtexe.c @ 552]\r\n003cfd64 765e33aa 7efde000 003cfdb0 770e9ef2 Test2!wmainCRTStartup+0xf [f:\\dd\\vctools\\crt_bld\\self_x86\\crt\\src\\crtexe.c @ 371]\r\n003cfd70 770e9ef2 7efde000 7759bbb9 00000000 kernel32!BaseThreadInitThunk+0xe\r\n003cfdb0 770e9ec5 010362df 7efde000 00000000 ntdll!__RtlUserThreadStart+0x70\r\n003cfdc8 00000000 010362df 7efde000 00000000 ntdll!_RtlUserThreadStart+0x1b\r\n\r\n\r\nFOLLOWUP_IP: \r\nTest2!__la_write+66 [d:\\archive\\libarchive\\libarchive-v3.1.1-2\\libarchive-libarchive-6d03231\\libarchive\\archive_windows.c @ 668]\r\n01093806 3bf4            cmp     esi,esp\r\n\r\nFAULTING_SOURCE_CODE:  \r\n   664: \t\terrno = EBADF;\r\n   665: \t\treturn (-1);\r\n   666: \t}\r\n   667: \tif (!WriteFile((HANDLE)_get_osfhandle(fd), buf, (uint32_t)nbytes,\r\n&gt;  668: \t    &amp;bytes_written, NULL)) {\r\n   669: \t\tDWORD lasterr;\r\n   670: \r\n   671: \t\tlasterr = GetLastError();\r\n   672: \t\tif (lasterr == ERROR_ACCESS_DENIED)\r\n   673: \t\t\terrno = EBADF;",
            "published" : "2013-01-25T16:03:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlg789",
              "htmlLink" : "https://code.google.com/u/100950421826068635169/"
            },
            "content" : "  r = archive_read_open_filename_w(a, filename, 10240);",
            "published" : "2013-01-25T16:13:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "libarchive is trying to read/write to an external gzip program to decompress the data.\r\n\r\nI'm not familiar enough with Windows processes to be comfortable fixing this myself.  If you have suggestions, the relevant logic is in archive_read_support_filter_program.c.  The current code was designed for POSIX systems, and attempts to work on Windows by using adapter functions from archive_windows.c It is possible that we may need a completely separate version of this source file specifically for Windows.\r\n\r\nAlternatively, you can build libarchive with zlib:  That will cause libarchive to perform the gzip decompression itself without relying on an external program.\r\n",
            "published" : "2015-01-13T05:25:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-OpSys-All", "OpSys-Windows" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 299,
        "title" : "Multiple \"Can't create <file>\" when extracting tar.bz2 file that works with tar",
        "summary" : "Multiple \"Can't create <file>\" when extracting tar.bz2 file that works with tar",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "gginiu",
          "htmlLink" : "https://code.google.com/u/103808910748211041439/"
        },
        "updated" : "2013-01-27T21:39:50.000Z",
        "published" : "2013-01-27T10:54:01.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "gginiu",
              "htmlLink" : "https://code.google.com/u/103808910748211041439/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Grab file that does not work, for example latest:\r\n\r\nhttp://downloads.sourceforge.net/math-atlas/atlas3.10.1.tar.bz2\r\n\r\n2. Make sure that it works with tar:\r\n\r\ntar -xjf atlas3.10.1.tar.bz2\r\n\r\n3. See it fail with bsdtar:\r\n\r\nbsdtar -xf atlas3.10.1.tar.bz2\r\n\r\nInstead of files extracted, I see\r\n\r\nATLAS/CONFIG/src/winf77.c: Can't create 'ATLAS/CONFIG/src/winf77.c'\r\nATLAS/CONFIG/src/Makefile: Can't create 'ATLAS/CONFIG/src/Makefile'\r\n.....(lots more)\r\nATLAS/include/C_lapack.h: Can't create 'ATLAS/include/C_lapack.h'\r\nbsdtar: Error exit delayed from previous errors.\r\n\r\n<b>What version are you using?</b>\n\r\nFound this out with 3.0.4, but confirmed it fails with 3.1.1\r\n\r\n<b>On what operating system?</b>\n\r\nArch Linux, current\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nUsed pre-packaged 3.0.4 and 3.1.1 built using same options:\r\n\r\n  ./configure --prefix=/usr --without-xml2\r\n\r\nall 3 tests passed.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\ngcc 4.7.2, glibc 2.17, kernel 3.7.4... like always with Arch Linux, very fresh.\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI have no idea if this is caused by wrongly created upstream ATLAS package, but it works with plain tar. I eliminated all possible outside causes I could think of, like permission issues or disc space.",
            "published" : "2013-01-27T10:54:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "gginiu",
              "htmlLink" : "https://code.google.com/u/103808910748211041439/"
            },
            "content" : "btw, doing \"repackage\" with:\r\n\r\ntar -xjf atlas3.10.1.tar.bz2\r\ntar -cjf atlas3.10.1.tar.bz2 ATLAS\r\n\r\nmade it work. It makes me wonder if this is caused by some buggy tar or bzip versions on package authors side? Anyway, I'm leaving this to investigate.",
            "published" : "2013-01-27T10:56:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is a pretty screwed-up archive.  Here's why bsdtar doesn't like it:\r\n\r\nConsider the 'winf77.c' file you referred to.  There are actually\r\ntwo entries for that file.  The first one is just fine:\r\n\r\n-rw-r--r--  0 whaley whaley    9057 Jan  8 10:15 ATLAS/CONFIG/src/winf77.c\r\n\r\nThe second one is the problem:\r\n\r\nhrw-r--r--  0 whaley whaley       0 Jan  8 10:15 ATLAS/CONFIG/src/winf77.c link to ATLAS/CONFIG/src/winf77.c\r\n\r\nRemember that tar extraction programs are always supposed to overwrite when\r\nthey see a later entry that has the same name as an earlier entry.\r\n\r\nSo when bsdtar sees the second entry, it first removes the existing file\r\n(which was extracted from the first entry), then tries to create the\r\nhardlink.  Since the hardlink here is nonsensical, that fails, ultimately\r\nleaving you without a 'winf77.c' file on disk.\r\n\r\nYou should certainly raise this issue with the folks who are distributing this\r\narchive.  There is a common misuse of -T or -I flags that causes damaged\r\narchives of this sort; the folks who created this archive would likely\r\nappreciate the chance to fix it.\r\n\r\nI believe the GNU tar folks have put in some special logic on extraction to detect\r\nand ignore self-links of this sort.  (Since you're using Linux, I presume that the\r\n\"plain tar\" you refer to is GNU tar?)   We should certainly consider adding\r\na similar check to bsdtar.  (I don't think this belongs in libarchive, though.)\r\n\r\nIn the meantime, you can extract this by adding the -k option (\"keep\").  This\r\nprevents tar from overwriting existing files; in this case, it prevents the later\r\nlink entry from removing the earlier file entry.\r\n",
            "published" : "2013-01-27T17:28:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "gginiu",
              "htmlLink" : "https://code.google.com/u/103808910748211041439/"
            },
            "content" : "Yes, I meant GNU tar. As for -k option, it isn't that easy, I actually only partially \"use\" bsdtar - mostly because it is used by package management toolchain (pacman/makepkg) on Arch Linux, and I don't this there is way to pass extra options to it.\r\n\r\nAnyway, I will report broken archive upstream. Thanks for explanation.",
            "published" : "2013-01-27T21:39:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 300,
        "title" : "Zip files written by Python zipfile module extract to files full of null bytes",
        "summary" : "Zip files written by Python zipfile module extract to files full of null bytes",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bgilbert@backtick.net",
          "htmlLink" : "https://code.google.com/u/100659915104656908709/"
        },
        "updated" : "2015-01-10T05:39:10.000Z",
        "published" : "2013-01-31T10:49:09.000Z",
        "closed" : "2015-01-10T05:39:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bgilbert@backtick.net",
              "htmlLink" : "https://code.google.com/u/100659915104656908709/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n$ cat bug.py\r\nimport zipfile\r\nzf = zipfile.ZipFile('out.zip', 'w')\r\nzf.writestr('file.txt', 'This is a test.\\n')\r\nzf.close()\r\n$ python bug.py\r\n$ unzip out.zip\r\nArchive:  out.zip\r\n extracting: file.txt                \r\n$ hexdump -C file.txt \r\n00000000  54 68 69 73 20 69 73 20  61 20 74 65 73 74 2e 0a  |This is a test..|\r\n00000010\r\n$ bsdtar xvf out.zip \r\nx file.txt\r\n$ hexdump -C file.txt \r\n00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n00000010\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n(see above)\r\n\r\n<b>What version are you using?</b>\nlibarchive 3.0.3 and Git master (v3.1.1-14-g1148d8d)\r\n\r\n<b>On what operating system?</b>\nFedora 17\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nFedora package (libarchive-3.0.3-2.fc17.x86_64) for 3.0.3, configure for Git master\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.7.2-2.fc17.x86_64\r\nPython 2.7.3-7.2.fc17.x86_64\r\n\r\n<b>Please provide any additional information below.</b>",
            "published" : "2013-01-31T10:49:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3000000000",
              "fileName" : "bug.py",
              "fileSize" : 108,
              "mimetype" : "text/x-java; charset=us-ascii"
            }, {
              "attachmentId" : "3000000001",
              "fileName" : "out.zip",
              "fileSize" : 130,
              "mimetype" : "application/zip; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you for the detailed report.\r\n\r\nThis seems to work correctly with the current github master of lib archive.\r\n",
            "published" : "2015-01-10T05:39:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 301,
        "title" : "libarchive reports ENOMEM on mtree generation",
        "summary" : "libarchive reports ENOMEM on mtree generation",
        "stars" : 3,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "d@falconindy.com",
          "htmlLink" : "https://code.google.com/u/113526245087495060456/"
        },
        "updated" : "2013-02-22T00:14:29.000Z",
        "published" : "2013-02-02T23:56:19.000Z",
        "closed" : "2013-02-22T00:14:29.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "- What steps will reproduce the problem?\r\nbsdtar -czf MTREE --format=mtree --options='!all,use-set,type,uid,gid,mode,time,size,md5,sha256,link' my/file/path\r\n\r\n- What is the expected output? What do you see instead?\r\nI wanted my mtree file! Instead, I just get an ENOMEM error:\r\n&quot;Fatal Internal Error in libarchive: Out of memory&quot;\r\n\r\n- What version are you using?\r\n3.1.1, but the issue still exists in the latest pull from git.\r\n\r\n- On what operating system?\r\n64-bit Linux (Arch Linux).\r\n\r\n- How did you build?  (cmake, configure, or pre-packaged binary)\r\n./configure --prefix=/usr --without-xml2\r\n\r\n- What compiler or development environment (please include version)?\r\ngcc 4.7.2\r\n\r\n- Please provide any additional information below.\r\nAppears to be caused by an uninitialized value in an archive_string leading to an attempt at an impossibly large allocation. I've attached a stack trace with some inspection which shows the archive_string (dent-&gt;parentdir) having a length of 18446744073709551124.\r\n\r\nThis is easily reproducible, and blocks Arch Linux from upgrading to 3.1. Please let me know if there's anything else I can provide.",
            "published" : "2013-02-02T23:56:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3010000000",
              "fileName" : "stacktrace",
              "fileSize" : 7086,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "Bisected this to f83da3539b0d32131d4b, when the mtree-classic format was introduced.",
            "published" : "2013-02-03T00:24:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "Attached patch fixes the bug for me, and the test suite still passes, but I'm not sure it's the right fix. It at least pinpoints where the failure occurs, though.",
            "published" : "2013-02-03T00:36:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3010002000",
              "fileName" : "0001-mtree-fix-line-filename-length-calculation.patch",
              "fileSize" : 915,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "I'm afraid I have been unable to reproduce this issue. What is the exact path you are using as \"my/file/path\"? Are you using a path starting with \"./my/file/path\" or a path using \"..\"?",
            "published" : "2013-02-09T19:15:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "I'm attaching a tarball which reliably reproduces the issue for me. Decompress the tarball and run:\r\n\r\nbsdtar -czf mtree --format=mtree --options='!all,use-set,type,uid,gid,mode,time,size,md5,sha256,link' pacman-git",
            "published" : "2013-02-10T22:41:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3010004000",
              "fileName" : "pacman-git.tar.xz",
              "fileSize" : 1077240,
              "mimetype" : "application/x-xz; charset=binary"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "d@falconindy.com",
              "htmlLink" : "https://code.google.com/u/113526245087495060456/"
            },
            "content" : "Any news here? Is the tarball I provided sufficient for reproducing the error?",
            "published" : "2013-02-20T18:15:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "Hi, thanks for your patch. Indeed, the issue was from the use of dirname instead of file->pathname.s. Some entries would not have the leading './' so the if statement correcting this at line 1828 would fix this. The line executing archive_string_empty(&file->parentdir); would clear dirname, so file->parentdir.s would have to be used instead.\r\n\r\nI'll provide a test case for this shortly.",
            "published" : "2013-02-22T00:14:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 302,
        "title" : "test_archive_write_add_filter_by_name_lrzip test case fails",
        "summary" : "test_archive_write_add_filter_by_name_lrzip test case fails",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "amejia004",
          "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "amejia004",
          "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
        },
        "updated" : "2013-02-24T18:09:08.000Z",
        "published" : "2013-02-10T19:25:21.000Z",
        "closed" : "2013-02-24T18:09:08.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nBuild and run the test cases with lrzip installed on the system\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nLibarchive to build and pass the test suite.\r\n\r\nWhat version are you using?\r\nlibarchive git snapshot.\r\n\r\nOn what operating system?\r\nDebian amd64 testing\r\n\r\nHow did you build?  (cmake, configure, or pre-packaged binary)\r\nautotools.\r\n\r\nWhat compiler or development environment (please include version)?\r\nThe packages from the build-essential available in Debian testing.\r\n\r\nPlease provide any additional information below.\r\nBelow is the output I get for the test_archive_write_add_filter_by_name_lrzip test case. I have yet to track down what is causing this issue.\r\n\r\n$ ./libarchive_test -v test_archive_write_add_filter_by_name_lrzip\r\nIf tests fail or crash, details will be in:\r\n   /tmp/libarchive_test.2013-02-10T14.15.48-000\r\n\r\nReference files will be read from: /home/andres/debian_package_builds/libarchive/libarchive/libarchive/test\r\nExercising: libarchive 3.1.2\r\n 40: test_archive_write_add_filter_by_name_lrzip\r\nFailed to decompress buffer - lzmaerr=1\r\nFailed to decompress buffer - lzmaerr=1\r\nFailed to decompress in ucompthread\r\nFatal error - exiting\r\nlibarchive/test/test_archive_write_add_filter_by_name.c:106: ARCHIVE_OK != archive_read_open_memory(a, buff, used)\r\nlibarchive/test/test_archive_write_add_filter_by_name.c:111: ARCHIVE_OK != archive_read_next_header(a, &amp;ae)\r\nlibarchive/test/test_archive_write_add_filter_by_name.c:112: 1 != archive_entry_mtime(ae)\r\nlibarchive/test/test_archive_write_add_filter_by_name.c:113: &quot;file&quot; != archive_entry_pathname(ae)\r\nlibarchive/test/test_archive_write_add_filter_by_name.c:114: AE_IFREG != archive_entry_filetype(ae)\r\nlibarchive/test/test_archive_write_add_filter_by_name.c:115: 8 != archive_entry_size(ae)\r\nlibarchive/test/test_archive_write_add_filter_by_name.c:118: ARCHIVE_EOF != archive_read_next_header(a, &amp;ae)\r\nlibarchive/test/test_archive_write_add_filter_by_name.c:121: filter_code != archive_filter_code(a, 0)\r\nlibarchive/test/test_archive_write_add_filter_by_name.c:122: ARCHIVE_FORMAT_TAR_USTAR != archive_format(a)\r\n\r\nTotals:\r\n  Tests run:                1\r\n  Tests failed:             1\r\n  Assertions checked:      34\r\n  Assertions failed:        9\r\n  Skips reported:           0\r\n\r\nFailing tests:\r\n  40: test_archive_write_add_filter_by_name_lrzip (9 failures)\r\n\r\nDetails for failing tests: /tmp/libarchive_test.2013-02-10T14.15.48-000\r\n",
            "published" : "2013-02-10T19:25:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "Fixed in commit d767d7904781794442938df6b0dd29c8da325e03",
            "published" : "2013-02-24T18:09:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 303,
        "title" : "LZO support broken on various architectures",
        "summary" : "LZO support broken on various architectures",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "amejia004",
          "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "amejia004",
          "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
        },
        "updated" : "2013-02-24T17:05:59.000Z",
        "published" : "2013-02-12T04:17:57.000Z",
        "closed" : "2013-02-24T17:05:59.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "On certain architectures, such as arm, when trying to build libarchive with LZO support enabled, the test_write_filter_lzop test case fails on these architectures.\r\n\r\nHere is a build log from one of the architectures that has this problem.\r\nhttps://buildd.debian.org/status/fetch.php?pkg=libarchive&amp;arch=armel&amp;ver=3.1.2-2&amp;stamp=1360543656\r\n\r\nThe output shows this\r\n258: test_write_filter_lzop\r\nlibarchive/test/test_write_filter_lzop.c:152: Assertion failed: used2 &lt; used1\r\n   Description: compression-level=9 wrote 7646 bytes, default wrote 6144 bytes\r\n\r\nI have temporarily disabled building libarchive packages in Debian with LZO enabled.\r\n",
            "published" : "2013-02-12T04:17:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "Fixed in commit 26629c191a9e938e5952b4f926f4b29d2a52d5d7",
            "published" : "2013-02-24T17:05:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 304,
        "title" : "Const correctness error in tests",
        "summary" : "Const correctness error in tests",
        "stars" : 0,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "xivonidas",
          "htmlLink" : "https://code.google.com/u/118193881697801785453/"
        },
        "updated" : "2015-02-02T01:07:47.000Z",
        "published" : "2013-02-17T13:19:10.000Z",
        "closed" : "2015-02-02T01:07:47.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "xivonidas",
              "htmlLink" : "https://code.google.com/u/118193881697801785453/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. make libarchive_test\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI see this:\r\n\r\n[ 31%] Built target archive_static\r\nScanning dependencies of target libarchive_test\r\n[ 31%] Building C object libarchive/test/CMakeFiles/libarchive_test.dir/test_archive_string.c.o\r\n/home/marek/libarchive/libarchive/test/test_archive_string.c: In function ‘test_archive_string_sort’:\r\n/home/marek/libarchive/libarchive/test/test_archive_string.c:387:21: error: assignment discards ‘const’ qualifier from pointer target type [-Werror]\r\ncc1: all warnings being treated as errors\r\nmake[3]: *** [libarchive/test/CMakeFiles/libarchive_test.dir/test_archive_string.c.o] Error 1\r\nmake[2]: *** [libarchive/test/CMakeFiles/libarchive_test.dir/all] Error 2\r\nmake[1]: *** [libarchive/test/CMakeFiles/libarchive_test.dir/rule] Error 2\r\n\r\n<b>What version are you using?</b>\ngit master\r\n\r\n<b>On what operating system?</b>\nCurrent Arch Linux x86_64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake, editing build type to debug which turns warnings into errors\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nGCC 4.7.2",
            "published" : "2013-02-17T13:19:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this was fixed a long time ago by this commit:\r\n\r\ncommit 9feba94f1a15e2726ab98d76cbf3d5a07e9bf45f\r\nAuthor: Andres Mejia <amejia004@gmail.com>\r\nDate:   Fri Feb 22 20:01:42 2013 -0500\r\n\r\nIf I'm wrong, please let me know.\r\n",
            "published" : "2015-02-02T01:07:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 305,
        "title" : "Failed Test: libarchive_test_read_append_filter",
        "summary" : "Failed Test: libarchive_test_read_append_filter",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "lin.jonathan.d",
          "htmlLink" : "https://code.google.com/u/113903593361178830948/"
        },
        "updated" : "2013-02-19T15:08:55.000Z",
        "published" : "2013-02-18T16:56:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lin.jonathan.d",
              "htmlLink" : "https://code.google.com/u/113903593361178830948/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n1. CMake\r\n2. MinGW Native\r\n3. mingw32-make test\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThe following tests FAILED:\r\n221 - libarchive_test_read_append_filter\r\n\r\n<b>What version are you using?</b>\n\r\nlibarchive-3.1.2\r\n\r\n<b>On what operating system?</b>\n\r\nWindows 7, 64bit\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\ncmake, mingw native, mingw32-make\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nMinGW v0.5-beta-20120426-1\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n../Testing/Temporary/LastTest.log entry below:\r\n221/395 Testing: libarchive_test_read_append_filter\r\n221/395 Test: libarchive_test_read_append_filter\r\nCommand: &quot;C:/Users/CithosSypht/Downloads/libarchive-3.1.2/libarchive-3.1.2/bin/bin/libarchive_test.exe&quot; &quot;-vv&quot; &quot;-r&quot; &quot;C:/Users/CithosSypht/Downloads/libarchive-3.1.2/libarchive-3.1.2/libarchive/test&quot; &quot;test_read_append_filter&quot;\r\nDirectory: C:/Users/CithosSypht/Downloads/libarchive-3.1.2/libarchive-3.1.2/bin/libarchive/test\r\n&quot;libarchive_test_read_append_filter&quot; start time: Feb 18 11:49 Eastern Standard Time\r\nOutput:\r\n----------------------------------------------------------\r\n\r\nIf tests fail or crash, details will be in:\r\n   C:\\Users\\CITHOS~1\\AppData\\Local\\Temp/libarchive_test.exe.2013-02-18T11.49.27-000\r\n\r\nReference files will be read from: C:/Users/CithosSypht/Downloads/libarchive-3.1.2/libarchive-3.1.2/libarchive/test\r\nExercising: libarchive 3.1.2\r\n220: test_read_append_filter\r\nC:\\Users\\CithosSypht\\Downloads\\libarchive-3.1.2\\libarchive-3.1.2\\libarchive\\test\\test_read_set_format.c:142: ARCHIVE_OK != archive_read_open_memory(a, archive, sizeof(archive))\r\n      ARCHIVE_OK=0 (0x0, 00)\r\n      archive_read_open_memory(a, archive, sizeof(archive))=-30 (0xffffffffffffffe2, 01777777777777777777742)\r\nC:\\Users\\CithosSypht\\Downloads\\libarchive-3.1.2\\libarchive-3.1.2\\libarchive\\test\\test_read_set_format.c:143: ARCHIVE_OK != archive_read_next_header(a, &amp;ae)\r\n      ARCHIVE_OK=0 (0x0, 00)\r\n      archive_read_next_header(a, &amp;ae)=-30 (0xffffffffffffffe2, 01777777777777777777742)\r\nC:\\Users\\CithosSypht\\Downloads\\libarchive-3.1.2\\libarchive-3.1.2\\libarchive\\test\\test_read_set_format.c:144: 1 != archive_file_count(a)\r\n      1=1 (0x1, 01)\r\n      archive_file_count(a)=0 (0x0, 00)\r\nC:\\Users\\CithosSypht\\Downloads\\libarchive-3.1.2\\libarchive-3.1.2\\libarchive\\test\\test_read_set_format.c:145: archive_filter_code(a, 0) != ARCHIVE_COMPRESSION_GZIP\r\n      archive_filter_code(a, 0)=-1 (0xffffffffffffffff, 01777777777777777777777)\r\n      ARCHIVE_COMPRESSION_GZIP=1 (0x1, 01)\r\nC:\\Users\\CithosSypht\\Downloads\\libarchive-3.1.2\\libarchive-3.1.2\\libarchive\\test\\test_read_set_format.c:146: archive_format(a) != ARCHIVE_FORMAT_TAR_USTAR\r\n      archive_format(a)=0 (0x0, 00)\r\n      ARCHIVE_FORMAT_TAR_USTAR=196609 (0x30001, 0600001)\r\n\r\nTotals:\r\n  Tests run:                1\r\n  Tests failed:             1\r\n  Assertions checked:      14\r\n  Assertions failed:        5\r\n  Skips reported:           0\r\n\r\nFailing tests:\r\n  220: test_read_append_filter (5 failures)\r\n\r\nDetails for failing tests: C:\\Users\\CITHOS~1\\AppData\\Local\\Temp/libarchive_test.exe.2013-02-18T11.49.27-000\r\n\r\n&lt;end of output&gt;\r\nTest time =   0.02 sec\r\n----------------------------------------------------------\r\nTest Failed.\r\n&quot;libarchive_test_read_append_filter&quot; end time: Feb 18 11:49 Eastern Standard Time\r\n&quot;libarchive_test_read_append_filter&quot; time elapsed: 00:00:00\r\n----------------------------------------------------------",
            "published" : "2013-02-18T16:56:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lin.jonathan.d",
              "htmlLink" : "https://code.google.com/u/113903593361178830948/"
            },
            "content" : "CMake v2.8.10.2",
            "published" : "2013-02-18T17:00:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tim@kientzle.com",
              "htmlLink" : "https://code.google.com/u/111480963336027327802/"
            },
            "content" : "Thanks for reporting this.\r\n\r\nI have a couple of questions that will help narrow the problem:\r\n\r\n  * Do you have \"gzip\" available on your system?\r\n\r\n  * Do you have \"zlib\" installed?\r\n\r\n  * If you do have zlib installed, did \"cmake\" find zlib?\r\n\r\n  * Are any other tests failing?\r\n\r\nThis particular test verifies that libarchive can configure gzip\r\ndecompression in a particular way.  This test checks that you\r\nhave either built with zlib or have a gzip executable available\r\nbefore it runs so that it won't try to check on systems that cannot\r\nsupport gzip at all.\r\n\r\nThis might be a problem with the test (the way we're checking\r\nfor gzip might be wrong) or a problem with libarchive (it should\r\nbe able to handle gzip but can't).\r\n",
            "published" : "2013-02-18T18:38:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lin.jonathan.d",
              "htmlLink" : "https://code.google.com/u/113903593361178830948/"
            },
            "content" : "I did not have zlib installed, and no, none of the other tests were failing.  I have since installed zlib and rebuilt, but now for some reason the tests are all crashing.  I would guess that this is a problem on my end, however, and this issue can be closed.\r\n\r\nThank you.  ",
            "published" : "2013-02-19T15:08:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 306,
        "title" : "libarchive 3.1.2 built with MinGW fails 7 tests related to ISO 9660 formats",
        "summary" : "libarchive 3.1.2 built with MinGW fails 7 tests related to ISO 9660 formats",
        "stars" : 0,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "eliz@gnu.org",
          "htmlLink" : "https://code.google.com/u/100796221241102246155/"
        },
        "updated" : "2013-02-22T14:46:53.000Z",
        "published" : "2013-02-22T14:46:53.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "eliz@gnu.org",
              "htmlLink" : "https://code.google.com/u/100796221241102246155/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.make check\r\n<b>2.</b>\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nExpected: all tests pass.\r\nActual: 7 tests fail as follows:\r\n\r\n 52: test_archive_write_set_format_by_name_cd9660      FAIL\r\n 55: test_archive_write_set_format_by_name_iso         FAIL\r\n 56: test_archive_write_set_format_by_name_iso9660     FAIL\r\n283: test_write_format_iso9660                         FAIL\r\n284: test_write_format_iso9660_boot                    FAIL\r\n286: test_write_format_iso9660_filename                FAIL\r\n287: test_write_format_iso9660_zisofs                  FAIL\r\n\r\n<b>What version are you using?</b>\n\r\nlibarchive-3.1.2\r\n\r\n<b>On what operating system?</b>\n\r\nI built and tested on 2 different machines: on Windows XP SP3 32-bit and on Windows 7 64-bit.  (The build was done with 32-bit MinGW tools in both cases.)\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nMinGW GCC 3.4.2 + MinGW runtime v3.15.2 on Windows XP\r\nMinGW GCC 4.7.2 + MinGW runtime v3.20 on Windows 7\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI was asked to provide information about how I installed MinGW.\r\nThe answer is: I downloaded and installed the individual packages manually, i.e. without using mingw-get.  However, this same MinGW installation is being used for at least a year with no problems, during that time I configured and built quite a few packages, including libarchive 3.0.3.  So I don't think there's something wrong with my MinGW or MSYS installation.\r\n\r\nAs for the failures, they all seem to be about time stamps of the entries.  Here are a few examples from the test log files:\r\n\r\ntest_archive_write_set_format_by_name_cd9660\r\n\r\nlibarchive/test/test_archive_write_set_format_by_name.c:118: 1 != archive_entry_mtime(ae)\r\n      1=1 (0x1, 01)\r\n      archive_entry_mtime(ae)=0 (0x0, 00)\r\n\r\ntest_write_format_iso9660\r\n\r\nlibarchive/test/test_write_format_iso9660.c:212: 2 != archive_entry_atime(ae)\r\n      2=2 (0x2, 02)\r\n      archive_entry_atime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:213: 3 != archive_entry_birthtime(ae)\r\n      3=3 (0x3, 03)\r\n      archive_entry_birthtime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:214: 4 != archive_entry_ctime(ae)\r\n      4=4 (0x4, 04)\r\n      archive_entry_ctime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:215: 5 != archive_entry_mtime(ae)\r\n      5=5 (0x5, 05)\r\n      archive_entry_mtime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:224: 2 != archive_entry_atime(ae)\r\n      2=2 (0x2, 02)\r\n      archive_entry_atime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:225: 3 != archive_entry_birthtime(ae)\r\n      3=3 (0x3, 03)\r\n      archive_entry_birthtime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:226: 4 != archive_entry_ctime(ae)\r\n      4=4 (0x4, 04)\r\n      archive_entry_ctime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:227: 5 != archive_entry_mtime(ae)\r\n      5=5 (0x5, 05)\r\n      archive_entry_mtime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:236: 2 != archive_entry_atime(ae)\r\n      2=2 (0x2, 02)\r\n      archive_entry_atime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:237: 3 != archive_entry_birthtime(ae)\r\n      3=3 (0x3, 03)\r\n      archive_entry_birthtime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:238: 4 != archive_entry_ctime(ae)\r\n      4=4 (0x4, 04)\r\n      archive_entry_ctime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:239: 5 != archive_entry_mtime(ae)\r\n      5=5 (0x5, 05)\r\n      archive_entry_mtime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:248: 2 != archive_entry_atime(ae)\r\n      2=2 (0x2, 02)\r\n      archive_entry_atime(ae)=0 (0x0, 00)\r\nlibarchive/test/test_write_format_iso9660.c:249: 3 != archive_entry_birthtime(ae)\r\n",
            "published" : "2013-02-22T14:46:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 307,
        "title" : "libarchive lrzip support broken on certain architectures",
        "summary" : "libarchive lrzip support broken on certain architectures",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "amejia004",
          "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "amejia004",
          "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
        },
        "updated" : "2015-01-10T18:48:23.000Z",
        "published" : "2013-02-25T02:38:03.000Z",
        "closed" : "2015-01-10T18:48:23.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "amejia004",
              "htmlLink" : "https://code.google.com/u/amejia004@gmail.com/"
            },
            "content" : "When attempting to build libarchive with lrzip support on certain architectures, some of the lrzip test cases fail.\r\n\r\nSo far, the failures for the Linux architectures have been consistent. Here is the failure for armhf.\r\nhttps://buildd.debian.org/status/fetch.php?pkg=libarchive&amp;arch=armhf&amp;ver=3.1.2-5&amp;stamp=1361747948\r\n\r\nFailures for the other architectures can be found at\r\nhttps://buildd.debian.org/status/package.php?p=libarchive&amp;suite=experimental\r\nand\r\nhttp://buildd.debian-ports.org/status/package.php?p=libarchive&amp;suite=experimental\r\n",
            "published" : "2013-02-25T02:38:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It appears that the lrzip test issues for Debian have been fixed?  At least, I don't see them in the current build results on the Debian package building systems.\r\n\r\nI am also unable to reproduce these problems locally.\r\n\r\nI'm going to close this as \"Fixed\"; if anyone thinks otherwise, please reopen this bug and I'll take another look.\r\n",
            "published" : "2015-01-10T18:48:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 308,
        "title" : "Memory error when reading a zip file",
        "summary" : "Memory error when reading a zip file",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dev.pradeo",
          "htmlLink" : "https://code.google.com/u/107682216142216973785/"
        },
        "updated" : "2013-03-15T04:57:58.000Z",
        "published" : "2013-03-05T11:14:39.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dev.pradeo",
              "htmlLink" : "https://code.google.com/u/107682216142216973785/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nOpen a specific zip file and list the contents using the\r\ntest program attached.\r\n\r\nIf archive_read_open_filename is used, it works. If it's\r\narchive_read_open_FILE, we have memory errors. Errors result in a\r\ncrash under Mac OS.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nBad memory accesses in the valgrind log.\r\nTwo log files are given, using each of the APIs.\r\n\r\n<b>What version are you using?</b>\n\r\nlibarchive 3.1.2 from ARCH Linux, rebuilt with symbols.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\ngcc 4.7.2\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI have censored the path names from the output.\r\nI can not distribute the archive file publicly, but I will send it to you in private if you need.\r\n\r\n",
            "published" : "2013-03-05T11:14:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3080000000",
              "fileName" : "archive.c",
              "fileSize" : 794,
              "mimetype" : "text/x-c; charset=us-ascii"
            }, {
              "attachmentId" : "3080000001",
              "fileName" : "log-with-FILE.txt",
              "fileSize" : 4155,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "3080000002",
              "fileName" : "log-with-filename.txt",
              "fileSize" : 979,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "archive_read_open_FILE does not fully support seeking.  archive_read_open_filename does.\r\n\r\nThe Zip reader uses very different strategies for reading Zip archives when it cannot seek within the file.  This should not result in errors, of course, but it does explain why you see different results with the two approaches.\r\n\r\nUnfortunately, the valgrind output isn't quite enough.  It points to a problem somewhere in zip_read_local_file_header, but the line number gives is the line number of a macro that's used many times in that function.\r\n\r\nIf you could share the Zip fie with me in private email to kientzle@acm.org, I should be able to isolate the problem very quickly.\r\n",
            "published" : "2013-03-15T04:57:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 309,
        "title" : "abort trap in archive_read_data_skip",
        "summary" : "abort trap in archive_read_data_skip",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "francois.lamboley@epita.fr",
          "htmlLink" : "https://code.google.com/u/115017804526347657786/"
        },
        "updated" : "2013-03-21T16:31:42.000Z",
        "published" : "2013-03-14T22:27:52.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "francois.lamboley@epita.fr",
              "htmlLink" : "https://code.google.com/u/115017804526347657786/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. tar tf file.xar\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expected to see either a clean error (the file format is xar, not tar).\r\nInstead, tar crashes with an abort trap.\r\n\r\n<b>What version are you using?</b>\nbsdtar 2.8.3 - libarchive 2.8.3\r\n\r\n<b>On what operating system?</b>\nMac OS X\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nMac OS X comes with a pre-compiled version of bsdtar\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nNA\r\n\r\n<b>Please provide any additional information below.</b>\nI uploaded _the first megabyte_ of the file I used when I got the trap. I get the trap the same way with the first megabyte (complete file was too big). If needed I can upload the complete file somewhere.",
            "published" : "2013-03-14T22:27:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3090000000",
              "fileName" : "xaa",
              "fileSize" : 1048576,
              "mimetype" : "application/octet-stream; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "bsdtar does have some support for XAR archives.  That support is still pretty new, so there may well be shortcomings.\r\n\r\nPlease try the attached patch (against the newest source code from github) and let us know if that fixes it for you.\r\n",
            "published" : "2013-03-15T04:44:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3090001000",
              "fileName" : "xar-seeking.patch",
              "fileSize" : 777,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "francois.lamboley@epita.fr",
              "htmlLink" : "https://code.google.com/u/115017804526347657786/"
            },
            "content" : "The patch fixes the abort trap. Now bsdtar fails cleanly.",
            "published" : "2013-03-15T10:27:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "That's disappointing.  I was hoping that it wouldn't fail at all.\r\n\r\nWhere did you get this archive from?\r\nCan you create or somehow obtain a smaller one that shows the same problem?\r\n\r\nWe're always interested in files that libarchive fails on that are small enough to add to libarchive's test suite.  When we can add a file to the test suite, we can not only fix the bug but be confident that it won't ever come back.\r\n",
            "published" : "2013-03-16T04:49:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "francois.lamboley@epita.fr",
              "htmlLink" : "https://code.google.com/u/115017804526347657786/"
            },
            "content" : "The failing xar comes from the 2013 MacUpdate Bundle. It is the installer for the 1000 fonts pack.\r\nI've uploaded it on a private server. It is available at http://www.frostland.fr/media/file.xar and will be removed from the server in 3 weeks.\r\n\r\nshasum: 3af37d7ab144bbe08a44b115ac8f0f3b93f8b684",
            "published" : "2013-03-21T16:31:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 311,
        "title" : "--without-lzo2 gives false negative",
        "summary" : "--without-lzo2 gives false negative",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "woutershep",
          "htmlLink" : "https://code.google.com/u/109752024791011700314/"
        },
        "updated" : "2013-03-23T19:42:50.000Z",
        "published" : "2013-03-23T19:42:50.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "woutershep",
              "htmlLink" : "https://code.google.com/u/109752024791011700314/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. install lzop\r\n2. ./configure with --without-lzo2\r\n3. run testsuite\r\n\r\nWhat is the expected output?\r\nThat the tests pass.\r\n\r\nWhat do you see instead? \r\nTwo lzo tests failing.\r\n\r\n<b>What version are you using?</b>\n3.1.2 with 9caa49246c94921171f45ec5fb6d82081c573b8e ontop.\r\n\r\n<b>On what operating system?</b>\nExherbo linux\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nx86_64-pc-linux-gnu-gcc (exherbo gcc-4.7.2-r5) 4.7.2",
            "published" : "2013-03-23T19:42:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3110000000",
              "fileName" : "test_read_filter_lzop.log",
              "fileSize" : 246,
              "mimetype" : "text/x-pascal; charset=us-ascii"
            }, {
              "attachmentId" : "3110000001",
              "fileName" : "test_read_filter_lzop_multiple_parts.log",
              "fileSize" : 276,
              "mimetype" : "text/x-pascal; charset=us-ascii"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 312,
        "title" : "Test test_acl_nfs4.c cores",
        "summary" : "Test test_acl_nfs4.c cores",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "honkman42",
          "htmlLink" : "https://code.google.com/u/104966794706829507764/"
        },
        "updated" : "2013-04-10T12:16:23.000Z",
        "published" : "2013-04-10T12:16:23.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "honkman42",
              "htmlLink" : "https://code.google.com/u/104966794706829507764/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Compile and test libarchive 3.1.2 which produces a coredump on test_acl_nfs4.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nReference files will be read from: /home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2/libarchive/test\r\nExercising: libarchive 3.1.2\r\n  0: test_acl_freebsd_nfs4                             ok\r\n  1: test_acl_freebsd_posix1e                          ok\r\n  2: test_acl_nfs4                                     /bin/bash: line 5: 28935 Segmentation Fault      (core dumped) LIBARCHIVE_TEST_FILES=`cd .;/bin/pwd`/libarchive/test LRZIP=NOCONFIG BSDTAR=`cd .;/bin/pwd`/bsdtar BSDTAR_TEST_FILES=`cd .;/bin/pwd`/tar/test BSDCPIO=`cd .;/bin/pwd`/bsdcpio BSDCPIO_TEST_FILES=`cd .;/bin/pwd`/cpio/test ${dir}$tst\r\nFAIL: libarchive_test\r\n\r\ndam@unstable10s [unstable10s]:/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2 &gt; mdb /home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2/libarchive_test /tmp/libarchive_test.2013-04-10T11.18.50-000/test_acl_nfs4/core  \r\nLoading modules: [ libc.so.1 ld.so.1 ]\r\n&gt; ::stack\r\nlibc.so.1`strlen+0x50(17e721, ffbfe994, ffbfe3c5, 0, 0, 0)\r\nlibc.so.1`vsnprintf+0x6c(2daec0, 1000, 17e6d8, ffbfe980, 7ffffc00, 4077dd8)\r\nfailure+0x40(17e6d8, 400, 1, 2712, ffffffff, 2dac00)\r\ncompare_acls+0x184(4077170, 2bff4c, 3, 4, 2, 4077f28)\r\ntest_acl_nfs4+0xb0(4077170, 17e86c, 17e7fc, 2bff4c, fee16f0c, 2bfc00)\r\ntest_run+0x150(22e1000, ffbff41c, 17de20, 12, 2bf0e0, 0)\r\nmain+0x794(135, ffbff41c, ffbff7ce, 2bf0c4, 2bf058, 17e11c)\r\n_start+0x108(0, 0, 0, 0, 0, 0)\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nSolaris 10 Sparc\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncd work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2 &amp;&amp; /usr/bin/env -i HOME=&quot;/home/dam&quot; PATH=&quot;/home/dam/mgar/pkg/.buildsys/v2/gar/bin/sos12-wrappers:/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/install-isa-sparcv8plus/opt/csw/bin:/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/install-isa-sparcv8plus/opt/csw/bin:/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/install-isa-sparcv8plus/opt/csw/sbin:/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/install-isa-sparcv8plus/opt/csw/sbin:/opt/csw/bin:/opt/csw/bin:/opt/csw/sbin:/opt/csw/sbin:/opt/SUNWspro/bin:/home/dam/mgar/pkg/.buildsys/v2/gar/bin:/usr/bin:/usr/sbin:/usr/java/bin:/usr/ccs/bin:/usr/openwin/bin&quot; LC_ALL=&quot;C&quot; prefix=&quot;/opt/csw&quot; exec_prefix=&quot;/opt/csw&quot; bindir=&quot;/opt/csw/bin&quot; sbindir=&quot;/opt/csw/sbin&quot; libexecdir=&quot;/opt/csw/libexec&quot; datadir=&quot;/opt/csw/share&quot; sysconfdir=&quot;/etc/opt/csw&quot; sharedstatedir=&quot;/opt/csw/share&quot; localstatedir=&quot;/var/opt/csw&quot; libdir=&quot;/opt/csw/lib&quot; infodir=&quot;/opt/csw/share/info&quot; lispdir=&quot;/opt/csw/share/emacs/site-lisp&quot; includedir=&quot;/opt/csw/include&quot; mandir=&quot;/opt/csw/share/man&quot; docdir=&quot;/opt/csw/share/doc&quot; sourcedir=&quot;/opt/csw/src&quot; CPPFLAGS=&quot;-I/opt/csw/include/cryptopp -I/opt/csw/include&quot; CFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; CXXFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; LDFLAGS=&quot;-m32 -xarch=sparc -L/opt/csw/lib&quot; FFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; FCFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; F77=&quot;/opt/SUNWspro/bin/f77&quot; FC=&quot;/opt/SUNWspro/bin/f95&quot; ASFLAGS=&quot;&quot; OPTFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; CC=&quot;/opt/SUNWspro/bin/cc&quot; CXX=&quot;/opt/SUNWspro/bin/CC&quot; CC_HOME=&quot;/opt/SUNWspro&quot; CC_VERSION=&quot;Sun C 5.9 SunOS_sparc Patch 124867-16 2010/08/11&quot; CXX_VERSION=&quot;Sun C++ 5.9 SunOS_sparc Patch 124863-30 2012/07/11&quot; GARCH=&quot;sparc&quot; GAROSREL=&quot;5.10&quot; GARPACKAGE=&quot;trunk&quot; LD_OPTIONS=&quot;-R/opt/csw/lib/\\$ISALIST -R/opt/csw/lib -M /home/dam/mgar/pkg/.buildsys/v2/gar/lib/map.solaris10 -B direct -z ignore&quot;  gmake  COMMON_CFLAGS=&quot;&quot;  -C . \r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nSun Studio 12\r\n\r\n<b>Please provide any additional information below.</b>\nThe name may be null is vsprintf, the attached patch replaces NULL by the empty string and makes the test to not core:\r\n  http://sourceforge.net/apps/trac/gar/browser/csw/mgar/pkg/libarchive/trunk/files/0001-Consider-name-to-be-NULL-in-ACL-test.patch\r\n",
            "published" : "2013-04-10T12:16:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 313,
        "title" : "Failed tests on Solaris 10 Sparc",
        "summary" : "Failed tests on Solaris 10 Sparc",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "honkman42",
          "htmlLink" : "https://code.google.com/u/104966794706829507764/"
        },
        "updated" : "2013-04-10T12:52:19.000Z",
        "published" : "2013-04-10T12:52:19.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "honkman42",
              "htmlLink" : "https://code.google.com/u/104966794706829507764/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Compile and run the testsuite\r\n\r\n<b>What is the expected output? What do you see instead?</b>\ngmake[2]: Entering directory `/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2'\r\n\r\nIf tests fail or crash, details will be in:\r\n   /tmp/libarchive_test.2013-04-10T14.16.07-000\r\n\r\nReference files will be read from: /home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2/libarchive/test\r\nExercising: libarchive 3.1.2\r\n  0: test_acl_freebsd_nfs4                             ok\r\n  1: test_acl_freebsd_posix1e                          ok\r\n  2: test_acl_nfs4                                     ok\r\n  3: test_acl_pax                                      ok\r\n  4: test_acl_posix1e                                  ok\r\n  5: test_archive_api_feature                          ok\r\n  6: test_archive_clear_error                          ok\r\n  7: test_archive_cmdline                              ok\r\n  8: test_archive_md5                                  ok\r\n  9: test_archive_rmd160                               ok\r\n 10: test_archive_sha1                                 ok\r\n 11: test_archive_sha256                               ok\r\n 12: test_archive_sha384                               ok\r\n 13: test_archive_sha512                               ok\r\n 14: test_archive_getdate                              ok\r\n 15: test_archive_match_owner                          ok\r\n 16: test_archive_match_path                           ok\r\n 17: test_archive_match_time                           ok\r\n 18: test_archive_pathmatch                            ok\r\n 19: test_archive_read_close_twice                     ok\r\n 20: test_archive_read_close_twice_open_fd             ok\r\n 21: test_archive_read_close_twice_open_filename       ok\r\n 22: test_archive_read_multiple_data_objects           ok\r\n 23: test_archive_read_next_header_empty               ok\r\n 24: test_archive_read_next_header_raw                 ok\r\n 25: test_archive_read_open2                           ok\r\n 26: test_archive_read_set_filter_option               ok\r\n 27: test_archive_read_set_format_option               ok\r\n 28: test_archive_read_set_option                      ok\r\n 29: test_archive_read_set_options                     ok\r\n 30: test_archive_read_support                         ok\r\n 31: test_archive_set_error                            ok\r\n 32: test_archive_string                               ok\r\n 33: test_archive_string_conversion                    ok\r\n 34: test_archive_write_add_filter_by_name_b64encode   ok\r\n 35: test_archive_write_add_filter_by_name_bzip2       ok\r\n 36: test_archive_write_add_filter_by_name_compress    ok\r\n 37: test_archive_write_add_filter_by_name_grzip       sh: grzip: not found\r\nok\r\n 38: test_archive_write_add_filter_by_name_gzip        ok\r\n 39: test_archive_write_add_filter_by_name_lrzip       sh: lrzip: not found\r\nok\r\n 40: test_archive_write_add_filter_by_name_lzip        ok\r\n 41: test_archive_write_add_filter_by_name_lzma        ok\r\n 42: test_archive_write_add_filter_by_name_lzop        ok\r\n 43: test_archive_write_add_filter_by_name_uuencode    ok\r\n 44: test_archive_write_add_filter_by_name_xz          ok\r\n 45: test_archive_write_set_filter_option              ok\r\n 46: test_archive_write_set_format_by_name_7zip        ok\r\n 47: test_archive_write_set_format_by_name_ar          ok\r\n 48: test_archive_write_set_format_by_name_arbsd       ok\r\n 49: test_archive_write_set_format_by_name_argnu       ok\r\n 50: test_archive_write_set_format_by_name_arsvr4      ok\r\n 51: test_archive_write_set_format_by_name_bsdtar      ok\r\n 52: test_archive_write_set_format_by_name_cd9660      ok\r\n 53: test_archive_write_set_format_by_name_cpio        ok\r\n 54: test_archive_write_set_format_by_name_gnutar      ok\r\n 55: test_archive_write_set_format_by_name_iso         ok\r\n 56: test_archive_write_set_format_by_name_iso9660     ok\r\n 57: test_archive_write_set_format_by_name_mtree       ok\r\n 58: test_archive_write_set_format_by_name_mtree_classicok\r\n 59: test_archive_write_set_format_by_name_newc        ok\r\n 60: test_archive_write_set_format_by_name_odc         ok\r\n 61: test_archive_write_set_format_by_name_oldtar      ok\r\n 62: test_archive_write_set_format_by_name_pax         ok\r\n 63: test_archive_write_set_format_by_name_paxr        ok\r\n 64: test_archive_write_set_format_by_name_posix       ok\r\n 65: test_archive_write_set_format_by_name_rpax        ok\r\n 66: test_archive_write_set_format_by_name_shar        ok\r\n 67: test_archive_write_set_format_by_name_shardump    ok\r\n 68: test_archive_write_set_format_by_name_ustar       ok\r\n 69: test_archive_write_set_format_by_name_v7tar       ok\r\n 70: test_archive_write_set_format_by_name_v7          ok\r\n 71: test_archive_write_set_format_by_name_xar         ok\r\n 72: test_archive_write_set_format_by_name_zip         ok\r\n 73: test_archive_write_set_format_option              ok\r\n 74: test_archive_write_set_option                     ok\r\n 75: test_archive_write_set_options                    ok\r\n 76: test_bad_fd                                       ok\r\n 77: test_compat_bzip2                                 ok\r\n 78: test_compat_cpio                                  ok\r\n 79: test_compat_gtar                                  ok\r\n 80: test_compat_gzip                                  ok\r\n 81: test_compat_lzip                                  ok\r\n 82: test_compat_lzma                                  ok\r\n 83: test_compat_lzop                                  ok\r\n 84: test_compat_mac                                   ok\r\n 85: test_compat_pax_libarchive_2x                     ok\r\n 86: test_compat_solaris_pax_sparse                    ok\r\n 87: test_compat_solaris_tar_acl                       ok\r\n 88: test_compat_tar_hardlink                          ok\r\n 89: test_compat_uudecode                              ok\r\n 90: test_compat_xz                                    ok\r\n 91: test_compat_zip                                   FAIL\r\n 92: test_empty_write                                  ok\r\n 93: test_entry                                        ok\r\n 94: test_entry_strmode                                ok\r\n 95: test_extattr_freebsd                              ok\r\n 96: test_filter_count                                 ok\r\n 97: test_fuzz_ar                                      ok\r\n 98: test_fuzz_cab                                     ok\r\n 99: test_fuzz_cpio                                    \r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--format violated\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: unexpected end of file\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: unexpected end of file\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\nok\r\n100: test_fuzz_iso9660                                 ok\r\n101: test_fuzz_lzh                                     ok\r\n102: test_fuzz_mtree                                   ok\r\n103: test_fuzz_rar                                     ok\r\n104: test_fuzz_tar                                     \r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--format violated\r\n\r\ngzip: stdin: invalid compressed data--format violated\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: decompression OK, trailing garbage ignored\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: decompression OK, trailing garbage ignored\r\n\r\ngzip: stdin: decompression OK, trailing garbage ignored\r\n\r\ngzip: stdin: unexpected end of file\r\n\r\ngzip: stdin: invalid compressed data--format violated\r\n\r\ngzip: stdin: decompression OK, trailing garbage ignored\r\n\r\ngzip: stdin: invalid compressed data--format violated\r\n\r\ngzip: stdin: invalid compressed data--format violated\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: decompression OK, trailing garbage ignored\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: invalid compressed data--crc error\r\n\r\ngzip: stdin: invalid compressed data--length error\r\n\r\ngzip: stdin: decompression OK, trailing garbage ignored\r\nok\r\n105: test_fuzz_zip                                     ok\r\n106: test_gnutar_filename_encoding                     ok\r\n107: test_link_resolver                                ok\r\n108: test_open_failure                                 ok\r\n109: test_open_fd                                      ok\r\n110: test_open_file                                    ok\r\n111: test_open_filename                                ok\r\n112: test_pax_filename_encoding                        ok\r\n113: test_read_data_large                              ok\r\n114: test_read_disk                                    ok\r\n115: test_read_disk_directory_traversals               ok\r\n116: test_read_disk_entry_from_file                    ok\r\n117: test_read_extract                                 ok\r\n118: test_read_file_nonexistent                        ok\r\n119: test_read_filter_grzip                            ok\r\n120: test_read_filter_lrzip                            ok\r\n121: test_read_filter_lzop                             ok\r\n122: test_read_filter_lzop_multiple_parts              ok\r\n123: test_read_filter_program                          ok\r\n124: test_read_filter_program_signature                ok\r\n125: test_read_filter_uudecode                         ok\r\n126: test_read_filter_uudecode_base64                  ok\r\n127: test_read_format_7zip                             ok\r\n128: test_read_format_7zip_bzip2                       ok\r\n129: test_read_format_7zip_copy                        ok\r\n130: test_read_format_7zip_deflate                     ok\r\n131: test_read_format_7zip_empty                       ok\r\n132: test_read_format_7zip_lzma1                       ok\r\n133: test_read_format_7zip_lzma2                       ok\r\n134: test_read_format_7zip_ppmd                        ok\r\n135: test_read_format_ar                               ok\r\n136: test_read_format_cab                              FAIL\r\n137: test_read_format_cab_filename                     ok\r\n...\r\n209: test_read_format_xar                              ok\r\n210: test_read_format_zip                              FAIL\r\n211: test_read_format_zip_comment_stored               ok\r\n212: test_read_format_zip_filename                     ok\r\n213: test_read_format_zip_mac_metadata                 FAIL\r\n214: test_read_format_zip_sfx                          ok\r\n...\r\n227: test_read_truncated_filter_gzip                   \r\ngzip: stdin: unexpected end of file\r\nok\r\n228: test_read_truncated_filter_lzip                   ok\r\n229: test_read_truncated_filter_lzma                   ok\r\n230: test_read_truncated_filter_lzop                   sh: lzop: not found\r\nok\r\n231: test_read_truncated_filter_xz                     ok\r\n...\r\n257: test_write_filter_lzma                            ok\r\n258: test_write_filter_lzop                            FAIL\r\n259: test_write_filter_program                         ok\r\n...\r\n308: test_write_zip_set_compression_store              ok\r\n309: test_zip_filename_encoding                        ok\r\n\r\nTotals:\r\n  Tests run:              310\r\n  Tests failed:             5\r\n  Assertions checked:19467410\r\n  Assertions failed:      549\r\n  Skips reported:         148\r\n\r\nFailing tests:\r\n  91: test_compat_zip (2 failures)\r\n  136: test_read_format_cab (530 failures)\r\n  210: test_read_format_zip (14 failures)\r\n  213: test_read_format_zip_mac_metadata (2 failures)\r\n  258: test_write_filter_lzop (1 failures)\r\n\r\nDetails for failing tests: /tmp/libarchive_test.2013-04-10T14.16.07-000\r\n\r\nFAIL: libarchive_test\r\n\r\nIf tests fail or crash, details will be in:\r\n   /tmp/bsdtar_test.2013-04-10T14.21.00-000\r\n\r\nReference files will be read from: /home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2/tar/test\r\nRunning tests on: &quot;/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2/bsdtar&quot;\r\nExercising: bsdtar 3.1.2 - libarchive 3.1.2\r\n\r\n  0: test_0                                            ok\r\n  1: test_basic                                        ok\r\n  2: test_copy                                         ok\r\n  3: test_empty_mtree                                  ok\r\n  4: test_extract_tar_Z                                ok\r\n  5: test_extract_tar_bz2                              ok\r\n  6: test_extract_tar_grz                              sh: grzip: not found\r\nok\r\n  7: test_extract_tar_gz                               ok\r\n  8: test_extract_tar_lrz                              sh: lrzip: not found\r\nok\r\n  9: test_extract_tar_lz                               ok\r\n 10: test_extract_tar_lzma                             ok\r\n 11: test_extract_tar_lzo                              ok\r\n 12: test_extract_tar_xz                               ok\r\n 13: test_format_newc                                  ok\r\n 14: test_help                                         ok\r\n 15: test_option_C_upper                               ok\r\n 16: test_option_H_upper                               ok\r\n 17: test_option_L_upper                               ok\r\n 18: test_option_O_upper                               ok\r\n 19: test_option_T_upper                               ok\r\n 20: test_option_U_upper                               ok\r\n 21: test_option_X_upper                               ok\r\n 22: test_option_a                                     ok\r\n 23: test_option_b                                     ok\r\n 24: test_option_b64encode                             ok\r\n 25: test_option_exclude                               ok\r\n 26: test_option_gid_gname                             ok\r\n 27: test_option_grzip                                 ok\r\n 28: test_option_j                                     ok\r\n 29: test_option_k                                     ok\r\n 30: test_option_keep_newer_files                      ok\r\n 31: test_option_lrzip                                 ok\r\n 32: test_option_lzma                                  ok\r\n 33: test_option_lzop                                  ok\r\n 34: test_option_n                                     ok\r\n 35: test_option_newer_than                            ok\r\n 36: test_option_nodump                                ok\r\n 37: test_option_older_than                            ok\r\n 38: test_option_q                                     ok\r\n 39: test_option_r                                     ok\r\n 40: test_option_s                                     ok\r\n 41: test_option_uid_uname                             ok\r\n 42: test_option_uuencode                              ok\r\n 43: test_option_xz                                    ok\r\n 44: test_option_z                                     ok\r\n 45: test_patterns                                     ok\r\n 46: test_print_longpath                               ok\r\n 47: test_stdio                                        ok\r\n 48: test_strip_components                             ok\r\n 49: test_symlink_dir                                  ok\r\n 50: test_version                                      ok\r\n 51: test_windows                                      ok\r\n\r\nTotals:\r\n  Tests run:               52\r\n  Tests failed:             0\r\n  Assertions checked:    7716\r\n  Assertions failed:        0\r\n  Skips reported:           6\r\n52 tests passed, no failures\r\nPASS: bsdtar_test\r\n\r\nIf tests fail or crash, details will be in:\r\n   /tmp/bsdcpio_test.2013-04-10T14.21.12-000\r\n\r\nReference files will be read from: /home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2/cpio/test\r\nRunning tests on: &quot;/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2/bsdcpio&quot;\r\nExercising: bsdcpio 3.1.2 -- libarchive 3.1.2\r\n\r\n  0: test_0                                            ok\r\n  1: test_basic                                        ok\r\n  2: test_cmdline                                      ok\r\n  3: test_extract_cpio_Z                               ok\r\n  4: test_extract_cpio_bz2                             ok\r\n  5: test_extract_cpio_grz                             sh: grzip: not found\r\nok\r\n  6: test_extract_cpio_gz                              ok\r\n  7: test_extract_cpio_lrz                             sh: lrzip: not found\r\nok\r\n  8: test_extract_cpio_lz                              ok\r\n  9: test_extract_cpio_lzma                            ok\r\n 10: test_extract_cpio_lzo                             sh: lzop: not found\r\nok\r\n 11: test_extract_cpio_xz                              ok\r\n 12: test_format_newc                                  ok\r\n 13: test_gcpio_compat                                 ok\r\n 14: test_option_0                                     ok\r\n 15: test_option_B_upper                               ok\r\n 16: test_option_C_upper                               ok\r\n 17: test_option_J_upper                               ok\r\n 18: test_option_L_upper                               ok\r\n 19: test_option_Z_upper                               ok\r\n 20: test_option_a                                     ok\r\n 21: test_option_b64encode                             ok\r\n 22: test_option_c                                     ok\r\n 23: test_option_d                                     ok\r\n 24: test_option_f                                     ok\r\n 25: test_option_grzip                                 ok\r\n 26: test_option_help                                  ok\r\n 27: test_option_l                                     ok\r\n 28: test_option_lrzip                                 ok\r\n 29: test_option_lzma                                  ok\r\n 30: test_option_lzop                                  ok\r\n 31: test_option_m                                     ok\r\n 32: test_option_t                                     ok\r\n 33: test_option_u                                     ok\r\n 34: test_option_uuencode                              ok\r\n 35: test_option_version                               ok\r\n 36: test_option_xz                                    ok\r\n 37: test_option_y                                     ok\r\n 38: test_option_z                                     ok\r\n 39: test_owner_parse                                  ok\r\n 40: test_passthrough_dotdot                           ok\r\n 41: test_passthrough_reverse                          ok\r\n\r\nTotals:\r\n  Tests run:               42\r\n  Tests failed:             0\r\n  Assertions checked:     936\r\n  Assertions failed:        0\r\n  Skips reported:           5\r\n42 tests passed, no failures\r\nPASS: bsdcpio_test\r\n====================================================\r\n1 of 3 tests failed\r\nPlease report to libarchive-discuss@googlegroups.com\r\n====================================================\r\n\r\n\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nSolaris 10 Sparc\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncd work/solaris10-sparc/build-isa-sparcv8plus/libarchive-3.1.2 &amp;&amp; /usr/bin/env -i HOME=&quot;/home/dam&quot; PATH=&quot;/home/dam/mgar/pkg/.buildsys/v2/gar/bin/sos12-wrappers:/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/install-isa-sparcv8plus/opt/csw/bin:/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/install-isa-sparcv8plus/opt/csw/bin:/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/install-isa-sparcv8plus/opt/csw/sbin:/home/dam/mgar/pkg/libarchive/trunk/work/solaris10-sparc/install-isa-sparcv8plus/opt/csw/sbin:/opt/csw/bin:/opt/csw/bin:/opt/csw/sbin:/opt/csw/sbin:/opt/SUNWspro/bin:/home/dam/mgar/pkg/.buildsys/v2/gar/bin:/usr/bin:/usr/sbin:/usr/java/bin:/usr/ccs/bin:/usr/openwin/bin&quot; LC_ALL=&quot;C&quot; prefix=&quot;/opt/csw&quot; exec_prefix=&quot;/opt/csw&quot; bindir=&quot;/opt/csw/bin&quot; sbindir=&quot;/opt/csw/sbin&quot; libexecdir=&quot;/opt/csw/libexec&quot; datadir=&quot;/opt/csw/share&quot; sysconfdir=&quot;/etc/opt/csw&quot; sharedstatedir=&quot;/opt/csw/share&quot; localstatedir=&quot;/var/opt/csw&quot; libdir=&quot;/opt/csw/lib&quot; infodir=&quot;/opt/csw/share/info&quot; lispdir=&quot;/opt/csw/share/emacs/site-lisp&quot; includedir=&quot;/opt/csw/include&quot; mandir=&quot;/opt/csw/share/man&quot; docdir=&quot;/opt/csw/share/doc&quot; sourcedir=&quot;/opt/csw/src&quot; CPPFLAGS=&quot;-I/opt/csw/include/cryptopp -I/opt/csw/include&quot; CFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; CXXFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; LDFLAGS=&quot;-m32 -xarch=sparc -L/opt/csw/lib&quot; FFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; FCFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; F77=&quot;/opt/SUNWspro/bin/f77&quot; FC=&quot;/opt/SUNWspro/bin/f95&quot; ASFLAGS=&quot;&quot; OPTFLAGS=&quot;-xO3 -m32 -xarch=sparc&quot; CC=&quot;/opt/SUNWspro/bin/cc&quot; CXX=&quot;/opt/SUNWspro/bin/CC&quot; CC_HOME=&quot;/opt/SUNWspro&quot; CC_VERSION=&quot;Sun C 5.9 SunOS_sparc Patch 124867-16 2010/08/11&quot; CXX_VERSION=&quot;Sun C++ 5.9 SunOS_sparc Patch 124863-30 2012/07/11&quot; GARCH=&quot;sparc&quot; GAROSREL=&quot;5.10&quot; GARPACKAGE=&quot;trunk&quot; LD_OPTIONS=&quot;-R/opt/csw/lib/\\$ISALIST -R/opt/csw/lib -M /home/dam/mgar/pkg/.buildsys/v2/gar/lib/map.solaris10 -B direct -z ignore&quot;  gmake  COMMON_CFLAGS=&quot;&quot;  -C .  check  \r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nSun Studio 12\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nThe logs for the failed tests are available at http://buildfarm.opencsw.org/~dam/libarchive_test.2013-04-10T14.16.07-000/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "published" : "2013-04-10T12:52:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 314,
        "title" : "bsdtar reports \"Damaged tar archive\" for tar file containing just a pax comment header",
        "summary" : "bsdtar reports \"Damaged tar archive\" for tar file containing just a pax comment header",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rene.scharfe",
          "htmlLink" : "https://code.google.com/u/104164106444631459594/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2014-09-04T09:10:12.000Z",
        "published" : "2013-04-10T16:44:54.000Z",
        "closed" : "2013-04-11T04:56:53.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rene.scharfe",
              "htmlLink" : "https://code.google.com/u/104164106444631459594/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nCreating two test archives, one using dd and the other using git because I don't know how to create tar archives with comments any other way (except byte by byte). Commands:\r\nmkdir dir; cd dir; git init; echo .gitattributes export-ignore &gt;.gitattributes; git add .gitattributes; git commit -m.; git archive -o comment.tar HEAD; dd if=/dev/zero of=empty.tar bs=1024 count=10; bsdtar tf empty.tar; echo $?; bsdtar tf comment.tar; echo $?\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nBoth are essentially empty archives. The first bsdtar exists with status 0 and prints no output; this is the expected behaviour. The second one however (against the tar file containing only a comment) exits with status 1 and reports:\r\nbsdtar: Damaged tar archive\r\nbsdtar: Error exit delayed from previous errors.\r\n\r\n<b>What version are you using?</b>\nbsdtar 3.0.4 - libarchive 3.0.4, bsdtar 3.1.2 - libarchive 3.1.2\r\ngit version 1.8.2.1 (earlier versions can't create empty archives)\r\n\r\n<b>On what operating system?</b>\nLinux debian 3.2.0-4-amd64 #1 SMP Debian 3.2.41-2 x86_64 GNU/Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\npre-packaged binary (3.0.4), configure (3.1.2)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc-4.6 (Debian 4.6.3-14) 4.6.3\r\n\r\n<b>Please provide any additional information below.</b>\nEmpty archives are a dubious corner case, and bsdtar doesn't even handle pax extended header comment records, but still it's inconsistent to quietly handle completely empty archives but report a fatal error when a comment is added. GNU tar is silent in both cases.\r\nOriginal report: http://thread.gmane.org/gmane.comp.version-control.git/220485\r\nThe attached patch fixes the issue, but it may be too blunt.\r\n",
            "published" : "2013-04-10T16:44:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3140000000",
              "fileName" : "accept-global-pax-header-at-end-of-archive.diff",
              "fileSize" : 669,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Your patch is exactly correct:  An EOF condition immediately after a 'g' record should be treated as a regular EOF.\r\n\r\nThanks for sharing how to create a sample file; I've added a test for this case to the libarchive test suite and committed the test and your fix.\r\n",
            "published" : "2013-04-11T04:56:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sorengholm",
              "htmlLink" : "https://code.google.com/u/114284876813598961892/"
            },
            "content" : "Which version did the patch end up in, because I have a simillar problem with this file :\r\n\r\nhttp://sgh.dk/~sgh/Norway_geoids.dat\r\n\r\nit's a targz stream ending with ARCHIVE_FATAL. I wonder if it's the same problem. I'm using libarchive 3.1.2",
            "published" : "2014-09-04T09:10:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 315,
        "title" : "Hang observed with xz/7z",
        "summary" : "Hang observed with xz/7z",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "Ztatik.Light",
          "htmlLink" : "https://code.google.com/u/114441911478678388852/"
        },
        "updated" : "2013-04-27T17:44:46.000Z",
        "published" : "2013-04-23T08:45:33.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Ztatik.Light",
              "htmlLink" : "https://code.google.com/u/114441911478678388852/"
            },
            "content" : "Concerning libarchive v3.1.2... This may or may not be known already, but more testing is required for the xz and 7zip formats because with small files, they work... But with larger files that contain several files, it either doesn't work or hangs.\r\n\r\nWhat I'm testing with is about 100 files that total about 25 MB compressed as either .tar.xz or .7z",
            "published" : "2013-04-23T08:45:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I doubt it is related to number of files or size of archive:\r\nI just created a .tar.xz archive with 442994 files; the total archive\r\nsize was just over 1GB.  It worked just fine.\r\n\r\nI'm repeating that test with 7zip format but I expect it will also work fine.\r\n\r\nSo something else is going on.\r\n\r\nAre you using bsdtar or a custom program?\r\nWhat operating system?\r\nWhat compiler?\r\nDid you compile libarchive with liblzma or is it using the command-line xz program?\r\nWhen it hangs, is it using CPU time?\r\nCan you run it under a debugger and see where it is hung?\r\n",
            "published" : "2013-04-25T04:43:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "For the record, I repeated my test (442k files, >1GB resulting archive) with 7z and it also worked fine.\r\n\r\nWould like to get more details about the hang you saw so we can figure out what's really happening and get it fixed.\r\n",
            "published" : "2013-04-27T17:11:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Hang observed with xz/7z"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Ztatik.Light",
              "htmlLink" : "https://code.google.com/u/114441911478678388852/"
            },
            "content" : "Oh - i think the problem is i'm not compiling properly with liblzma... because even the zip support seems to be cli-based, if i remove the mingw directories from PATH then it breaks. Any notes you may have on properly building liblzma itself - then getting libarchive to link to in on MSYS/MinGW/GCC/Windows would be appreciated",
            "published" : "2013-04-27T17:44:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 316,
        "title" : "Seeking support?",
        "summary" : "Seeking support?",
        "stars" : 3,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "nfxjfg",
          "htmlLink" : "https://code.google.com/u/nfxjfg@googlemail.com/"
        },
        "updated" : "2015-01-13T05:19:43.000Z",
        "published" : "2013-05-01T17:31:27.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nfxjfg",
              "htmlLink" : "https://code.google.com/u/nfxjfg@googlemail.com/"
            },
            "content" : "Would it be possible to implement seeking within archive entries? Or in other words, change the read position within the stream read by archive_read_data(). So far, the API seems to support linear reading only.\r\n\r\nMost archive formats perhaps do not support random access directly. But it could be realized by storing the archive decompressor state all xx MB, and if a seek to a certain position is requested, resume from the closest state backup, then skip data until the seek target is reached.\r\n\r\nSomewhat related to this, it would be interesting to know whether an entry is compressed or not. For some reason, it's popular to pack media files (like music or video) in uncompressed rar or zip files, either for packing bundling multiple files into one file, or for splitting a single file into multiple files. Some media players even have direct support for this (e.g. VLC in modules/access/rar/rar.c, which can open uncompressed rar files only).",
            "published" : "2013-05-01T17:31:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It might be possible to implement seeking within entries:\r\nIf you have ideas on how to implement it, I'd be very\r\ninterested in seeing code.\r\n\r\nRe: reporting the compression for each entry\r\n\r\nThis would be pretty simple to add, though possibly\r\nmisleading.\r\n\r\nFor example, because of how libarchive is designed,\r\nentries in a tar.gz archive would have to be marked\r\n\"uncompressed.\"  Is that you would expect?\r\n",
            "published" : "2013-05-02T04:46:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nfxjfg",
              "htmlLink" : "https://code.google.com/u/nfxjfg@googlemail.com/"
            },
            "content" : ">If you have ideas on how to implement it, I'd be very interested in seeing code.\r\n\r\nI don't know the libarchive code or its architecture. (I'm just someone who wants to implement transparent archive reading support to his application for streams that are mostly read linearly, but sometimes need random access.)\r\n\r\nMy idea was that each decompression filter can save/restore its state. So you could resume compression at places for which you have a state backup. Once you have this, it would be easy to implement byte-exact seeking by skipping all data between the restore point and the seek target. Since the amount of data that needs to be skipped will be relatively low (assuming a moderate number of such restore points), random access seeking can be fast.\r\n\r\nAdding this resume/restore functionality to decompressors would probably be a bit of work, if it's feasible at all. Though I would guess/hope that most compression formats compress data in independent blocks, instead of making the decompression of every byte dependent on the full decompression of every preceding byte.\r\n\r\n>For example, because of how libarchive is designed,\r\n>entries in a tar.gz archive would have to be marked\r\n>\"uncompressed.\"  Is that you would expect?\r\n\r\nNo, it would be the expect opposite from what I'd expect. If there's a way to query the compression of the archive itself, it might make sense, though.",
            "published" : "2013-05-03T21:15:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "I started working on it by supporting seeking to an arbitrary header. To go incrementally, the first patch doesn't focus on filters. If a filter is used, then seeking will not perform well. However, for no filters, it will give a huge performance boost.\r\n\r\n@kientzle: I created a pull request at https://github.com/libarchive/libarchive/pull/95. PTAL. Thanks.",
            "published" : "2014-11-28T03:53:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2015-01-13T05:19:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 317,
        "title" : "fcntl(F_DUPFD_CLOEXEC) missing argument",
        "summary" : "fcntl(F_DUPFD_CLOEXEC) missing argument",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jilles@stack.nl",
          "htmlLink" : "https://code.google.com/u/113506932385924302866/"
        },
        "updated" : "2013-12-24T06:48:24.000Z",
        "published" : "2013-05-03T21:16:58.000Z",
        "closed" : "2013-12-24T06:48:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jilles@stack.nl",
              "htmlLink" : "https://code.google.com/u/113506932385924302866/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. mkdir -p testdir1/testdir2/testdir3\r\n2. Run bsdtar czf testdir1 under a system call tracer.\r\n3. Notice that a fcntl(F_DUPFD_CLOEXEC) call fails because it is passed a bogus arg.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI expect F_DUPFD_CLOEXEC to be used correctly. Instead, I get stuff like\r\n\r\n 23264 bsdtar   CALL  fcntl(0x5,F_DUPFD_CLOEXEC,0x120000)\r\n 23264 bsdtar   RET   fcntl -1 errno 22 Invalid argument\r\n 23264 bsdtar   CALL  dup(0x5)\r\n 23264 bsdtar   RET   dup 6\r\n 23264 bsdtar   CALL  fcntl(0x6,F_GETFD,&lt;invalid&gt;0xffffffff)\r\n 23264 bsdtar   RET   fcntl 0\r\n 23264 bsdtar   CALL  fcntl(0x6,F_SETFD,FD_CLOEXEC)\r\n 23264 bsdtar   RET   fcntl 0\r\n\r\nThis issues more system calls than needed and leaves a race window where a file descriptor may be incorrectly inherited if another thread forks and execs.\r\n\r\n<b>What version are you using?</b>\n\r\nI originally found the bug in FreeBSD 10-current's import. The bug is still in git master as of 2013-05-03. \r\n\r\n<b>On what operating system?</b>\n\r\nFreeBSD 10-current.\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nFreeBSD buildworld\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nFreeBSD buildworld\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThe bug is in the source file libarchive/libarchive/archive_read_disk_posix.c\r\n\r\nIt does\r\n  new_fd = fcntl(fd, F_DUPFD_CLOEXEC);\r\nThis should be\r\n  new_fd = fcntl(fd, F_DUPFD_CLOEXEC, 0);",
            "published" : "2013-05-03T21:16:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jilles@stack.nl",
              "htmlLink" : "https://code.google.com/u/113506932385924302866/"
            },
            "content" : "The command should be tar czf test.tgz testdir1",
            "published" : "2013-05-03T21:18:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Should be fixed by git 12f78cb8cc19e28e8ba66966c59a8d7f3e4c1511\r\n",
            "published" : "2013-12-24T06:48:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 318,
        "title" : "Wrong struct stat size while compiled on Raspberry Pi",
        "summary" : "Wrong struct stat size while compiled on Raspberry Pi",
        "stars" : 1,
        "starred" : false,
        "status" : "NotABug",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "poltosg",
          "htmlLink" : "https://code.google.com/u/106936732230722578984/"
        },
        "updated" : "2013-05-19T20:01:40.000Z",
        "published" : "2013-05-17T15:03:27.000Z",
        "closed" : "2013-05-17T17:47:07.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "poltosg",
              "htmlLink" : "https://code.google.com/u/106936732230722578984/"
            },
            "content" : "Size too big is returned by the lib while trying to create a tgz archive on Raspberry Pi. The problem is caused by different (struct stat) size used by the library (104 bytes) and the program (88 bytes).\r\n\r\n<b>What version are you using?</b>\nlibarchive.so.13.1.2 (snapshot libarchive-6b3531f)\r\n\r\n<b>On what operating system?</b>\nRaspbian (Debian wheezy for RPi) official image from rspberrypi.org\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n/bin/sh build/autogen.sh \r\n./configure\r\nmake\r\n\r\nbelow I attach the configure output\r\n\r\n<b>What compiler or development environment (please include version)?</b>\npi@raspberrypi /drive/pi $ gcc -v\r\nUsing built-in specs.\r\nCOLLECT_GCC=gcc\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/arm-linux-gnueabihf/4.6/lto-wrapper\r\nTarget: arm-linux-gnueabihf\r\nConfigured with: ../src/configure -v --with-pkgversion='Debian 4.6.3-14+rpi1' --with-bugurl=file:///usr/share/doc/gcc-4.6/README.Bugs --enable-languages=c,c++,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.6 --enable-shared --enable-linker-build-id --with-system-zlib --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.6 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --enable-plugin --enable-objc-gc --disable-sjlj-exceptions --with-arch=armv6 --with-fpu=vfp --with-float=hard --enable-checking=release --build=arm-linux-gnueabihf --host=arm-linux-gnueabihf --target=arm-linux-gnueabihf\r\nThread model: posix\r\ngcc version 4.6.3 (Debian 4.6.3-14+rpi1) \r\n\r\n\r\nTest program to reproduce the problem:\r\n\r\npi@raspberrypi /drive/pi $ cat f.c\r\n#include &lt;sys/types.h&gt;\r\n#include &lt;sys/stat.h&gt;\r\n#include &lt;unistd.h&gt;\r\n#include &lt;stdio.h&gt;\r\n#include &lt;stdlib.h&gt;\r\n#include &lt;archive.h&gt;\r\n#include &lt;archive_entry.h&gt;\r\n\r\nint main(int argc, char **argv) {\r\n\tprintf(&quot;stat struct size = %u\\n&quot;, sizeof(struct stat));\r\n\t\r\n\tint r;\r\n\tstruct stat finfo;\r\n\tstruct archive_entry *ent;\r\n\tstruct archive *tar = NULL;\r\n    \r\n\tsize_t maxArch = 128 * 1024; // alloc 128k by default\r\n    \r\n\tvoid *arch = malloc(maxArch);\r\n\tsize_t used = 0;\r\n \r\n\ttar = archive_write_new();\r\n\tif (tar == NULL) {\r\n\t\tprintf(&quot;Failed to allocate archive\\n&quot;);\r\n\t\texit(-1);\r\n\t}\r\n\t\r\n\tr = archive_write_set_compression_gzip(tar);\r\n\tif (r != ARCHIVE_OK) {\r\n\t\tprintf(&quot;Failed to set compression\\n&quot;);\r\n\t\texit(-1);\r\n\t}\r\n\t    \r\n\tr = archive_write_set_format_ustar(tar);\r\n\tif (r != ARCHIVE_OK) {\r\n\t\tprintf(&quot;Failed to set format\\n&quot;);\r\n\t\texit(-1);\r\n\t}\r\n\t\r\n\tr = archive_write_open_memory(tar, arch, maxArch, &amp;used);\r\n\tif (r != ARCHIVE_OK) {\r\n\t\tprintf(&quot;Failed to open\\n&quot;);\r\n\t\texit(-1);\r\n\t}\r\n\t\r\n\t(void) lstat(&quot;/bin/ls&quot;, &amp;finfo);\r\n\r\n\tent = archive_entry_new();\r\n\tif (ent == NULL) {\r\n\t\tprintf(&quot;Failed to allocate entry\\n&quot;);\r\n\t\texit(-1);\r\n\t}\r\n    \r\n\tarchive_entry_copy_stat(ent, &amp;finfo);\r\n\tarchive_entry_copy_pathname(ent, &quot;ls&quot;);\r\n\r\n\tr = archive_write_header(tar, ent);\r\n\tprintf(&quot;archive_write_header() = %d\\n&quot;, r);\r\n\t\r\n\treturn (int)argv[argc-1]; // just to use them\r\n}\r\npi@raspberrypi /drive/pi $ gcc f.c -larchive\r\npi@raspberrypi /drive/pi $ ./a.out\r\nstat struct size = 88\r\narchive_write_header() = -25\r\npi@raspberrypi /drive/pi $\r\n\r\n\r\nNote that struct stat size in the lib is not 88, but 104. This can be checked by adding in libarchive/archive_write_set_format_ustar.c one single line with printf at line 571:\r\n\r\n++      printf(&quot;libarchive fstat: %d\\n&quot;, sizeof(struct stat));\r\n        if (format_number(archive_entry_size(entry),\r\n            h + USTAR_size_offset, USTAR_size_size, USTAR_size_max_size, strict)) {\r\n                archive_set_error(&amp;a-&gt;archive, ERANGE,\r\n                    &quot;File size out of range&quot;);\r\n                ret = ARCHIVE_FAILED;\r\n        }\r\n",
            "published" : "2013-05-17T15:03:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3180000000",
              "fileName" : "configure.output",
              "fileSize" : 20074,
              "mimetype" : "text/plain; charset=us-ascii"
            }, {
              "attachmentId" : "3180000001",
              "fileName" : "f.c",
              "fileSize" : 1292,
              "mimetype" : "text/x-c; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Libarchive is built with large file support on Linux.\r\nLinux programs that use libarchive must also enable large file support by including this option when building:\r\n\r\n-D_FILE_OFFSET_BITS=64\r\n\r\n(I've long wanted some Linux developer to step forward and help remove this limitation.  It requires understanding Linux' large file support macros, the various struct stat definitions, and how they all interact.  It will require very little change to libarchive itself.  Contact me off-list if you are interested in helping.)\r\n",
            "published" : "2013-05-17T17:47:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "NotABug"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "poltosg",
              "htmlLink" : "https://code.google.com/u/106936732230722578984/"
            },
            "content" : "Thanks! That worked. Please state this in bold in the documentation, since it is not obvious and does not appear on 64bit systems due to padding. Was quite hard to debug this in a huge s/w ported to RPi.",
            "published" : "2013-05-19T20:01:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 319,
        "title" : "mingw-w64: undefined reference to `_set_invalid_parameter_handler'",
        "summary" : "mingw-w64: undefined reference to `_set_invalid_parameter_handler'",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vvnicholas",
          "htmlLink" : "https://code.google.com/u/115583288128153466319/"
        },
        "updated" : "2014-10-22T07:32:13.000Z",
        "published" : "2013-05-18T21:21:33.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vvnicholas",
              "htmlLink" : "https://code.google.com/u/115583288128153466319/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Try to compile libarchive using mingw-w64\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nCMakeFiles\\libarchive_test.dir/objects.a(main.c.obj):main.c:(.text.startup+0x6c): undefined reference to `_set_invalid_parameter_handler'\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nWindows 7, but it shouldn't matter\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ni686-w64-mingw32-gcc-4.8.0-win32_rubenvb to be precise, but the exact version shouldn't matter\r\n\r\n<b>Please provide any additional information below.</b>\nMingw and mingw-w64 both use an old MSVCRT version that doesn't define _set_invalid_parameter_handler. Libarchive only calls it in test/main.c if HAVE__CrtSetReportMode is defined - and it's defined if the crtdbg.h file has a _CrtSetReportMode symbol. While mingw doesn't ship that header at all (causing the _set_invalid_parameter_handler call to be hidden), mingw-w64 does.\r\nThe bug linked below is the reason why _set_invalid_parameter_handler is declared at all. (otherwise we would have a compiler error, rather than a linker error)\r\nhttp://sourceforge.net/tracker/?func=detail&amp;aid=3610440&amp;group_id=202880&amp;atid=983354",
            "published" : "2013-05-18T21:21:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "VINEETH.VASUDEVAN",
              "htmlLink" : "https://code.google.com/u/118264022798325127410/"
            },
            "content" : "Did you solve this?\r\n\r\nI am facing a similar issue. It would be helpfull if you could shed some light on the resolution",
            "published" : "2013-10-25T17:23:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christopher.dawes.1981",
              "htmlLink" : "https://code.google.com/u/109191887257097115521/"
            },
            "content" : "I'm also facing this issue, any ideas on how to resolve this?",
            "published" : "2014-10-22T07:32:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 320,
        "title" : "function tar_atol256() performs an undefined left shift of a negative integer",
        "summary" : "function tar_atol256() performs an undefined left shift of a negative integer",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "sean@rogue-research.com",
          "htmlLink" : "https://code.google.com/u/111485087241853199227/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2013-12-23T18:04:26.000Z",
        "published" : "2013-06-04T14:58:44.000Z",
        "closed" : "2013-11-24T17:24:32.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 10,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sean@rogue-research.com",
              "htmlLink" : "https://code.google.com/u/111485087241853199227/"
            },
            "content" : "libarchive/archive_read_support_format_tar.c lines 2482-2485 in function tar_atol256() performs an undefined left shift of a negative integer.\r\n\r\nI maintain a nightly CMake build bot and have enabled clang's undefined behaviour checker (ubsan), it reports the following:\r\n\r\n/Users/builder/external/CMake/Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c:2485:9: runtime error: left shift of negative value -1\r\n\r\nBy code inspection it's pretty obviously a correct error message:\r\n\r\n\tif ((0x40 &amp; *p) == 0x40)\r\n\t\tl = (int64_t)-1;\r\n\telse\r\n\t\tl = 0;\r\n\tl = (l &lt;&lt; 6) | (0x3f &amp; *p++);\r\n\r\nIn the 'if' branch, 'l' will be -1, and then -1 gets left shifted.\r\n",
            "published" : "2013-06-04T14:58:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king@kitware.com",
              "htmlLink" : "https://code.google.com/u/102839248117834776361/"
            },
            "content" : "This is still present in current master (6b3531ff):\r\n\r\n https://github.com/libarchive/libarchive/blob/6b3531ff/libarchive\r\n/archive_read_support_format_tar.c#L2480\r\n",
            "published" : "2013-06-04T17:40:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king@kitware.com",
              "htmlLink" : "https://code.google.com/u/102839248117834776361/"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king@kitware.com",
              "htmlLink" : "https://code.google.com/u/102839248117834776361/"
            },
            "content" : "This is still present in current master (6b3531ff):\r\n\r\n https://github.com/libarchive/libarchive/blob/6b3531ff/libarchive/archive_read_support_format_tar.c#L2480\r\n",
            "published" : "2013-06-04T17:41:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Haven't had a chance to test it, but I think this would avoid the problem:\r\n\r\nstatic int64_t\r\ntar_atol256(const char *_p, size_t char_cnt)\r\n{\r\n        int64_t l, upper_limit, lower_limit;\r\n        const unsigned char *p = (const unsigned char *)_p;\r\n\r\n        upper_limit = INT64_MAX / 256;\r\n        lower_limit = INT64_MIN / 256;\r\n\r\n        /* Sign-extend the bottom 7 bits to int64_t */\r\n        if ((0x40 & *p) == 0x40)\r\n                l = ~((int64_t)0x3f) | *p++;\r\n        else\r\n                l = 0x3f & *p++;\r\n        while (--char_cnt > 0) {\r\n                if (l > upper_limit)\r\n                        return (INT64_MAX); /* Truncate on overflow */\r\n                else if (l < lower_limit)\r\n                        return (INT64_MIN);\r\n                l = (l << 8) | (0xff & (int64_t)*p++);\r\n        }\r\n        return (l);\r\n}\r\n",
            "published" : "2013-06-05T06:00:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I committed the fix back in June but didn't close the bug.\r\n",
            "published" : "2013-11-24T17:24:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king@kitware.com",
              "htmlLink" : "https://code.google.com/u/102839248117834776361/"
            },
            "content" : "For reference, the fix was here:\r\n\r\nhttps://github.com/libarchive/libarchive/commit/533e8fdaf3669fe0e246f675178f785e4eecd55a\r\n",
            "published" : "2013-11-25T16:13:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sean@rogue-research.com",
              "htmlLink" : "https://code.google.com/u/111485087241853199227/"
            },
            "content" : "This fix in CMake is now here:\r\nhttp://cmake.org/gitweb?p=cmake.git;a=commitdiff;h=5ee1297d\r\n\r\nDespite this, CMake's \"ExternalProject\" test is still triggering clang's undefined behaviour checker (ubsan), but a little differently than last time:\r\n\r\nCMake/Utilities/cmlibarchive/libarchive/archive_read_support_format_tar.c:2488:10: runtime error: left shift of negative value -54\r\n\r\nBy inspection of the new tar_atol256() code, it seems to me that the one's compliment performed in the first 'if' will result in a negative 'l'.\r\n\r\nPerhaps this function could/should be reworked to use unsigned types, where bitwise operations are more well defined, as is generally recommend:\r\n\r\nhttps://www.securecoding.cert.org/confluence/display/seccode/INT34-C.+Do+not+shift+a+negative+number+of+bits+or+more+bits+than+exist+in+the+operand\r\nhttps://www.securecoding.cert.org/confluence/display/seccode/INT13-C.+Use+bitwise+operators+only+on+unsigned+operands",
            "published" : "2013-12-03T18:02:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've rewritten it yet again.  Now the code simulates twos-complement arithmetic on a uint64_t rather than using native twos-complement arithmetic on an int64_t.\r\n\r\nLet me know if this quiets things for you.\r\n\r\nIf anyone else would like to try their hand at writing a version of this function:  I've attached a short test program to this issue that exercises some of the boundary cases for this function.\r\n",
            "published" : "2013-12-07T22:56:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3200007000",
              "fileName" : "atol256_test.c",
              "fileSize" : 3284,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brad.king@kitware.com",
              "htmlLink" : "https://code.google.com/u/102839248117834776361/"
            },
            "content" : "Thanks for working on this, Tim.  Left shift of a negative integer type is undefined behavior so it is good to have an implementation that avoids it.\r\n\r\nFor reference, the Dec 7 rewrite commit was:\r\n\r\n https://github.com/libarchive/libarchive/commit/6cf33c9307bbf5827df9500750e59a35b6f2d5d3\r\n\r\nI just added a portability fixup:\r\n\r\n https://github.com/libarchive/libarchive/commit/07686034efec92c75547def958ae618754e15013\r\n",
            "published" : "2013-12-09T19:12:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sean@rogue-research.com",
              "htmlLink" : "https://code.google.com/u/111485087241853199227/"
            },
            "content" : "CMake's \"ExternalProject\" test now passes with -fsanitize=shift.  Thanks to all!",
            "published" : "2013-12-23T18:04:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 321,
        "title" : "Stack overflow in test_read_format_rar_binary",
        "summary" : "Stack overflow in test_read_format_rar_binary",
        "stars" : 1,
        "starred" : false,
        "status" : "Started",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2013-12-29T06:35:04.000Z",
        "published" : "2013-06-09T17:49:32.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Build RUN_TESTS using Visual Studio 2012.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nAll tests should pass.\r\n\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nWindows Server 2012\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nCMake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2012 Update 2\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nRunning Code Analysis on the libarchive_test project confirms there's a problem with stack usage:\r\n\r\n&quot;test_read_format_rar.c(661): warning : C6262: Function uses '1081364' bytes of stack:  exceeds /analyze:stacksize '16384'.  Consider moving some data to heap.&quot;\r\n",
            "published" : "2013-06-09T17:49:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jameshdoherty",
              "htmlLink" : "https://code.google.com/u/104742716023177980900/"
            },
            "content" : "Try increasing the linker stack reserve size > 4m example: /stack:5120000000",
            "published" : "2013-12-29T06:12:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Try the attached patch, which moves the biggest of those buffers onto the heap.\r\n\r\nWe really shouldn't be using that much stack space, not even in tests.\r\n\r\nSimilar changes can probably be applied anywhere else we're using more stack than we should.\r\n",
            "published" : "2013-12-29T06:22:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3210002000",
              "fileName" : "libarchive_test_test_read_format_rar_c.patch",
              "fileSize" : 955,
              "mimetype" : "application/octet-stream",
              "isDeleted" : true
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Here's a corrected version of that patch which I've just committed to libarchive master.\r\n\r\nLet me know what other problems you find and we'll work through them.\r\n",
            "published" : "2013-12-29T06:35:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "kientzle"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3210003000",
              "fileName" : "libarchive_test_test_read_format_rar_c.patch",
              "fileSize" : 2007,
              "mimetype" : "application/octet-stream"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 322,
        "title" : "Windows: 3 tests failing",
        "summary" : "Windows: 3 tests failing",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bruce.cran",
          "htmlLink" : "https://code.google.com/u/116704995636598723218/"
        },
        "updated" : "2013-06-09T18:08:27.000Z",
        "published" : "2013-06-09T18:08:27.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Run RUN_TESTS project in Visual Studio 2012\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nAll tests should pass\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nWindows Server 2012\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nCMake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2012 Update 2.\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n1&gt;  \t116 - libarchive_test_read_disk_directory_traversals (Failed)\r\n1&gt;  \t221 - libarchive_test_read_append_filter (Failed)\r\n1&gt;  \t378 - bsdcpio_test_option_a (Failed)\r\n\r\nUnrelated to the failures, there are typos in test_read_disk_directory_traversals: &quot;hybrid&quot; and &quot;logical&quot;.",
            "published" : "2013-06-09T18:08:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 323,
        "title" : "Feature request: calculate compressed size",
        "summary" : "Feature request: calculate compressed size",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kerrick@kerrickstaley.com",
          "htmlLink" : "https://code.google.com/u/108770254931756009438/"
        },
        "updated" : "2014-06-21T18:37:31.000Z",
        "published" : "2013-06-19T18:36:32.000Z",
        "closed" : "2014-06-21T18:37:31.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kerrick@kerrickstaley.com",
              "htmlLink" : "https://code.google.com/u/108770254931756009438/"
            },
            "content" : "It'd be useful if libarchive could calculate how much each file in an archive contributes to the archive's overall size, allowing a user to answer the question &quot;Why is my archive so big?&quot;",
            "published" : "2013-06-19T18:36:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "For many formats, you can already get this information approximately\r\nby just requesting the total bytes written after you add each new entry.\r\n\r\nHave you tried this?  Did it not work for you?\r\n",
            "published" : "2013-06-20T02:29:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2014-06-21T18:37:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 324,
        "title" : "Support for Microsoft compression formats",
        "summary" : "Support for Microsoft compression formats",
        "stars" : 1,
        "starred" : false,
        "status" : "Done",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "moonstar0825",
          "htmlLink" : "https://code.google.com/u/105492101932793492196/"
        },
        "updated" : "2013-06-22T19:27:57.000Z",
        "published" : "2013-06-22T11:32:16.000Z",
        "closed" : "2013-06-22T19:27:57.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "moonstar0825",
              "htmlLink" : "https://code.google.com/u/105492101932793492196/"
            },
            "content" : "Hi,\r\n\r\nThis library help me a lot.\r\nI wonder to know if libarchive can use libmspack to support Microsoft compression formats.\r\n\r\nThank you.",
            "published" : "2013-06-22T11:32:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "No one has yet integrated the Microsoft libraries.\r\n\r\n",
            "published" : "2013-06-22T19:27:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Done"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 325,
        "title" : "bad if test and resource leak ?",
        "summary" : "bad if test and resource leak ?",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dbdcb5",
          "htmlLink" : "https://code.google.com/u/110812341027003187555/"
        },
        "updated" : "2013-07-12T16:15:02.000Z",
        "published" : "2013-07-12T08:03:08.000Z",
        "closed" : "2013-07-12T16:15:02.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dbdcb5",
              "htmlLink" : "https://code.google.com/u/110812341027003187555/"
            },
            "content" : "\r\nI just ran the static analysis checker over the source\r\ncode of libarchive-3.1.2. It said\r\n\r\n<b>1.</b>\n\r\n[libarchive/archive_read_support_filter_lzop.c:248]: (warning) Logical conjuncti\r\non always evaluates to false: level &lt; 1 &amp;&amp; level &gt; 9.\r\n\r\nSource code is \r\n\r\n        unsigned level = *p++;\r\n        if (method == 1 &amp;&amp; level == 0) level = 3;\r\n        if (method == 2 &amp;&amp; level == 0) level = 1;\r\n        if (method == 3 &amp;&amp; level == 0) level = 9;\r\n        if (level &lt; 1 &amp;&amp; level &gt; 9) {\r\n\r\nSuggest change &amp;&amp; to || in final if.\r\n\r\n<b>2.</b>\n\r\n[cpio/cpio.c:1239]: (error) Resource leak: t\r\n\r\nSource code is\r\n\r\n    if (to == NULL)\r\n        return (name);\r\n\r\nSuggest call fclose(t) inside the if.\r\n\r\n",
            "published" : "2013-07-12T08:03:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for reporting this.\r\n\r\nI've simplified the first code to the following:\r\n\r\n                unsigned level = *p++;\r\n                unsigned default_level[] = {0, 3, 1, 9};\r\n\t\tif (level == 0)\r\n                        /* Method is 1..3 here due to check above. */\r\n                        level = default_level[method];\r\n                else if (level > 9) {\r\n                        archive_set_error(&self->archive->archive,\r\n                            ARCHIVE_ERRNO_MISC, \"Invalid level\");\r\n                        return (ARCHIVE_FAILED);\r\n\t\t}\r\n\r\nand added the fclose() call you suggested.\r\n\r\nIf you find any other issues like this, please let us know.\r\n\r\n",
            "published" : "2013-07-12T16:15:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 326,
        "title" : "libarchive fails to compress or decompress lrzip format",
        "summary" : "libarchive fails to compress or decompress lrzip format",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "da_audiophile@yahoo.com",
          "htmlLink" : "https://code.google.com/u/100018150098783595329/"
        },
        "updated" : "2015-01-10T18:44:39.000Z",
        "published" : "2013-07-12T23:24:21.000Z",
        "closed" : "2015-01-10T18:44:39.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "da_audiophile@yahoo.com",
              "htmlLink" : "https://code.google.com/u/100018150098783595329/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Attempt to compress or decompress foo.tar.lrz with bsdtar\r\n\r\nWhat is the expected output?\r\n/usr/bin/bsdtar should compress or decompress the file without /usr/bin/lrzip installed.\r\n\r\nWhat do you see instead?\r\n % bsdtar -c --lrzip -f new_rips.tar.lrz new_rips\r\n   bsdtar: new_rips/: Can't write to filter\r\n\r\nWhat version are you using? v3.1.2\r\n\r\n\r\nOn what operating system? Arch Linux\r\n\r\n\r\nHow did you build?  (cmake, configure, or pre-packaged binary). Pre-packaged binary or via configure.\r\n\r\n\r\nWhat compiler or development environment (please include version)?  gcc v4.8.1\r\n\r\nAdditional info: Is this related to #307?\r\nhttps://code.google.com/p/libarchive/issues/detail?id=307",
            "published" : "2013-07-12T23:24:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Unfortunately, I've not been able to find any library that handles lrzip format.\r\n\r\nWithout that, libarchive has no choice but to rely on a separate executable.\r\n\r\nI'm going to close this report as WontFix; if you find a suitable library that we can use, please feel free to reopen it.\r\n",
            "published" : "2015-01-10T18:44:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 327,
        "title" : "libarchive / tar with zero sized exclude files with -X.",
        "summary" : "libarchive / tar with zero sized exclude files with -X.",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "peter@wemm.org",
          "htmlLink" : "https://code.google.com/u/101959589862683794264/"
        },
        "updated" : "2015-02-07T20:28:00.000Z",
        "published" : "2013-07-22T06:43:19.000Z",
        "closed" : "2015-01-10T18:29:43.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "peter@wemm.org",
              "htmlLink" : "https://code.google.com/u/101959589862683794264/"
            },
            "content" : "It seems there's a problem with zero sized exclude files.\r\n\r\nFreeBSD-9.2 (works as expected):\r\n\r\n# tar --version\r\nbsdtar 2.8.5 - libarchive 2.8.5\r\n# cd /tmp\r\n# mkdir t\r\n# date &gt; 1\r\n# date &gt; 2\r\n# date &gt; 3\r\n# touch excl\r\n# tar -cvf foo.tar 1 2 3\r\na 1\r\na 2\r\na 3\r\n# tar -xf foo.tar -X excl\r\n# tar -xf foo.tar -X /tmp/excl -C /tmp/t\r\n#\r\n\r\nFreeBSD-10 (fails with bizzare error):\r\n\r\n# tar --version\r\nbsdtar 3.1.2 - libarchive 3.1.2\r\n# cd /tmp\r\n# mkdir t\r\n# date &gt; 1\r\n# date &gt; 2\r\n# date &gt; 3\r\n# touch excl\r\n# tar -cvf foo.tar 1 2 3\r\na 1\r\na 2\r\na 3\r\n# tar -xf foo.tar -X /tmp/excl\r\ntar: Error : Unrecognized archive format\r\n# tar -xf foo.tar -X /tmp/excl -C /tmp/t\r\ntar: Error : Unrecognized archive format\r\n# echo # &gt; excl\r\n# tar -xf foo.tar -X /tmp/excl -C /tmp/t\r\n# tar -xf foo.tar -X /tmp/excl -C /tmp/t\r\n# rm excl; touch excl\r\n# tar -xf foo.tar -X /tmp/excl -C /tmp/t\r\ntar: Error : Unrecognized archive format\r\n#\r\n\r\n&quot;Unrecognized archive format&quot; is not an appropriate error for a zero sized exclude file.  If I had to guess, I'd suspect that something is trying to identify file type or encoding and failing on zero sized files.\r\n",
            "published" : "2013-07-22T06:43:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Fixed in git f93e32f\r\n\r\nThanks for pointing this out; sorry it took so long to fix.\r\n",
            "published" : "2015-01-10T18:29:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Issue 401 has been merged into this issue.",
            "published" : "2015-02-07T20:28:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 328,
        "title" : "Cannot read 7zip, etc, with archive_read_open_FILE",
        "summary" : "Cannot read 7zip, etc, with archive_read_open_FILE",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All", "Component-libarchive" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "moonstar0825",
          "htmlLink" : "https://code.google.com/u/105492101932793492196/"
        },
        "updated" : "2013-11-24T17:16:50.000Z",
        "published" : "2013-07-23T05:21:12.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "moonstar0825",
              "htmlLink" : "https://code.google.com/u/105492101932793492196/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n1. unzip more.zip (more.com, more.7z, more_7zsfx.exe, more_zipsfx.exe )\r\n2. gcc 1.c -larchive\r\n3. ./a.out more.7z\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n\tmore.7z and more_7zsfx.exe\r\n\t\tuse archive_read_open_filename, the extract file is correct\r\n\t\tuse archive_read_open_FILE, the extract file size is 0\r\n\r\n\tmore_zipsfx.exe\r\n\t\tuse archive_read_open_filename, the extract file is correct\r\n\t\tuse archive_read_open_FILE, output &quot;not supported&quot;\r\n\r\n<b>What version are you using?</b>\n\r\n\tlibarchive-3.1.2\r\n\r\n<b>On what operating system?</b>\n\r\n\tubuntu 13.04 x64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n\tcmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\tgcc version 4.7.3\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n\t#include &lt;stdio.h&gt;\r\n\t#include &lt;stdlib.h&gt;\r\n\r\n\t#include &lt;archive.h&gt;\r\n\t#include &lt;archive_entry.h&gt;\r\n\r\n\tint main(int argc, char* argv[])\r\n\t{\r\n\t\tstruct archive *a;\r\n\t\ta = archive_read_new();\r\n\r\n\t\tarchive_read_support_filter_all(a);\r\n\t\tarchive_read_support_format_all(a);\r\n\r\n\t\tint r;\r\n\t\t//r = archive_read_open_filename(a, argv[1], 10240);\r\n\r\n\t\tFILE *in = fopen(argv[1], &quot;rb&quot;);\r\n\t\tr = archive_read_open_FILE(a, in);\r\n\r\n\t\tif (r != ARCHIVE_OK)\r\n\t\t{\r\n\t\t\tprintf(&quot;not supported\\n&quot;);\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\tint size;\r\n\t\tchar buf[1024];\r\n\r\n\t\tFILE *out = fopen(&quot;tmpfile&quot;, &quot;wb+&quot;);\r\n\r\n\t\tstruct archive_entry *entry;\r\n\r\n\t\twhile(archive_read_next_header(a, &amp;entry) == ARCHIVE_OK) \r\n\t\t{\r\n\t\t\twhile((size = archive_read_data(a, buf, 1024)) &gt; 0)\r\n\t\t\t\tfwrite(buf, sizeof(char), size, out);\r\n\r\n\t\t\tif(archive_errno(a) != ARCHIVE_OK)\r\n\t\t\t\tprintf(&quot;%s\\n&quot;, archive_error_string(a));\r\n\r\n\t\t\tarchive_read_data_skip(a);\r\n\t\t}\r\n\r\n\t\tfclose(out);\r\n\t\tfclose(in);\r\n\r\n\t\tarchive_read_free(a);\r\n\t\treturn 0;\r\n\t}\r\n",
            "published" : "2013-07-23T05:21:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3280000000",
              "fileName" : "more.zip",
              "fileSize" : 166948,
              "mimetype" : "application/zip; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Currently, archive_read_open_FILE does not support seeking.  archive_read_open_filename does.\r\n\r\nSelf-extracting Zip archives, 7z, and some other formats cannot be read without seeking.\r\n\r\nPatches to add seek support for archive_read_open_FILE would be appreciated.\r\n",
            "published" : "2013-07-23T05:38:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Updating bug title to more accurately reflect the actual issue.\r\n\r\n",
            "published" : "2013-11-24T17:16:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Cannot read 7zip, etc, with archive_read_open_FILE",
              "labels" : [ "-Type-Defect", "Type-Enhancement", "Component-libarchive" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 329,
        "title" : "ACLs are not preserved by bsdtar",
        "summary" : "ACLs are not preserved by bsdtar",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ambrop7",
          "htmlLink" : "https://code.google.com/u/103518622461418658083/"
        },
        "updated" : "2014-01-05T05:48:23.000Z",
        "published" : "2013-07-27T18:28:00.000Z",
        "closed" : "2014-01-05T05:48:23.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ambrop7",
              "htmlLink" : "https://code.google.com/u/103518622461418658083/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nlocalhost ~ # touch a\r\nlocalhost ~ # setfacl -m user:nobody:r a\r\nlocalhost ~ # ls -l a\r\n-rw-r--r--+ 1 root root 0 Jul 27 20:22 a\r\nlocalhost ~ # mkdir extract\r\nlocalhost ~ # bsdtar -cpf - a | bsdtar -xpf - -C extract/\r\nlocalhost ~ # ls -l extract/\r\ntotal 0\r\n-rw-r--r-- 1 root root 0 Jul 27 20:22 a\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThe ACL should be preserved, but it is not (no + in permissions).\r\n\r\n<b>What version are you using?</b>\n\r\n3.1.2\r\n\r\n<b>On what operating system?</b>\n\r\nGentoo Linux ~amd64\r\n\r\nHow did you build?\r\n\r\nGentoo ebuild, uses configure.\r\n\r\nWhat compiler or development environment?\r\n\r\ngcc 4.7.3\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI distinctly remember bsdtar preserving ACLs some time ago. Libarchive is definitely being compiled with ACLs enabled, as can be seen in the build log.",
            "published" : "2013-07-27T18:28:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3290000000",
              "fileName" : "out",
              "fileSize" : 90313,
              "mimetype" : "text/plain; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "j.koncicky2",
              "htmlLink" : "https://code.google.com/u/116283376692297391229/"
            },
            "content" : "I found out the cause of this bug and fixed it.\r\n\r\nThe problem is that ACL_TYPE_NFS4 is not defined in some systems in sys/acl.h (I am using Fedora 19 3.10.4-300.fc19.x86_64 and it is not here). \r\nThis causes that functions translate_acl() in archive_read_disk_entry_from_file.c:404 and archive_write_disk_set_acls() in archive_write_disk_acl.c:69 are suppressed by #if defined() directive and thus saving and restoring ACLs is not performed.\r\n\r\nI fixed the problem by removing #ifdef ACL_TYPE_NFS4 suppressing the whole functions and instead putting #ifdefs to all individual places where NFS4-only code is. So now these functions are compiled even if you don't have ACL_TYPE_NFS4 and only code that needs it is not compiled.\r\n\r\nI already fixed it in Fedora 19: https://bugzilla.redhat.com/show_bug.cgi?id=993048\r\nNow it is on testing stage. If you find any problem please contact me.",
            "published" : "2013-08-08T14:45:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3290001000",
              "fileName" : "libarchive-3.1.2-acl-fix.patch",
              "fileSize" : 7178,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "j.koncicky2",
              "htmlLink" : "https://code.google.com/u/116283376692297391229/"
            },
            "content" : "* bump\r\nThis bugfix was recently pushed to Fedora 19 stable repository: https://bugzilla.redhat.com/show_bug.cgi?id=993048\r\nPlease give a feedback, you can actually use this patch to fix the bug globally.",
            "published" : "2013-08-19T07:12:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "j.koncicky2",
              "htmlLink" : "https://code.google.com/u/116283376692297391229/"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ambrop7",
              "htmlLink" : "https://code.google.com/u/103518622461418658083/"
            },
            "content" : "Thanks for the fix. I confirm the fix works on Gentoo (libarchive-3.1.2-r1).",
            "published" : "2013-08-19T12:19:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ambrop7",
              "htmlLink" : "https://code.google.com/u/103518622461418658083/"
            },
            "content" : "Bump; will this ever be applied?",
            "published" : "2013-10-08T09:44:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "andreas.reis",
              "htmlLink" : "https://code.google.com/u/114495084264650921987/"
            },
            "content" : "Doubtful if you'll get a reaction here, but the devs are responsive to pull requests on github: https://github.com/libarchive/libarchive/pulls",
            "published" : "2014-01-01T12:09:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've committed the fix.\r\n\r\nThanks for your patience!\r\n\r\n",
            "published" : "2014-01-05T05:48:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 330,
        "title" : "x64 build of bsdtar fails for Visual Studio 2010 SP1",
        "summary" : "x64 build of bsdtar fails for Visual Studio 2010 SP1",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kees.dekker@infor.com",
          "htmlLink" : "https://code.google.com/u/112172171794828378353/"
        },
        "updated" : "2013-08-22T09:33:49.000Z",
        "published" : "2013-08-22T09:33:49.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kees.dekker@infor.com",
              "htmlLink" : "https://code.google.com/u/112172171794828378353/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. download libarchive (3.1.2)\r\n2. download latest cmake (2.8.11.2)\r\n3. start cmake_gui.exe\r\n4. configure for Visual Studio 2010 (=10) x64.\r\n5. generate solution file\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe generated config.h misses some defines that will exist in the 32-bit configuration.\r\n\r\n<b>What version are you using?</b>\nVisual Studio 2010 SP1 Professional was used. \r\n\r\n<b>On what operating system?</b>\nWindows 7.\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmage-gui (as described in https://github.com/libarchive/libarchive/wiki/BuildInstructions#wiki-WindowsVisual_Studio)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2010 SP1 (with all windows updates applied).\r\nThe whole C/C++ x64 + Platform SDK was selected when installing VS2010.\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI attached the generated 32-bit.config.h + 64-bit.config.h + the modified.64-bit-config.h. See attached zip.\r\n\r\nFor some (for me unknown) reason cmake did not detect that some header files did exist in the 64-bit build and thus causes build errors. The 32-bit ran fine out of the box.\r\n\r\nNote: you may benefit by using typedefs from (Microsoft's SDK) basetsd.h (e.g. SSIZE_T or LONG_PTR) which hides the 32-bit/64-bit differences in these types. Example: you can typedef ssize_t as SSIZE_T (bit-independent) or use LONG_PTR. Visual Studio is always equiped with a windows/platform SDK. Unfortunately, Microsoft has its own considerations in not using sys/types.h or a way that is very common on *NIX platforms.",
            "published" : "2013-08-22T09:33:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3300000000",
              "fileName" : "generated-config_h-files.zip",
              "fileSize" : 16609,
              "mimetype" : "application/zip; charset=binary"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 331,
        "title" : "Fails to process epub file (ZIP)",
        "summary" : "Fails to process epub file (ZIP)",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hadessuk",
          "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
        },
        "updated" : "2013-12-18T10:37:18.000Z",
        "published" : "2013-09-01T15:38:50.000Z",
        "closed" : "2013-11-24T16:59:52.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hadessuk",
              "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
            },
            "content" : "libarchive-3.1.2-7.fc19.x86_64\r\nbsdtar-3.1.2-7.fc19.x86_64\r\non Linux x86-64.\r\n\r\nTest file attached. Could be related to the patch from issue 257 (which looks like it's been integrated in the version of libarchive I'm using).\r\n\r\n$ bsdtar tvf ~/9781451667981.Monsters.epub \r\nbsdtar: Invalid central directory signature\r\nbsdtar: Error exit delayed from previous errors.\r\n\r\n$ unzip -t ~/9781451667981.Monsters.epub \r\nArchive:  /home/hadess/9781451667981.Monsters.epub\r\n    testing: mimetype                 OK\r\n    testing: META-INF/container.xml   OK\r\n    testing: META-INF/encryption.xml   OK\r\n    testing: OEBPS/content.opf        OK\r\n    testing: OEBPS/toc.ncx            OK\r\n    testing: OEBPS/Fonts/00001.otf    OK\r\n    testing: OEBPS/Fonts/00002.otf    OK\r\n    testing: OEBPS/Fonts/00003.otf    OK\r\n    testing: OEBPS/Fonts/00004.otf    OK\r\n    testing: OEBPS/Fonts/00005.otf    OK\r\n    testing: OEBPS/Fonts/00006.otf    OK\r\n    testing: OEBPS/Fonts/00007.otf    OK\r\n    testing: OEBPS/Fonts/00008.otf    OK\r\n    testing: OEBPS/Fonts/00009.otf    OK\r\n    testing: OEBPS/Fonts/00010.otf    OK\r\n    testing: OEBPS/Fonts/00011.otf    OK\r\n    testing: OEBPS/Fonts/00012.otf    OK\r\n    testing: OEBPS/Fonts/00013.otf    OK\r\n    testing: OEBPS/Fonts/00014.otf    OK\r\n    testing: OEBPS/Fonts/00015.otf    OK\r\n    testing: OEBPS/Fonts/00016.otf    OK\r\n    testing: OEBPS/Fonts/00017.otf    OK\r\n    testing: OEBPS/Fonts/00018.otf    OK\r\n    testing: OEBPS/Fonts/00021.otf    OK\r\n    testing: OEBPS/Fonts/00022.otf    OK\r\n    testing: OEBPS/Fonts/00023.otf    OK\r\n    testing: OEBPS/Fonts/00024.otf    OK\r\n    testing: OEBPS/Fonts/00025.otf    OK\r\n    testing: OEBPS/Fonts/00026.otf    OK\r\n    testing: OEBPS/Fonts/00027.otf    OK\r\n    testing: OEBPS/Fonts/00028.otf    OK\r\n    testing: OEBPS/Fonts/00029.otf    OK\r\n    testing: OEBPS/Fonts/00030.otf    OK\r\n    testing: OEBPS/Images/00011.jpeg   OK\r\n    testing: OEBPS/Images/00012.jpeg   OK\r\n    testing: OEBPS/Images/00013.jpeg   OK\r\n    testing: OEBPS/Images/00014.jpeg   OK\r\n    testing: OEBPS/Images/00015.jpeg   OK\r\n    testing: OEBPS/Images/00016.jpeg   OK\r\n    testing: OEBPS/Images/00017.jpeg   OK\r\n    testing: OEBPS/Images/00018.jpeg   OK\r\n    testing: OEBPS/Images/00019.jpeg   OK\r\n    testing: OEBPS/Images/00020.jpeg   OK\r\n    testing: OEBPS/Images/00021.jpeg   OK\r\n    testing: OEBPS/Images/00022.jpeg   OK\r\n    testing: OEBPS/Images/00023.jpeg   OK\r\n    testing: OEBPS/Images/00024.jpeg   OK\r\n    testing: OEBPS/Images/00025.jpeg   OK\r\n    testing: OEBPS/Images/00026.jpeg   OK\r\n    testing: OEBPS/Images/00027.jpeg   OK\r\n    testing: OEBPS/Images/00028.jpeg   OK\r\n    testing: OEBPS/Images/00029.jpeg   OK\r\n    testing: OEBPS/Images/00030.jpeg   OK\r\n    testing: OEBPS/Images/00031.jpeg   OK\r\n    testing: OEBPS/Images/00032.jpeg   OK\r\n    testing: OEBPS/Images/6.jpg       OK\r\n    testing: OEBPS/Images/cover.jpeg   OK\r\n    testing: OEBPS/Styles/page_styles.css   OK\r\n    testing: OEBPS/Styles/stylesheet.css   OK\r\n    testing: OEBPS/Text/part0000.html   OK\r\n    testing: OEBPS/Text/part0001.html   OK\r\n    testing: OEBPS/Text/part0002.html   OK\r\n    testing: OEBPS/Text/part0003.html   OK\r\n    testing: OEBPS/Text/part0004.html   OK\r\n    testing: OEBPS/Text/part0005.html   OK\r\n    testing: OEBPS/Text/part0006.html   OK\r\n    testing: OEBPS/Text/part0007.html   OK\r\n    testing: OEBPS/Text/part0008.html   OK\r\n    testing: OEBPS/Text/part0009.html   OK\r\n    testing: OEBPS/Text/part0010.html   OK\r\n    testing: OEBPS/Text/part0011.html   OK\r\n    testing: OEBPS/Text/part0012.html   OK\r\n    testing: OEBPS/Text/part0013.html   OK\r\n    testing: OEBPS/Text/part0014.html   OK\r\n    testing: OEBPS/Text/part0015.html   OK\r\n    testing: OEBPS/Text/part0016.html   OK\r\n    testing: OEBPS/Text/part0017.html   OK\r\n    testing: OEBPS/Text/part0018.html   OK\r\n    testing: OEBPS/Text/part0019.html   OK\r\n    testing: OEBPS/Text/part0020.html   OK\r\n    testing: OEBPS/Text/part0021.html   OK\r\n    testing: OEBPS/Text/part0022.html   OK\r\n    testing: OEBPS/Text/titlepage.xhtml   OK\r\nNo errors detected in compressed data of /home/hadess/9781451667981.Monsters.epub.",
            "published" : "2013-09-01T15:38:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3310000000",
              "fileName" : "9781451667981.Monsters.epub",
              "fileSize" : 3879631,
              "mimetype" : "application/epub+zip; charset=binary",
              "isDeleted" : true
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This appears to be fixed by my more recent work on Issue 257.\r\nPlease try again.\r\n",
            "published" : "2013-11-24T16:59:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hadessuk",
              "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
            },
            "content" : "Works fine with current master, thanks!",
            "published" : "2013-12-18T10:37:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 332,
        "title" : "Extracts garbage from Epub (zip) files that have incomplete mode information.",
        "summary" : "Extracts garbage from Epub (zip) files that have incomplete mode information.",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hadessuk",
          "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
        },
        "updated" : "2013-12-18T10:38:27.000Z",
        "published" : "2013-09-02T01:02:55.000Z",
        "closed" : "2013-11-24T16:54:16.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hadessuk",
              "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
            },
            "content" : "libarchive-3.1.2-7.fc19.x86_64\r\n\r\n$ bsdtar xf foo.epub META-INF/container.xml\r\n$ cat META-INF/container.xml \r\n$ ls -l META-INF/container.xml \r\n0 -rw-------. 1 hadess hadess 227 Jan 28  2012 META-INF/container.xml\r\n\r\nOpening the file with vim shows garbage inside the file. Opening the file with unzip from Info-ZIP works correctly.\r\n\r\n$ unzip  foo.epub META-INF/container.xml\r\nArchive:  foo.epub\r\n  inflating: META-INF/container.xml\r\n$ ls -l META-INF/container.xml \r\n4.1k -rw-------. 1 hadess hadess 227 Jan 28  2012 META-INF/container.xml\r\n\r\nThe file contains XML data with ^M control characters.",
            "published" : "2013-09-02T01:02:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3320000000",
              "fileName" : "foo.epub",
              "fileSize" : 703763,
              "mimetype" : "application/epub+zip; charset=binary"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I just pushed a fix for this.  Please try it and let me know.\r\n\r\nThe epub writer that created this file stored incomplete \"mode\"\r\ninformation:  The file was marked as having \"unix-like\" external\r\nattributes, but the external attributes did not include the file\r\ntype as part of the mode bits.\r\n\r\nI've changed libarchive to be more careful when it interprets\r\nthe external attributes information.  If the Unix file mode does not\r\nspecify a file type, it will now look at the filename and guess that\r\nit is a regular file or directory depending on the last character\r\nof the file name being '/'.\r\n",
            "published" : "2013-11-24T16:54:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Extracts garbage from Epub (zip) files that have incomplete mode information.",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hadessuk",
              "htmlLink" : "https://code.google.com/u/hadessuk@googlemail.com/"
            },
            "content" : "Verified to work fine with current master, thanks!",
            "published" : "2013-12-18T10:38:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 333,
        "title" : "CMake build fails with an Android toolchain",
        "summary" : "CMake build fails with an Android toolchain",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "prismatic.project",
          "htmlLink" : "https://code.google.com/u/106168082817378935165/"
        },
        "updated" : "2014-08-28T00:28:57.000Z",
        "published" : "2013-09-04T04:25:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "prismatic.project",
              "htmlLink" : "https://code.google.com/u/106168082817378935165/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nAttempt to build libarchive with CMake using an Android toolchain.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe build process fails with the following:\r\n[  4%] Building C object libarchive/CMakeFiles/archive.dir/archive_read_disk_posix.c.o\r\n/home/preet/Downloads/build/libarchive/libarchive/archive_read_disk_posix.c: In function 'setup_current_filesystem':\r\n/home/preet/Downloads/build/libarchive/libarchive/archive_read_disk_posix.c:1663:17: error: storage size of 'svfs' isn't known\r\n/home/preet/Downloads/build/libarchive/libarchive/archive_read_disk_posix.c:1680:3: warning: implicit declaration of function 'fstatvfs' [-Wimplicit-function-declaration]\r\n/home/preet/Downloads/build/libarchive/libarchive/archive_read_disk_posix.c:1663:17: warning: unused variable 'svfs' [-Wunused-variable]\r\nmake[2]: *** [libarchive/CMakeFiles/archive.dir/archive_read_disk_posix.c.o] Error 1\r\nmake[1]: *** [libarchive/CMakeFiles/archive.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n\r\n<b>What version are you using?</b>\nlibarchive from git\r\n\r\n<b>On what operating system?</b>\nCross compiling for Android on Arch Linux 64-bit\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake (quick question, i dont see a configure file in the git master?)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nandroid ndk r8/gcc 4.6",
            "published" : "2013-09-04T04:25:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "> cmake (quick question, i dont see a configure file in the git master?)\r\n\r\nThe configure script is generated with autoconf.  The following should build it on systems that have the necessary tools installed:\r\n\r\n   $  /bin/sh build/autogen.sh\r\n\r\nPlease try that and see if it gets you any further.  Cross-compiling can be tricky.\r\n",
            "published" : "2013-09-04T04:31:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "prismatic.project",
              "htmlLink" : "https://code.google.com/u/106168082817378935165/"
            },
            "content" : "Using configure directly with the standalone toolchain path in my environment seemed to build libarchive successfully.\r\n\r\nI'm still curious as to why the cmake build failed though. I'll update this issue if I figure out why.\r\n\r\n",
            "published" : "2013-09-04T14:55:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "prismatic.project",
              "htmlLink" : "https://code.google.com/u/106168082817378935165/"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "prismatic.project",
              "htmlLink" : "https://code.google.com/u/106168082817378935165/"
            },
            "content" : "It fails at the same place. Both cmake and configure say statvfs isn't available with the toolchain I'm using [checking for statvfs... no]. The error:\r\n\r\n  CC       libarchive/archive_read_disk_posix.lo\r\nlibarchive/archive_read_disk_posix.c: In function 'setup_current_filesystem':\r\nlibarchive/archive_read_disk_posix.c:1663:17: error: storage size of 'svfs' isn't known\r\nlibarchive/archive_read_disk_posix.c:1680:3: error: implicit declaration of function 'fstatvfs' [-Werror=implicit-function-declaration]\r\nlibarchive/archive_read_disk_posix.c:1663:17: error: unused variable 'svfs' [-Werror=unused-variable]\r\ncc1: all warnings being treated as errors\r\n\r\nmake[1]: *** [libarchive/archive_read_disk_posix.lo] Error 1\r\nmake[1]: Leaving directory `/home/preet/Downloads/build/libarchive-git'\r\n\r\n\r\nThe line in question in the source is\r\n\r\n    struct statvfs svfs;\r\n\r\nI'm guessing its undefined since statvfs isn't available?",
            "published" : "2013-09-04T16:12:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "post.kinjal",
              "htmlLink" : "https://code.google.com/u/108875803038523953557/"
            },
            "content" : "+#ifdef __ANDROID__\r\n+#include <sys/vfs.h>\r\n+#define statvfs statfs\r\n+#define fstatvfs fstatfs\r\n+#endif\r\nThis should fix this problem.",
            "published" : "2014-08-28T00:28:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 334,
        "title" : "Differences in newc output between GNU cpio and bsdcpio",
        "summary" : "Differences in newc output between GNU cpio and bsdcpio",
        "stars" : 1,
        "starred" : false,
        "status" : "WontFix",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kizkizzbangbang",
          "htmlLink" : "https://code.google.com/u/113009973063312427839/"
        },
        "updated" : "2013-12-06T04:50:55.000Z",
        "published" : "2013-09-04T10:57:16.000Z",
        "closed" : "2013-12-06T04:50:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 8,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kizkizzbangbang",
              "htmlLink" : "https://code.google.com/u/113009973063312427839/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n$ for i in 1 2 3 ; do echo $i &gt; foo-$i ; done\r\n\r\n$ ls foo-* | tee /dev/stderr | cpio -o -H newc &gt; foo.cpio\r\nfoo-1\r\nfoo-2\r\nfoo-3\r\n1 block\r\n\r\n$ ls foo-* | tee /dev/stderr | bsdcpio -o -H newc &gt; foo.bsdcpio\r\nfoo-1\r\nfoo-2\r\nfoo-3\r\n1 block\r\n\r\n$ file foo.*\r\nfoo.bsdcpio: ASCII cpio archive (SVR4 with no CRC)\r\nfoo.cpio:    ASCII cpio archive (SVR4 with no CRC)\r\n\r\n$ md5sum foo.*\r\nc61cf2e353370adffeb96c141fc5fe0a  foo.bsdcpio\r\n5621a7291e4148cab67328baa86b6332  foo.cpio\r\n\r\n$ sha1sum foo.*\r\n0ccb36d387981c8933627171b640f42740b7e7c1  foo.bsdcpio\r\n2aa98196c0d2010732bce779da98cab71aee3a70  foo.cpio\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI expected the checksums to be the same.\r\n\r\n\r\n<b>What version are you using?</b>\n\r\n$ cpio --version\r\ncpio (GNU cpio) 2.11\r\nCopyright (C) 2010 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;.\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law.\r\n\r\nWritten by Phil Nelson, David MacKenzie, John Oleynick,\r\nand Sergey Poznyakoff.\r\n\r\n$ bsdcpio --version\r\nbsdcpio 3.1.2 -- libarchive 3.1.2\r\n\r\n\r\n<b>On what operating system?</b>\n\r\nArch Linux.\r\n\r\n$ uname -a\r\nLinux mobster 3.10.10-1-ARCH #1 SMP PREEMPT Fri Aug 30 11:30:06 CEST 2013 x86_64 GNU/Linux\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nStandard Arch Linux PKGBUILD / official repos.\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc\r\n\r\n\r\n<b>Please provide any additional information below.</b>\n-",
            "published" : "2013-09-04T10:57:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please upload the actual files you created.\r\n\r\n(Generally, there is no reason to expect the checksums to be\r\nthe same.  There are insignificant differences in the actual\r\nbyte layout created by different archiving programs, even\r\nbetween different versions of the same program.)\r\n",
            "published" : "2013-11-24T00:50:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kizkizzbangbang",
              "htmlLink" : "https://code.google.com/u/113009973063312427839/"
            },
            "content" : "I posted in \"What steps will reproduce the problem?\" how I created the files, you should be able to do this yourself ;)\r\n\r\nOf course, there is a reason to expect the checksums to be the same: If I tell both apps to produce a file according to some spec (like SRV4 as I told them to with -H newc) I expect these files to be 'the same'. 'The same' should be verifiable with a simple file integrity checksum like md5. Period.\r\n\r\nAlso, I would expect there are a) either unit tests to validate this sort of behaviour or b) much more obvious warnings that the results are not the same. File integrity checking is an important part of long-term data archival and app-clones like bsdcpio should prove to create exactly the same product as the original cpio implementation.",
            "published" : "2013-11-26T07:50:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"...app-clones like bsdcpio should prove to create exactly the same product as the original cpio implementation.\"\r\n\r\nThe original cpio implementation was part of\r\nAT&T's 1974 PWB Unix system and predated GNU cpio\r\nby over a decade.  (I wonder if cpio and GNU cpio actually\r\nproduce the same output? ;-)\r\n\r\n\"I would expect there are a) either unit tests to validate this sort of behaviour...\"\r\n\r\nThere are now over 400 unit tests for the libarchive suite;\r\nI was hoping to get your files so I could evaluate\r\nwhether they need to be added.\r\n\r\nAdmittedly, the libarchive test suite does more extensive\r\nvalidation of the POSIX cpio format than the newc cpio format,\r\nsince the POSIX format is the only cpio variation with\r\na written standard.\r\n\r\nI could create my own files per your instructions, but I wanted to\r\nbe certain I was seeing the exact same issue you're seeing.\r\n(Many package systems apply their own patches, so the GNU cpio 2.11\r\nthat I would install on my local system may not be quite the same\r\nas what you're using.)\r\n",
            "published" : "2013-11-26T17:10:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Differences in newc output between GNU cpio and bsdcpio"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kizkizzbangbang",
              "htmlLink" : "https://code.google.com/u/113009973063312427839/"
            },
            "content" : "Versions are as above (though I don't know about the Arch Linux releases and dependencies), files created as above. Funny thing: even now the checksums are different then before, but they still are different from each other:\r\n\r\n$ md5sum foo.bsdcpio foo.cpio\r\n2c6aac6b300ae52570d3c73714ccd2ee  foo.bsdcpio\r\n33ff061bf690b648e463b090f5465bb5  foo.cpio\r\n\r\nThank you for taking the time.",
            "published" : "2013-11-28T09:12:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3340004000",
              "fileName" : "foo.bsdcpio",
              "fileSize" : 512,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "3340004001",
              "fileName" : "foo.cpio",
              "fileSize" : 512,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Here's the story:  libarchive's newc support was developed to match the output of GNU cpio 2.5 (which was current at the time).\r\n\r\nBetween version 2.6 and 2.7, GNU cpio changed how they write newc format files.  In particular, GNU cpio 2.7 and later use uppercase hexadecimal digits where GNU cpio 2.6 used lowercase.  If you try your experiment with GNU cpio 2.6 and GNU cpio 2.7, you will see that the checksums are different between those two programs as well.\r\n\r\nChanging libarchive/bsdcpio to use lowercase for newc format is trivial:  Just edit the format_hex_recursive function in archive_write_set_format_cpio_newc.c  Note that this change will break the unit tests.\r\n\r\nIt's not clear whether we should change this.  It would make us the same as GNU cpio 2.11 but not the same as older versions of bsdcpio (or older versions of GNU cpio, though that's not very important now).  People who are using bsdcpio for long-term data archiving might not appreciate such a change.\r\n\r\n",
            "published" : "2013-11-30T18:14:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kizkizzbangbang",
              "htmlLink" : "https://code.google.com/u/113009973063312427839/"
            },
            "content" : "I recognize the history, thank you very much for explaining.\r\n\r\nI also recognize you can't do any better for the newc format without an accepted standard / specification. I will advise anyone against using the cpio newc format in particular and archive formats without standards in general, especially for long-term archiving.\r\n\r\nConsidering this, I guess the only change this issue constitutes is issueing a warning, maybe in combination with a verbose flag or without a quiet flag. Otherwise, I guess you can close this issue.",
            "published" : "2013-12-03T09:48:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'll close this issue.\r\n\r\nNote that these formats are very reliable for long-term archiving.  But a simple checksum cannot verify that the files within an archive are the same.\r\n",
            "published" : "2013-12-06T04:50:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "WontFix"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 335,
        "title" : "inconvenient exit status on empty input in bsdtar 2.8.3 and 3.0.0",
        "summary" : "inconvenient exit status on empty input in bsdtar 2.8.3 and 3.0.0",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "daniel.r.kegel",
          "htmlLink" : "https://code.google.com/u/113779301404424240904/"
        },
        "updated" : "2013-09-17T16:35:49.000Z",
        "published" : "2013-09-17T16:35:49.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "daniel.r.kegel",
              "htmlLink" : "https://code.google.com/u/113779301404424240904/"
            },
            "content" : "With bsdtar 2.8.3 (comes with MacOSX 10.7) or bsdtar 3.0.3 (Ubuntu 12.04),\r\nthe command\r\n   echo corrupt &gt; bad.xz\r\n   if xzcat bad.xz | tar -xf -\r\n   then\r\n       echo tar reports success\r\n   else \r\n       echo tar reports failure\r\n   fi\r\noutputs 'success'.  (With gnu tar, it outputs 'failure' as expected.)\r\n\r\nThis makes portable-ish scripts that unpack uncommon formats\r\nfalsely report success with bsdtar.\r\n\r\nI haven't checked to see if bsdtar 3.1.2 also suffers from this.",
            "published" : "2013-09-17T16:35:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 336,
        "title" : "7zip can not be read when opened with archive_read_open_fd",
        "summary" : "7zip can not be read when opened with archive_read_open_fd",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "development@efficientek.com",
          "htmlLink" : "https://code.google.com/u/112981500287595482243/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2014-08-03T06:29:11.000Z",
        "published" : "2013-09-19T02:22:14.000Z",
        "closed" : "2014-08-03T06:29:11.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "development@efficientek.com",
              "htmlLink" : "https://code.google.com/u/112981500287595482243/"
            },
            "content" : "If a 7zip file is opened using archive_read_open_fd, then a corresponding archive_read_next_header2 will return a fatal error.\r\n\r\nUltimately, this is because slurp_central_directory calls __archive_read_seek, which in turn requires that the seek callback have been set (using archive_seek_callback).  However, archive_read_open_fd does not set this callback, presumably because it doesn't know if the file descriptor is seekable or not.\r\n\r\nUnfortunately, client_seek_proxy, which returns the error if the archive has no seek callback set, does not set an error string on the archive.  So archive_read_next_header2 will return an error with no error string,  which makes it very difficult to figure out why its failing.\r\n\r\nAt a minimum the attached patch should be applied to have client_seek_proxy set an error string on the archive.  Also there should be documentation that 7zip is not readable via archive_read_open_fd (any any other archive which has this problem).\r\n\r\nIn the long run, 7zip should be fixed to not use seek.  Alternatively, it might be possible to detect if &quot;fd&quot; is seekable, and if so add the default seek callback (the error message should still be set when the fd is not seekable).\r\n\r\nExcellent work btw.",
            "published" : "2013-09-19T02:22:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3360000000",
              "fileName" : "no_seek_error_msg.patch",
              "fileSize" : 742,
              "mimetype" : "text/x-diff; charset=us-ascii"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "7zip reader needs seeking since a list of archiving files is located at a bottom of\r\na 7zip archive file. So resolving this issue is libarchive should support seeking for an archive\r\nopened by archive_read_open_fd function.\r\n\r\nI believe this issue is fixed by my recent change c0dd6ae5c5369384c14fcc1486886d8463c98909.\r\n\r\nI apologize fixing this issue is late. \r\nThank you for reporting.\r\n",
            "published" : "2014-08-03T06:29:11.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 337,
        "title" : "set_ownership()'s assumption that non-root can't set ownership is sometimes wrong",
        "summary" : "set_ownership()'s assumption that non-root can't set ownership is sometimes wrong",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "brooks@freebsd.org",
          "htmlLink" : "https://code.google.com/u/106620836317094195113/"
        },
        "updated" : "2013-10-07T14:16:34.000Z",
        "published" : "2013-10-06T20:34:14.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brooks@freebsd.org",
              "htmlLink" : "https://code.google.com/u/106620836317094195113/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n0. Set up a zfs filesystem mounted as myself with the vfs.zfs.super_owner (allows non-root to act as root on particular volumes)\r\n1. Try to extract an archive (like FreeBSD's base.tgz) as non-root with tar's --same-owner\r\n2. get lots of messages like: ./usr/bin/indent: Can't set UID=0\r\n\r\nset_ownership() in archive_write_disk_posix.c should not assume that non-root users can't change UIDs.  It should instead try and only if that fails skip further attempts.\r\n\r\n<b>What version are you using?</b>\n\r\n2.8.4 as shipped in in FreeBSD 9.1\r\n\r\n<b>On what operating system?</b>\n\r\nFreeBSD 9.1\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\ninstalled with os\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nWe're using this on the nfs host for a netboot cluster similar to the FreeBSD NetPerf cluster were we want to allow people to create NFS roots on ZFS without having to give everyone root.  Being able to do this with release tar balls would be nice.  As a workaround we could probably extract the permissions to an mtree file but that seems unnecessary.",
            "published" : "2013-10-06T20:34:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Hmm...  Interesting.  I had always thought that restriction was part of the kernel, not filesystem-specific.  Apparently, I was wrong about that.\r\n\r\nIf it's really filesystem-specific, then it needs to be tested once per filesystem.  Libarchive already has machinery for detecting when it crosses filesystems; that's used to drive other filesystem property checks already, so it shouldn't be too hard to extend it to test UID changes.\r\n\r\nAre there filesystems that permit some UID changes but not others?   (For example, are there filesystems where I can give away a file to anybody except tom, dick, or root?  What about filesystems that allow give-aways in some directories but not others?)  That would complicate things further.\r\n\r\n",
            "published" : "2013-10-07T01:06:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "brooks@freebsd.org",
              "htmlLink" : "https://code.google.com/u/106620836317094195113/"
            },
            "content" : "Speaking only of FreeBSD, the only case I know of in the tree it's ZFS's ability to make the mounter act as a superuser on a per-fs basis.  Looking at the at the implementations of VOP_SETATTR for ufs and zfs, it would be easy to write a MAC module to do the same for other file systems via the priv(9) API, but it is not currently possible to write complex filters that limit what attributes you can set.  The code checking what you can and can't do is implemented per filesystem rather than higher up in the VFS code so in fact a filesystem is free to implement some arbitrary complex policy.\r\n\r\nGiven that tar's default mode is to no request uid/gid changes when run as a regular user I'd be tempted to just ditch the optimization in libarchive since it's not a common case.",
            "published" : "2013-10-07T14:16:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 338,
        "title" : "Fails to decompress a rar file that both unar and unrar (non-free) decompress",
        "summary" : "Fails to decompress a rar file that both unar and unrar (non-free) decompress",
        "stars" : 2,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rbrito",
          "htmlLink" : "https://code.google.com/u/117659222649141007981/"
        },
        "updated" : "2014-08-16T20:31:13.000Z",
        "published" : "2013-10-12T17:50:52.000Z",
        "closed" : "2014-08-16T20:31:13.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 262
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rbrito",
              "htmlLink" : "https://code.google.com/u/117659222649141007981/"
            },
            "content" : "Hi.\r\n\r\nThe following is what I reported on Debian's BTS earlier this year (see http://bugs.debian.org/711022), but I got no response from the maintainers.\r\n\r\nI initially observed the problem with Debian's 3.1.2-5 and I still see it with 3.1.2-7 (not surprising, given the version numbers).\r\n\r\nAs I like the concept of bsdtar, I would love to get rid of other compressors/decompressors and simply use bsdtar as much as I can, having the bug listed below fixed would be amazing.\r\n\r\nIf more information is needed, then, please, let me know and I will do my best to provide it.\r\n\r\n\r\nThanks,\r\n\r\nRogério Brito.\r\n\r\n----\r\n\r\nDate: Mon, 3 Jun 2013 23:52:50 -0300\r\n\r\nPackage: bsdtar\r\nVersion: 3.1.2-5\r\nSeverity: normal\r\n\r\nHi.\r\n\r\nI have a rar file that bsdtar isn't able to decompress, though both unar\r\n(the Free decompressor) and unrar (the non-free one) sucessfully decompress\r\nthe file.\r\n\r\nJust as a sanity check, I compared the output of unar with that of unrar and\r\nthey were bit-by-bit the same.\r\n\r\nWhile trying to decompress the file with bsdtar, I received the messages:\r\n\r\n,----\r\n| ...: Parsing filters is unsupported.\r\n| (...)\r\n| bsdtar: Error exit delayed from previous errors.\r\n`----\r\n\r\nUnfortunately, I can't send the file to the bug tracking system, but I can\r\nsend it privately.\r\n\r\n\r\nThanks,\r\n\r\nRogério Brito.\r\n",
            "published" : "2013-10-12T17:50:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "juanjomarin96",
              "htmlLink" : "https://code.google.com/u/102590783040593125503/"
            },
            "content" : "Hi, I'm a user with the same problem. I think this bug has already been reported in issue #262",
            "published" : "2014-08-16T18:39:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2014-08-16T20:31:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "262"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 339,
        "title" : "Failure in reading a valid ZIP archive",
        "summary" : "Failure in reading a valid ZIP archive",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mebrahim",
          "htmlLink" : "https://code.google.com/u/115197005062979803826/"
        },
        "updated" : "2013-11-24T00:18:19.000Z",
        "published" : "2013-10-17T07:27:17.000Z",
        "closed" : "2013-11-24T00:18:19.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 257
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mebrahim",
              "htmlLink" : "https://code.google.com/u/115197005062979803826/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Download http://pool.apk.aptoide.com/fajrnetmarket/com-android-chrome-11547072-3773059-24b33133007b01fc1a743649dc23068c.apk\r\n2. Try opening/testing it with bsdtar and see it fail.\r\n3. Now try opening/testing it with unzip and see it succeed.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI expect to see no errors. But bsdtar fails with a &quot;Invalid central directory signature&quot; message.\r\n\r\n<b>What version are you using?</b>\n\r\n3.1.2-7\r\n\r\n<b>On what operating system?</b>\n\r\nDebian Sid\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nPre-packaged binary.",
            "published" : "2013-10-17T07:27:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Seems that APKs have a couple of bytes of garbage at the end.\r\nThe fix I just pushed for Issue #257 seems to have also fixed this.\r\n\r\nPlease test the current code from github and let us know if that fixes the problem.\r\n",
            "published" : "2013-11-24T00:18:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "257"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 340,
        "title" : "Mesa 10.0 rc1 fails to extract",
        "summary" : "Mesa 10.0 rc1 fails to extract",
        "stars" : 1,
        "starred" : false,
        "status" : "Accepted",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kwm@rainbow-runner.nl",
          "htmlLink" : "https://code.google.com/u/115388332660686489872/"
        },
        "updated" : "2013-11-24T00:30:16.000Z",
        "published" : "2013-11-19T22:08:52.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kwm@rainbow-runner.nl",
              "htmlLink" : "https://code.google.com/u/115388332660686489872/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. get ftp://ftp.freedesktop.org/pub/mesa/10.0/MesaLib-10.0.0-rc1.tar.bz2\r\n2. try to extract it with bsdtar\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nMesa-10.0.0-rc1/VERSION: Can't create 'Mesa-10.0.0-rc1/VERSION'\r\ntar: Error exit delayed from previous errors.\r\n\r\nWith gtar It works.\r\n\r\n<b>What version are you using?</b>\nbsdtar 3.1.2 - libarchive 3.1.2\r\n\r\n<b>On what operating system?</b>\nFreeBSD 10.0-BETA3\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nOS build, and tested the latest github master.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nclang 3.3\r\n\r\n<b>Please provide any additional information below.</b>\nThis works with gnu tar 1.27 if that helps.",
            "published" : "2013-11-19T22:08:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Technically, this tar archive is malformed.  Note the second entry here:\r\n\r\n-rw-rw-r--  0 idr    idr        11 Nov 18 12:23 Mesa-10.0.0-rc1/VERSION\r\nhrw-rw-r--  0 idr    idr         0 Nov 18 12:23 Mesa-10.0.0-rc1/VERSION link to Mesa-10.0.0-rc1/VERSION\r\n\r\nThese kinds of self-links are unfortunately quite common; they occur\r\nwhen people inadvertently specify the same file more than once\r\nin their tar command.\r\n\r\nI believe GNU tar recently added some code to explicitly ignore such\r\ncircular links when they occur.  I'll see whether it makes sense to add\r\nsimilar logic to libarchive's extraction code.\r\n",
            "published" : "2013-11-24T00:30:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Accepted"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 341,
        "title" : "Windows: libarchive isn't threadsafe, causes heap corruption due to calls to setlocale() when build with visual studio 2012",
        "summary" : "Windows: libarchive isn't threadsafe, causes heap corruption due to calls to setlocale() when build with visual studio 2012",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "valentin.b",
          "htmlLink" : "https://code.google.com/u/114631265096702980295/"
        },
        "updated" : "2013-12-04T22:50:43.000Z",
        "published" : "2013-12-04T17:43:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "valentin.b",
              "htmlLink" : "https://code.google.com/u/114631265096702980295/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. compile with visual studio 2012\r\n2. run archiving/unarchiveing in concurrent threads\r\n3. random heap corruptions occurs\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nWindows\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nA preconfigured visual studio project that builds it as a .dll \r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2012 Update 4",
            "published" : "2013-12-04T17:43:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "valentin.b",
              "htmlLink" : "https://code.google.com/u/114631265096702980295/"
            },
            "content" : "What I did to fix it for me is removing all setlocale() calls in archive_string.c and just return GetACP() in get_current_codepage() and GetOEM() in get_current_oemcp().\r\n",
            "published" : "2013-12-04T22:50:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 342,
        "title" : "build fails on cygwin with wincrypt.h",
        "summary" : "build fails on cygwin with wincrypt.h",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "plicease",
          "htmlLink" : "https://code.google.com/u/100290683626815749889/"
        },
        "updated" : "2013-12-05T16:51:44.000Z",
        "published" : "2013-12-05T16:51:44.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "plicease",
              "htmlLink" : "https://code.google.com/u/100290683626815749889/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. checked out using git on cygwin\r\n2. sh build/autogen.sh\r\n3. ./configure\r\n4. make (fails on \r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expect it to build\r\n\r\n<b>What version are you using?</b>\ntried both:\r\n3.1.2 (tarball)\r\n5422a51ff294c58173338073ea400e71935350bb (git)\r\n\r\n\r\n<b>On what operating system?</b>\nWindows Server 2008R2 64bit cygwin 1.7.26\r\nCYGWIN_NT-6.1-WOW64 fs01 1.7.26(0.271/5/3) 2013-11-29 11:25 i686 Cygwin\r\n(I can also provide details on exactly what packages are installed if that helps)\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nerror is in build, see above\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.8.2\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nSimply including &lt;windows.h&gt; seems to get it to build:\r\n\r\nhttps://github.com/plicease/libarchive/commits/cygwin_build\r\n\r\nhowever, I see archive_entry.h is careful to include &lt;windows.h&gt; only for native windows, and not for cygwin, and I am not sure that is the correct place to put the include.",
            "published" : "2013-12-05T16:51:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 343,
        "title" : "bsdtar should only warn on POSIXLY malformed pax headers",
        "summary" : "bsdtar should only warn on POSIXLY malformed pax headers",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "pavel@raiskup.cz",
          "htmlLink" : "https://code.google.com/u/103654051308620977515/"
        },
        "updated" : "2013-12-09T14:47:43.000Z",
        "published" : "2013-12-09T14:47:43.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pavel@raiskup.cz",
              "htmlLink" : "https://code.google.com/u/103654051308620977515/"
            },
            "content" : "Tim, thanks for your attention.  I am submitting new ticket with tarball\r\nexamples.  For more info, see attached file and this thread:\r\nhttps://groups.google.com/forum/#!topic/libarchive-discuss/gKWjs14PoMI\r\nVery relevant thread:\r\nhttp://www.mail-archive.com/bug-tar@gnu.org/msg04285.html\r\n\r\nPavel\r\n",
            "published" : "2013-12-09T14:47:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3430000000",
              "fileName" : "libarchive_tests.tar.gz",
              "fileSize" : 882,
              "mimetype" : "application/x-gzip"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 344,
        "title" : "RFE: Several patches related to XAR archive format and FIPS mode",
        "summary" : "RFE: Several patches related to XAR archive format and FIPS mode",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "pavel@raiskup.cz",
          "htmlLink" : "https://code.google.com/u/103654051308620977515/"
        },
        "updated" : "2013-12-11T09:30:00.000Z",
        "published" : "2013-12-11T09:30:00.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pavel@raiskup.cz",
              "htmlLink" : "https://code.google.com/u/103654051308620977515/"
            },
            "content" : "I did not know the WF for libarchive.  Having a ticket for that issue mentioned in\r\nlibarchive-discuss is probably better.  So let this be the ticket for issue\r\ndescribed at:\r\n\r\nhttps://groups.google.com/forum/#!topic/libarchive-discuss/GxnEs3gJarc\r\n\r\nPavel\r\n",
            "published" : "2013-12-11T09:30:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 345,
        "title" : "test-suite failures on i386 Ubuntu Trusty Tahr (current development release)",
        "summary" : "test-suite failures on i386 Ubuntu Trusty Tahr (current development release)",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dimitri.ledkov@surgut.co.uk",
          "htmlLink" : "https://code.google.com/u/113876555871330708925/"
        },
        "updated" : "2013-12-19T13:11:52.000Z",
        "published" : "2013-12-19T13:11:52.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dimitri.ledkov@surgut.co.uk",
              "htmlLink" : "https://code.google.com/u/113876555871330708925/"
            },
            "content" : "Full build log at:\r\nhttps://launchpadlibrarian.net/159727078/buildlog_ubuntu-trusty-i386.libarchive_3.1.2-7ubuntu2_FAILEDTOBUILD.txt.gz\r\n\r\nActual failures:\r\nhttp://paste.ubuntu.com/6599568/\r\n\r\n 12: test_format_newc\r\ncpio/test/test_format_newc.c:266: devminor != from_hex(e + 70, 8)\r\n\r\n 22: test_option_c\r\ncpio/test/test_option_c.c:186: dev != from_octal(e + 6, 6)\r\n\r\nNot sure if above are bugs, or assertion errors.",
            "published" : "2013-12-19T13:11:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 346,
        "title" : "build fails on Win32 MinGW (easy fix)",
        "summary" : "build fails on Win32 MinGW (easy fix)",
        "stars" : 2,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "saurik",
          "htmlLink" : "https://code.google.com/u/saurik/"
        },
        "updated" : "2013-12-19T21:37:29.000Z",
        "published" : "2013-12-19T21:37:29.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "saurik",
              "htmlLink" : "https://code.google.com/u/saurik/"
            },
            "content" : "The error:\r\n\r\nIn file included from ../../libarchive/tar/bsdtar_platform.h:62:0,\r\n                 from ../../libarchive/tar/bsdtar.c:26:\r\n../../libarchive/libarchive/archive_entry.h:247:64: error: unknown type name 'BY_HANDLE_FILE_INFORMATION'\r\n __LA_DECL void archive_entry_copy_bhfi(struct archive_entry *, BY_HANDLE_FILE_INFORMATION *);\r\n\r\n\r\nThe fix:\r\n\r\ndiff --git a/libarchive/archive_entry.h b/libarchive/archive_entry.h\r\nindex b5c9536..81c7368 100644\r\n--- a/libarchive/archive_entry.h\r\n+++ b/libarchive/archive_entry.h\r\n@@ -45,6 +45,7 @@\r\n\r\n /* Get a suitable 64-bit integer type. */\r\n #if defined(_WIN32) &amp;&amp; !defined(__CYGWIN__)\r\n+# include &lt;windows.h&gt;\r\n # define\t__LA_INT64_T\t__int64\r\n #else\r\n #include &lt;unistd.h&gt;",
            "published" : "2013-12-19T21:37:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 347,
        "title" : "libarchive's xar implementation fails predictably some valid xar archives.",
        "summary" : "libarchive's xar implementation fails predictably some valid xar archives.",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bathtubdev",
          "htmlLink" : "https://code.google.com/u/115770699947253883633/"
        },
        "updated" : "2013-12-27T21:54:39.000Z",
        "published" : "2013-12-27T21:54:39.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bathtubdev",
              "htmlLink" : "https://code.google.com/u/115770699947253883633/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nOn Darwin:\r\n\r\ncurl -OLb gpw_e24=http http://www.java.net/download/jdk8/archive/b121/binaries/jre-8-ea-bin-b121-macosx-x86_64-19_dec_2013.dmg\r\n\r\nhdiutil makehybrid -iso -joliet jre-8-ea-bin-b121-macosx-x86_64-19_dec_2013.dmg -o jre.iso\r\n\r\ntar xf jre.iso\r\n\r\ntar xf Java\\ 8.pkg\r\n\r\n-&gt;  Resources/de.lproj/background: File decompression failed (-3)\r\n-&gt;  tar: Error exit delayed from previous errors.\r\n\r\n\r\nThis occurs reliably with any .pkg from Oracle; others as well, but that's the easiest to reproduce.\r\nOccurs in Darwin system tar/libarchive and in latest from head; choice of xml parser doesn't seem to matter.\r\n\r\nSystem 'xar' as well new version from mackyle.github.io/xar do not complain.\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nAll of the above.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nClang.\r\n\r\n<b>Please provide any additional information below.</b>\n   I'm not sure if this is regularly the case (and it could be something else entirely) but it seems like its choking at the end of a .png while decompressing zlib archive data. Could it possibly be mistaking the end of the png's zlib stream for the archive's? I'm probably completely off base with that, don't let me lead you down a rabbit hole...\r\n\r\n~G",
            "published" : "2013-12-27T21:54:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 348,
        "title" : "Support --ignore-zeros for GNU tar compatibility",
        "summary" : "Support --ignore-zeros for GNU tar compatibility",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kevin@kevinlocke.name",
          "htmlLink" : "https://code.google.com/u/113101595699089133650/"
        },
        "updated" : "2014-01-13T02:23:44.000Z",
        "published" : "2014-01-10T17:45:23.000Z",
        "closed" : "2014-01-13T02:23:44.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kevin@kevinlocke.name",
              "htmlLink" : "https://code.google.com/u/113101595699089133650/"
            },
            "content" : "It would be great if bsdtar could support an option similar to the --ignore-zeros option of GNU tar, which ignores blocks of zeros, particularly for either damaged or concatenated tar files.\r\n\r\nThis was mentioned on the freebsd-hackers mailing list a long time ago &lt;http://lists.freebsd.org/pipermail/freebsd-hackers/2004-November/009220.html&gt; but as far as I can tell it hasn't been implemented yet and there wasn't an issue to track it.\r\n\r\nAdditionally, I'd really love an option to write a tar file without the end marker zero blocks to allow incremental creation of gzip-compressed tar files.  But I can file a different issue to track that if it is worth considering separately.\r\n\r\nThanks,\r\nKevin",
            "published" : "2014-01-10T17:45:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Re: --ignore-zeros\r\n\r\nI think the bsdtar command-line interface should translate this to --option read_concatenated_archives\r\n\r\nWe can then implement that option for tar, cpio, and other formats where it makes sense.  Implementing option read_concatenated_archives for tar involves touching the options() function for the tar reader (to recognize the new option) and some minor work on the tar reader's next_header function.\r\n\r\nYour other idea should be discussed separately.\r\n\r\nI don't think I'll personally have time to get to this very soon; if you'd like to take a stab at implementing it yourself, I can give you some pointers.\r\n",
            "published" : "2014-01-11T19:09:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kevin@kevinlocke.name",
              "htmlLink" : "https://code.google.com/u/113101595699089133650/"
            },
            "content" : "Sure, that sounds good.  I've submitted a pull request with a first-pass implementation which could be a good starting point for discussion.  Perhaps we can refine it from there.\r\n\r\nThe ability to write without the zero blocks is probably not worth the effort once support for reading archives with zero blocks is added (at least for me).  If I see a compelling use case in the future, I'll bring it up at that point.\r\n\r\nThanks,\r\nKevin",
            "published" : "2014-01-12T00:20:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This has been merged into the master libarchive tree.\r\n\r\n",
            "published" : "2014-01-13T02:23:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 349,
        "title" : "Fix out-of-tree build with dependency tracking disabled",
        "summary" : "Fix out-of-tree build with dependency tracking disabled",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "paul.betafive",
          "htmlLink" : "https://code.google.com/u/paul.betafive/"
        },
        "updated" : "2014-01-17T04:27:12.000Z",
        "published" : "2014-01-16T15:41:24.000Z",
        "closed" : "2014-01-17T04:27:12.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "paul.betafive",
              "htmlLink" : "https://code.google.com/u/paul.betafive/"
            },
            "content" : "In libarchive git master (da3ec55e71887d6b2e79f75e03e49c80650f7f0a):\r\n\r\n$ ./build/autogen.sh\r\n$ mkdir tmp\r\n$ cd tmp\r\n$ ../configure --disable-dependency-tracking\r\n$ make -j 4\r\n\r\ncat ../libarchive/test/test_*.c | grep DEFINE_TEST &gt; libarchive/test/list.h\r\ncat ../tar/test/test_*.c | grep DEFINE_TEST &gt; tar/test/list.h\r\ncat ../cpio/test/test_*.c | grep DEFINE_TEST &gt; cpio/test/list.h\r\n/bin/sh: libarchive/test/list.h: No such file or directory\r\n/bin/sh: tar/test/list.h: No such file or directory\r\n/bin/sh: cpio/test/list.h: No such file or directory\r\nMakefile:11781: recipe for target 'cpio/test/list.h' failed\r\nmake: *** [cpio/test/list.h] Error 1\r\nmake: *** Waiting for unfinished jobs....\r\nMakefile:11775: recipe for target 'libarchive/test/list.h' failed\r\nmake: *** [libarchive/test/list.h] Error 1\r\nMakefile:11778: recipe for target 'tar/test/list.h' failed\r\nmake: *** [tar/test/list.h] Error 1\r\n\r\nThis approximates how libarchive is built in OpenEmbedded, I've just reduced it to a minimum case that still reproduces the issue.\r\n\r\nThe attached patch fixes this by creating the relevant directories at the end of the configure script, without failing if they already exist.",
            "published" : "2014-01-16T15:41:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3490000000",
              "fileName" : "0001-Fix-out-of-tree-build.patch",
              "fileSize" : 845,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks!  I've committed your patch.\r\n",
            "published" : "2014-01-17T04:27:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 350,
        "title" : "archive_read_next_header() returns ARCHIVE_WARN if the file name is UTF-8",
        "summary" : "archive_read_next_header() returns ARCHIVE_WARN if the file name is UTF-8",
        "stars" : 1,
        "starred" : false,
        "status" : "NotABug",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "Lhota56",
          "htmlLink" : "https://code.google.com/u/114751696613124352041/"
        },
        "updated" : "2014-01-28T03:49:32.000Z",
        "published" : "2014-01-23T14:29:38.000Z",
        "closed" : "2014-01-28T03:49:32.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Lhota56",
              "htmlLink" : "https://code.google.com/u/114751696613124352041/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Write a libarchive application for archive extraction, using archive_read_open_file(), archive_read_next_header(), and archive_read_data().\r\n2. Use the application on an archive that includes a file with a non-ASCII name (e.g. 프로그램.txt).\r\n3. The function archive_read_next_header() will return ARCHIVE_WARN for the archived file with the non-ASCII name.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nThe expected status was ARCHIVE_OK, and what we saw was ARCHIVE_WARN.\r\n\r\n<b>What version are you using?</b>\n\r\n3.1.2\r\n\r\n<b>On what operating system?</b>\n\r\nRedhat Enterprise Linux Server 6.2 (Santiago)\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\ngcc version 4.4.6 20110731 (Red Hat 4.4.6-3) (GCC)\r\nTarget: x86_64-redhat-linux\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2014-01-23T14:29:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3500000000",
              "fileName" : "프로그램.zip",
              "fileSize" : 355,
              "mimetype" : "application/zip"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What is the error message provided by archive_error_string()?\r\n\r\n",
            "published" : "2014-01-26T21:02:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Does bsdtar display an error when you try to use it:\r\n\r\n   bsdtar xvf 프로그램.zip \r\n",
            "published" : "2014-01-26T23:02:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Lhota56",
              "htmlLink" : "https://code.google.com/u/114751696613124352041/"
            },
            "content" : "archive_error_string() returns \"Pathname cannot be converted from UTF-8 to current locale.\"\r\n",
            "published" : "2014-01-27T15:41:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Lhota56",
              "htmlLink" : "https://code.google.com/u/114751696613124352041/"
            },
            "content" : "Strike that, it turns out the problem was the failure to include the call\r\n\r\n  setlocale(LC_ALL, \"\");\r\n",
            "published" : "2014-01-27T16:25:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Lhota56",
              "htmlLink" : "https://code.google.com/u/114751696613124352041/"
            },
            "content" : "Please remove this issue, or mark it resolved.",
            "published" : "2014-01-27T16:28:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you for reporting the issue, and for letting us know the answer.\r\n",
            "published" : "2014-01-28T03:49:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "NotABug"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 351,
        "title" : "About the website libarchive.org",
        "summary" : "About the website libarchive.org",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ztgreve",
          "htmlLink" : "https://code.google.com/u/115888773849248899430/"
        },
        "updated" : "2014-02-01T05:44:57.000Z",
        "published" : "2014-02-01T02:34:41.000Z",
        "closed" : "2014-02-01T05:44:57.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ztgreve",
              "htmlLink" : "https://code.google.com/u/115888773849248899430/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Go to libarchive.org\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpected: libarchive.org appears\r\nActual: Renew domain name\r\n\r\nI think you need to look into this.",
            "published" : "2014-02-01T02:34:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for letting me know.\r\n",
            "published" : "2014-02-01T05:44:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 352,
        "title" : "Prevent unnecessary linking against deflate code",
        "summary" : "Prevent unnecessary linking against deflate code",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "paul.betafive",
          "htmlLink" : "https://code.google.com/u/paul.betafive/"
        },
        "updated" : "2014-04-07T01:06:45.000Z",
        "published" : "2014-02-06T21:32:46.000Z",
        "closed" : "2014-04-07T01:06:45.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "paul.betafive",
              "htmlLink" : "https://code.google.com/u/paul.betafive/"
            },
            "content" : "In libarchive git master (154865e1881e6b399ec5b38a36f8ec48f4818801)\r\n\r\nIn _archive_write_disk_free, the call to deflateEnd was compiled if HAVE_ZLIB_H\r\nwas defined. However, all other calls to deflate functions were only compiled\r\nif __APPLE__, UF_COMPRESSED and HAVE_SYS_XATTR_H were also defined. So if one of\r\nthese macros was not defined but HAVE_ZLIB_H was defined, the call the\r\ndeflateEnd would be unnecessary as deflateInit could never have been called.\r\n\r\nIn statically linked applications which don't use deflate functions elsewhere\r\nthis was causing unnecessary linking of the deflate code from zlib, adding at\r\nleast 20k of object code to the final executable size.\r\n\r\nThis patch fixes the above issue by surrounding the call to deflateEnd with the\r\nsame conditional compilation checks as surround the call to deflateInit.\r\n\r\n(I hope that description is clear enough - it's a difficult edge case to describe)",
            "published" : "2014-02-06T21:32:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3520000000",
              "fileName" : "0001-Prevent-unnecessary-linking-against-deflate-code.patch",
              "fileSize" : 1701,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Merged pull request #73.\r\n\r\nThanks again.\r\n",
            "published" : "2014-04-07T01:06:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 353,
        "title" : "Checking local file during mtree file reading has issues with symlinks",
        "summary" : "Checking local file during mtree file reading has issues with symlinks",
        "stars" : 1,
        "starred" : false,
        "status" : "Invalid",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "allan.mcrae",
          "htmlLink" : "https://code.google.com/u/104093793714374073720/"
        },
        "updated" : "2014-02-14T16:01:28.000Z",
        "published" : "2014-02-14T03:53:16.000Z",
        "closed" : "2014-02-14T16:01:28.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allan.mcrae",
              "htmlLink" : "https://code.google.com/u/104093793714374073720/"
            },
            "content" : "When reading in an mtree file, libarchive grabs unknown information from the file on the filesystem if present (that was unexpected in itself!).\r\n\r\nTo grab this information it uses open() then fstat(). It then compares the filetype from fstat() to that from the mtree file.   As open follows symlinks, this means any symlinks to directories are flagged as having a different type.  E.g.:\r\n&quot;mtree specification has different type for ./lib&quot;\r\n\r\nI fixed this locally by adding &quot;O_NOFOLLOW&quot; to the open() call (although I'm not sure about the portability of that).\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n./configure (Arch Linux package)\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc (GCC) 4.8.2 20140206 (prerelease)\r\n",
            "published" : "2014-02-14T03:53:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "allan.mcrae",
              "htmlLink" : "https://code.google.com/u/104093793714374073720/"
            },
            "content" : "Please close this bug.  It seems I entirely misdiagnosed the issue.",
            "published" : "2014-02-14T04:06:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Closing as requested.",
            "published" : "2014-02-14T16:01:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Invalid"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 354,
        "title" : "libarchive should support star's exustar format",
        "summary" : "libarchive should support star's exustar format",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dmarquess",
          "htmlLink" : "https://code.google.com/u/100247104664990357745/"
        },
        "updated" : "2015-02-02T01:00:03.000Z",
        "published" : "2014-02-14T23:35:22.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dmarquess",
              "htmlLink" : "https://code.google.com/u/100247104664990357745/"
            },
            "content" : "libarchive should support star's exustar format due to it's increased support for more file types, etc.",
            "published" : "2014-02-14T23:35:22.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I agree it would be nice for libarchive to be able to recognize and read exustar extensions.\r\n\r\nIf someone would like to try adding this, the code to identify a particular tar header format is in libarchive/archive_read_support_format_tar.c in the tar_read_header() function starting around line 636.  The code following the comment \"Determine the format variant\" attempts to determine the format of this particular header and then calls an appropriate function to actually parse out the details.\r\n\r\nOf course, we'll also need to add suitable test cases to ensure that such a feature actually works correctly (and help ensure that it does not break in the future).\r\n\r\nNote that exustar (and many other proprietary tar extensions) are largely obsoleted by the POSIX standard \"pax extended format.\"\r\n\r\n",
            "published" : "2015-02-02T01:00:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 355,
        "title" : "read non-empty raw format get 0 entry size",
        "summary" : "read non-empty raw format get 0 entry size",
        "stars" : 1,
        "starred" : false,
        "status" : "NotABug",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "tongari95",
          "htmlLink" : "https://code.google.com/u/111825405052388689490/"
        },
        "updated" : "2014-03-15T06:36:25.000Z",
        "published" : "2014-03-14T09:49:57.000Z",
        "closed" : "2014-03-14T20:47:39.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tongari95",
              "htmlLink" : "https://code.google.com/u/111825405052388689490/"
            },
            "content" : "When read from raw format, archive_entry_pathname(e) returns &quot;data&quot; and archive_read_data() has no problem , but archive_entry_size(e) returns 0.\r\nBTW, can archive_entry_pathname returns the filename instead of &quot;data&quot;?\r\n\r\nWhat is the expected output?\r\nnon-zero value\r\n\r\nWhat do you see instead?\r\n0\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nWin7\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVC10\r\n",
            "published" : "2014-03-14T09:49:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Libarchive doesn't know the size in all cases (it reads in a streaming fashion) and doesn't know the filename (the data may not even be coming from a file).\r\n\r\nYou should check archive_entry_size_is_set() to determine whether the size is actually known before trusting the value from archive_entry_size().\r\n\r\nIf you have an idea about how this might be changed, please take a careful look at the source and suggest how it might be reorganized.  Working patches would be even more persuasive.",
            "published" : "2014-03-14T20:47:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "NotABug"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tongari95",
              "htmlLink" : "https://code.google.com/u/111825405052388689490/"
            },
            "content" : "Actually the raw file is chained with gz, so I thought it should contain some info about name & size, but I know nothing about the detail...(at least 7z GUI can show me these)\r\n\r\nIf that's true, any chance for Libarchive to propagate the info?",
            "published" : "2014-03-15T06:36:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 356,
        "title" : "problems with large sparse files",
        "summary" : "problems with large sparse files",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "Stephane.Chazelas",
          "htmlLink" : "https://code.google.com/u/112537374717016875263/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2014-07-12T03:09:46.000Z",
        "published" : "2014-03-17T21:24:06.000Z",
        "closed" : "2014-07-12T03:09:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Stephane.Chazelas",
              "htmlLink" : "https://code.google.com/u/112537374717016875263/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n   echo foo &gt; a\r\n   truncate -s10G a\r\n   echo bar &gt;&gt; a\r\n   bsdtar cf - a | bsdtar tf -\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n   $ bsdtar cf - a | bsdtar tf -\r\n   a\r\n   bsdtar: Truncated input file (needed 10737418240 bytes, only 8192 available)\r\n   bsdtar: Error exit delayed from previous errors.\r\n\r\n\r\nInterestingly, bsdtar is happy with the tar file generated by star. And both star and GNU tar are happy with with the tar file generated by bsdtar (and recreate the sparse file correctly with tar x).\r\n\r\n\r\n<b>What version are you using?</b>\n\r\n   3.1.2-8 on Debian jessie amd64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\ndebian packages\r\n\r\nbsdtar 3.1.2-8 amd64 Implementation of the 'tar' program from FreeBSD\r\nlibarchive13:amd64 3.1.2-8\r\n",
            "published" : "2014-03-17T21:24:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for reporting the issue.\r\nI fixed this at commit bf4f6ec64e.\r\n\r\nI will close this.",
            "published" : "2014-07-12T03:09:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 357,
        "title" : "libarchive crashes trying to opening a zip inside ",
        "summary" : "libarchive crashes trying to opening a zip inside ",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "dardoguidobono",
          "htmlLink" : "https://code.google.com/u/105073204392664842201/"
        },
        "updated" : "2015-01-10T05:45:36.000Z",
        "published" : "2014-03-31T15:20:36.000Z",
        "closed" : "2015-01-10T05:45:36.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. trying to decompress a file inside a word or excel 97 document\r\n2. libarchive detect the PK header but its do not start from the begining of the file\r\n3. crashes\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n bot winrar and total cmd opens the file, libarchive crashes\r\n\r\n<b>What version are you using?</b>\nlatest\r\n\r\n<b>On what operating system?</b>\nwindows \r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2014-03-31T15:20:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3570000000",
              "fileName" : "archive-bug.rar",
              "fileSize" : 12843,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "dardoguidobono",
              "htmlLink" : "https://code.google.com/u/105073204392664842201/"
            },
            "content" : "sorry libarchive does not crash only do not open the archive:\r\n\r\noutput of the binary:\r\n\r\nf:\\projects\\research\\archive-test\\archive-test> bug-archive Testing_Empty_Mac_compatible-97-2004.doc\r\nERROR: Invalid central directory signature (err: -30 format: ZIP)\r\nf:\\projects\\research\\archive-test\\archive-test>",
            "published" : "2014-03-31T17:52:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is fixed with the current github master.\r\n",
            "published" : "2015-01-10T05:45:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 358,
        "title" : "Some of my epub files don't work with libarchive",
        "summary" : "Some of my epub files don't work with libarchive",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "clee@mg8.org",
          "htmlLink" : "https://code.google.com/u/110687709483909699079/"
        },
        "updated" : "2015-01-10T06:19:12.000Z",
        "published" : "2014-04-04T18:25:07.000Z",
        "closed" : "2015-01-10T06:19:12.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "clee@mg8.org",
              "htmlLink" : "https://code.google.com/u/110687709483909699079/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Using sample code at http://mg8.org/tmp/libarchive_sample.c\r\n2. I have multiple epub files which have files that libarchive reports are size 0\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI expect to see the correct sizes for the files contained in the epub files. I see files with size 0 instead.\r\n\r\n\r\n<b>What version are you using?</b>\nlibarchive-3.1.2-7.fc20.x86_64\r\n\r\n<b>On what operating system?</b>\nFedora Core 20 x86_64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nInstalled with yum\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc-4.8.1-5.fc20.1\r\n\r\n<b>Please provide any additional information below.</b>\nThe epub files that libarchive does not parse correctly are commercial epubs, so I have no idea exactly how they were generated. I would be happy to do some debugging and provide logs to the libarchive devs if necessary.",
            "published" : "2014-04-04T18:25:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "If you are using the streaming Zip reader, then this is unsurprising.  Zip archives may store file size in the \"local file header\" but it is optional, so libarchive's streaming Zip reader cannot always tell the size of entries without actually extracting them.  Libarchive's seeking Zip reader starts from the Zip Central Directory and can always get the correct file size.\r\n\r\nCheck archive_entry_size_is_set() to see if the size was actually read.  (If the size is not set, then it always reads as zero.)\r\n\r\nYou may just need to provide a seek callback.\r\n\r\nThere have also been significant changes to libarchive's Zip support since 3.1.2.  I don't know if those would affect you, but you might try libarchive's github master and see if that makes a difference.\r\n\r\n",
            "published" : "2014-04-05T16:49:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "clee@mg8.org",
              "htmlLink" : "https://code.google.com/u/110687709483909699079/"
            },
            "content" : "Hi kientzle,\r\n\r\nDid you look at the sample code I posted? I assume I'm using the streaming zip reader. I guess I'll try to figure out how to use the seeking reader.",
            "published" : "2014-04-07T23:12:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I see you're using archive_read_open_filename() which does support seeking on the file.\r\n\r\nSo you should be getting correct sizes.\r\n\r\nWith the current github master, you can enable only the seeking Zip reader with archive_read_support_format_zip_seekable().  I do not remember right now if that's supported in 3.1.2.  In particular, that will verify that you're using that reader.  (Normally, libarchive will choose between the two readers based on a variety of factors.)\r\n\r\nJust to check:  Have you verified that Info-Zip \"unzip\" reports the correct sizes?  (Although not common, it is possible to create Zip archives that do not include sizes at all, so it is worth checking.)\r\n\r\nPlease try with libarchive's github master; there have been pretty significant changes to Zip reading that may impact you.\r\n\r\nYou should definitely print out archive_entry_size_is_set() to see whether libarchive has a size at all.\r\n",
            "published" : "2014-04-08T01:29:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The current github master has significant changes to the Zip support since 3.1.2.\r\n\r\nPlease test with that version and let us know if you continue to see problems.\r\n\r\nI'll mark this as \"Fixed'; please feel free to re-open it if you find there are still problems.\r\n",
            "published" : "2015-01-10T06:19:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 359,
        "title" : "Heap buffer overflow in RAR reader",
        "summary" : "Heap buffer overflow in RAR reader",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "CheesePC",
          "htmlLink" : "https://code.google.com/u/113786819565116324019/"
        },
        "updated" : "2014-06-05T00:20:51.000Z",
        "published" : "2014-05-01T16:38:53.000Z",
        "closed" : "2014-06-05T00:20:51.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 12,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "CheesePC",
              "htmlLink" : "https://code.google.com/u/113786819565116324019/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Create RAR archive with Nth file name shorter than (N-1)th\r\n2. Build your own software using libarchive (I'm using callbacks-powered archiving decompression, should be reproducible in another modes though) with Clang++ Address Sanitizer (!)\r\n3. Run it!\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nSoftware is being expected to work. Address Sanitizer heap buffer overflow error instead.\r\n\r\n<b>What version are you using?</b>\nCurrent git master, 14.\r\n\r\n<b>On what operating system?</b>\nGentoo Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nClang 3.3\r\n\r\n<b>Please provide any additional information below.</b>\nI have looked around this issue and made a patch which fixes an issue for me. I'm attaching it here since I'm not good in all this github stuff. ",
            "published" : "2014-05-01T16:38:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3590000000",
              "fileName" : "0001-Heap-buffer-overflow-fixed-at-rar-archive-handler.patch",
              "fileSize" : 963,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Your change does not look quite right to me.  In particular, you are assuming that rar->filename and rar->filename_save are null-terminated, which does not seem to be the case.\r\n\r\nPlease try the attached:  It ensures that filename_save is in fact null terminated so strlen() will work for it and adjusts your patch to use filename_size instead of strlen(rar->filename).\r\n",
            "published" : "2014-05-03T17:33:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3590001000",
              "fileName" : "rar-not-fooled-by-prefix-filename.patch",
              "fileSize" : 967,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "CheesePC",
              "htmlLink" : "https://code.google.com/u/113786819565116324019/"
            },
            "content" : "Why aren't they null-terminated? rar->filename is null-terminated at filename_size at line 1419, rar->filename_save is null-terminated since it's copied from rar->filename including filename_size + 1, which keeps a null-terminator. \r\n\r\nSo, I see only two possible solutions:\r\n1) Make sure both strings are null-terminated and replace memcmp with strcmp, which will take care of their lengths differences;\r\n2) Strings must not always be null-terminated by design, in which case we should keep rar->filename_save's length and compare both strings despite of their characters, as memory segments. \r\n\r\nIn fact, I don't see any reasons to keep non-character data in those fields since filenames are supposed to be strings, not memory segments. There might be a glitch with some special encodings support in C, but it's up to maintainers to find it out.",
            "published" : "2014-05-03T18:48:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "\"rar->filename is null-terminated at filename_size at line 1419...\"\r\n\r\nAh. yes.  I had missed that.  The copious use of memcpy() made me think that the strings were not null-terminated.\r\n\r\nWe should use strcmp() and strcpy() where appropriate to make this clearer.\r\n\r\nIf you put together the patch, I'll commit it.\r\n\r\n",
            "published" : "2014-05-03T23:04:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "CheesePC",
              "htmlLink" : "https://code.google.com/u/113786819565116324019/"
            },
            "content" : "I'll take a look, maintainer ought to review it though, I'm not really an archiving software developer :) ",
            "published" : "2014-05-04T05:48:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "CheesePC",
              "htmlLink" : "https://code.google.com/u/113786819565116324019/"
            },
            "content" : "Here comes the patch.",
            "published" : "2014-05-04T09:43:47.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3590005000",
              "fileName" : "0001-Heap-buffer-overflow-fixup-for-rar-archive-reader.patch",
              "fileSize" : 1349,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks.  That's what I had in mind.  Unfortunately, it seems to break a couple of tests.\r\n\r\nPlease try running the test suite (make test) with and without your patch;  here I see two tests that verify rar unicode support fail with your patch but pass without.  Hopefully I'll have time this week to figure out why.\r\n\r\n\r\n",
            "published" : "2014-05-04T16:47:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "BTW, could you create a small RAR archive that triggers the problem you found?\r\n\r\nI can fold that into a test case and make sure that -- once we fix this problem -- it never inadvertently reappears.\r\n",
            "published" : "2014-05-04T17:44:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Please try this patch:  It does not break the existing tests and I think it fixes the issue you found (that comparing the current filename to the previous filename does not take into account the length of the two strings so will falsely trigger a match when the new filename is a prefix of the previous one).\r\n\r\nI would still like to extend the tests to cover this case.\r\n",
            "published" : "2014-05-05T03:06:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3590008000",
              "fileName" : "libarchive-rar-preserve-saved-filename-size.patch",
              "fileSize" : 1153,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "CheesePC",
              "htmlLink" : "https://code.google.com/u/113786819565116324019/"
            },
            "content" : "> BTW, could you create a small RAR archive that triggers the problem you found?\r\nI can, but is heap buffer overflow catching possible with your testing framework? \r\n\r\n> Please try this patch. \r\nIt will work, makes the same another way. But isn't there a convenient way to handle strings in C? I'm not really a C programmer so dropping standard string handling routines looks kinda weird for me.",
            "published" : "2014-05-05T12:52:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "CheesePC",
              "htmlLink" : "https://code.google.com/u/113786819565116324019/"
            },
            "content" : "So, is this going to be fixed soon?",
            "published" : "2014-06-04T17:18:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 11,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the reminder; I've committed the patch to git master.\r\n",
            "published" : "2014-06-05T00:20:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 360,
        "title" : "\"bsdtar: Invalid central directory signature\"",
        "summary" : "\"bsdtar: Invalid central directory signature\"",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rene.herman",
          "htmlLink" : "https://code.google.com/u/111551269777066600555/"
        },
        "updated" : "2015-01-10T06:16:21.000Z",
        "published" : "2014-05-10T19:45:34.000Z",
        "closed" : "2015-01-10T06:16:21.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rene.herman",
              "htmlLink" : "https://code.google.com/u/111551269777066600555/"
            },
            "content" : "Don't know who's bug this is; reported in case its useful.\r\n\r\nbsdtar (but not Info-ZIP's unzip) fails to extract the &quot;Parallax.ttf.zip&quot; zipfile that one becomes by running:\r\n \r\nwget --content-disposition &quot;http://forums.parallax.com/attachment.php?attachmentid=53903&amp;d=1212437073&quot;\r\n\r\n(sorry; could not find a direct link)\r\n\r\n== What is the expected output? What do you see instead?\r\n\r\n$ bsdtar -xf Parallax.ttf.zip \r\nbsdtar: Invalid central directory signature\r\nbsdtar: Error exit delayed from previous errors.\r\n\r\n== What version are you using?\r\n\r\n$ bsdtar --version\r\nbsdtar 3.1.2 - libarchive 3.1.2\r\n\r\n== On what operating system?\r\n\r\nArch Linux\r\n\r\n== How did you build?  (cmake, configure, or pre-packaged binary)\r\n\r\nhttps://projects.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/libarchive",
            "published" : "2014-05-10T19:45:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This seems to be fixed in libarchive/master.\r\n\r\nPlease try with the current development source from github.com and let us know if that works for you as well.\r\n",
            "published" : "2014-05-10T20:08:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rene.herman",
              "htmlLink" : "https://code.google.com/u/111551269777066600555/"
            },
            "content" : "Confirmed. A (static build of, to be complete but I don't suppose it matters) 'bsdtar' from current git/master extracts the file fine.",
            "published" : "2014-05-10T20:38:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rene.herman",
              "htmlLink" : "https://code.google.com/u/111551269777066600555/"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rene.herman",
              "htmlLink" : "https://code.google.com/u/111551269777066600555/"
            },
            "content" : "I see the 3.1.2 release was a while ago by the way, and that Arch Linux already cherry-picks a few GIT fixes. If this is an easily identified discrete fix, I could point the Arch maintainer to it (assuming a new release isn't imminent anyway).",
            "published" : "2014-05-10T20:50:34.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rene.herman",
              "htmlLink" : "https://code.google.com/u/111551269777066600555/"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rene.herman",
              "htmlLink" : "https://code.google.com/u/111551269777066600555/"
            },
            "content" : "Confirmed. A (static, to be complete but I don't suppose it matters) build of 'bsdtar' from current git/master extracts the file fine.\r\n\r\nI see the 3.1.2 release was a while ago by the way, and that Arch Linux already cherry-picks a few GIT fixes. If this is an easily identified discrete fix, I could point the Arch maintainer to it (assuming a new release isn't imminent anyway).\r\n\r\n",
            "published" : "2014-05-10T20:51:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you for checking.\r\n\r\nI hope to find time to work on a 3.2 release in the near future.\r\n",
            "published" : "2015-01-10T06:16:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 361,
        "title" : "bsdtar -O on Windows adds CR before LF",
        "summary" : "bsdtar -O on Windows adds CR before LF",
        "stars" : 2,
        "starred" : false,
        "status" : "Waiting",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "eclipsechasers3",
          "htmlLink" : "https://code.google.com/u/104895159794299350521/"
        },
        "updated" : "2015-01-10T18:48:42.000Z",
        "published" : "2014-05-15T05:35:46.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "eclipsechasers3",
              "htmlLink" : "https://code.google.com/u/104895159794299350521/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Take a file with Unix line ending and tar it (bsdtar -cf x.tar y.txt)\r\n2. Extract it using normal command (bsdtar -xf x.tar y.txt)\r\n3. Extract it using -O switch (bsdtar -Oxf x.tar &gt;z.txt)\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe output of step 2 is as expected; extracted file is identical to original (Unix line endings).\r\nThe output of step 3 is not expected; extracted file differs from original because it has Windows line endings.\r\nThis is sort of okay for text files; very bad for binary files.\r\nI can't see any option for changing this behavior in the documentation. FWIW, other similar programs with &quot;extract to stdout&quot; options (e.g. GnuWin32 versions of unzip and gzip) do not add carriage return in this situation.\r\n\r\n<b>What version are you using?</b>\nlibarchive-2.4.12.1 (from GnuWin32)\r\n\r\n<b>On what operating system?</b>\nWindows 7\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\npre-packaged binary\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\nIf you decide this is &quot;operating as designed&quot;, and can nevertheless point me to what needs to be changed, it would be appreciated.\r\n",
            "published" : "2014-05-15T05:35:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is not the way it should work.  Unfortunately, we don't have a lot of folks working directly on Windows, so would appreciate help getting it fixed.\r\n\r\nThis particular option is handled at around line 337 in tar/read.c.  You can see the current version of that file at:\r\n\r\nhttps://github.com/libarchive/libarchive/blob/master/tar/read.c\r\n\r\nI suspect the right fix here is to check at the top of the read_archive() function if -x and -O were specified and set stdout to binary mode if so (only on Windows, of course).\r\n\r\n\r\n\r\n\r\n",
            "published" : "2014-05-16T02:02:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "eclipsechasers3",
              "htmlLink" : "https://code.google.com/u/104895159794299350521/"
            },
            "content" : "Thanks for the quick response. I have little experience compiling from source on Windows either. But your response had sufficient substance that I looked at the code and had an idea what to do. I had problems trying to cross-compile in Cygwin, so I tried to install MinGW/MSYS, and see what I could do. It was pretty painful, but after several hours, with numerous source changes (mostly missing copybooks), I hadn't yet succeeded in compiling the whole package, but bsdtar was ready. I gave it a shot ... and the problem did not occur. So perhaps it's only a problem if compiled with something else (presumably some version of MS C) on Windows. That looks tougher than doing it with MinGW (I think I need to compile all the prerequisite packages first). I'm game for seeing if I can get anywhere with that, but it could take a while.",
            "published" : "2014-05-17T04:35:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bruce.cran",
              "htmlLink" : "https://code.google.com/u/116704995636598723218/"
            },
            "content" : "I came across this problem recently when dealing with files: on Windows, open() defaults to text/translated mode and I needed to pass _O_BINARY. In this case you might need _setmode (http://msdn.microsoft.com/en-us/library/tw4k6df8.aspx):\r\n\r\n\"Passing _O_TEXT as mode sets text (that is, translated) mode. Carriage return–line feed (CR-LF) combinations are translated into a single line feed character on input. Line feed characters are translated into CR-LF combinations on output. Passing _O_BINARY sets binary (untranslated) mode, in which these translations are suppressed.\"",
            "published" : "2014-05-17T22:58:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe the attached patch will fix -xO to work correctly on Windows, though it may require additional headers.\r\n\r\nI would appreciate if anyone could test this.\r\n",
            "published" : "2015-01-10T06:15:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3610004000",
              "fileName" : "bsdtar_binary_xO_on_Windows.patch",
              "fileSize" : 423,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2015-01-10T18:48:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 362,
        "title" : "initrd.img extraction out of fedora ISO fails with libarchive",
        "summary" : "initrd.img extraction out of fedora ISO fails with libarchive",
        "stars" : 2,
        "starred" : false,
        "status" : "NotABug",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "lasse.schuirmann",
          "htmlLink" : "https://code.google.com/u/lasse.schuirmann@gmail.com/"
        },
        "updated" : "2014-05-31T16:44:58.000Z",
        "published" : "2014-05-16T12:52:35.000Z",
        "closed" : "2014-05-31T16:44:58.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lasse.schuirmann",
              "htmlLink" : "https://code.google.com/u/lasse.schuirmann@gmail.com/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Download http://download.fedoraproject.org/pub/fedora/linux/releases/20/Fedora/x86_64/iso/Fedora-20-x86_64-DVD.iso\r\n2. Open the ISO with an archive manager which uses libarchive (I tested an own implementation, ark and gnomes archive manager [file-roller])\r\n3. Try to extract /isolinux/initrd.img\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nActual: The file is listed with 0 bytes and an error occurs when trying to extract it.\r\nExpected: I think it is a 34MiB sized file, you can extract it without problems with iso-read.\r\n\r\n<b>What version are you using?</b>\nlibarchive 3.1.2-6\r\n\r\n<b>On what operating system?</b>\nArchLinux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\npre-packaged binary\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n-\r\n\r\n<b>Please provide any additional information below.</b>\nNot only me but also another guy, presumably on a fedora machine, reproduced the problem.",
            "published" : "2014-05-16T12:52:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cfergeau",
              "htmlLink" : "https://code.google.com/u/103905820635718733147/"
            },
            "content" : "Testing this with bin/bsdtar xvf Fedora-20-x86_64-DVD.iso gives:\r\n-rw-r--r--  2 0      101737        0 déc. 12 15:03 isolinux/initrd.img link to images/pxeboot/initrd.img\r\nand\r\n-rw-r--r--  2 0      101737 34631660 déc. 12 15:03 images/pxeboot/initrd.img\r\n\r\nAre you handlink links correctly in your code?",
            "published" : "2014-05-27T08:45:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "lasse.schuirmann",
              "htmlLink" : "https://code.google.com/u/lasse.schuirmann@gmail.com/"
            },
            "content" : "I do not. Thanks for the hint!\r\n\r\nAfter adding the code for that it worked fine.\r\n\r\nI filed bugs for gnomes file-roller and KDEs ark. This issue can therefore be closed.",
            "published" : "2014-05-31T16:24:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Closing.\r\n",
            "published" : "2014-05-31T16:44:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "NotABug"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 363,
        "title" : "Unable to extract large 7z files",
        "summary" : "Unable to extract large 7z files",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "alex.rou.sg",
          "htmlLink" : "https://code.google.com/u/115630910425083520404/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2014-08-03T04:42:41.000Z",
        "published" : "2014-06-01T01:46:52.000Z",
        "closed" : "2014-08-03T04:42:41.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "alex.rou.sg",
              "htmlLink" : "https://code.google.com/u/115630910425083520404/"
            },
            "content" : "I'm trying to extract a large (&gt; 5 GB) 7z file using the latest stable 3.1.2 build and the example extractor on https://github.com/libarchive/libarchive/wiki/Examples and it gives me a Damaged 7-Zip archive error.\r\n\r\nIts able to extract smaller 7z files.",
            "published" : "2014-06-01T01:46:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thank you for reporting the issue.\r\nI fixed this problem in a commit dabd6eb78d1553a87bccc361f691fbc48e22e905.\r\n\r\nPlease try latest libarchive code if you have time.",
            "published" : "2014-08-03T04:42:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 364,
        "title" : "Partial extraction for damaged multi-volume RAR archives",
        "summary" : "Partial extraction for damaged multi-volume RAR archives",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "bt@brandonthomson.com",
          "htmlLink" : "https://code.google.com/u/107244571361146505647/"
        },
        "updated" : "2014-06-07T17:10:52.000Z",
        "published" : "2014-06-07T16:27:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "bt@brandonthomson.com",
              "htmlLink" : "https://code.google.com/u/107244571361146505647/"
            },
            "content" : "(This is a suggestion for enhancement, not a bug)\r\n\r\nOn newsgroups it's common to find &quot;Multi-volume&quot; RAR archives containing lots of small files. Sometimes, one wants to extract the files from a single RAR volume without having to download all of the RAR volumes in the archive (or some of the volumes may be damaged).\r\n\r\nAs of 3.1.2, it does not appear to be possible to extract these files with bsdtar because it will exit with &quot;File CRC Error&quot; if you pass it a middle volume.\r\n\r\nHowever, with a small modification bsdtar can extract the middle files (but not the first or the last file). The change is to remove a &quot;return (ARCHIVE_FATAL);&quot; in libarchive-3.1.2/libarchive/archive_read_support_format_rar.c (In 3.1.2 this is line 1760, search for &quot;File CRC Error&quot; otherwise).\r\n\r\nFor my purposes I just built a modified binary with the error return removed, but it might be worth adding a flag to bsdtar that optionally ignores this error so people don't need to recompile in order to extract files from &quot;damaged&quot; multi-volume archives.",
            "published" : "2014-06-07T16:27:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "In the case you describe, libarchive should behave as it does for other formats:  If there is a damaged or incomplete entry prior to a valid entry, it skips the damaged part and returns the valid header with ARCHIVE_WARN indicating that something was skipped.  (See archive_read_support_format_cpio.c around line 555 for an example of this kind of logic.)\r\n\r\n1) Do you have a (small) sample file that we can use to develop a test for this case?  (That is, a \"middle volume\" that demonstrates the problem.  Ideally, such test files are no more than a few kilobytes.)\r\n\r\n2) The error handling will be slightly more complex than you describe, but it should be an easy fix once we have a suitable test case.\r\n",
            "published" : "2014-06-07T17:10:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 365,
        "title" : "libarchive 3.1.2 leaks memory when decoding a lzma file",
        "summary" : "libarchive 3.1.2 leaks memory when decoding a lzma file",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "panpingzhu@yahoo.com",
          "htmlLink" : "https://code.google.com/u/113278872911653779753/"
        },
        "updated" : "2014-06-15T04:31:24.000Z",
        "published" : "2014-06-15T04:31:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "panpingzhu@yahoo.com",
              "htmlLink" : "https://code.google.com/u/113278872911653779753/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Valgrind results:\r\n==56900== 112 bytes in 1 blocks are definitely lost in loss record 7 of 11\r\n==56900==    at 0x100988B: malloc (in /usr/local/lib/valgrind/vgpreload_memcheck-amd64-freebsd.so)\r\n==56900==    by 0x262A945: lzma_lzma_props_decode (in /usr/lib/liblzma.so.5)\r\n==56900==    by 0x143F983: init_decompression (in /data/home/sasiv/work/unarch/libarchive.so.14)\r\n==56900==    by 0x1441261: setup_decode_folder (in /data/home/sasiv/work/unarch/libarchive.so.14)\r\n==56900==    by 0x14415D1: read_stream (in /data/home/sasiv/work/unarch/libarchive.so.14)\r\n==56900==    by 0x14429F5: archive_read_format_7zip_read_data (in /data/home/sasiv/work/unarch/libarchive.so.14)\r\n==56900==    by 0x402A44: copy_data (amp_unarchv.c:437)\r\n\r\n\r\n<b>2.</b>\n\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nNo memory leak\r\n\r\n<b>What version are you using?</b>\nlibarchive 3.1.2 and xz 5.0.4\r\n\r\n<b>On what operating system?</b>\nFreeBSD 9.2\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nconfigure, make and make install\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nOn Jun 12, 2014, at 1:21 PM, Peter Zhu (pezhu) &lt;pezhu@cisco.com&gt; wrote:\r\n\r\n&gt; Hi, Tim\r\n&gt;  \r\n&gt; This is Peter Zhu from Cisco. We are exploring to use libarchive 3.1.2 to handle lzma files. However we have found a memory leak when decoding a lzma file. Then I searched your fixes, and found out that it was addressed with:\r\n&gt;  \r\n&gt; https://groups.google.com/forum/#!topic/libarchive-commits/3HreyzpwU2k\r\n&gt;  \r\n&gt; The diffs for the fix:\r\n&gt;  \r\n&gt; https://github.com/libarchive/libarchive/compare/6070852668fe...00f4bd\r\n&gt; 830f6c\r\n&gt;  \r\n&gt; By the way, I am using xz lib. 5.0.4\r\n&gt;  \r\n&gt; My issue is that this fix will break again if we use even newer xz lib. So removing  all the three  #ifdefs in the file (archive_read_support_filter_xz.c) altogether should be the final fix.\r\n&gt;  \r\n&gt; .\r\n&gt; #if LZMA_VERSION &lt; 50010000\r\n&gt;  \r\n&gt; #endif\r\n\r\nPlease send a patch (or a pull request on github) and I'll take care of it.\r\n\r\nCheers,\r\n\r\nTim\r\n\r\n",
            "published" : "2014-06-15T04:31:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 366,
        "title" : "archive_write_data documentation is incorrect",
        "summary" : "archive_write_data documentation is incorrect",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vlovich",
          "htmlLink" : "https://code.google.com/u/115262835481166217710/"
        },
        "updated" : "2014-06-21T04:59:51.000Z",
        "published" : "2014-06-21T02:56:35.000Z",
        "closed" : "2014-06-21T04:42:49.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlovich",
              "htmlLink" : "https://code.google.com/u/115262835481166217710/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. archive_write_data is documented as returning the number of bytes written or -1 on error: https://github.com/libarchive/libarchive/blob/master/libarchive/archive_write_data.3\r\n2. Look at https://github.com/libarchive/libarchive/blob/master/libarchive/archive_write_disk_posix.c\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nDocumentation should match actual behaviour.  Actual behaviour is to return an error code.\r\n\r\nAdditionally, the complete extractor example, https://github.com/libarchive/libarchive/wiki/Examples#a-complete-extractor\r\n\r\nuses != ARCHIVE_OK as an error, which would be extremely incorrect if archive_write_data returned the number of bytes\r\n\r\n<b>What version are you using?</b>\nf684c7d91fb46077ec92fb980bb319dd24c433c9",
            "published" : "2014-06-21T02:56:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Yes, this is inconsistent.  archive_write_data returns the number of bytes written when writing to an archive but not when writing to disk.\r\n\r\nFor obvious reasons, we cannot fix this except at a new major version.\r\n\r\nI've made several changes:\r\n\r\n * I've updated the documentation to clarify that this is a known bug.\r\n\r\n * I've fixed the \"complete extractor\" example\r\n\r\n * I've commented the source so this will be fixed in libarchive 4.0 (There may never be a libarchive 4.0; there are no plans at present; but if there ever is, it will be fixed then.)\r\n\r\nIf you find any other errors in the examples, please let me know.\r\n\r\n",
            "published" : "2014-06-21T04:42:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlovich",
              "htmlLink" : "https://code.google.com/u/115262835481166217710/"
            },
            "content" : "Would the number of bytes written != bytes sent in?  Documenting that would be useful too (i.e. what to do in response, when that kind of result would be expected).",
            "published" : "2014-06-21T04:50:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlovich",
              "htmlLink" : "https://code.google.com/u/115262835481166217710/"
            },
            "content" : "Ahh.  I got confused because I was looking at\r\n\r\nhttps://github.com/libarchive/libarchive/blob/master/libarchive/archive_read_extract2.c\r\n\r\n\r\nfor an example & it just treated the return value as an error code.",
            "published" : "2014-06-21T04:54:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The return value should never be different than the number of bytes requested.  (Unless there is an error, of course.)\r\n\r\nI've fixed the logic in archive_read_extract2 to only consider a return <0 as an error.  Thank you for pointing that out.\r\n\r\n\r\n",
            "published" : "2014-06-21T04:59:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 367,
        "title" : "archive_write_data return-value is incorrect",
        "summary" : "archive_write_data return-value is incorrect",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vlovich",
          "htmlLink" : "https://code.google.com/u/115262835481166217710/"
        },
        "updated" : "2014-06-21T04:44:54.000Z",
        "published" : "2014-06-21T02:58:09.000Z",
        "closed" : "2014-06-21T04:44:54.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlovich",
              "htmlLink" : "https://code.google.com/u/115262835481166217710/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. archive_write_data returns ssize_t which makes it seem like the return value is the number of bytes written.\r\n2. archive_write_data actually returns an error code\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nA return value of int would be expected to be consistent with other API entry-points returning an error-code.\r\n\r\n\r\n<b>What version are you using?</b>\nf684c7d91fb46077ec92fb980bb319dd24c433c9",
            "published" : "2014-06-21T02:58:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "archive_write_data returns either:\r\n  * A positive number indicating the number of bytes written\r\n  * A negative number indicating an error.\r\n\r\nThis is consistent with the ssize_t declaration.\r\n\r\nIf you see some other behavior, that is likely a bug.  Please let us know what format you are using and what you did to observe the wrong behavior.\r\n",
            "published" : "2014-06-21T04:19:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Waiting"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlovich",
              "htmlLink" : "https://code.google.com/u/115262835481166217710/"
            },
            "content" : "See https://code.google.com/p/libarchive/issues/detail?id=366\r\n\r\nIt only returns an error code.  All examples show that you should treat the result != ARCHIVE_OK as an error, which is obviously wrong since >0 would be treated as an error.",
            "published" : "2014-06-21T04:20:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "As I pointed out in my response to Issue 366, this is a bug in archive_write_data for archive_write_disk handles only.\r\n\r\nUnfortunately, I don't think we can change this behavior except at a major version; I've documented it as a known bug and commented it to be fixed if there is ever a libarchive 4.0.\r\n",
            "published" : "2014-06-21T04:44:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 368,
        "title" : "documentation missing on how to compress zip archive",
        "summary" : "documentation missing on how to compress zip archive",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vlovich",
          "htmlLink" : "https://code.google.com/u/115262835481166217710/"
        },
        "updated" : "2014-06-21T21:17:52.000Z",
        "published" : "2014-06-21T12:59:02.000Z",
        "closed" : "2014-06-21T18:36:13.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlovich",
              "htmlLink" : "https://code.google.com/u/115262835481166217710/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nThe documentation on how to set compression on zip &amp; configure it is missing.\r\n\r\nNaiively I assume:\r\narchive_write_set_format_zip\r\narchive_write_set_options(&quot;compression-level=9&quot;)\r\n\r\nwould work but that returns ARCHIVE_WARN.  Same goes for any other setting of options (format, compressor).  Am I supposed to set the compressor as gzip to get entry-compression?\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe documentation is vague/missing on how to configure zip compression.\r\n\r\n<b>What version are you using?</b>\n2.8.3\r\n\r\n<b>On what operating system?</b>\nOSX\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nPre-packaged binary",
            "published" : "2014-06-21T12:59:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It looks like the zip options aren't in the archive_write_set_options manual page.\r\nI've added them to the archive_write_set_options.3 manual page in git master.\r\nThank you for bringing it to my attention.\r\n\r\nThe test suite has many examples of using these options.  You can look through\r\nlibarchive/test/test_write_format_zip*.c for many examples of configuring\r\nthe zip writer.\r\n\r\nTo set compression for the following entries, you can use:\r\n\r\n  archive_write_set_options(a, \"zip:compression=store\")\r\n  archive_write_set_options(a, \"zip:compression=deflate\")\r\n\r\nWe do not currently support a compression-level option for\r\nconfiguring the deflate compression level.\r\n\r\nNote that the zip writer in libarchive 2.8.3 only supports the\r\ncompression option described here; the other documented\r\noptions I just added were all added later.\r\n\r\nThe Zip writer should use deflate compression by default unless\r\nconfigured otherwise.  In particular, if the library is compiled without\r\nZlib support, then deflate compression will not be available.  If you are\r\nseeing otherwise, please let us know.\r\n",
            "published" : "2014-06-21T18:35:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2014-06-21T18:36:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlovich",
              "htmlLink" : "https://code.google.com/u/115262835481166217710/"
            },
            "content" : "Does the wiki need an update too, or is that just auto-generated from the man pages?\r\n\r\nThanks for letting me know.  I kind of just assumed that I could configure the compression level.",
            "published" : "2014-06-21T18:51:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've regenerated all of the \"ManPageXyz\" wiki pages from the mdoc sources.  They should be up-to-date with git master now.\r\n\r\n\r\nAdding an option to set the compression level would be pretty straightforward:  Send me a pull request.  ;-)\r\n",
            "published" : "2014-06-21T21:17:52.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 369,
        "title" : "ER: configurable zip compression",
        "summary" : "ER: configurable zip compression",
        "stars" : 0,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vlovich",
          "htmlLink" : "https://code.google.com/u/115262835481166217710/"
        },
        "updated" : "2015-01-10T05:40:43.000Z",
        "published" : "2014-06-21T18:55:19.000Z",
        "closed" : "2015-01-10T05:40:43.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlovich",
              "htmlLink" : "https://code.google.com/u/115262835481166217710/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nIt would be nice for zip to have a configurable compression-level that could be specified.\r\n\r\n<b>What is the expected output? What do you see instead?</b>\narchive_write_set_options(&quot;compression-level=9&quot;) would work, instead it fails.\r\n\r\n<b>What version are you using?</b>\n2.8.3",
            "published" : "2014-06-21T18:55:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vlovich",
              "htmlLink" : "https://code.google.com/u/115262835481166217710/"
            },
            "content" : "https://github.com/libarchive/libarchive/pull/84",
            "published" : "2014-06-23T22:24:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you for the report and the pull request.\r\n\r\nThis has been merged with github master.\r\n\r\n",
            "published" : "2015-01-10T05:40:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 370,
        "title" : "Inefficient rar decompression, possible memory corruption in add_value()",
        "summary" : "Inefficient rar decompression, possible memory corruption in add_value()",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kkowalczyk",
          "htmlLink" : "https://code.google.com/u/kkowalczyk@gmail.com/"
        },
        "updated" : "2015-01-22T04:29:14.000Z",
        "published" : "2014-06-22T04:22:28.000Z",
        "closed" : "2015-01-22T04:29:14.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kkowalczyk",
              "htmlLink" : "https://code.google.com/u/kkowalczyk@gmail.com/"
            },
            "content" : "We've recently integrated libarchive into SumatraPDF and when debugging with Debug build I found that rar decompression is very slow when malloc/realloc isn't particularly fast (which is the case with msvc's debug crt allocator).\r\n\r\nThe culprit is in archive_read_support_format_rar.c\r\n\r\nstatic int\r\nnew_node(struct huffman_code *code)\r\n{\r\n  void *new_tree;\r\n\r\n  new_tree = realloc(code-&gt;tree, (code-&gt;numentries + 1) * sizeof(*code-&gt;tree));\r\n\r\n\r\nIt reallocates memory on every addition which is O(n^2) while it should be O(n).\r\n\r\nWhen doing this kind of expansion of a buffer, a standard practice is to use a multiplier of previous size e.g. by 2 or at least by 1.5 (it's a tradeoff of potential wasted space vs. efficiency but those are all small tables so there won't be much wasted space).\r\n\r\nAdditionally, the tree could be pre-allocated with some reasonable initial size (256 or whatever the size of a typical huffman table ends up being).\r\n\r\nTo implement that, huffman_code would have to carry an additional info (number of nodes allocated and not used in addition to current numentries which is number of nodes allocated and used).\r\n\r\nAlso, looking at the code, I don't quite get why in add_value() after:\r\n\r\n      if ((repeatnode = new_node(code)) &lt; 0) {\r\n        archive_set_error(&amp;a-&gt;archive, ENOMEM,\r\n                          &quot;Unable to allocate memory for node data.&quot;);\r\n        return (ARCHIVE_FATAL);\r\n      }\r\n      if ((nextnode = new_node(code)) &lt; 0) {\r\n        archive_set_error(&amp;a-&gt;archive, ENOMEM,\r\n                          &quot;Unable to allocate memory for node data.&quot;);\r\n        return (ARCHIVE_FATAL);\r\n      }\r\n\r\nthere is no corresponding increase of code-&gt;numentries. It seems that the safest place to maintain correct numentries would be inside new_node()\r\n\r\nGranted, in my test document I've never hit that code path, which is strange, but it does seem that if it is hit, then it would lead to memory corruption and potentially incorrect decoding. \r\n\r\nIt's possible I'm not understanding the code and it's perfectly fine.\r\n",
            "published" : "2014-06-22T04:22:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kkowalczyk",
              "htmlLink" : "https://code.google.com/u/kkowalczyk@gmail.com/"
            },
            "content" : "A possible implementation that seems to work properly with the one document I've tested it with:\r\n\r\nIndex: ext/libarchive/archive_read_support_format_rar.c\r\n===================================================================\r\n--- ext/libarchive/archive_read_support_format_rar.c\t(revision 9099)\r\n+++ ext/libarchive/archive_read_support_format_rar.c\t(working copy)\r\n@@ -186,6 +186,7 @@\r\n {\r\n   struct huffman_tree_node *tree;\r\n   int numentries;\r\n+  int numallocatedentries;\r\n   int minlength;\r\n   int maxlength;\r\n   int tablesize;\r\n@@ -2351,14 +2352,16 @@\r\n {\r\n   int i, j, codebits = 0, symbolsleft = numsymbols;\r\n \r\n+  code->numentries = 0;\r\n+  code->numallocatedentries = 0;\r\n   if (new_node(code) < 0) {\r\n     archive_set_error(&a->archive, ENOMEM,\r\n                       \"Unable to allocate memory for node data.\");\r\n     return (ARCHIVE_FATAL);\r\n   }\r\n-  code->numentries = 1;\r\n   code->minlength = INT_MAX;\r\n   code->maxlength = INT_MIN;\r\n+  code->numentries = 1;\r\n   codebits = 0;\r\n   for(i = 1; i <= maxlength; i++)\r\n   {\r\n@@ -2479,11 +2482,17 @@\r\n new_node(struct huffman_code *code)\r\n {\r\n   void *new_tree;\r\n-\r\n-  new_tree = realloc(code->tree, (code->numentries + 1) * sizeof(*code->tree));\r\n-  if (new_tree == NULL)\r\n-    return (-1);\r\n-  code->tree = (struct huffman_tree_node *)new_tree;\r\n+  if (code->numallocatedentries == code->numentries) {\r\n+    int new_num_entries = 256;\r\n+    if (code->numentries > 0) {\r\n+        new_num_entries = code->numentries * 2;\r\n+    }\r\n+    new_tree = realloc(code->tree, new_num_entries * sizeof(*code->tree));\r\n+    if (new_tree == NULL)\r\n+        return (-1);\r\n+    code->tree = (struct huffman_tree_node *)new_tree;\r\n+    code->numallocatedentries = new_num_entries;\r\n+  }\r\n   code->tree[code->numentries].branches[0] = -1;\r\n   code->tree[code->numentries].branches[1] = -2;\r\n   return 1;\r\n\r\n",
            "published" : "2014-06-22T04:58:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Your patch looks good.  Please attach it as a separate patch file so I can be sure I apply it correctly.\r\n\r\n",
            "published" : "2014-06-22T18:47:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kkowalczyk",
              "htmlLink" : "https://code.google.com/u/kkowalczyk@gmail.com/"
            },
            "content" : "I've created a pull request with this change: https://github.com/libarchive/libarchive/pull/83",
            "published" : "2014-06-23T02:39:46.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the patch.  Sorry for the long wait.\r\n",
            "published" : "2015-01-22T04:29:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 371,
        "title" : "Problem extracting zip file. Files filled with garbage characters",
        "summary" : "Problem extracting zip file. Files filled with garbage characters",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "C.Reimer1993",
          "htmlLink" : "https://code.google.com/u/113263250361158355127/"
        },
        "updated" : "2014-07-03T16:42:39.000Z",
        "published" : "2014-06-27T20:50:39.000Z",
        "closed" : "2014-07-03T16:42:39.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "C.Reimer1993",
              "htmlLink" : "https://code.google.com/u/113263250361158355127/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. wget -O oscam.zip http://www.streamboard.tv/oscam/changeset/9779?format=zip&amp;new=9779\r\n2. bsdtar -xf oscam.zip\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nExpected output is working source code\r\nInstead there are files with the right size but they are filled with garbage data. (File attached)\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nArch Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure --&gt; https://projects.archlinux.org/svntogit/packages.git/tree/trunk/PKGBUILD?h=packages/libarchive\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc (GCC) 4.9.0 20140604\r\n\r\n",
            "published" : "2014-06-27T20:50:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3710000000",
              "fileName" : "module-gbox.c",
              "fileSize" : 60017,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "C.Reimer1993",
              "htmlLink" : "https://code.google.com/u/113263250361158355127/"
            },
            "content" : "I forgot to mention:\r\n\r\ncat oscam.zip | bsdtar -xf -\r\nis working",
            "published" : "2014-06-27T20:52:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I am not able to reproduce this with the current git master.\r\n\r\nCould you please try again with the most recent code from github.com/libarchive/libarchive and let us know if that shows the same problem for you?\r\n\r\nThanks for the report.\r\n",
            "published" : "2014-06-28T20:31:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "C.Reimer1993",
              "htmlLink" : "https://code.google.com/u/113263250361158355127/"
            },
            "content" : "Thanks. It's fixed with the current git master.",
            "published" : "2014-07-03T13:49:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "C.Reimer1993",
              "htmlLink" : "https://code.google.com/u/113263250361158355127/"
            },
            "content" : "To be more precisely. It's fixed since commit 5422a51ff294c58173338073ea400e71935350bb",
            "published" : "2014-07-03T14:15:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Closing this as \"Fixed\".\r\n",
            "published" : "2014-07-03T16:42:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 372,
        "title" : "Support for Zip \"Data Descriptor\"",
        "summary" : "Support for Zip \"Data Descriptor\"",
        "stars" : 1,
        "starred" : false,
        "status" : "NotABug",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "jameshdoherty",
          "htmlLink" : "https://code.google.com/u/104742716023177980900/"
        },
        "updated" : "2014-11-13T02:16:59.000Z",
        "published" : "2014-08-18T16:04:45.000Z",
        "closed" : "2014-11-13T02:16:59.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "jameshdoherty",
              "htmlLink" : "https://code.google.com/u/104742716023177980900/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.Open a zip file created with the current tree and compare against a file made with the 3.1.2 release (I used a hex editor to open both files)\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI noticed that support for the Zip file data descriptor is no longer included (as defined by section 4.3.9 of the PkWare appnote version 6.3.3).\r\n\r\n<b>What version are you using?</b>\ncurrent master release\r\n\r\n<b>On what operating system?</b>\nwindows\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 2013\r\n\r\n<b>Please provide any additional information below.</b>\nThe signature (0x08074B50) defined by the appnote no longer gets written.\r\n\r\nCan you describe the reasoning for removing this support or was this just an oversight? ",
            "published" : "2014-08-18T16:04:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Can you please attach a (preferably small) Zip file created with current libarchive that you believe is incorrect?\r\n\r\nThat will make it easier to discuss.\r\n\r\nI am also curious what promoted you to look into this:   Are you reading these zip files with software that expects to see a data descriptor?\r\n\r\n",
            "published" : "2014-08-18T23:44:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm going to close this issue, since I believe the new behavior is correct:  Zip file data descriptors are only required in certain cases (specifically, when the writer does not know the compressed size in advance and is unable to seek back to the beginning of the entry to fill in the size later).\r\n\r\nThe earlier code was sloppy and included Data Descriptors in more cases than necessary.\r\n\r\nAgain, if you believe this is a bug, please include a Zip file that you believe is incorrect; that will make it easier to analyze and correct any problems in the new code.\r\n",
            "published" : "2014-11-13T02:16:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "NotABug"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 373,
        "title" : "-s doesn't support escaped '/'",
        "summary" : "-s doesn't support escaped '/'",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "yaneurabeya",
          "htmlLink" : "https://code.google.com/u/109969248563021388154/"
        },
        "updated" : "2014-08-19T01:57:01.000Z",
        "published" : "2014-08-19T01:49:31.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "yaneurabeya",
              "htmlLink" : "https://code.google.com/u/109969248563021388154/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n1. mkdir a\r\n2. touch a/b\r\n3. tar -s '/^/c\\//' -cpvf - a/ &gt; /dev/null\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI expect to see something like this:\r\n\r\na c/a\r\na c/a/b\r\n\r\nInstead I get an error:\r\n\r\ntar -s '/^/c\\//' -cpvf - a/ &gt; /dev/null\r\ntar: Invalid replacement flag /\r\n\r\n<b>What version are you using?</b>\n\r\n$ tar --version\r\nbsdtar 3.1.2 - libarchive 3.1.2\r\n\r\n<b>On what operating system?</b>\n\r\n$ uname -a\r\nFreeBSD freebsd-11-x64.localdomain 11.0-CURRENT FreeBSD 11.0-CURRENT #10 r269317+78cba4b(isilon-atf): Wed Aug 13 21:46:54 PDT 2014     root@freebsd-11-x64.localdomain:/usr/obj/usr/src/sys/GENERIC-DEBUG  amd64\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nComes with FreeBSD :).\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nThis was based off of FreeBSD @ r269317 -- I haven't modified libarchive yet.\r\n\r\n<b>Please provide any additional information below.</b>",
            "published" : "2014-08-19T01:49:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "yaneurabeya",
              "htmlLink" : "https://code.google.com/u/109969248563021388154/"
            },
            "content" : "Ah, cool. I can use other delimiters too (didn't realize that until I read the NetBSD tar manpage: http://netbsd.gw.com/cgi-bin/man-cgi?tar++NetBSD-current ):\r\n\r\n$ tar -s ',^,c/,' -cpvf - a/ > /dev/null\r\na c/a\r\na c/a/b\r\n",
            "published" : "2014-08-19T01:57:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 374,
        "title" : "bsdtar returns EXDEV when trying to extract hardlinks",
        "summary" : "bsdtar returns EXDEV when trying to extract hardlinks",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "Elsukov.Andrey",
          "htmlLink" : "https://code.google.com/u/101702990556062271959/"
        },
        "updated" : "2014-08-26T10:59:17.000Z",
        "published" : "2014-08-26T10:59:17.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "Elsukov.Andrey",
              "htmlLink" : "https://code.google.com/u/101702990556062271959/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. You need to have several filesystems mounted and tar archive with hardlinks.\r\nFor example:\r\n/ - root filesystem\r\n/home/user - user's filesystem\r\n\r\ntar archive has hardlinks (you can use this one http://people.freebsd.org/~ae/freebsd9-rescue-20140326.txz )\r\n2. cd /home/user\r\n3. tar -xf freebsd9-rescue-20140326.txz\r\n\r\nWhat is the expected output? \r\n\r\nA number of files extracted to the current directory\r\n\r\nWhat do you see instead?\r\n\r\ntar -xf freebsd9-rescue-20140326.txz \r\ntar: Removing leading '/' from member names\r\nrescue/atacontrol: Can't create 'rescue/atacontrol'\r\nrescue/atmconfig: Can't create 'rescue/atmconfig'\r\nrescue/badsect: Can't create 'rescue/badsect'\r\n...\r\n\r\n\r\n<b>What version are you using?</b>\n\r\nbsdtar 3.1.2 - libarchive 3.1.2\r\n\r\n<b>On what operating system?</b>\n\r\nFreeBSD 11.0\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\nFrom the base system\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\nFreeBSD clang version 3.4.1 (tags/RELEASE_34/dot1-final 208032) 20140512\r\nTarget: x86_64-unknown-freebsd11.0\r\nThread model: posix\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThe bug is in the edit_pathname() function from util.c. It doesn't delete leading slashes from hardlinks, thus tar tries to extract hardlinks to another file system.",
            "published" : "2014-08-26T10:59:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3740000000",
              "fileName" : "tar.diff",
              "fileSize" : 1783,
              "mimetype" : "application/octet-stream"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 375,
        "title" : "failure to read some larger .7z archives",
        "summary" : "failure to read some larger .7z archives",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "PaulThiessen88",
          "htmlLink" : "https://code.google.com/u/114508415780929279379/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "ggcueroad",
          "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
        },
        "updated" : "2014-09-03T21:19:12.000Z",
        "published" : "2014-08-27T21:25:00.000Z",
        "closed" : "2014-08-31T12:06:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "PaulThiessen88",
              "htmlLink" : "https://code.google.com/u/114508415780929279379/"
            },
            "content" : "I notice that the library fails to read some large .7z archives that I have. My code works fine on smaller samples. And the 7z app (on linux) and pylzma both work with these large files.\r\n\r\nMy code is simple, like:\r\n\r\n    struct archive *a = archive_read_new();\r\n    archive_read_support_filter_lzma(a);\r\n    archive_read_support_format_7zip(a);\r\n    archive_read_support_format_zip(a);\r\n    //archive_read_set_seek_callback(a, my_seek_callback);\r\n    int r = archive_read_open_filename(a, filename.c_str(), 640000);\r\n    if (r != ARCHIVE_OK)\r\n        ERRORTHROW(&quot;Unable to open archive&quot;);\r\n    struct archive_entry *entry;\r\n    unsigned int n = 0;\r\n    while ((r = archive_read_next_header(a, &amp;entry)) == ARCHIVE_OK) {\r\n\r\n        string blobname = archive_entry_pathname(entry);\r\n        INFOMSG(&quot;Reading file &quot; &lt;&lt; (n + 1) &lt;&lt; &quot;: &quot; &lt;&lt; blobname);\r\n\r\n         // do stuff with the blob...\r\n\r\n    }\r\n    if (r != ARCHIVE_EOF)\r\n        ERRORMSG(&quot;Archive error &quot; &lt;&lt; r &lt;&lt; &quot;: &quot; &lt;&lt; archive_error_string(a));        \r\n    archive_read_free(a);\r\n    INFOMSG(&quot;Number of files read: &quot; &lt;&lt; n);\r\n\r\n\r\n\r\nThis produces\r\n\r\n08/27/14 17:17:25 Error: Archive error -30: Damaged 7-Zip archive\r\n08/27/14 17:17:25 Info: Number of files read: 0\r\n\r\nI am using libarchive and xz both from current git master archives (that is, the very latest code), though I've tried the latest stable releases of both as well; same deal. I'm on 64bit linux, CentOS 6.5, GCC 4.8.1.\r\n\r\nAny ideas? I can pass on the sample file somehow if you like, it's just way too big (~200MB) to attach here.\r\n",
            "published" : "2014-08-27T21:25:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "I need the sample file to investigate this issue.\r\nCan I have it ?\r\n",
            "published" : "2014-08-29T15:23:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "PaulThiessen88",
              "htmlLink" : "https://code.google.com/u/114508415780929279379/"
            },
            "content" : "Ok, try these, let me know if for some reason you can't get the files...\r\n\r\nhttps://www.dropbox.com/s/jmtq9rdyq8um1fl/1976-2013_USPTOgrants_CML.7z?dl=0\r\n\r\nhttps://www.dropbox.com/s/jdwn0sdrfedj3t1/2001-2013_USPTOapplications_CML.7z?dl=0\r\n\r\n",
            "published" : "2014-08-29T15:48:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "Thanks for the sample files.\r\nThe problem was there were so many entries in the sample files.\r\nI implemented some limitation check in 7-zip reader to prevent\r\nreading intentional corrupted files, and it made the error.\r\nSo, I increased the limitation of entry files up to 100000000.\r\n\r\nI believe I fixed this issue with your sample files.\r\nCloud you pull the latest changes and let me know where it works or not?",
            "published" : "2014-08-31T12:06:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Verified",
              "owner" : "ggcueroad"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "PaulThiessen88",
              "htmlLink" : "https://code.google.com/u/114508415780929279379/"
            },
            "content" : "Indeed, it works fine now. Thanks a lot!\r\n",
            "published" : "2014-09-02T12:12:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "ggcueroad",
              "htmlLink" : "https://code.google.com/u/ggcueroad@gmail.com/"
            },
            "content" : "",
            "published" : "2014-09-03T21:19:12.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 376,
        "title" : "Cannot identify (and extract) Big5 filename",
        "summary" : "Cannot identify (and extract) Big5 filename",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "franklin@goodhorse.idv.tw",
          "htmlLink" : "https://code.google.com/u/104238699246909155543/"
        },
        "updated" : "2014-09-13T16:49:43.000Z",
        "published" : "2014-09-12T08:51:00.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "franklin@goodhorse.idv.tw",
              "htmlLink" : "https://code.google.com/u/104238699246909155543/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. call archive_entry_pathname_w with a zip file which contains big5 filename\r\n<b>2.</b>\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\nexpected: could identify and extract big5 filename correctly\r\nactual result: mbtowc would return fail and EILSEQ when meeting some big5 characters\r\n\r\narchive_wstring_append_from_mbs: p=***�ꤤ���D��/SteadyHand/Thumbs.db***\r\narchive_wstring_append_from_mbs: mbs=�(0xffffffb0)\r\narchive_wstring_append_from_mbs: mbtowc failed\r\narchive_wstring_append_from_mbs: is invalid char\r\narchive_wstring_append_from_mbs: mbs=�(0xffffffea)\r\narchive_wstring_append_from_mbs: mbs=�(0xffffffb2)\r\narchive_wstring_append_from_mbs: mbtowc failed\r\narchive_wstring_append_from_mbs: is invalid char\r\narchive_wstring_append_from_mbs: mbs=�(0xffffffd5)\r\narchive_wstring_append_from_mbs: mbtowc failed\r\narchive_wstring_append_from_mbs: is invalid char\r\n\r\nIn the above example, b0ea (國 in big5) b2d5 (組 in big5), 0xb0, 0xb2, 0xd5 was considered invalid while 0xea considered valid.\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc-4.8.2\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2014-09-12T08:51:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Could you provide us a (small) example archive that demonstrates this problem?\r\n\r\nWhat are your locale settings?\r\n\r\nIs this a custom program?  If so, are you calling setlocale()?  With what arguments?\r\n",
            "published" : "2014-09-13T16:49:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 377,
        "title" : "Libarchive considers stray pax extended headers a fatal error",
        "summary" : "Libarchive considers stray pax extended headers a fatal error",
        "stars" : 1,
        "starred" : false,
        "status" : "NotABug",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "sorengholm",
          "htmlLink" : "https://code.google.com/u/114284876813598961892/"
        },
        "updated" : "2014-09-25T15:49:15.000Z",
        "published" : "2014-09-19T11:24:21.000Z",
        "closed" : "2014-09-24T03:59:17.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sorengholm",
              "htmlLink" : "https://code.google.com/u/114284876813598961892/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Try to test the file using bsdtar testprogram &quot;bsdtar -t -f Norway2.dat&quot;\r\n2. Observe the error about currupted file.\r\n\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nI would have expected the operation to succeed.\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nUbuntu 14.10 64-bit\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nBoth pre-packaged and cmake build\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.9\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI've looked at the code and after outputting some debug information I find that the format of all files with one exception is &quot;tar (non-POSIX)&quot;\r\n\r\nThe exception is the last file which is detected to be in &quot;POSIX pax interchange format&quot;.\r\n\r\nAn important not here is that all file within the archive is extracted, the problem consist of libarchive returning ARCHIVE_EOF\r\n\r\n\r\n",
            "published" : "2014-09-19T11:24:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3770000000",
              "fileName" : "Norway2.dat",
              "fileSize" : 4164608,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sorengholm",
              "htmlLink" : "https://code.google.com/u/114284876813598961892/"
            },
            "content" : "Well ... actually the problem is that tar_read_header returns ARCHIVE_FATAL, not ARCHIVE_EOF",
            "published" : "2014-09-19T11:45:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The \"changing format\" is actually quite common, especially for tar archives.  Libarchive only knows certain extensions are being used when it sees those extensions, and tar archives often use different extensions for different files (because those extensions carry information that is not needed for some files).  This is not a problem.\r\n\r\nLibarchive is returning ARCHIVE_FATAL near the end of the archive because there is garbage data at the end of the archive.  Specifically, there are pax extension headers at the end of the archive that should not appear there; pax extension headers can only appear just before the associated file.\r\n\r\nI would guess that this archive was originally created by a tar program that supported pax extensions, then unarchived and rearchived by a program that did not support these extensions.\r\n\r\nI think bsdtar is behaving correctly:  It sees and extracts the files without inspecting pax extension information because that information is not where it should be, then fails with an error when it sees that information in the wrong place.  In this case, the error indicates that the previous files may not have been correctly restored as the misplaced extension headers contain file attributes that were not available when the files were restored.\r\n\r\nIf you have other files that you believe bsdtar is handling incorrectly, please let us know.\r\n",
            "published" : "2014-09-24T03:59:17.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "NotABug"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sorengholm",
              "htmlLink" : "https://code.google.com/u/114284876813598961892/"
            },
            "content" : "Well I do think libarchive should return a different error code in this case. Fact is that GNU tar extracts the file with no errors, so I'd guess libarchive should do so too. Maybe degrading the issue to a warning?\r\n\r\nI think libarchive is great and I started using it to replace calls like system(\"tar xfz file\"). But when the library gives me a fatal error on a file that regular tar would accept without issue it sort of makes me sad ;(\r\n\r\nAnyway - I acknowledge that the file is somehow damaged or created wrong and I'll investigate why.",
            "published" : "2014-09-24T07:13:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've changed the title of this bug to reflect what I believe is really happening.\r\n\r\nPlease try the attached patch to see if it changes the behavior you're seeing.  This is entirely untested.\r\n\r\nNote:  I'm still not convinced that this behavior should change, but I'm thinking about it.\r\n",
            "published" : "2014-09-24T13:44:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Libarchive considers stray pax extended headers a fatal error"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3770004000",
              "fileName" : "ignore-stray-pax-extensions.patch",
              "fileSize" : 639,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "sorengholm",
              "htmlLink" : "https://code.google.com/u/114284876813598961892/"
            },
            "content" : "Works great. archive_read_next_header now return ARCHIVE_EOF instead of ARCHIVE_FATAL when using it to traverse the file.\r\n\r\nFor completeness my code looks like this. I assume it's the correct way to do it event though I've seen other ways to use libarchive.\r\n\r\n\r\n\twhile ((retval = archive_read_next_header(a, &entry)) == ARCHIVE_OK) {\r\n\t\tarchive_read_extract(a, entry, ARCHIVE_EXTRACT_TIME);\r\n\t}",
            "published" : "2014-09-24T21:23:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Your code is fine if you don't expect there to be any errors.  But it doesn't handle cases where libarchive might have troubles with a single entry.  The libarchive Wiki has an \"Examples\" page illustrating how to use the library.  In particular, there is an example extractor that shows how to handle a variety of errors:\r\n\r\nhttps://github.com/libarchive/libarchive/wiki/Examples#A_Complete_Extractor\r\n\r\nThat example uses archive_write_disk directly instead of the higher-level archive_read_extract (which gives more room for customization but is otherwise pretty equivalent).  That example also lacks proper handling of ARCHIVE_RETRY (which is returned in a very few cases where libarchive wants to return an error without advancing the internal state).\r\n\r\nIf you have more questions about effectively using libarchive, you should ask on the libarchive-discuss mailing list on Google groups.",
            "published" : "2014-09-25T15:49:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 378,
        "title" : "segmentation fault when writing iso9660 image",
        "summary" : "segmentation fault when writing iso9660 image",
        "stars" : 1,
        "starred" : false,
        "status" : "Started",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "vegnet",
          "htmlLink" : "https://code.google.com/u/106912434255008507354/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2014-09-29T10:59:08.000Z",
        "published" : "2014-09-25T16:32:58.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vegnet",
              "htmlLink" : "https://code.google.com/u/106912434255008507354/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\nIt's pretty difficult to reproduce. I've observed seg faults during the copy of an iso9660 image. Equivalent test code is something like:\r\n\r\n#include &lt;archive.h&gt;\r\n#include &lt;archive_entry.h&gt;\r\n\r\nint stuff() {\r\n    struct archive *in = NULL;\r\n    struct archive *out = NULL;\r\n    struct archive_entry *entry = NULL;\r\n    int r = 0;\r\n    char* data = NULL;\r\n    const int sizeBuffer = 10000000;\r\n\r\n    in = archive_read_new();\r\n    out = archive_write_new();\r\n    archive_read_support_format_iso9660(in);\r\n    archive_write_set_format_iso9660(out);\r\n\r\n    archive_write_set_options(out, &quot;boot-type=no-emulation,boot=boot/isolinux/isolinux.bin,boot-catalog=boot/isolinux/boot.cat,boot-load-size=4,boot-info-table&quot;);\r\n    data = (char*) malloc(sizeBuffer);\r\n\r\n    archive_read_open_filename(in, &quot;Core.iso&quot;, 10490);\r\n    archive_write_open_filename(out, &quot;test1.iso&quot;);\r\n\r\n    // copy cycle\r\n    while(archive_read_next_header(in, &amp;entry) == ARCHIVE_OK)\r\n    {\r\n            archive_write_header(out, entry);\r\n            r = archive_read_data(in, data, sizeBuffer);\r\n            if(r != archive_write_data(out, data, r))\r\n            {\r\n                break;\r\n            }\r\n    }\r\n\r\n    archive_write_close(out);\r\n    archive_read_close(in);\r\n    archive_write_finish(out);\r\n    archive_read_finish(in);\r\n    free(data);\r\n\r\n    return 0;\r\n}\r\n\r\nint main() {\r\n  while(1) {\r\n    stuff();\r\n  }\r\n  return 0;\r\n}\r\n \r\nHowever, it seems to be critically dependent on the length of the system temp path.\r\n\r\n<b>What version are you using?</b>\nlibarchive 3.1.2\r\n\r\n<b>On what operating system?</b>\nWindows/MinGW\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure/make\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nmingw/gcc4.8.2\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThe root cause in my case was some bad pointer arithmetic in __archive_mktemp:\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 7924.0x19f4]\r\n0x75379b6b in msvcrt!memcpy () from C:\\Windows\\syswow64\\msvcrt.dll\r\n(gdb) where\r\n#0  0x75379b6b in msvcrt!memcpy () from C:\\Windows\\syswow64\\msvcrt.dll\r\n#1  0x72ba2f40 in ?? () from C:\\Windows\\SysWOW64\\rsaenh.dll\r\n#2  0x72ba2e08 in ?? () from C:\\Windows\\SysWOW64\\rsaenh.dll\r\n#3  0x72ba4449 in RSAENH!CPGenRandom () from C:\\Windows\\SysWOW64\\rsaenh.dll\r\n#4  0x72bf4fb9 in CryptGenRandom () from C:\\Windows\\SysWOW64\\cryptsp.dll\r\n#5  0xfafc8614 in ?? ()\r\n#6  0x004427ef in __archive_mktemp (tmpdir=tmpdir@entry=0x0)\r\n    at libarchive/archive_util.c:300\r\n#7  0x00432ee3 in iso9660_write_header (a=0x16c37818, entry=0x16c1b1a0)\r\n    at libarchive/archive_write_set_format_iso9660.c:1620\r\n#8  0x0042980c in _archive_write_header (_a=0x16c37818, entry=0x16c1b1a0)\r\n    at libarchive/archive_write.c:640\r\n(gdb) up (x6)\r\n\r\n#6  0x004427ef in __archive_mktemp (tmpdir=tmpdir@entry=0x0)\r\n    at libarchive/archive_util.c:300\r\n300                     if (!CryptGenRandom(hProv, (DWORD)(ep - p)*sizeof(wchar_t),\r\n(gdb) print (ep -p)\r\n$2 = -16749434\r\n\r\nThe relevant pointer initialisers are:\r\n\t/*\r\n\t * Create a temporary file.\r\n\t */\r\n\tarchive_wstrcat(&amp;temp_name, L&quot;libarchive_&quot;);\r\n\txp = temp_name.s + archive_strlen(&amp;temp_name);\r\n\tarchive_wstrcat(&amp;temp_name, L&quot;XXXXXXXXXX&quot;);\r\n\tep = temp_name.s + archive_strlen(&amp;temp_name);\r\n\r\nThe problem is that archive_wstrcat can reallocate temp_name's buffer if it's not long enough and seemingly this does occasionally happen. The fix is relatively straightforward:\r\n\t/*\r\n\t * Create a temporary file.\r\n\t */\r\n\tconst wchar_t* suffix =  L&quot;XXXXXXXXXX&quot;;\r\n\tarchive_wstrcat(&amp;temp_name, L&quot;libarchive_&quot;);\r\n\tarchive_wstrcat(&amp;temp_name,suffix);\r\n\tep = temp_name.s + archive_strlen(&amp;temp_name);\r\n\txp = ep - wcslen(suffix);\r\n\r\n",
            "published" : "2014-09-25T16:32:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you for such a detailed bug report.\r\n\r\nI've made the changes you suggest at\r\n\r\nhttps://github.com/libarchive/libarchive/commit/c1732828cd802c26e18891c4c95f49c15819c985\r\n\r\nCould you please verify that this fixes the issue you've been seeing?\r\n",
            "published" : "2014-09-26T01:53:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "vegnet",
              "htmlLink" : "https://code.google.com/u/106912434255008507354/"
            },
            "content" : "Hi there,\r\n\r\nNo problem - it's the least I can do :-). Yes, a build based on this committal is working in my system here.\r\n\r\nThanks,\r\nAndy",
            "published" : "2014-09-29T10:59:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 379,
        "title" : "Reads inner Zip archive (not outer) when a Zip archive contains another",
        "summary" : "Reads inner Zip archive (not outer) when a Zip archive contains another",
        "stars" : 2,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "cmihail@chromium.org",
          "htmlLink" : "https://code.google.com/u/115824416624139140536/"
        },
        "owner" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "kientzle",
          "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
        },
        "updated" : "2015-01-04T07:53:23.000Z",
        "published" : "2014-09-25T23:11:33.000Z",
        "closed" : "2015-01-04T07:53:23.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cmihail@chromium.org",
              "htmlLink" : "https://code.google.com/u/115824416624139140536/"
            },
            "content" : "Using the latest libarchive from github I have stumbled upon a regression bug.\r\n\r\nThe attached archive is not processed correctly. It contains a small ZIP archive inside, and libarchive, instead of obtaining the metadata for archive.zip, it obtains the metadata for small.zip inside archive.zip.\r\n\r\nlibarchive 3.1.2 displays the correct metadata. I suppose this bug might be related to the introduction of zip64 as version 3.1.2 was not able to correctly parse zip64.\r\n\r\nI have to mention that, in other cases, where I had even 3 or 4 ZIP archives inside another ZIP archive, the metadata was correctly obtained.\r\n\r\nThanks,\r\nMihail",
            "published" : "2014-09-25T23:11:33.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3790000000",
              "fileName" : "archive.zip",
              "fileSize" : 576,
              "mimetype" : "application/zip"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you for the detailed report and the example archive.  I've managed to reproduce your results, I believe I know why it's happening, and I expect to have a fix shortly.\r\n\r\nYour example archive will be used to build several new tests for libarchive to verify that this behavior remains fixed in the future.\r\n\r\nExplanation:  When reading a Zip archive via the seeking strategy, libarchive looks first for the end-of-central-directory (EOCD) marker.  It does this by reading a block from the end of the archive and scanning for that marker.  If the inner archive appears late enough, this scan will detect the EOCD for the inner archive and use that.\r\n\r\nI believe this can be easily fixed:  We need to change the EOCD scan to look for additional EOCD markers instead of stopping at the first one it finds.\r\n\r\nThis bug was probably introduced last year when the Zip reading code was overhauled.  In particular, the logic used to locate the EOCD marker was changed in order to handle both regular EOCD markers and Zip64 EOCD markers.\r\n",
            "published" : "2015-01-04T03:42:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Reads inner Zip archive (not outer) when a Zip archive contains another",
              "status" : "Accepted"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2015-01-04T03:42:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "owner" : "kientzle"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is fixed in libarchive master 94bab9f9350b2101a58b9e0402c9ef23f7d71fbb\r\n\r\nThank you again for the detailed error report, and please let us know if you find any other problems.\r\n",
            "published" : "2015-01-04T07:53:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 380,
        "title" : "Errors during RUN_TESTS > vc++ 2008 > ver.3.1.2",
        "summary" : "Errors during RUN_TESTS > vc++ 2008 > ver.3.1.2",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "redeev38",
          "htmlLink" : "https://code.google.com/u/109869982831535571677/"
        },
        "updated" : "2014-10-28T15:09:56.000Z",
        "published" : "2014-10-26T17:03:01.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "redeev38",
              "htmlLink" : "https://code.google.com/u/109869982831535571677/"
            },
            "content" : "&gt;&gt;",
            "published" : "2014-10-26T17:03:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3800000000",
              "fileName" : "2014-10-26_183155.jpg",
              "fileSize" : 58202,
              "mimetype" : "image/jpeg"
            }, {
              "attachmentId" : "3800000001",
              "fileName" : "2014-10-26_183232.jpg",
              "fileSize" : 52400,
              "mimetype" : "image/jpeg"
            }, {
              "attachmentId" : "3800000002",
              "fileName" : "2014-10-26_183318.jpg",
              "fileSize" : 60757,
              "mimetype" : "image/jpeg"
            }, {
              "attachmentId" : "3800000003",
              "fileName" : "2014-10-26_183358.jpg",
              "fileSize" : 31831,
              "mimetype" : "image/jpeg"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "To diagnose this, please post the log files generated by the tests.\r\n\r\nThe very end of the test prints out the full path to these log files.\r\n",
            "published" : "2014-10-28T03:55:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "redeev38",
              "htmlLink" : "https://code.google.com/u/109869982831535571677/"
            },
            "content" : "When I make alone archive / archive_static / ALL_BUILD its ok - all done without errors.\r\nBut when I do RUN_TESTS - always Err (Debug / Release).\r\n>> WinXP, Visual Express C++ 2008\r\n>> at end of logs U can see path 2 directory\r\n\r\nWrong tests >>\r\nTest #190 / Test #228 / Test #255\r\n\r\n",
            "published" : "2014-10-28T15:09:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3800002000",
              "fileName" : "BuildLog_d.htm",
              "fileSize" : 136924,
              "mimetype" : "text/html"
            }, {
              "attachmentId" : "3800002001",
              "fileName" : "BuildLog_r.htm",
              "fileSize" : 136936,
              "mimetype" : "text/html"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 381,
        "title" : "Add support for UTF-8 extra header in ZIP.",
        "summary" : "Add support for UTF-8 extra header in ZIP.",
        "stars" : 1,
        "starred" : false,
        "status" : "Started",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mtomasz@chromium.org",
          "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
        },
        "updated" : "2014-11-14T05:10:42.000Z",
        "published" : "2014-11-06T09:01:44.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 11,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Create files with characters some language specific characters such as ö, ä, å on a Windows machine.\r\n2. Compress them to ZIP using the Windows default packer.\r\n3. Try to uncompress with libarchive.\r\n\r\nWhat is the expected output?\r\nCorrect file names.\r\n\r\nWhat do you see instead?\r\nWrong characters in the file name.\r\n\r\n<b>What version are you using?</b>\nToT, also stable. Both fail.\r\n\r\n<b>On what operating system?</b>\nLinux / Chrome OS.\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nNaCL ports.\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI investigated the code, and it seems that libarchive handles UTF-8 file names in ZIP as long as they are used in the primary file path field in ZIP.\r\n\r\nHowever, it seems that on Windows, the primary header uses the OEM encoding (on Windows depending on the language), but UTF-8 is saved in the special extra header with 0x7075 id.",
            "published" : "2014-11-06T09:01:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "I'll be happy to add support for it, if you are interested in accepting the patch.",
            "published" : "2014-11-06T09:02:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This sounds like a very good idea.\r\n\r\nPlease send us a pull request on github with your patches.\r\n\r\nOn a related note, I believe the Info-Zip maintainers are considering writing UTF-8 in the primary header when they create archives; I wonder if libarchive should do the same?\r\n",
            "published" : "2014-11-07T01:43:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "I can add read support, as that's what I need now. Are you OK to merge only read support for the header?",
            "published" : "2014-11-07T01:49:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "A patch for only read support would be welcome.\r\n",
            "published" : "2014-11-07T01:55:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "I created a pull request at:\r\nhttps://github.com/libarchive/libarchive/pull/93",
            "published" : "2014-11-10T07:34:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "Hi guys. It would be great if we could merge this patch quickly, as it's blocking crbug.com/429987. Thank you.",
            "published" : "2014-11-13T01:28:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thanks for the reminder.\r\n\r\nCould you please provide a small example archive that tickles the problem so I can add it to the test suite?  We want to make sure this feature doesn't get broken with future changes.\r\n\r\n",
            "published" : "2014-11-13T02:09:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "@kientzle: I think the one attached to crbug.com/429987 should be perfect.\r\n\r\nhttps://chromium.googlecode.com/issues/attachment?aid=4299870003001&name=Test+-+created+with+winrar+5.20.zip&token=ABZ6GAfKW7ci14bKEDFt6VZ0hDZNKHVjOg%3A1415844752176",
            "published" : "2014-11-13T02:14:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Hmmm...  I built a simple test around the first of the sample Zip archives attached to that bug and your patch seems to make no difference at all.\r\n\r\nLooking more carefully, that file does not actually use the 0x7075 extension.  I haven't disassembled the file in any detail, but the filenames are certainly not UTF-8 and I don't see anything obvious pointing out what encoding those filenames are using.\r\n\r\nI switched to the second file (the one created with WinRar).  That one does seem to use the 0x7075 extension, but it's still not working for me on MacOS; what platform(s) have you tried it on?  I won't have time to dig any further until next week.\r\n\r\n\r\n",
            "published" : "2014-11-14T05:06:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Started"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "@kientzle: Sorry, I must have attached the incorrect file. Did you set the default locale to UTF-8 in the code using libarchive? Eg. setlocale(LC_ALL, \"en_US.UTF-8\")?\r\n\r\nI tried on Linux, and it worked fine.",
            "published" : "2014-11-14T05:10:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 382,
        "title" : "wchart_t type not recognized in archive_util.c using Visual Studio 2010 pro",
        "summary" : "wchart_t type not recognized in archive_util.c using Visual Studio 2010 pro",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "cbaptist1",
          "htmlLink" : "https://code.google.com/u/114877339413524800489/"
        },
        "updated" : "2014-11-16T01:21:02.000Z",
        "published" : "2014-11-12T13:26:00.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cbaptist1",
              "htmlLink" : "https://code.google.com/u/114877339413524800489/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.Configured and generated current libarchive master (don't see version) with Cmake\r\n2.Build with Visual Studio\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\nI see 3&gt;..\\..\\libarchive\\archive_util.c(334): error C2143: syntax error : missing ';' before 'const'\r\nThe code is const wchar_t *suffix = L&quot;XXXXXXXXXX&quot;;\r\nso this appears to be an error recognizing const wchar_t* as a valid type.\r\n\r\n<b>What version are you using?</b>\nMS Visual Studio 2010 Pro\r\n\r\n<b>On what operating system?</b>\nWindows 7 Ultimate service pack 1\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2014-11-12T13:26:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "wchar_t is used earlier in that same file, so I don't think this is an issue with wchar_t.\r\n\r\nThe message points to a problem *before* that line, but I don't see anything in my copy that might explain this error.\r\n\r\nPlease try updating your source and trying again.  If you still see the same error, try commenting out some of the preceding lines to narrow down the issue (commenting out the lines will break the function, but hopefully it will tell us what the compiler is really complaining about).",
            "published" : "2014-11-12T16:45:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cbaptist1",
              "htmlLink" : "https://code.google.com/u/114877339413524800489/"
            },
            "content" : "It appears that I get the error if any lines in that function (__archive_mktemp) starting with\r\nhProv = (HCRYPTPROV)NULL;\r\nand before the error at 334 are uncommented\r\nFor example, if only\r\nfd = -1; \r\nis uncommented I get the same error.",
            "published" : "2014-11-12T17:31:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cbaptist1",
              "htmlLink" : "https://code.google.com/u/114877339413524800489/"
            },
            "content" : "Hi,\r\n\r\nI think I resolved this.  Some switch must be set for the compiler that causes all declarations to need to be at the beginning of the function.  When I moved \r\nconst wchar_t* suffix=...\r\nto the line after \r\nint fd;\r\nthe code builds properly",
            "published" : "2014-11-13T14:03:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you!  That makes perfect sense.  I remember hearing that VS doesn't fully support C99 by default; allowing declarations to be mixed with code is a C99 feature.\r\n\r\nWe can easily move that declaration to the top of the function.\r\n",
            "published" : "2014-11-13T16:13:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tim@kientzle.com",
              "htmlLink" : "https://code.google.com/u/111480963336027327802/"
            },
            "content" : "I believe this is fixed in github master.\r\n\r\nPlease try and let us know.\r\n",
            "published" : "2014-11-16T01:21:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 383,
        "title" : "Add support to reading headers from beginning (archive_read_rewind).",
        "summary" : "Add support to reading headers from beginning (archive_read_rewind).",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "mtomasz@chromium.org",
          "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
        },
        "updated" : "2015-01-13T05:18:23.000Z",
        "published" : "2014-11-14T05:19:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "Loading a large archive with like 10000+ files is slow, and takes couple of seconds. For such huge archives, random access to files would be great, eg. if the libarchive is used to *mount* an archive file rather than decompress a single file.\r\n\r\nCurrently, in order to decompress one single file we have to open the archive. To open another file, which is unfortunately before the first file, we need to reopen the archive, which gives us extra couple of seconds, while it should take milliseconds.\r\n\r\nAccording\r\nhttps://github.com/libarchive/libarchive/wiki/WishList#Seek_in_archives this is a known issue. However, because of complexity I'd like to suggest a simplified approach. Instead of ability to randomly seek in the archive, I'd like to just rewind to the first header by introducing:\r\n\r\narchive_read_rewind().\r\n\r\nCalling it would rewind to the first header, without need to open the archive. This would give a huge performance improvement at least in case of a seekable ZIP format and any other format which caches headers. It should be very easy to implement.",
            "published" : "2014-11-14T05:19:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "mtomasz@chromium.org",
              "htmlLink" : "https://code.google.com/u/mtomasz@chromium.org/"
            },
            "content" : "@kientzle: What do you think about it? I'm happy to implement it, but I need to know quickly if we can go this way. Thanks.",
            "published" : "2014-11-14T05:20:19.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2015-01-13T05:18:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 384,
        "title" : "Issue with crashes on archive_write_open_filename_w.",
        "summary" : "Issue with crashes on archive_write_open_filename_w.",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "steel.bolivar.dev",
          "htmlLink" : "https://code.google.com/u/117450652698407846308/"
        },
        "updated" : "2014-11-16T01:25:32.000Z",
        "published" : "2014-11-14T12:55:30.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "steel.bolivar.dev",
              "htmlLink" : "https://code.google.com/u/117450652698407846308/"
            },
            "content" : "libarchive 3.1.2, Windows 7+, MSVS2013\r\n\r\n1. Call archive_write_open_filename_w with name of file that exists in directory  protecting from write operations.\r\n2. Have a nice crash.\r\n\r\nTake a look at fix that was provided by our developer:\r\n\r\nstatic int\r\nfile_close(struct archive *a, void *client_data)\r\n{\r\n       struct write_file_data     *mine = (struct write_file_data *)client_data;\r\n\r\n       (void)a; /* UNUSED */\r\n       if (!(mine-&gt;fd &lt; 0)) //! This line have been added.\r\n       {\r\n             close(mine-&gt;fd);\r\n       }\r\n       archive_mstring_clean(&amp;mine-&gt;filename);\r\n       free(mine);\r\n       return (ARCHIVE_OK);\r\n}\r\n",
            "published" : "2014-11-14T12:55:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "steel.bolivar.dev",
              "htmlLink" : "https://code.google.com/u/117450652698407846308/"
            },
            "content" : "I made an incorrect description tho: I am talking about file archive_write_open_filename.c and function file_close.",
            "published" : "2014-11-14T12:56:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "steel.bolivar.dev",
              "htmlLink" : "https://code.google.com/u/117450652698407846308/"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "steel.bolivar.dev",
              "htmlLink" : "https://code.google.com/u/117450652698407846308/"
            },
            "content" : "I made an incorrect description tho: file 'archive_write_open_filename.c' and function 'file_close'",
            "published" : "2014-11-14T12:57:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is already fixed in github master.\r\n\r\nCould you please try that and let us know?\r\n",
            "published" : "2014-11-16T01:25:32.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 385,
        "title" : "Truncated tar archive issue with the archive_read_data method",
        "summary" : "Truncated tar archive issue with the archive_read_data method",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "christophe.carrere06",
          "htmlLink" : "https://code.google.com/u/103719874233774793995/"
        },
        "updated" : "2014-11-19T02:29:56.000Z",
        "published" : "2014-11-18T13:42:04.000Z",
        "closed" : "2014-11-19T02:29:56.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Try to read a zip file that is attached : test.zip. This file can be opened with 7-zip for instance\r\n\r\nexample of code :\r\n\r\nstruct archive *aArchivetest = archive_read_new();\r\narchive_read_support_compression_all(aArchivetest);\r\narchive_read_support_format_all(aArchivetest);\r\n\r\nif (archive_read_open_filename(aArchivetest, &quot;test.zip&quot;, 8192) !=\r\nARCHIVE_OK)\r\n{\r\n     archive_read_finish(aArchivetest);\r\n     // Error handling\r\n}\r\n\r\nif (ARCHIVE_OK==archive_read_next_header(aArchivetest, &amp;aArcEntry))\r\n{\r\n     unsigned int aUnzipBlobSize=3000;  //Max value\r\n     char aUnzipBlob[3000];\r\n\r\n     long int  aUnzipSize= 0;\r\n     aUnzipSize= archive_read_data(aArchivetest, aUnzipBlob,\r\naUnzipBlobSize);\r\n      if (aUnzipSize&lt;0)\r\n      {\r\n        TRC_DBG(APP, &quot;archive_errno is : &quot; &lt;&lt;\r\narchive_errno(aArchivetest));\r\n        TRC_DBG(APP, &quot;archive_string is : &quot; &lt;&lt;\r\narchive_error_string(aArchivetest));\r\n      }\r\n}\r\nelse\r\n{\r\n      TRC_DBG(APP, &quot;archive_errno is : &quot; &lt;&lt;\r\narchive_errno(aArchivetest));\r\n     TRC_DBG(APP, &quot;archive_string is : &quot; &lt;&lt;\r\narchive_error_string(aArchivetest));\r\n\r\n}\r\n\r\n<b>What is the expected output? What do you see instead?</b>\narchive_read_data should return a positive nulmber, instead it return -30\r\narchive_errno is : -1\r\narchive_string is : Truncated tar archive\r\n \r\n\r\n<b>What version are you using?</b>\ncurrently 2.8.5 but I tried with 3.1.2 and I got the same issue\r\n\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc (GCC) 4.3.2\r\n\r\n<b>Please provide any additional information below.</b>\nNA",
            "published" : "2014-11-18T13:42:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3850000000",
              "fileName" : "test.zip",
              "fileSize" : 679,
              "mimetype" : "application/zip"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The current master seems to have no troubles with it.  Could you please try that and let us know?\r\n",
            "published" : "2014-11-19T02:29:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 386,
        "title" : "following Issue 385: Truncated tar archive issue with the archive_read_data method",
        "summary" : "following Issue 385: Truncated tar archive issue with the archive_read_data method",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "christophe.carrere06",
          "htmlLink" : "https://code.google.com/u/103719874233774793995/"
        },
        "updated" : "2014-11-26T17:27:10.000Z",
        "published" : "2014-11-19T13:36:09.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 11,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\nTry to read a zip file that is attached : test.zip. This file can be opened with 7-zip for instance\r\n\r\nHere is my code :\r\n\r\n//Begin\r\n\r\n      //Test to unzip direclty\r\n      std::string aFileTest= aRootLocalFileName + &quot;test.zip&quot;;\r\n      TRC_DBG(APP, &quot;TEST_CC aFileTest is:&quot; &lt;&lt; aFileTest);\r\n\r\n      //Debut\r\n      struct archive *aArchivetest ;\r\n      aArchivetest= archive_read_new();\r\n      //archive_read_support_compression_all(aArchivetest);\r\n      archive_read_support_format_all(aArchivetest);\r\n\r\n\r\n      if (archive_read_open_filename(aArchivetest, aFileTest.c_str(), 8192) != ARCHIVE_OK) {\r\n       TRC_DBG(APP, &quot;archive_read_open_filename KO&quot;);\r\n       TRC_DBG(APP, &quot;archive_errno is : &quot; &lt;&lt; archive_errno(aArchivetest));\r\n       TRC_DBG(APP, &quot;archive_string is : &quot; &lt;&lt; archive_error_string(aArchivetest));\r\n\r\n      }\r\n      else\r\n      {\r\n        TRC_DBG(APP, &quot;archive_read_open_filename OK&quot;);\r\n      }\r\n\r\n\r\n      struct archive_entry* aArcEntry;\r\n\r\n      if (ARCHIVE_OK==archive_read_next_header(aArchivetest, &amp;aArcEntry))\r\n      {\r\n\r\n          TRC_DBG(APP,&quot;archive_entry_pathname : &quot; &lt;&lt; archive_entry_pathname(aArcEntry));\r\n\r\n\r\n          long int  aUnzipSize= 0;\r\n          unsigned int aUnzipBlobSize=3000;  //Max value\r\n          char aUnzipBlob[3000];\r\n\r\n          TRC_DBG(APP, &quot;content of the archive is : &quot; &lt;&lt; aArchivetest);\r\n          aUnzipSize= archive_read_data(aArchivetest, aUnzipBlob, aUnzipBlobSize);\r\n          if (aUnzipSize&lt;0)\r\n          {\r\n            TRC_DBG(APP, &quot;archive_errno is : &quot; &lt;&lt; archive_errno(aArchivetest));\r\n            TRC_DBG(APP, &quot;archive_string is : &quot; &lt;&lt; archive_error_string(aArchivetest));\r\n          }\r\n          else\r\n          {\r\n            std::string aUzippedStr(aUnzipBlob,aUnzipSize);\r\n            TRC_DBG(APP, &quot;unzipped content is : &quot; &lt;&lt; aUzippedStr);\r\n          }\r\n\r\n     }\r\n      else\r\n      {\r\n        TRC_DBG(APP, &quot;archive_errno is : &quot; &lt;&lt; archive_errno(aArchivetest));\r\n       TRC_DBG(APP, &quot;archive_string is : &quot; &lt;&lt; archive_error_string(aArchivetest));\r\n      }\r\n\r\n//End\r\n\r\nResult with the test.zip file that is attached :\r\n\r\narchive_read_open_filename OK\r\narchive_entry_pathname : PK^C^D^T\r\narchive_errno is : -1\r\narchive_string is : Truncated tar archive\r\n\r\n\r\nNow if I take the test.zip file, I unzip it (Linux unzip command), I can see it contains : EventProperties file\r\nThen I zip it into a new test.zip file, I play again the code and I can see as a result :\r\n\r\narchive_read_open_filename OK\r\narchive_entry_pathname : EventProperties\r\ncontent of the archive is : 0x7f0668105f20\r\nunzipped content is : PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPFBheWxvYWQ+CjxQcm9ncmFtTmFtZT5hY2VpbnYxYjwvUHJvZ3JhbU5hbWU+CjxUZW1wbGF0ZU5hbWU+Y2MvY3VzdG9tX3RvdnphL3VrL3JwdC9hY2UvYWNlaW52MWIucnB0PC9UZW1wbGF0ZU5hbWU+CjxEb2NEYXRlPjIwMTQtMDgtMjI8L0RvY0RhdGU+CjxUeXBlPlNQPC9UeXBlPgo8TGFuZ0NkZT5VSzwvTGFuZ0NkZT4KPFByaW50ZXJOYW1lPjwvUHJpbnRlck5hbWU+CjxCYXRjaFByb2ZpbGU+SU5WT0lDRTwvQmF0Y2hQcm9maWxlPgo8T3V0cHV0UXVldWU+REVGQVVMVDwvT3V0cHV0UXVldWU+CjxPdXRwdXRDb3BpZXM+MTwvT3V0cHV0Q29waWVzPgo8UHJldmlld0NoZWNrQm94Pm5vdCBzZWxlY3RlZDwvUHJldmlld0NoZWNrQm94Pgo8QmF0Y2hDaGVja0JveD5zZWxlY3RlZDwvQmF0Y2hDaGVja0JveD4KPEZpbmFsUHJpbnRNZXRob2Q+YmF0Y2g8L0ZpbmFsUHJpbnRNZXRob2Q+CjxQREZOYW1lIFJlc3VsdD0iMDc2X2luXzM1MDgxNzhfZm91cmllZG9ub3Zhbl8wNzA5MjAxNF8yMjE0OTQyNi5wZGYiLz4KPFJldHVybmVkRmlsZXM+CjxGaWxlIFJlc3VsdD0iMDc2X2luXzM1MDgxNzhfZm91cmllZG9ub3Zhbl8wNzA5MjAxNF8yMjE0OTQyNi5wZGYiLz4KPC9SZXR1cm5lZEZpbGVzPgo8L1BheWxvYWQ+\r\n2\r\n\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n\r\n",
            "published" : "2014-11-19T13:36:09.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "",
            "published" : "2014-11-20T08:05:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3860001000",
              "fileName" : "test.zip",
              "fileSize" : 679,
              "mimetype" : "application/zip"
            } ]
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I tried your test.zip with github master and it seems to work fine.\r\n\r\nCould you please try with that version and let us know?\r\n",
            "published" : "2014-11-20T15:12:26.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "I took from http://www.libarchive.org/ the Stable release: libarchive-3.1.2.tar.gz\r\ncould you please show me which value do you have for :archive_entry_pathname \r\nwith my test.zip file ? ",
            "published" : "2014-11-20T15:54:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "by the way I tried to use the zip file here :\r\nhttps://github.com/libarchive/libarchive\r\n\r\nbut it didn't compile :\r\ncc1: warnings being treated as errors\r\nlibarchive/archive_write_set_format_warc.c: In function 'xstrftime':\r\nlibarchive/archive_write_set_format_warc.c:328: error: declaration of 'time' shadows a global declaration\r\n/usr/include/time.h:186: error: shadowed declaration is here\r\nmake[1]: *** [libarchive/archive_write_set_format_warc.lo] Error 1\r\nmake[1]: Leaving directory `/remote/users/ccarrere/dev/test/libarchive-master/libarchive-master'\r\nmake: *** [all] Error 2\r\n",
            "published" : "2014-11-21T08:04:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "Morever :\r\nhg clone https://github.com/libarchive/libarchive.git fails :\r\nabort: HTTP Error 406: Not Acceptable",
            "published" : "2014-11-21T10:27:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "Finally I used GitHub but I have a other problem :\r\n\r\nlibarchive% /bin/sh build/autogen.sh\r\n+ aclocal -I build/autoconf\r\nconfigure.ac:108: warning: AC_LANG_CONFTEST: no AC_LANG_SOURCE call detected in body\r\n../../lib/autoconf/lang.m4:193: AC_LANG_CONFTEST is expanded from...\r\n../../lib/autoconf/general.m4:2661: _AC_LINK_IFELSE is expanded from...\r\n../../lib/autoconf/general.m4:2678: AC_LINK_IFELSE is expanded from...\r\n/usr/share/aclocal/libtool.m4:1022: _LT_SYS_MODULE_PATH_AIX is expanded from...\r\n/usr/share/aclocal/libtool.m4:4158: _LT_LINKER_SHLIBS is expanded from...\r\n/usr/share/aclocal/libtool.m4:5233: _LT_LANG_C_CONFIG is expanded from...\r\n/usr/share/aclocal/libtool.m4:138: _LT_SETUP is expanded from...\r\n/usr/share/aclocal/libtool.m4:67: LT_INIT is expanded from...\r\n/usr/share/aclocal/libtool.m4:102: AC_PROG_LIBTOOL is expanded from...\r\nconfigure.ac:108: the top level\r\nconfigure.ac:108: warning: AC_LANG_CONFTEST: no AC_LANG_SOURCE call detected in body\r\n../../lib/autoconf/lang.m4:193: AC_LANG_CONFTEST is expanded from...\r\n../../lib/autoconf/general.m4:2661: _AC_LINK_IFELSE is expanded from...\r\n../../lib/autoconf/general.m4:2678: AC_LINK_IFELSE is expanded from...\r\n/usr/share/aclocal/libtool.m4:4158: _LT_LINKER_SHLIBS is expanded from...\r\n/usr/share/aclocal/libtool.m4:5233: _LT_LANG_C_CONFIG is expanded from...\r\n/usr/share/aclocal/libtool.m4:138: _LT_SETUP is expanded from...\r\n/usr/share/aclocal/libtool.m4:67: LT_INIT is expanded from...\r\n/usr/share/aclocal/libtool.m4:102: AC_PROG_LIBTOOL is expanded from...\r\nconfigure.ac:108: the top level\r\n+ case `uname` in\r\n++ uname\r\n+ libtoolize --automake -c\r\n.ibtoolize: AC_CONFIG_MACRO_DIR([build/autoconf]) conflicts with ACLOCAL_AMFLAGS=-I build/autoconf",
            "published" : "2014-11-21T10:57:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 7,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "no news to help me to solve my last issue to play \r\n/bin/sh build/autogen.sh\r\nwith no errors?\r\nI tried it to : 2.6.32.23-0.3-default GNU/Linux\r\n",
            "published" : "2014-11-24T16:38:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 8,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tim@kientzle.com",
              "htmlLink" : "https://code.google.com/u/111480963336027327802/"
            },
            "content" : "Please try using cmake; it tends to work a little more reliably.\r\n",
            "published" : "2014-11-24T19:12:43.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 9,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "Thanks for your advice, I will try it to compile.\r\nbut first I should run /bin/sh build/autogen.sh\r\n\r\nDo you think it will solve this issue?",
            "published" : "2014-11-25T09:05:56.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 10,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "christophe.carrere06",
              "htmlLink" : "https://code.google.com/u/103719874233774793995/"
            },
            "content" : "I am not able to compile or to make a lib from the master branch. Is it possible to have a zip file of the last version to test if it solves my initial issue?",
            "published" : "2014-11-26T17:27:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 387,
        "title" : "Can't build x64 with VS 10, windows 7",
        "summary" : "Can't build x64 with VS 10, windows 7",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "cbaptist1",
          "htmlLink" : "https://code.google.com/u/114877339413524800489/"
        },
        "updated" : "2014-11-20T15:13:42.000Z",
        "published" : "2014-11-19T19:19:23.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "cbaptist1",
              "htmlLink" : "https://code.google.com/u/114877339413524800489/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.Use cmake to build for VS10\r\n2.Set build to Release, Platform to x64\r\n3.Try to build\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nLots of errors.  For example the linker has the command line property  /machine:X86 appended, even to x64 Platform.\r\n\r\nI started out trying to fix them locally, but got stumped at 1&gt;archive_static.lib(archive_util.obj) : error LNK2019: unresolved external symbol BZ2_bzlibVersion referenced in function archive_version_details\r\n1&gt;archive_static.lib(archive_read_support_filter_gzip.obj) : error LNK2019: unresolved external symbol inflateInit2_ referenced in function consume_header\r\n1&gt;archive_static.lib(archive_read_support_filter_gzip.obj) : error LNK2019: unresolved external symbol crc32 referenced in function consume_header\r\n1&gt;archive_static.lib(archive_read_support_filter_gzip.obj) : error LNK2019: unresolved external symbol inflateEnd referenced in function consume_trailer\r\n1&gt;archive_static.lib(archive_read_support_filter_gzip.obj) : error LNK2019: unresolved external symbol inflate referenced in function gzip_filter_read\r\n1&gt;archive_static.lib(archive_read_support_filter_bzip2.obj) : error LNK2019: unresolved external symbol BZ2_bzDecompressEnd referenced in function bzip2_filter_read\r\n1&gt;archive_static.lib(archive_read_support_filter_bzip2.obj) : error LNK2019: unresolved external symbol BZ2_bzDecompress referenced in function bzip2_filter_read\r\n1&gt;archive_static.lib(archive_read_support_filter_bzip2.obj) : error LNK2019: unresolved external symbol BZ2_bzDecompressInit referenced in function bzip2_filter_read\r\n1&gt;C:\\source_code\\ThirdParty\\libarchive-master\\bin\\bin\\Release\\bsdcat.exe : fatal error LNK1120: 8 unresolved externals\r\n\r\nwhen building project bsdcat\r\n\r\n<b>What version are you using?</b>\nLatest, not sure the #\r\n\r\n<b>On what operating system?</b>\nWindows 7 ultimate\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nVisual Studio 10 Pro (10.0.40219.1)\r\n\r\n<b>Please provide any additional information below.</b>\n\r\n",
            "published" : "2014-11-19T19:19:23.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Are the problems you see only affecting bsdcat?  Or other targets as well?\r\n\r\n",
            "published" : "2014-11-20T15:13:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 388,
        "title" : "Dirty bytes at the end of zip archive",
        "summary" : "Dirty bytes at the end of zip archive",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "nicolac76",
          "htmlLink" : "https://code.google.com/u/nicolac76@gmail.com/"
        },
        "updated" : "2014-12-26T01:37:45.000Z",
        "published" : "2014-12-08T16:00:05.000Z",
        "closed" : "2014-12-26T01:37:45.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nicolac76",
              "htmlLink" : "https://code.google.com/u/nicolac76@gmail.com/"
            },
            "content" : "Hello,\r\n\r\nThe problem is if the comment section in the &quot;central directory end&quot; is not the right value of &quot;dirty&quot; bytes at the end of archive.\r\n\r\nThe parsing is good, but\r\n\tzip-&gt;end_of_central_directory_offset = filesize;\r\nwill fail.\r\nBecause filesize (filesize += tail - (22 + archive_le16dec(p+20))) doesn't get the right value of byte at p+20 (comment lenght). We can have the right value of end_of_central_directory_offset by an other way but we prefer be confident with value given by central directory.\r\n\r\nI don't know what can we do:\r\n- Compare the both calculus and error if it's different.\r\n- Do nothing\r\n- Take the computed way to know the beginning of central directory.\r\n\r\nRegards,\r\n\r\nNicolas",
            "published" : "2014-12-08T16:00:05.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3880000000",
              "fileName" : "a.zip",
              "fileSize" : 154,
              "mimetype" : "application/zip"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nicolac76",
              "htmlLink" : "https://code.google.com/u/nicolac76@gmail.com/"
            },
            "content" : "In fact this problem is no more in git. I'm really sorry. It only appears in libarchive 3.1.2",
            "published" : "2014-12-08T16:51:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you for checking git master:  I'm glad to know this has been fixed.\r\n",
            "published" : "2014-12-26T01:37:45.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 389,
        "title" : "Extended attribute extraction fails on read-only files",
        "summary" : "Extended attribute extraction fails on read-only files",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "adrian.bocaniciu@guidedknowledge.com",
          "htmlLink" : "https://code.google.com/u/112447543133397841055/"
        },
        "updated" : "2014-12-20T22:00:53.000Z",
        "published" : "2014-12-20T22:00:53.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "adrian.bocaniciu@guidedknowledge.com",
              "htmlLink" : "https://code.google.com/u/112447543133397841055/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. bsdtar --create --format=pax with some read-only files having extended attributes, e.g. on an XFS file system\r\n2. bsdtar --extract --preserve-permissions fails to set the extended attributes on the extracted files\r\n<b>3.</b>\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nI expect to restore the archived files as they were, but instead of that I lose all the information stored in the extended attributes, which is essential for my applications.\r\n\r\n\r\n<b>What version are you using?</b>\nbsdtar 3.1.2 - libarchive 3.1.2\r\n\r\n<b>On what operating system?</b>\nLinux with XFS file system\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nIrrelevant information.\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nIrrelevant information.\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThe cause for this bug is obvious, the file mode bits are restored before setting the extended attributes, which then fails on all read-only files.\r\n\r\nTo solve this problem, the order of the 2 extraction steps must be reversed, after writing the content of the extracted file, the extended attributes must be set, and only then the file mode bits must be restored.\r\n\r\n",
            "published" : "2014-12-20T22:00:53.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 390,
        "title" : "Always required to link against zlib",
        "summary" : "Always required to link against zlib",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "justin@specialbusservice.com",
          "htmlLink" : "https://code.google.com/u/105786551376519375196/"
        },
        "updated" : "2014-12-26T11:03:54.000Z",
        "published" : "2014-12-25T16:43:36.000Z",
        "closed" : "2014-12-26T01:36:50.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "justin@specialbusservice.com",
              "htmlLink" : "https://code.google.com/u/105786551376519375196/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1.Build libarchive with zlib support\r\n2.Build minitar with gcc -static -DNO_BZIP2 -DNO_COMPRESS -DNO_CREATE -DNO_GZIP -DNO_LOOKUP -o minitar minitar.c -larchive\r\n3. Get libarchive/archive_write_disk_posix.c:2220: undefined reference to `deflateEnd\r\n\r\n(note that would be line 2225 in head)\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nREADME says\r\n\r\n&quot;I've attempted to minimize static link pollution.  If you don't\r\n   explicitly invoke a particular feature (such as support for a\r\n   particular compression or format), it won't get pulled in.\r\n   In particular, if you don't explicitly enable a particular\r\n   compression or decompression support, you won't need to link\r\n   against the corresponding compression or decompression libraries.\r\n   This also reduces the size of statically-linked binaries in\r\n   environments where that matters.&quot;\r\n\r\nHowever this is no longer the case for zlib, as deflate symbols are required when libarchive is compiled with zlib support even when not needed at runtime.\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nNetBSD, Linux\r\n\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nconfigure\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n",
            "published" : "2014-12-25T16:43:36.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The specific problem you encountered should be fixed in git master:  the code in question should only ever be compiled for Mac OS X (it is there to support compressed HFS file systems).  In 3.1.2, some of it was erroneously being compiled on other platforms, but that was corrected in commit a9a9683f.\r\n\r\nCurrently, there is no way to select \"plain\" archive_write_disk() without the compression support on Mac OS X; patches to correct this would be appreciated.\r\n",
            "published" : "2014-12-26T01:36:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "justin@specialbusservice.com",
              "htmlLink" : "https://code.google.com/u/105786551376519375196/"
            },
            "content" : "Thanks, apologies for not testing with HEAD, verified it is fixed.",
            "published" : "2014-12-26T11:03:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 391,
        "title" : "Please add support for ADB (android backup archives)",
        "summary" : "Please add support for ADB (android backup archives)",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "uspoerlein",
          "htmlLink" : "https://code.google.com/u/106818896194461155675/"
        },
        "updated" : "2015-01-13T05:18:00.000Z",
        "published" : "2015-01-02T13:25:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "uspoerlein",
              "htmlLink" : "https://code.google.com/u/106818896194461155675/"
            },
            "content" : "Backing up android devices can be performed with adb -backup, if the archive is not encrypted, it is essentially a zlib compressed tar archive with a bit of header in front.\r\n\r\nI don't know whether the best way to add this is as another variant of tar archives, or whether a whole new archive reader should be implemented (might be better to later also add decryption support or when the format changes in the future).\r\n\r\nHere's some information on how the format looks like:\r\n\r\nhttp://android.stackexchange.com/questions/23357/is-there-a-way-to-look-inside-and-modify-an-adb-backup-created-file\r\nhttp://forum.xda-developers.com/showthread.php?t=2011811\r\n\r\nand some tools to work with the archives:\r\n\r\nhttp://sourceforge.net/projects/adbextractor/\r\n\r\nNow if only bsdtar could Just Work[tm] with these archives, that would be awesome!\r\n\r\nThis is essentially what's needed:\r\n\r\n% adb backup -f nexus7.adb -all\r\n% dd if=nexus7.adb bs=24 skip=1 | openssl zlib -d | tar tf - | head\r\napps/com.imdb.mobile/_manifest\r\napps/com.imdb.mobile/a/com.imdb.mobile-1.apk\r\napps/com.imdb.mobile/r/app_webview\r\napps/com.imdb.mobile/r/app_webview/Cache\r\n...\r\n\r\n\r\nIf you don't have openssl with zlib, just prepend the gzip header and bsdtar will read it fine\r\n% { printf &quot;\\x1f\\x8b\\x08\\x00\\x00\\x00\\x00\\x00&quot;; dd if=nexus7.adb bs=24 skip=1; } | tar tf - | head",
            "published" : "2015-01-02T13:25:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "If it really is just a header in front of a tar archive, then the right approach is to add an adb \"filter\" similar to the RPM filter we already have.\r\n\r\nThe simplest implementation for a read filter would just remove the header and then feed the rest of the data through so the tar format can detect and handle it.\r\n\r\nI suggest you start by reading the article on the Libarchive Wiki about adding a new filter.  The example code in the article is based on gunzip and shows how to work with zlib to do decompression, how to bid on and parse a header, etc.  It should be very simple.\r\n\r\n\r\n",
            "published" : "2015-01-02T19:14:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "",
            "published" : "2015-01-13T05:18:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 392,
        "title" : "Progress callback for archive_read_data_into_fd?",
        "summary" : "Progress callback for archive_read_data_into_fd?",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Enhancement", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "china@screef.com",
          "htmlLink" : "https://code.google.com/u/111907283728579316750/"
        },
        "updated" : "2015-01-13T05:17:41.000Z",
        "published" : "2015-01-12T08:59:55.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "china@screef.com",
              "htmlLink" : "https://code.google.com/u/111907283728579316750/"
            },
            "content" : "How about a progress callback for archive_read_data_into_fd()? There is a archive_read_extract_set_progress_callback() function but it doesn't apply to archive_read_data_into_fd(). How about a generic archive_read_set_progress_callback() that is applicable to all functions capable of reading archive data?",
            "published" : "2015-01-12T08:59:55.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "It's a good idea.\r\n\r\nIf you have an idea how to implement this, please send us a pull request.\r\n",
            "published" : "2015-01-13T05:17:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "labels" : [ "-Type-Defect", "Type-Enhancement" ]
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 393,
        "title" : "bsdtar does not preserve Default ACL set on nested subdirectory",
        "summary" : "bsdtar does not preserve Default ACL set on nested subdirectory",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "a.c.kalker",
          "htmlLink" : "https://code.google.com/u/100826566681424940379/"
        },
        "updated" : "2015-02-02T00:51:35.000Z",
        "published" : "2015-01-28T08:23:37.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 6,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.c.kalker",
              "htmlLink" : "https://code.google.com/u/100826566681424940379/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Using setfacl(1), set a Default ACL on a nested subdirectory\r\n2. Backup and restore the directory tree\r\n3. Using getfacl(1), compare the ACLs on the nested subdirectory\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nThe ACLs on the backup source and restore destination nested subdirectory should be identical.\r\nInstead, the ACL on the restore destination nested subdirectory is missing the Default part.\r\n\r\n<b>What version are you using?</b>\nlibarchive 3.1.2-8 (Arch Linux package[1])\r\nacl 2.2.52-2 (Arch Linux package[2])\r\nAlso tested with libarchive-git v3.1.2.449.g296efb3-1 (Arch Linux AUR package[3], which builds libarchive from Git HEAD)\r\n\r\n<b>On what operating system?</b>\nArch Linux x86_64 (rolling release)\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nlibarchive 3.1.2-8: prepackaged binary\r\nacl 2.2.52-2: prepackaged binary\r\nlibarchive-git:\r\n$ ./build/autogen.sh\r\n$ ./configure --prefix=/usr --without-xml2\r\n$ make clean\r\n$ make\r\n(see [4])\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc-multilib 4.9.2-2 (Arch Linux package):\r\n$ gcc -v\r\nUsing built-in specs.\r\nCOLLECT_GCC=gcc\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-unknown-linux-gnu/4.9.2/lto-wrapper\r\nTarget: x86_64-unknown-linux-gnu\r\nConfigured with: /build/gcc-multilib/src/gcc-4.9-20141224/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++ --enable-shared --enable-threads=posix --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-cloog-backend=isl --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-multilib --disable-werror --enable-checking=release\r\nThread model: posix\r\ngcc version 4.9.2 20141224 (prerelease) (GCC)\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nI've tested on a tmpfs and on an ext4 filesystem with the same results. This seems to indicate that the issue is not filesystem related.\r\n\r\nI'm including a small test script (which requires sudo rights to run) which deminstrates the problem.\r\n\r\n[1]: https://www.archlinux.org/packages/core/x86_64/libarchive/\r\n[2]: https://www.archlinux.org/packages/core/x86_64/acl/\r\n[3]: https://aur.archlinux.org/packages/libarchive-git\r\n[4]: https://aur.archlinux.org/packages/li/libarchive-git/PKGBUILD",
            "published" : "2015-01-28T08:23:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3930000000",
              "fileName" : "test-bsdtar-nested-acl.sh",
              "fileSize" : 1102,
              "mimetype" : "text/plain",
              "isDeleted" : true
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.c.kalker",
              "htmlLink" : "https://code.google.com/u/100826566681424940379/"
            },
            "content" : "Result of running the test script on my own system:\r\n\r\n$ ./test-bsdtar-nested-acl.sh\r\n*** Default ACLs should be preserved\r\n    on top-level directories as well as subdirectories.\r\n\r\n==> Testing directory path: dir\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the Default ACLs):\r\n\r\n# file: src/dir\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::r-x\r\ndefault:user::rwx\r\ndefault:group::r-x\r\ndefault:group:nobody:r-x\r\ndefault:mask::r-x\r\ndefault:other::r-x\r\n\r\n# file: dest/dir\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::r-x\r\ndefault:user::rwx\r\ndefault:group::r-x\r\ndefault:group:nobody:r-x\r\ndefault:mask::r-x\r\ndefault:other::r-x\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the effective rights masks):\r\n\r\n# file: src/dir/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r-x\t#effective:r--\r\ngroup:nobody:r-x\t#effective:r--\r\nmask::r--\r\nother::r--\r\n\r\n# file: dest/dir/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r-x\t#effective:r--\r\ngroup:nobody:r-x\t#effective:r--\r\nmask::r--\r\nother::r--\r\n\r\n==> Testing directory path: dir1/dir2\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the Default ACLs):\r\n\r\n# file: src/dir1/dir2\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::r-x\r\ndefault:user::rwx\r\ndefault:group::r-x\r\ndefault:group:nobody:r-x\r\ndefault:mask::r-x\r\ndefault:other::r-x\r\n\r\n# file: dest/dir1/dir2\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::r-x\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the effective rights masks):\r\n\r\n# file: src/dir1/dir2/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r-x\t#effective:r--\r\ngroup:nobody:r-x\t#effective:r--\r\nmask::r--\r\nother::r--\r\n\r\n# file: dest/dir1/dir2/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r--\r\nother::r--\r\n\r\n==> Done.\r\n",
            "published" : "2015-01-28T08:27:01.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.c.kalker",
              "htmlLink" : "https://code.google.com/u/100826566681424940379/"
            },
            "content" : "Minor nit: the test ACLs are silly because the test files are still world-readable. I've fixed this in the test script by setting `umask 027`.\r\nThe original issue remains the same.\r\n\r\nOutput from the fixed test script:\r\n$ ./test-bsdtar-nested-acl.sh\r\n*** Default ACLs should be preserved\r\n    on top-level directories as well as subdirectories.\r\n\r\n==> Testing directory path: dir\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the Default ACLs):\r\n\r\n# file: src/dir\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::---\r\ndefault:user::rwx\r\ndefault:group::r-x\r\ndefault:group:nobody:r-x\r\ndefault:mask::r-x\r\ndefault:other::---\r\n\r\n# file: dest/dir\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::---\r\ndefault:user::rwx\r\ndefault:group::r-x\r\ndefault:group:nobody:r-x\r\ndefault:mask::r-x\r\ndefault:other::---\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the effective rights masks):\r\n\r\n# file: src/dir/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r-x\t#effective:r--\r\ngroup:nobody:r-x\t#effective:r--\r\nmask::r--\r\nother::---\r\n\r\n# file: dest/dir/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r-x\t#effective:r--\r\ngroup:nobody:r-x\t#effective:r--\r\nmask::r--\r\nother::---\r\n\r\n==> Testing directory path: dir1/dir2\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the Default ACLs):\r\n\r\n# file: src/dir1/dir2\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::---\r\ndefault:user::rwx\r\ndefault:group::r-x\r\ndefault:group:nobody:r-x\r\ndefault:mask::r-x\r\ndefault:other::---\r\n\r\n# file: dest/dir1/dir2\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::---\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the effective rights masks):\r\n\r\n# file: src/dir1/dir2/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r-x\t#effective:r--\r\ngroup:nobody:r-x\t#effective:r--\r\nmask::r--\r\nother::---\r\n\r\n# file: dest/dir1/dir2/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r--\r\nother::---\r\n\r\n==> Done.\r\n",
            "published" : "2015-01-28T08:43:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "deletedBy" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.c.kalker",
              "htmlLink" : "https://code.google.com/u/100826566681424940379/"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3930002000",
              "fileName" : "test-bsdtar-nested-acl.sh",
              "fileSize" : 1113,
              "mimetype" : "text/plain",
              "isDeleted" : true
            } ]
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.c.kalker",
              "htmlLink" : "https://code.google.com/u/100826566681424940379/"
            },
            "content" : "",
            "published" : "2015-01-28T08:57:50.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3930003000",
              "fileName" : "test-bsdtar-nested-acl.sh",
              "fileSize" : 1159,
              "mimetype" : "text/plain",
              "isDeleted" : true
            } ]
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "a.c.kalker",
              "htmlLink" : "https://code.google.com/u/100826566681424940379/"
            },
            "content" : "Sorry for all the deletions.\r\nThe test script is my attempt to minimize the test for a much more involved scenario which is discussed on this Arch Linux issue: https://bugs.archlinux.org/task/43584#comment131888\r\n\r\nFinal version of the script (I hope) with my results:\r\n\r\n./test-bsdtar-nested-acl.sh\r\n*** Default ACLs should be preserved\r\n    on top-level directories as well as subdirectories.\r\n\r\n==> Testing directory path: dir\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the Default ACLs):\r\n\r\n# file: src/dir\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::---\r\ndefault:user::rwx\r\ndefault:group::r-x\r\ndefault:group:nobody:r-x\r\ndefault:mask::r-x\r\ndefault:other::---\r\n\r\n# file: dest/dir\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::---\r\ndefault:user::rwx\r\ndefault:group::r-x\r\ndefault:group:nobody:r-x\r\ndefault:mask::r-x\r\ndefault:other::---\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the effective rights masks):\r\n\r\n# file: src/dir/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r-x\t#effective:r--\r\ngroup:nobody:r-x\t#effective:r--\r\nmask::r--\r\nother::---\r\n\r\n# file: dest/dir/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r-x\t#effective:r--\r\ngroup:nobody:r-x\t#effective:r--\r\nmask::r--\r\nother::---\r\n\r\n==> Testing directory path: dir1/dir2\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the Default ACLs):\r\n\r\n# file: src/dir1/dir2\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::---\r\ndefault:user::rwx\r\ndefault:group::r-x\r\ndefault:group:nobody:r-x\r\ndefault:mask::r-x\r\ndefault:other::---\r\n\r\n# file: dest/dir1/dir2\r\n# owner: root\r\n# group: root\r\nuser::rwx\r\ngroup::r-x\r\ngroup:nobody:r-x\r\nmask::r-x\r\nother::---\r\n\r\n--> The following two ACLs should be identical\r\n    (in particular the effective rights masks):\r\n\r\n# file: src/dir1/dir2/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r-x\t#effective:r--\r\ngroup:nobody:r-x\t#effective:r--\r\nmask::r--\r\nother::---\r\n\r\n# file: dest/dir1/dir2/test\r\n# owner: root\r\n# group: root\r\nuser::rw-\r\ngroup::r--\r\nother::---\r\n\r\n==> Done.\r\n",
            "published" : "2015-01-28T13:56:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3930004000",
              "fileName" : "test-bsdtar-nested-acl.sh",
              "fileSize" : 1191,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Is it possible to reproduce this issue without using sudo?\r\n\r\nNon-root users can set ACLs on their own files; if we can reproduce this without sudo, we can build a libarchive test to reproduce the issue which will help ensure that it not only gets fixed, but stays fixed.\r\n\r\nCurrently, ACL backup/restore handling is only tested on FreeBSD.  Could you please look at these two tests and see if there is a way to have some part of them run on Linux systems as well?  I know that not all Linux systems have ACL support, but I'm not sure what compile-time or run-time tests are appropriate here.\r\n  libarchive/test/test_acl_freebsd_nfs4.c\r\n  libarchive/test/test_acl_freebsd_posix1e.c\r\n ",
            "published" : "2015-02-02T00:51:35.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 394,
        "title" : "Libarchive crash with malformed cpio archive",
        "summary" : "Libarchive crash with malformed cpio archive",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "pariszoump",
          "htmlLink" : "https://code.google.com/u/117031693374317954665/"
        },
        "updated" : "2015-02-02T08:44:14.000Z",
        "published" : "2015-01-29T12:38:04.000Z",
        "closed" : "2015-02-02T00:28:24.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pariszoump",
              "htmlLink" : "https://code.google.com/u/117031693374317954665/"
            },
            "content" : "== Affected software ==\r\n\r\nbsdtar\r\n\r\n== Version ==\r\n\r\nAll tests were performed using commit\r\n296efb3db188fa4bf7b0e7b5c61d404f9145f0ab\r\n\r\n== OS ==\r\n\r\nLinux x86_64 (Ubuntu 14.04). 32-bit builds tested were not affected\r\n\r\n== Description ==\r\n\r\nInitial fuzzing was performed using the afl-fuzzer.\r\n\r\nUsing a crafted tar file bsdtar can perform an out-of-bounds memory read which will lead to a SEGFAULT. The issue exists when the executable skips data in the archive. The amount of data to skip is defined in byte offset [16-19] If ASLR is disabled, the issue can lead to an infinite loop.\r\n\r\n\r\n== Stack trace ==\r\n\r\n#0  __memcpy_sse2_unaligned ()\r\n    at ../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:33\r\n#1  0x0000000000416d96 in __archive_read_filter_ahead (filter=0x6e8ed0, \r\n    min=0x1a, avail=0x0) at libarchive/archive_read.c:1448\r\n#2  0x000000000041679e in __archive_read_ahead (a=0x6cc710, min=0x1a, \r\n    avail=0x0) at libarchive/archive_read.c:1285\r\n#3  0x000000000042c85f in header_bin_be (a=0x6cc710, cpio=0x6cd5d0, \r\n    entry=0x6cd100, namelength=0x7fffffffdf88, name_pad=0x7fffffffdf80)\r\n    at libarchive/archive_read_support_format_cpio.c:904\r\n#4  0x000000000042b3c2 in archive_read_format_cpio_read_header (a=0x6cc710, \r\n    entry=0x6cd100) at libarchive/archive_read_support_format_cpio.c:377\r\n#5  0x0000000000415510 in _archive_read_next_header2 (_a=0x6cc710, \r\n    entry=0x6cd100) at libarchive/archive_read.c:643\r\n#6  0x000000000041560c in _archive_read_next_header (_a=0x6cc710, \r\n    entryp=0x7fffffffe078) at libarchive/archive_read.c:683\r\n#7  0x0000000000457b56 in archive_read_next_header (a=0x6cc710, \r\n    entry=0x7fffffffe078) at libarchive/archive_virtual.c:148\r\n#8  0x0000000000406ab9 in read_archive (bsdtar=0x7fffffffe1d0, mode=0x78, \r\n    writer=0x6cb210) at tar/read.c:252\r\n#9  0x0000000000406496 in tar_mode_x (bsdtar=0x7fffffffe1d0) at tar/read.c:104\r\n#10 0x000000000040525e in main (argc=0x3, argv=0x7fffffffe428)\r\n    at tar/bsdtar.c:805\r\n#11 0x00007ffff72bab45 in __libc_start_main ()\r\n   from /lib/x86_64-linux-gnu/libc.so.6\r\n#12 0x0000000000403cc9 in _start ()\r\n\r\n== Proof of Concept ==\r\n\r\nAttached file will segfault due to an out-of-bounds memory read. If ASLR is disabled an infinite loop will be triggered.\r\n\r\n\r\n\r\n",
            "published" : "2015-01-29T12:38:04.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3940000000",
              "fileName" : "crash_dos.tar",
              "fileSize" : 61,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you so much for reporting this!  I appreciate your bringing it to our attention.\r\n\r\nThe issue turned out to be a problem with the cpio reader:  Libarchive\r\nidentifies the file you constructed as a big-endian binary cpio format\r\nwith a very large (>2GB) size.  An overflow in parsing the size field caused\r\nlibarchive to treat this size as a negative value and lead to an attempt to\r\nskip the file position forward by a negative number of bytes.\r\n\r\nThis was not found by libarchive's existing fuzz tester because that test\r\ndid not exercise the archive_read_data_skip() function.  The fuzz tester\r\nalso did not thoroughly test small input files.\r\n\r\nI believe this is completely addressed by the commits I just made and would\r\nappreciate you re-testing with commit e6c9668f3202215ddb71617b41c19b6f05acf008.\r\n\r\nThese fixes should entirely resolve this issue.  In particular, I made the following four changes:\r\n  * Added a basic test for cpio binary little-endian format (which had a similar bug)\r\n  * Extended libarchive's fuzz test so that it now detects the issue you found, and the same issue with little-endian files\r\n  * Fixed the size overflow problem for both binary big-endian and binary little-endian formats\r\n  * Put in an additional check to protect against moving the file pointer forward by a negative amount.\r\n\r\nI've re-run libarchive's improved fuzz test and it finds no similar problems in other formats; if you find any other problems of this sort, please let us know right away.\r\n",
            "published" : "2015-02-02T00:28:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "Libarchive crash with malformed cpio archive",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pariszoump",
              "htmlLink" : "https://code.google.com/u/117031693374317954665/"
            },
            "content" : "I can confirm that the latest commit fixes the issue.\r\n\r\nI will probably continue fuzzing bsdtar and the other tools of libarchive and will come back if any other problems arise.\r\n\r\n",
            "published" : "2015-02-02T08:44:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 395,
        "title" : "malformed cpio file causes segfault",
        "summary" : "malformed cpio file causes segfault",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-07T10:34:37.000Z",
        "published" : "2015-02-01T20:50:16.000Z",
        "closed" : "2015-02-01T22:11:15.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 5,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "The attached file will crash bsdcpio.\r\n\r\n<b>What steps will reproduce the problem?</b>\n1. bsdcpio -i &lt; crash.cpio\r\n2. segfault\r\n\r\n<b>What version are you using?</b>\ntried both 3.1.2 and current git.\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n3.1.2 with configure, git with cmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.9.2\r\n\r\n<b>Please provide any additional information below.</b>\n\r\ncrash dump by valgrind:\r\n==14051== Invalid read of size 8\r\n==14051==    at 0x4C2ECB0: memcpy@@GLIBC_2.14 (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==14051==    by 0x41AEAD: __archive_read_ahead (in /mnt/ram/libarchive/c/bin/bsdcpio)\r\n==14051==    by 0x42FDE7: header_bin_le (in /mnt/ram/libarchive/c/bin/bsdcpio)\r\n==14051==    by 0x430530: archive_read_format_cpio_read_header (in /mnt/ram/libarchive/c/bin/bsdcpio)\r\n==14051==    by 0x418B98: _archive_read_next_header (in /mnt/ram/libarchive/c/bin/bsdcpio)\r\n==14051==    by 0x40DFAE: main (in /mnt/ram/libarchive/c/bin/bsdcpio)\r\n==14051==  Address 0xffffffff8954c260 is not stack'd, malloc'd or (recently) free'd\r\n\r\nI will also attach full valgrind and address sanitizer output.\r\n\r\nThis issue was found with american fuzzy lop.",
            "published" : "2015-02-01T20:50:16.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3950000000",
              "fileName" : "crash.cpio.asan.txt",
              "fileSize" : 1409,
              "mimetype" : "text/plain"
            }, {
              "attachmentId" : "3950000001",
              "fileName" : "crash.cpio.valgrind.txt",
              "fileSize" : 1671,
              "mimetype" : "text/plain"
            }, {
              "attachmentId" : "3950000002",
              "fileName" : "crash.cpio",
              "fileSize" : 33,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This is exactly the same as Issue 394.\r\n",
            "published" : "2015-02-01T22:11:15.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "ah, okay, I saw 394 but it talked about bsdtar, not bsdcpio, so I thought it must be a different issue.\r\n\r\nI just checked current git and it hangs on the file. Is this the expected behaviour? (in bug 394 you mention that it just encodes a very large input file - so it may just do its job and try to decompress something big - GNU cpio also hangs)",
            "published" : "2015-02-03T03:21:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tim@kientzle.com",
              "htmlLink" : "https://code.google.com/u/111480963336027327802/"
            },
            "content" : "I'm not seeing the hang here.  After applying the fix for bug 394, it seems to correctly fail with an error.\r\n\r\nThe only issue I do see:  The error message is empty.  I've just committed a fix for that.\r\n\r\nIf you're still seeing it with current git commit 24f5de6, please give me more details and I'll see if I can track it down.\r\n\r\nThank you!\r\n",
            "published" : "2015-02-07T06:09:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "With latest git it seems fine. Prints an error as expected and no hang.",
            "published" : "2015-02-07T10:34:37.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 396,
        "title" : "malformed rar crashes bsdtar",
        "summary" : "malformed rar crashes bsdtar",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-07T07:29:13.000Z",
        "published" : "2015-02-03T03:44:10.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. run bsdtar -xf crash.rar\r\n2. segfault\r\n\r\n<b>What version are you using?</b>\ngit head (e6c9668f3202215ddb71617b41c19b6f05acf008)\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.9.2\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nCrash with malformed rar file, found with american fuzzy lop. I'll attach valgrind and address sanitizer output. Looks like a null ptr.",
            "published" : "2015-02-03T03:44:10.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3960000000",
              "fileName" : "crash.rar",
              "fileSize" : 121,
              "mimetype" : "application/octet-stream",
              "isDeleted" : false
            }, {
              "attachmentId" : "3960000001",
              "fileName" : "crash.rar.asan.txt",
              "fileSize" : 832,
              "mimetype" : "text/plain"
            }, {
              "attachmentId" : "3960000002",
              "fileName" : "crash.rar.valgrind.txt",
              "fileSize" : 1219,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tim@kientzle.com",
              "htmlLink" : "https://code.google.com/u/111480963336027327802/"
            },
            "content" : "This is hitting a corner case in the RAR reader:  The reader decides the current header is a \"split file in multivolume RAR\" and returns a success code without actually filling in the entry.  I'm not sure whether this code (around lines 1540-1560) should return an error or should continue to read the next header.\r\n",
            "published" : "2015-02-07T06:33:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've committed a change to bsdtar so it will skip entries for which the format handler is unable to parse a filename.\r\n\r\nThis makes bsdtar itself resistant to this issue, but it would be better to fix the underlying parsing issue in the RAR reader.\r\n",
            "published" : "2015-02-07T07:29:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 397,
        "title" : "malformed cab segfaults bsdtar",
        "summary" : "malformed cab segfaults bsdtar",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-07T07:29:44.000Z",
        "published" : "2015-02-03T03:55:02.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. bsdtar -xf segf.cab\r\n2. segfault\r\n\r\n<b>What version are you using?</b>\ngit head (e6c9668f3202215ddb71617b41c19b6f05acf008)\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.9.2\r\n\r\n<b>Please provide any additional information below.</b>\nFound with american fuzzy lop\r\n\r\n==20101== Invalid read of size 1\r\n==20101==    at 0x411867: strip_absolute_path (in /mnt/ram/libarchive/plain/bin/bsdtar)\r\n==20101==    by 0x41252A: edit_pathname (in /mnt/ram/libarchive/plain/bin/bsdtar)\r\n==20101==    by 0x410A46: tar_mode_x (in /mnt/ram/libarchive/plain/bin/bsdtar)\r\n==20101==    by 0x40EB13: main (in /mnt/ram/libarchive/plain/bin/bsdtar)\r\n==20101==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\r\n\r\nLooks like a null ptr. Will attach asan and valgrind output.",
            "published" : "2015-02-03T03:55:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3970000000",
              "fileName" : "segf.cab",
              "fileSize" : 62,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "3970000001",
              "fileName" : "segf.cab.asan.txt",
              "fileSize" : 899,
              "mimetype" : "text/plain"
            }, {
              "attachmentId" : "3970000002",
              "fileName" : "segf.cab.valgrind.log",
              "fileSize" : 1286,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've committed a change to bsdtar so it will skip entries for which the format handler is unable to parse a filename.\r\n\r\nThis makes bsdtar itself resistant to this issue, but it would be better to fix the underlying parsing issue in the RAR reader.\r\n",
            "published" : "2015-02-07T07:29:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 398,
        "title" : "malformed cab causes overlapping memcpy / segfault",
        "summary" : "malformed cab causes overlapping memcpy / segfault",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-07T07:04:48.000Z",
        "published" : "2015-02-03T03:57:29.000Z",
        "closed" : "2015-02-07T07:04:48.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. bsdtar -xf memcpy with either valgrind or address sanitizer will show overlapping memcpy command\r\n\r\n<b>What version are you using?</b>\ngit head (e6c9668f3202215ddb71617b41c19b6f05acf008)\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\ncmake\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.9.2\r\n\r\n<b>Please provide any additional information below.</b>\nFound with american fuzzy lop.\r\n\r\n==20141==ERROR: AddressSanitizer: memcpy-param-overlap: memory ranges [0x60300000ee60,0x60300000ee62) and [0x60300000ee61, 0x60300000ee63) overlap\r\n    #0 0x7f0173ebde94 (/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.2/libasan.so.1+0x2fe94)\r\n    #1 0x6687fa in memcpy /usr/include/bits/string3.h:51\r\n    #2 0x6687fa in archive_string_append /mnt/ram/libarchive/libarchive/archive_string.c:206\r\n    #3 0x6687fa in archive_strncat /mnt/ram/libarchive/libarchive/archive_string.c:342\r\n    #4 0x6687fa in archive_mstring_copy_mbs_len /mnt/ram/libarchive/libarchive/archive_string.c:4051\r\n    #5 0x6687fa in archive_mstring_copy_mbs /mnt/ram/libarchive/libarchive/archive_string.c:4039\r\n    #6 0x430626 in edit_pathname /mnt/ram/libarchive/tar/util.c:555\r\n    #7 0x425c4b in read_archive /mnt/ram/libarchive/tar/read.c:331\r\n    #8 0x425c4b in tar_mode_x /mnt/ram/libarchive/tar/read.c:104\r\n    #9 0x415789 in main /mnt/ram/libarchive/tar/bsdtar.c:805\r\n    #10 0x7f0172b04f9f in __libc_start_main (/lib64/libc.so.6+0x1ff9f)\r\n    #11 0x41b10d (/mnt/ram/libarchive/b/bin/bsdtar+0x41b10d)\r\n\r\nWill attach full asan and valgrind output.",
            "published" : "2015-02-03T03:57:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3980000000",
              "fileName" : "memcpy.cab",
              "fileSize" : 64,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "3980000001",
              "fileName" : "memcpy.cab.asan.log",
              "fileSize" : 2693,
              "mimetype" : "text/plain"
            }, {
              "attachmentId" : "3980000002",
              "fileName" : "memcpy.cab.valgrind.log",
              "fileSize" : 688,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you again!  I appreciate your reporting these issues.\r\n\r\nI believe this is completely fixed by git commit b6ba560.\r\n\r\nIn particular, archive_string_append() now uses memmove() to copy the string into the correct location in the string buffer, which should correctly handle cases where the source string was parsed from the string buffer itself.\r\n",
            "published" : "2015-02-07T07:04:48.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 399,
        "title" : "Simple text files interpreted as mtree",
        "summary" : "Simple text files interpreted as mtree",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "JanWielemaker",
          "htmlLink" : "https://code.google.com/u/117275956116728758552/"
        },
        "updated" : "2015-02-22T20:16:14.000Z",
        "published" : "2015-02-04T15:02:30.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "JanWielemaker",
              "htmlLink" : "https://code.google.com/u/117275956116728758552/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Create a file with content this content (a single line without quotes):\r\n  &quot;b704c67b39978aff8cc254e78976f001ea07a6d0&quot;\r\n2. Open the archive using format all|raw\r\n3. Run archive_read_next_header() on ther archive\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\nExpected:\r\nGet the plain entry, reported as &quot;data&quot;, format &quot;raw&quot;\r\n\r\nInstead:\r\nERROR: Missing type keyword in mtree specification\r\n\r\n<b>What version are you using?</b>\n\r\n3.1.2\r\n\r\n<b>On what operating system?</b>\n\r\nUbuntu\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\r\npre-packaged\r\n\r\n<b>What compiler or development environment (please include version)?</b>\n\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nAccording to mtree(5), mtree files must start with\r\n&quot;#mtree&quot;.  How can it be that the file is misinterpreted?\r\n",
            "published" : "2015-02-04T15:02:30.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "mtree(5) is wrong.  There is no required header text.\r\n\r\nThat said, it should be possible to improve the mtree bidder to reject files that are obviously missing required text.\r\n\r\nMixing raw + mtree is a particularly risky combination, since it is very hard to distinguish mtree from plain text files.   I generally recommend that people not mix raw with any other format handler except 'empty.'\r\n",
            "published" : "2015-02-05T05:00:49.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I've started to put together a test that tries to verify that the mtree bidder is doing the right thing.\r\n\r\nPlease take a look at the attached file and see if these cases all make sense.  If you can think of other cases that would help us to fine-tune the mtree bid logic, please let us know.\r\n\r\nNote:  The current code gets most of these right, but not all.\r\n",
            "published" : "2015-02-22T20:16:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "3990002000",
              "fileName" : "test_read_format_mtree_bid.c",
              "fileSize" : 3102,
              "mimetype" : "application/octet-stream"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 400,
        "title" : "bsdtar crash with a malformed compress (.Z) input",
        "summary" : "bsdtar crash with a malformed compress (.Z) input",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "reversex86",
          "htmlLink" : "https://code.google.com/u/100823308327412160093/"
        },
        "updated" : "2015-02-09T10:03:24.000Z",
        "published" : "2015-02-06T12:59:03.000Z",
        "closed" : "2015-02-07T07:42:25.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 3,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "reversex86",
              "htmlLink" : "https://code.google.com/u/100823308327412160093/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. bsdtar tvf crash.tar\r\n2. SegFault\r\n\r\n<b>What version are you using?</b>\nbsdtar 3.1.2 - libarchive 3.1.2 (latest stable release)\r\n\r\n<b>On what operating system?</b>\nLinux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\nCC=afl-gcc ./configure &amp;&amp; make\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nafl-cc 1.28b (Jan 26 2015 10:23:58) by &lt;lcamtuf@google.com&gt;\r\ngcc (Debian 4.7.2-5) 4.7.2\r\nCopyright (C) 2012 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n<b>Please provide any additional information below.</b>\nThis has been found with afl. This doesn't seems to be exploitable.\r\n\r\nThis is the smallest file causing the crash (7 bytes). If needed, I have anothers.\r\ngdb$ r tvf crash.tar\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n--------------------------------------------------------------------------[regs]\r\n  EAX: 0x0000003F  EBX: 0x00000003  ECX: 0x00000100  EDX: 0x00000100  o d I t s z A p c \r\n  ESI: 0xB7911008  EDI: 0xB7951000  EBP: 0x00000003  ESP: 0xBFFFEEC0  EIP: 0x0809FB9D\r\n  CS: 0073  DS: 007B  ES: 007B  FS: 0000  GS: 0033  SS: 007B\r\n--------------------------------------------------------------------------[code]\r\n=&gt; 0x809fb9d &lt;next_code+2421&gt;:\tmov    BYTE PTR [edi],al\r\n   0x809fb9f &lt;next_code+2423&gt;:\tmovzx  ecx,WORD PTR [esi+ecx*2+0x10044]\r\n   0x809fba7 &lt;next_code+2431&gt;:\tadd    edi,0x1\r\n   0x809fbaa &lt;next_code+2434&gt;:\tmov    DWORD PTR [esi+0x30044],edi\r\n   0x809fbb0 &lt;next_code+2440&gt;:\tlea    esp,[esp-0xc]\r\n   0x809fbb4 &lt;next_code+2444&gt;:\tmov    DWORD PTR [esp],edx\r\n   0x809fbb7 &lt;next_code+2447&gt;:\tmov    DWORD PTR [esp+0x4],ecx\r\n   0x809fbbb &lt;next_code+2451&gt;:\tmov    DWORD PTR [esp+0x8],eax\r\n--------------------------------------------------------------------------------\r\n0x0809fb9d in next_code (self=self@entry=0x831f460) at libarchive/archive_read_support_filter_compress.c:386\r\n386\t\t\t*state-&gt;stackp++ = state-&gt;suffix[code];\r\ngdb$",
            "published" : "2015-02-06T12:59:03.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4000000000",
              "fileName" : "crash.tar",
              "fileSize" : 7,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe that this is completely fixed by\r\n   [master 78e5fd4] Issue 400: Crash reading malformed compress (.Z) input\r\n\r\nThank you for reporting this!\r\n",
            "published" : "2015-02-07T07:42:25.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "summary" : "bsdtar crash with a malformed compress (.Z) input",
              "status" : "Fixed"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "reversex86",
              "htmlLink" : "https://code.google.com/u/100823308327412160093/"
            },
            "content" : "All of my samples doesn't crash anymore bsdtar.",
            "published" : "2015-02-09T10:03:24.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 401,
        "title" : "tar -X does not allow empty file",
        "summary" : "tar -X does not allow empty file",
        "stars" : 1,
        "starred" : false,
        "status" : "Duplicate",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "rudolf.cejka",
          "htmlLink" : "https://code.google.com/u/117851215907020101060/"
        },
        "updated" : "2015-02-07T20:27:59.000Z",
        "published" : "2015-02-06T13:12:44.000Z",
        "closed" : "2015-02-07T20:27:59.000Z",
        "mergedInto" : {
          "kind" : "projecthosting#issueRef",
          "projectId" : "libarchive",
          "issueId" : 327
        },
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rudolf.cejka",
              "htmlLink" : "https://code.google.com/u/117851215907020101060/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n\r\n1. Create empty file: touch z\r\n\r\n2. Run: tar -tf/dev/null -X z\r\n\r\n<b>What is the expected output? What do you see instead?</b>\n\r\n<b>What version are you using?</b>\n\r\nbsdtar 2.8.5 - libarchive 2.8.5 (as is in FreeBSD 9.3):\r\n\r\n$ tar -tf/dev/null -X z\r\n$\r\n\r\n... empty output, good\r\n\r\nbsdtar 3.1.2 - libarchive 3.1.2 (as is in FreeBSD 10.1):\r\n\r\n$ tar -tf/dev/null -X z\r\ntar: Error : Unrecognized archive format\r\n$\r\n\r\nWarning: The error is not about /dev/null archive format - it is about empty file z archive format, so the error is very misleading. File z could not be any archive in any case. You can try it with real tar file and you will suffer the same results.\r\n\r\nI do not have deep knowledge of libarchive internals and reading of exclude list seems to be over-complicated to me, so I'm not sure about the correct solution, but something is included here.",
            "published" : "2015-02-06T13:12:44.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4010000000",
              "fileName" : "archive_match.c.diff",
              "fileSize" : 874,
              "mimetype" : "application/octet-stream"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rudolf.cejka",
              "htmlLink" : "https://code.google.com/u/117851215907020101060/"
            },
            "content" : "I have been notified, that it is the same problem, as is in closed #327. So it seems that you can close this issue, but please release a new version of libarchive as soon as possible. Thank you very much.\r\n\r\n(For future code readers, it would be good thing to do something with\r\n...\r\nr = archive_read_support_format_raw(ar);\r\nr = archive_read_support_format_empty(ar);\r\nif (r != ARCHIVE_OK) {\r\n...)\r\n",
            "published" : "2015-02-06T15:18:29.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "rudolf.cejka",
              "htmlLink" : "https://code.google.com/u/117851215907020101060/"
            },
            "content" : "... and as I see, my patch would be comparable with (more readable? more obvious?) https://github.com/libarchive/libarchive/commit/f93e32f4a2e4b67b05d9042346439c169c03a39d\r\n",
            "published" : "2015-02-06T15:39:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I'm going to close this as a duplicate of Issue 327.",
            "published" : "2015-02-07T20:27:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Duplicate",
              "mergedInto" : "327"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 402,
        "title" : "Invalid read / heap-buffer-overflow on malformed lzh/lha files",
        "summary" : "Invalid read / heap-buffer-overflow on malformed lzh/lha files",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-07T21:55:02.000Z",
        "published" : "2015-02-07T10:48:28.000Z",
        "closed" : "2015-02-07T21:55:02.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "Attached file will expose an invalid read access in bsdtar. Can be seen with address sanitizer or valgrind.\r\n\r\nbsdtar -xf bsdtar-invalid-read.lzh\r\n\r\nVersion: git head 78e5fd4e8756b6c23c310d7c11722f663383b39c\r\n\r\nasan backtrace:\r\n==8312==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300000ef4f at pc 0x560ded bp 0x7fff051276b0 sp 0x7fff051276a0\r\nREAD of size 1 at 0x60300000ef4f thread T0\r\n    #0 0x560dec in lha_read_file_extended_header libarchive/archive_read_support_format_lha.c:1216\r\n    #1 0x566316 in lha_read_file_header_2 libarchive/archive_read_support_format_lha.c:995\r\n    #2 0x566316 in archive_read_format_lha_read_header libarchive/archive_read_support_format_lha.c:577\r\n    #3 0x46c4d2 in _archive_read_next_header2 libarchive/archive_read.c:645\r\n    #4 0x46c4d2 in _archive_read_next_header libarchive/archive_read.c:685\r\n    #5 0x41b0b2 in read_archive tar/read.c:252\r\n    #6 0x41d243 in tar_mode_x tar/read.c:104\r\n    #7 0x40d78f in main tar/bsdtar.c:805\r\n    #8 0x7fdde6856f9f in __libc_start_main (/lib64/libc.so.6+0x1ff9f)\r\n    #9 0x412d81 (/mnt/ram/libarchive/bsdtar+0x412d81)\r\n",
            "published" : "2015-02-07T10:48:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4020000000",
              "fileName" : "bsdtar-invalid-read.lzh",
              "fileSize" : 29,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "4020000001",
              "fileName" : "bsdtar-invalid-read.lzh.asan.txt",
              "fileSize" : 2867,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This should be fixed in git commit e8a2e4d\r\n\r\nThanks for all your help identifying these problems!\r\n",
            "published" : "2015-02-07T21:55:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 403,
        "title" : "Malformed ar file causes invalid read / stack underflow",
        "summary" : "Malformed ar file causes invalid read / stack underflow",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-07T20:51:42.000Z",
        "published" : "2015-02-07T11:14:08.000Z",
        "closed" : "2015-02-07T20:51:42.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "bsdtar -xf bsdtar-invalid-read-stack.a\r\nwill segfault.\r\n\r\nAddress Sanitizer trace:\r\n==30882==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffff58ae12f at pc 0x4df51b bp 0x7ffff58ae0d0 sp 0x7ffff58ae0c0\r\nREAD of size 1 at 0x7ffff58ae12f thread T0\r\n    #0 0x4df51a in _ar_read_header libarchive/archive_read_support_format_ar.c:242\r\n    #1 0x4df51a in archive_read_format_ar_read_header libarchive/archive_read_support_format_ar.c:437\r\n    #2 0x46c4d2 in _archive_read_next_header2 libarchive/archive_read.c:645\r\n    #3 0x46c4d2 in _archive_read_next_header libarchive/archive_read.c:685\r\n    #4 0x41b0b2 in read_archive tar/read.c:252\r\n    #5 0x41d243 in tar_mode_x tar/read.c:104\r\n    #6 0x40d78f in main tar/bsdtar.c:805\r\n    #7 0x7fe341554f9f in __libc_start_main (/lib64/libc.so.6+0x1ff9f)\r\n    #8 0x412d81 (/mnt/ram/libarchive/bsdtar+0x412d81)\r\n\r\nFull asan output attached.",
            "published" : "2015-02-07T11:14:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4030000000",
              "fileName" : "bsdtar-invalid-read-stack.a",
              "fileSize" : 128,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "4030000001",
              "fileName" : "bsdtar-invalid-read-stack.a.asan.txt",
              "fileSize" : 2852,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is completely fixed in git commit 97f964e.\r\n\r\nWhile I was looking at this code, I also tightened up some other error checks around filename parsing.\r\n",
            "published" : "2015-02-07T20:51:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 404,
        "title" : "malformed mtree file causes invalid read access",
        "summary" : "malformed mtree file causes invalid read access",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-07T21:03:39.000Z",
        "published" : "2015-02-07T11:30:42.000Z",
        "closed" : "2015-02-07T21:03:39.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "Attached file will cause an invalid read access in bsdtar. Can be seen with address sanitizer.\r\n\r\n==30629==ERROR: AddressSanitizer: global-buffer-overflow on address 0x000000847ce2 at pc 0x43a436 bp 0x7fff284b4830 sp 0x7fff284b4820\r\nREAD of size 6 at 0x000000847ce2 thread T0\r\n    #0 0x43a435 in ae_strtofflags libarchive/archive_entry.c:1753\r\n    #1 0x43a435 in archive_entry_copy_fflags_text libarchive/archive_entry.c:808\r\n    #2 0x577450 in parse_keyword libarchive/archive_read_support_format_mtree.c:1474\r\n    #3 0x5795d4 in parse_line libarchive/archive_read_support_format_mtree.c:1315\r\n    #4 0x5795d4 in parse_file libarchive/archive_read_support_format_mtree.c:1094\r\n    #5 0x5795d4 in read_header libarchive/archive_read_support_format_mtree.c:1061\r\n    #6 0x46c4d2 in _archive_read_next_header2 libarchive/archive_read.c:645\r\n    #7 0x46c4d2 in _archive_read_next_header libarchive/archive_read.c:685\r\n    #8 0x41b0b2 in read_archive tar/read.c:252\r\n    #9 0x41d243 in tar_mode_x tar/read.c:104\r\n    #10 0x40d78f in main tar/bsdtar.c:805\r\n    #11 0x7f6795838f9f in __libc_start_main (/lib64/libc.so.6+0x1ff9f)\r\n    #12 0x412d81 (/mnt/ram/libarchive/bsdtar+0x412d81)\r\n\r\nWill attach full asan output. Found with american fuzzy lop.",
            "published" : "2015-02-07T11:30:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4040000000",
              "fileName" : "invalid-read-overflow.mtree",
              "fileSize" : 22,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "4040000001",
              "fileName" : "invalid-read-overflow.mtree.asan.txt",
              "fileSize" : 2878,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is completely fixed by git commit 1cbc76f\r\n\r\nThanks for your help!\r\n",
            "published" : "2015-02-07T21:03:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 405,
        "title" : "segfault / null ptr access on malformed 7z file",
        "summary" : "segfault / null ptr access on malformed 7z file",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-08T21:44:18.000Z",
        "published" : "2015-02-07T22:31:40.000Z",
        "closed" : "2015-02-08T21:44:18.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "bsdtar will segfault due to a null pointer access in the attached malformed 7z file. Found with american fuzzy lop.\r\n\r\nlibarchive/archive_read_support_format_7zip.c:2054:7: runtime error: member access within null pointer of type 'struct _7z_folder'\r\nASAN:SIGSEGV\r\n=================================================================\r\n==14504==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000038 (pc 0x000000b7a538 sp 0x7fff8137ce50 bp 0x000000000007 T0)\r\n    #0 0xb7a537 in read_CodersInfo libarchive/archive_read_support_format_7zip.c:2054\r\n    #1 0xb7a537 in read_StreamsInfo libarchive/archive_read_support_format_7zip.c:2288\r\n    #2 0xb94a2c in read_Header libarchive/archive_read_support_format_7zip.c:2377\r\n    #3 0xb94a2c in slurp_central_directory libarchive/archive_read_support_format_7zip.c:2907\r\n    #4 0xb94a2c in archive_read_format_7zip_read_header libarchive/archive_read_support_format_7zip.c:637\r\n    #5 0x4b5ffb in _archive_read_next_header2 libarchive/archive_read.c:645\r\n    #6 0x4b5ffb in _archive_read_next_header libarchive/archive_read.c:685\r\n    #7 0x42a422 in read_archive tar/read.c:252\r\n    #8 0x42d5f2 in tar_mode_x tar/read.c:104\r\n    #9 0x41469c in main tar/bsdtar.c:805\r\n    #10 0x7f1d78f07f9f in __libc_start_main (/lib64/libc.so.6+0x1ff9f)\r\n    #11 0x41a160 (/mnt/ram/libarchive/bsdtar+0x41a160)\r\n",
            "published" : "2015-02-07T22:31:40.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4050000000",
              "fileName" : "bsdtar-null-ptr.7z",
              "fileSize" : 52,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "4050000001",
              "fileName" : "bsdtar-null-ptr.7z.asan.txt",
              "fileSize" : 1375,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "This seems to be fixed in git commit d094dc.\r\n",
            "published" : "2015-02-08T21:44:18.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 406,
        "title" : "Segfault on malformed zip files",
        "summary" : "Segfault on malformed zip files",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-08T20:51:59.000Z",
        "published" : "2015-02-07T23:04:41.000Z",
        "closed" : "2015-02-08T20:51:59.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "I'm attaching these all to one bug, although I'm not sure if this is all the same bug. All three attached files will cause a segfault in the function process_extra. But the call traces are different.\r\nvariant3 doesn't segfault without address sanitizer.\r\n\r\nI've attached the crashing files and address sanitizer output. All found with american fuzzy lop.",
            "published" : "2015-02-07T23:04:41.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4060000000",
              "fileName" : "bsdtar-zip-crash-variant1.zip",
              "fileSize" : 62,
              "mimetype" : "application/zip"
            }, {
              "attachmentId" : "4060000001",
              "fileName" : "bsdtar-zip-crash-variant1.zip.asan.txt",
              "fileSize" : 1076,
              "mimetype" : "text/plain"
            }, {
              "attachmentId" : "4060000002",
              "fileName" : "bsdtar-zip-crash-variant2.zip",
              "fileSize" : 161,
              "mimetype" : "application/zip"
            }, {
              "attachmentId" : "4060000003",
              "fileName" : "bsdtar-zip-crash-variant2.zip.asan.txt",
              "fileSize" : 1074,
              "mimetype" : "text/plain"
            }, {
              "attachmentId" : "4060000004",
              "fileName" : "bsdtar-zip-crash-variant3.zip",
              "fileSize" : 161,
              "mimetype" : "application/zip"
            }, {
              "attachmentId" : "4060000005",
              "fileName" : "bsdtar-zip-crash-variant3.zip.asan.txt",
              "fileSize" : 1072,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is completely fixed in git commit 9e0689c\r\n\r\nThank you again for your help!\r\n",
            "published" : "2015-02-08T20:51:59.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 407,
        "title" : "malformed tar file causes heap read overflow",
        "summary" : "malformed tar file causes heap read overflow",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-21T17:38:58.000Z",
        "published" : "2015-02-09T00:21:38.000Z",
        "closed" : "2015-02-21T17:38:58.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "One more malformed tar file that causes an invalid memory access in bsdtar (latest git):\r\n\r\n==3220==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300000e9ac at pc 0x742282 bp 0x7fff35ba0fd0 sp 0x7fff35ba0fc0\r\nREAD of size 4 at 0x60300000e9ac thread T0\r\n    #0 0x742281 in archive_read_format_tar_read_header libarchive/archive_read_support_format_tar.c:520\r\n    #1 0x4b3c63 in _archive_read_next_header2 libarchive/archive_read.c:645\r\n    #2 0x4b3c63 in _archive_read_next_header libarchive/archive_read.c:685\r\n    #3 0x42a29a in read_archive tar/read.c:252\r\n    #4 0x42d6d2 in tar_mode_x tar/read.c:104\r\n    #5 0x414a3f in main tar/bsdtar.c:805\r\n    #6 0x7fdaeb660f9f in __libc_start_main (/lib64/libc.so.6+0x1ff9f)\r\n    #7 0x41a5cd (/mnt/ram/libarchive/bsdtar+0x41a5cd)\r\n",
            "published" : "2015-02-09T00:21:38.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4070000000",
              "fileName" : "tar-heap-overflow.tar",
              "fileSize" : 1536,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "4070000001",
              "fileName" : "tar-heap-overflow.tar.asan.txt",
              "fileSize" : 2697,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is fixed in\r\n\r\n[master bb9b157] Issue 407: Tar reader tries to examine last character of an empty filename\r\n",
            "published" : "2015-02-21T17:38:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 408,
        "title" : "Invalid read access on malformed mtree file in function read_mtree",
        "summary" : "Invalid read access on malformed mtree file in function read_mtree",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-21T19:14:14.000Z",
        "published" : "2015-02-10T08:14:31.000Z",
        "closed" : "2015-02-21T19:14:14.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "Attached malformed mtree file causes a invalid memory read access in bsdtar. Found with american fuzzy lop.\r\n\r\nREAD of size 3 at 0x60600000eede thread T0\r\n    #0 0x57f892 in memmove /usr/include/bits/string3.h:57\r\n    #1 0x57f892 in readline libarchive/archive_read_support_format_mtree.c:1976\r\n    #2 0x57f892 in read_mtree libarchive/archive_read_support_format_mtree.c:964\r\n    #3 0x57f892 in read_header libarchive/archive_read_support_format_mtree.c:1034\r\n    #4 0x46cb6c in _archive_read_next_header2 libarchive/archive_read.c:645\r\n    #5 0x46cb6c in _archive_read_next_header libarchive/archive_read.c:685\r\n    #6 0x41bf76 in read_archive tar/read.c:252\r\n    #7 0x41e09b in tar_mode_x tar/read.c:104\r\n    #8 0x40d433 in main tar/bsdtar.c:805\r\n    #9 0x7fc9bdd2ff9f in __libc_start_main (/lib64/libc.so.6+0x1ff9f)\r\n    #10 0x412d31 (/mnt/ram/libarchive/bsdtar+0x412d31)\r\n",
            "published" : "2015-02-10T08:14:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4080000000",
              "fileName" : "read_mtree.mtree",
              "fileSize" : 65,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "4080000001",
              "fileName" : "read_mtree.mtree.asan.txt",
              "fileSize" : 2682,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I believe this is fixed by\r\n\r\ncommit 1e18cbb71515a22b2a6f1eb4aaadea461929b834\r\nAuthor: Tim Kientzle <kientzle@acm.org>\r\nDate:   Sat Feb 21 10:37:48 2015 -0800\r\n\r\n    Issue 408: Fix escaped newline parsing\r\n",
            "published" : "2015-02-21T19:14:14.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 409,
        "title" : "memory leak in __archive_read_get_extract",
        "summary" : "memory leak in __archive_read_get_extract",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-02-14T04:23:13.000Z",
        "published" : "2015-02-13T19:36:08.000Z",
        "closed" : "2015-02-14T04:23:13.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "The latest git code of libarchive (not reproducible in latest release) has a memory leak. It seems the variable extract (line 100, archive_read_extract2.c) is never free'd.\r\n\r\nSeems to happen independent of the archive used, just bsdtar -xf on a random file.\r\n\r\nvalgrind output:\r\n==6850== HEAP SUMMARY:\r\n==6850==     in use at exit: 24 bytes in 1 blocks\r\n==6850==   total heap usage: 91 allocs, 90 frees, 133,036 bytes allocated\r\n==6850== \r\n==6850== 24 bytes in 1 blocks are definitely lost in loss record 1 of 1\r\n==6850==    at 0x4C29F80: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==6850==    by 0x416E1C: __archive_read_get_extract (archive_read_extract2.c:53)\r\n==6850==    by 0x417070: archive_read_extract_set_progress_callback (archive_read_extract2.c:100)\r\n==6850==    by 0x408425: read_archive (read.c:226)\r\n==6850==    by 0x408666: tar_mode_x (read.c:104)\r\n==6850==    by 0x4067B3: main (bsdtar.c:805)\r\n",
            "published" : "2015-02-13T19:36:08.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Thank you!\r\n\r\nI believe this is fixed in git commit d24e79e\r\n",
            "published" : "2015-02-14T04:23:13.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 410,
        "title" : "Segfault when unpacking invalid rar archive with bsdtar",
        "summary" : "Segfault when unpacking invalid rar archive with bsdtar",
        "stars" : 1,
        "starred" : false,
        "status" : "Fixed",
        "state" : "closed",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-03-04T04:45:54.000Z",
        "published" : "2015-02-13T20:05:02.000Z",
        "closed" : "2015-03-04T04:45:54.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 7,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "Attached file will cause a segfault in bsdtar. Latest git code.\r\n\r\nAddress Sanitizer output:\r\n\r\n==21177==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000003 (pc 0x7fa3390860ef bp 0x7fff1b3cff30 sp 0x7fff1b3cf1c8 T0)\r\n    #0 0x7fa3390860ee in crc32 (/lib64/libz.so.1+0x30ee)\r\n    #1 0x8db25b in read_data_compressed /mnt/ram/libarchive-asan/libarchive/archive_read_support_format_rar.c:2045:25\r\n    #2 0x8c14fd in archive_read_format_rar_read_data /mnt/ram/libarchive-asan/libarchive/archive_read_support_format_rar.c:1025:11\r\n    #3 0x5dc586 in _archive_read_data_block /mnt/ram/libarchive-asan/libarchive/archive_read.c:969:9\r\n    #4 0xae29a2 in archive_read_data_block /mnt/ram/libarchive-asan/libarchive/archive_virtual.c:161:10\r\n    #5 0x66080a in copy_data /mnt/ram/libarchive-asan/libarchive/archive_read_extract2.c:120:7\r\n    #6 0x65feb0 in archive_read_extract2 /mnt/ram/libarchive-asan/libarchive/archive_read_extract2.c:82:7\r\n    #7 0x4edcbf in read_archive /mnt/ram/libarchive-asan/tar/read.c:361:9\r\n    #8 0x4ef665 in tar_mode_x /mnt/ram/libarchive-asan/tar/read.c:104:2\r\n    #9 0x4d647f in main /mnt/ram/libarchive-asan/tar/bsdtar.c:805:3\r\n    #10 0x7fa3381cdf9f in __libc_start_main /var/tmp/portage/sys-libs/glibc-2.20-r1/work/glibc-2.20/csu/libc-start.c:289\r\n    #11 0x4c46ac in _start (/mnt/ram/libarchive-asan/bsdtar+0x4c46ac)\r\n\r\nFound with american fuzzy lop.",
            "published" : "2015-02-13T20:05:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4100000000",
              "fileName" : "segfault.rar",
              "fileSize" : 64,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "4100000001",
              "fileName" : "segfault.rar.asan.txt",
              "fileSize" : 1440,
              "mimetype" : "text/plain"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "What was the SHA1 of the git checkout you're using?\r\n\r\nI'm not reproducing it here, but I might not be running the same code.\r\n",
            "published" : "2015-02-14T04:35:42.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "Just re-tested with the very latest git code, still segfaults:\r\nd24e79e8f9547ae475a3a0c9516e079a14010838\r\n\r\n(and yesterday I tested it with yesterday's git head, which was:\r\nd094dc02905605ca514baf87855f026b9bf52f1f\r\n)",
            "published" : "2015-02-14T09:19:06.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I set a breakpoint at every call from the Rar code to the crc32() function.  At each call, the arguments look just fine.\r\n\r\nThis is on Mac OS X.  I'm going to try it on Linux and see if I can reproduce it there.\r\n",
            "published" : "2015-02-22T19:34:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 4,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "tim@kientzle.com",
              "htmlLink" : "https://code.google.com/u/111480963336027327802/"
            },
            "content" : "Installed Ubuntu 14.10 x86_64 into a VMWare VM and still do not see the crash.  I installed git and make but it's otherwise a standard install.  I checked out the latest git code and did the following:\r\n\r\n$ mkdir t\r\n$ cd t\r\n$ cmake ..\r\n$ make\r\n$ bin/bsdtar xvf segfault.rar\r\nx test: Write request too large\r\nbsdtar: Error exit delayed from previous errors.\r\n\r\nCan you provide me any other details about your environment or how you're running things that might help me reproduce this here?\r\n\r\nI'll try a 32-bit Ubuntu system as well to see if that makes a difference.",
            "published" : "2015-02-25T04:52:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 5,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "A-ha!  I finally reproduced the crash on 32-bit Ubuntu 14.10.\r\n",
            "published" : "2015-03-04T01:15:31.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 6,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Once I finally reproduced it, the fix seems fairly simple.  I believe this is fixed by git aab7393\r\n\r\nThank you so much for your help!\r\n\r\n",
            "published" : "2015-03-04T04:45:54.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate",
              "status" : "Fixed"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 411,
        "title" : "ISO and DEB (Debian Package).",
        "summary" : "ISO and DEB (Debian Package).",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "babam.yes",
          "htmlLink" : "https://code.google.com/u/104264523847067707915/"
        },
        "updated" : "2015-02-17T05:41:57.000Z",
        "published" : "2015-02-14T11:51:07.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 4,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "babam.yes",
              "htmlLink" : "https://code.google.com/u/104264523847067707915/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n<b>1.</b>\n<b>2.</b>\n<b>3.</b>\n\n<b>What is the expected output? What do you see instead?</b>\n\n\n<b>What version are you using?</b>\n\n3.1.2\n\n\n<b>On what operating system?</b>\n\nSlackware 14.1\n\n\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n\npre-packeged binary\n\n\n<b>What compiler or development environment (please include version)?</b>\n\n\n<b>Please provide any additional information below.</b>\n\nlibarchive not able to extract the ISO file and not be able to open a Debian package (.deb Format) and ISO files larger than 2Gb.\n",
            "published" : "2015-02-14T11:51:07.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "Can you provide us with a specific file that you had problems with?  Or a link to such a file?\r\n\r\n\r\n\r\n\r\n",
            "published" : "2015-02-16T05:11:39.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 2,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "babam.yes",
              "htmlLink" : "https://code.google.com/u/104264523847067707915/"
            },
            "content" : "1. When extracting ISO file using File-Roller 3.10.0 it will display a message \"An error occurred while extracting files.\" 'setting attribute time :: created not supported'\r\n\r\n2. When opening a Debian package (.deb) using File-Roller 3.10.0 it will display a message \"An error occurred while loading the archive '\r\n\r\n3. Using the File-Roller was unable to open the Windows 7 ISO file (2.4 GB, UDF File System).\r\n\r\nThanks.",
            "published" : "2015-02-16T13:00:00.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          }, {
            "id" : 3,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "The first error sounds like an issue with the File-Roller program.  That error message does not come from libarchive.\r\n\r\nI'm not familiar with the packaging format used by .deb files.  From information I've read, it sounds like their format has changed a few times.  Can you provide a link to a specific .deb file that you're trying to look at?\r\n\r\nLibarchive does not currently support UDF.  Please see Issue #27.\r\n",
            "published" : "2015-02-17T05:41:57.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 412,
        "title" : "Failure to build with Visual Studio 2008",
        "summary" : "Failure to build with Visual Studio 2008",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "pugach.yaroslav2",
          "htmlLink" : "https://code.google.com/u/115604272562977832245/"
        },
        "updated" : "2015-02-21T05:45:28.000Z",
        "published" : "2015-02-17T14:34:51.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 2,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "pugach.yaroslav2",
              "htmlLink" : "https://code.google.com/u/115604272562977832245/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. Run cmake-gui, open libarchive source, configure to use Visual Studio 9 generator.\r\n2. Leave all options by default and generate Visual Studio 2008 project.\r\n3. Open the generated solution file with Visual Studio 2008 and rebuild it.\r\n4. See a lot of compilation errors.\r\n\r\n\r\n<b>What version are you using?</b>\nlibarchive-3.1.2, cmake-3.1.3, visual studio 2008 SP1\r\n\r\n<b>On what operating system?</b>\nWindows 8.1 x64\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nThose installed with Visual Studio 2008 SP1.\r\n\r\nThe build log file is attached.",
            "published" : "2015-02-17T14:34:51.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4120000000",
              "fileName" : "BuildLog.htm",
              "fileSize" : 31078,
              "mimetype" : "text/html"
            } ]
          }, {
            "id" : 1,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "kientzle",
              "htmlLink" : "https://code.google.com/u/kientzle@gmail.com/"
            },
            "content" : "I just pushed fixes for most of these warnings.\r\n\r\nI still need to research the issue with the bcrypt macros, though.\r\n",
            "published" : "2015-02-21T05:45:28.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 413,
        "title" : "Invalid read in function copy_from_lzss_window() when unpacking malformed rar",
        "summary" : "Invalid read in function copy_from_lzss_window() when unpacking malformed rar",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-03-05T09:37:02.000Z",
        "published" : "2015-03-05T09:37:02.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "Attached file will cause an invalid read access in the function copy_from_lzss_window(). This can be seen with address sanitizer or valgrind.\r\n\r\nFound with american fuzzy lop.\r\n\r\nAddress Sanitizer crash dump:\r\n==30812==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000ed74 at pc 0x00000048f530 bp 0x7fffaf958c70 sp 0x7fffaf958430\r\nREAD of size 48 at 0x60200000ed74 thread T0\r\n    #0 0x48f52f in __asan_memcpy (/mnt/ram/libarchive-master/bsdtar+0x48f52f)\r\n    #1 0x624619 in copy_from_lzss_window /mnt/ram/libarchive-master/libarchive/archive_read_support_format_rar.c:2888:7\r\n    #2 0x61ddfd in read_data_compressed /mnt/ram/libarchive-master/libarchive/archive_read_support_format_rar.c:2029:11\r\n    #3 0x61ddfd in archive_read_format_rar_read_data /mnt/ram/libarchive-master/libarchive/archive_read_support_format_rar.c:1025\r\n    #4 0x5223cd in _archive_read_data_block /mnt/ram/libarchive-master/libarchive/archive_read.c:969:9\r\n    #5 0x6c7d03 in archive_read_data_block /mnt/ram/libarchive-master/libarchive/archive_virtual.c:161:10\r\n    #6 0x54a542 in copy_data /mnt/ram/libarchive-master/libarchive/archive_read_extract2.c:139:7\r\n    #7 0x54a542 in archive_read_extract2 /mnt/ram/libarchive-master/libarchive/archive_read_extract2.c:101\r\n    #8 0x4d2931 in read_archive /mnt/ram/libarchive-master/tar/read.c:361:9\r\n    #9 0x4d3a83 in tar_mode_x /mnt/ram/libarchive-master/tar/read.c:104:2\r\n    #10 0x4c8d94 in main /mnt/ram/libarchive-master/tar/bsdtar.c:805:3\r\n    #11 0x7fd53b4abf9f in __libc_start_main /var/tmp/portage/sys-libs/glibc-2.20-r2/work/glibc-2.20/csu/libc-start.c:289\r\n    #12 0x4c412c in _start (/mnt/ram/libarchive-master/bsdtar+0x4c412c)\r\n\r\n0x60200000ed74 is located 0 bytes to the right of 4-byte region [0x60200000ed70,0x60200000ed74)\r\nallocated by thread T0 here:\r\n    #0 0x4a6d8e in realloc (/mnt/ram/libarchive-master/bsdtar+0x4a6d8e)\r\n    #1 0x62726f in parse_codes /mnt/ram/libarchive-master/libarchive/archive_read_support_format_rar.c:2295:18\r\n    #2 0x617ea1 in read_data_compressed /mnt/ram/libarchive-master/libarchive/archive_read_support_format_rar.c:1921:41\r\n    #3 0x617ea1 in archive_read_format_rar_read_data /mnt/ram/libarchive-master/libarchive/archive_read_support_format_rar.c:1025\r\n    #4 0x5223cd in _archive_read_data_block /mnt/ram/libarchive-master/libarchive/archive_read.c:969:9\r\n    #5 0x4d2931 in read_archive /mnt/ram/libarchive-master/tar/read.c:361:9\r\n    #6 0x4d3a83 in tar_mode_x /mnt/ram/libarchive-master/tar/read.c:104:2\r\n    #7 0x4c8d94 in main /mnt/ram/libarchive-master/tar/bsdtar.c:805:3\r\n    #8 0x7fd53b4abf9f in __libc_start_main /var/tmp/portage/sys-libs/glibc-2.20-r2/work/glibc-2.20/csu/libc-start.c:289\r\n",
            "published" : "2015-03-05T09:37:02.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4130000000",
              "fileName" : "bsdtar-invalid-read.rar",
              "fileSize" : 63,
              "mimetype" : "application/octet-stream"
            }, {
              "attachmentId" : "4130000001",
              "fileName" : "bsdtar-invalid-read.rar.asan.txt",
              "fileSize" : 3940,
              "mimetype" : "text/plain"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 414,
        "title" : "Malformed ISO file hangs bsdtar",
        "summary" : "Malformed ISO file hangs bsdtar",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-03-05T13:15:27.000Z",
        "published" : "2015-03-05T13:15:27.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "Attached file will cause an endless (or at least very long) loop in bsdtar. It's a malformed iso file.\r\n\r\nFound with american fuzzy lop.",
            "published" : "2015-03-05T13:15:27.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4140000000",
              "fileName" : "hang.iso",
              "fileSize" : 51264,
              "mimetype" : "application/octet-stream"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 415,
        "title" : "Invalid memory read on zip file in function trad_enc_decrypt_update() after entering empty password",
        "summary" : "Invalid memory read on zip file in function trad_enc_decrypt_update() after entering empty password",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "hanno@hboeck.de",
          "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
        },
        "updated" : "2015-03-06T11:03:58.000Z",
        "published" : "2015-03-06T11:03:58.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "hanno@hboeck.de",
              "htmlLink" : "https://code.google.com/u/hanno@hboeck.de/"
            },
            "content" : "bsdtar will detect the attached zip file as password protected. When entering nothing (just press enter) it will cause an invalid memory read access.\r\n\r\nFound with american fuzzy lop.\r\n\r\n==27792==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x631000010800 at pc 0x6169dd bp 0x7ffff41b2ef0 sp 0x7ffff41b2ee0\r\nREAD of size 1 at 0x631000010800 thread T0\r\n    #0 0x6169dc in trad_enc_decrypt_update libarchive/archive_read_support_format_zip.c:251\r\n    #1 0x6169dc in zip_read_data_none libarchive/archive_read_support_format_zip.c:1159\r\n    #2 0x6169dc in archive_read_format_zip_read_data libarchive/archive_read_support_format_zip.c:1797\r\n    #3 0x4a342d in copy_data libarchive/archive_read_extract2.c:139\r\n    #4 0x4a342d in archive_read_extract2 libarchive/archive_read_extract2.c:101\r\n    #5 0x41c088 in read_archive tar/read.c:361\r\n    #6 0x41d3ab in tar_mode_x tar/read.c:104\r\n    #7 0x40d4d9 in main tar/bsdtar.c:805\r\n    #8 0x7f83a55e6f9f in __libc_start_main (/lib64/libc.so.6+0x1ff9f)\r\n    #9 0x412d3c (/data/fuzzretest/bsdtar+0x412d3c)\r\n\r\n0x631000010800 is located 0 bytes to the right of 65536-byte region [0x631000000800,0x631000010800)\r\nallocated by thread T0 here:\r\n    #0 0x7f83a70cf6f7 in malloc (/usr/lib/gcc/x86_64-pc-linux-gnu/4.9.2/libasan.so.1+0x576f7)\r\n    #1 0x4a648c in file_open libarchive/archive_read_open_filename.c:358\r\n",
            "published" : "2015-03-06T11:03:58.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4150000000",
              "fileName" : "pwcrash.zip",
              "fileSize" : 176,
              "mimetype" : "application/zip"
            }, {
              "attachmentId" : "4150000001",
              "fileName" : "pwcrash.zip.asan.txt",
              "fileSize" : 2692,
              "mimetype" : "text/plain"
            } ]
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 416,
        "title" : "CAB decompression doesn't always work ",
        "summary" : "CAB decompression doesn't always work ",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "thierryb@filewave.com",
          "htmlLink" : "https://code.google.com/u/106556843621018335062/"
        },
        "updated" : "2015-03-11T10:43:20.000Z",
        "published" : "2015-03-11T10:43:20.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "thierryb@filewave.com",
              "htmlLink" : "https://code.google.com/u/106556843621018335062/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. download http://download.windowsupdate.com/microsoftupdate/v6/wsusscan/wsusscn2.cab\r\n2.extract files from that archive =&gt; Error LZX Decompression failed (-25)\r\n\r\n<b>What is the expected output? What do you see instead?</b>\nError message\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nOSX, Windows and Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\non Unix:\r\nconfigure --enable-shared=NO --prefix=$PREFIX --without-xml2 --without-expat --without-lzma --without-lzmadec --without-iconv --libdir=$LIB_OUTPUT_PATH --bindir=$BIN_OUTPUT_PATH $ADD_PARAMS --disable-acl --includedir=$PREFIX/include/libarchive\r\n\r\non Windows: cmake\r\n\r\n\r\n<b>What compiler or development environment (please include version)?</b>\nclang on apple, gcc 4.9.1 on linux and MSVC2013 on windows\r\n\r\n<b>Please provide any additional information below.</b>\n\r\nThat file is updated every week on Tuesday by MS and I had that kind of problem already (see issue #243)",
            "published" : "2015-03-11T10:43:20.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true
          } ]
        }
      }, {
        "kind" : "projecthosting#issue",
        "id" : 417,
        "title" : "make check (bsdtar_test) fail",
        "summary" : "make check (bsdtar_test) fail",
        "stars" : 1,
        "starred" : false,
        "status" : "New",
        "state" : "open",
        "labels" : [ "Type-Defect", "Priority-Medium", "OpSys-All" ],
        "author" : {
          "kind" : "projecthosting#issuePerson",
          "name" : "nephits",
          "htmlLink" : "https://code.google.com/u/nephits/"
        },
        "updated" : "2015-03-26T01:23:21.000Z",
        "published" : "2015-03-26T01:23:21.000Z",
        "projectId" : "libarchive",
        "canComment" : true,
        "canEdit" : true,
        "comments" : {
          "kind" : "projecthosting#issueCommentList",
          "totalResults" : 1,
          "items" : [ {
            "id" : 0,
            "kind" : "projecthosting#issueComment",
            "author" : {
              "kind" : "projecthosting#issuePerson",
              "name" : "nephits",
              "htmlLink" : "https://code.google.com/u/nephits/"
            },
            "content" : "<b>What steps will reproduce the problem?</b>\n1. ./configure --prefix=$HOME/var\r\n2. make\r\n3. make check\r\n\r\n\r\n<b>What version are you using?</b>\n3.1.2\r\n\r\n<b>On what operating system?</b>\nCentOS 6.6(Final)\r\nLinux 2.6.32-431.17.1.el6.i686 #1 SMP Wed May 7 20:52:21 UTC 2014 i686 i686 i386 GNU/Linux\r\n\r\n<b>How did you build?  (cmake, configure, or pre-packaged binary)</b>\n./configure --prefix=$HOME/var &amp;&amp; make &amp;&amp; make check\r\n\r\n<b>What compiler or development environment (please include version)?</b>\ngcc 4.8.2\r\n",
            "published" : "2015-03-26T01:23:21.000Z",
            "updates" : {
              "kind" : "projecthosting#issueCommentUpdate"
            },
            "canDelete" : true,
            "attachments" : [ {
              "attachmentId" : "4170000000",
              "fileName" : "fail.tbz",
              "fileSize" : 42481,
              "mimetype" : "application/octet-stream"
            } ]
          } ]
        }
      } ]
    }
  } ]
}