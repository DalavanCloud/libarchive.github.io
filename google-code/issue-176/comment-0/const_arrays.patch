Index: cpio/test/test_owner_parse.c
===================================================================
--- cpio/test/test_owner_parse.c	(revision 3665)
+++ cpio/test/test_owner_parse.c	(working copy)
@@ -30,8 +30,8 @@
 
 #if !defined(_WIN32)
 #define ROOT "root"
-static int root_uids[] = { 0 };
-static int root_gids[] = { 0, 1 };
+static const int root_uids[] = { 0 };
+static const int root_gids[] = { 0, 1 };
 #elif defined(__CYGWIN__)
 /* On cygwin, the Administrator user most likely exists (unless
  * it has been renamed or is in a non-English localization), but
@@ -42,13 +42,13 @@
  *       Use CreateWellKnownSID() and LookupAccountName()?
  */
 #define ROOT "Administrator"
-static int root_uids[] = { 500 };
-static int root_gids[] = { 513, 545, 544 };
+static const int root_uids[] = { 500 };
+static const int root_gids[] = { 513, 545, 544 };
 #endif
 
 #if defined(ROOT)
 static int
-int_in_list(int i, int *l, size_t n)
+int_in_list(int i, const int *l, size_t n)
 {
 	while (n-- > 0)
 		if (*l++ == i)
Index: libarchive/archive_string.c
===================================================================
--- libarchive/archive_string.c	(revision 3665)
+++ libarchive/archive_string.c	(working copy)
@@ -2326,7 +2326,7 @@
 static int
 _utf8_to_unicode(uint32_t *pwc, const char *s, size_t n)
 {
-	static char utf8_count[256] = {
+	static const char utf8_count[256] = {
 		 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/* 00 - 0F */
 		 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/* 10 - 1F */
 		 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/* 20 - 2F */
Index: libarchive/archive_write_add_filter_compress.c
===================================================================
--- libarchive/archive_write_add_filter_compress.c	(revision 3665)
+++ libarchive/archive_write_add_filter_compress.c	(working copy)
@@ -215,7 +215,7 @@
  * code in turn.  When the buffer fills up empty it and start over.
  */
 
-static unsigned char rmask[9] =
+static const unsigned char rmask[9] =
 	{0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f, 0x3f, 0x7f, 0xff};
 
 static int
Index: libarchive/test/main.c
===================================================================
--- libarchive/test/main.c	(revision 3665)
+++ libarchive/test/main.c	(working copy)
@@ -441,7 +441,7 @@
 static int
 _utf8_to_unicode(uint32_t *pwc, const char *s, size_t n)
 {
-	static char utf8_count[256] = {
+	static const char utf8_count[256] = {
 		 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/* 00 - 0F */
 		 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/* 10 - 1F */
 		 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,/* 20 - 2F */
Index: libarchive/archive_read_support_format_lha.c
===================================================================
--- libarchive/archive_read_support_format_lha.c	(revision 3665)
+++ libarchive/archive_read_support_format_lha.c	(working copy)
@@ -1209,7 +1209,7 @@
 			if (datasize >= 2) {
 				lha->header_crc = archive_le16dec(extdheader);
 				if (crc != NULL) {
-					static char zeros[2] = {0, 0};
+					static const char zeros[2] = {0, 0};
 					*crc = lha_crc16(*crc, h,
 					    extdsize - datasize);
 					/* CRC value itself as zero */
Index: libarchive/archive_read_support_format_cab.c
===================================================================
--- libarchive/archive_read_support_format_cab.c	(revision 3665)
+++ libarchive/archive_read_support_format_cab.c	(working copy)
@@ -138,7 +138,7 @@
 	int			 error;
 };
 
-static int slots[] = {
+static const int slots[] = {
 	30, 32, 34, 36, 38, 42, 50, 66, 98, 162, 290
 };
 #define SLOT_BASE	15
@@ -190,7 +190,7 @@
 #define CFDATA_cbData		4
 #define CFDATA_cbUncomp		6
 
-static char *compression_name[] = {
+static const char *compression_name[] = {
 	"NONE",
 	"MSZIP",
 	"Quantum",
