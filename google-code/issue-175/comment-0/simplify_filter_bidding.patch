Index: libarchive/archive_read_support_filter_xz.c
===================================================================
--- libarchive/archive_read_support_filter_xz.c	(revision 3662)
+++ libarchive/archive_read_support_filter_xz.c	(working copy)
@@ -229,7 +229,6 @@
 {
 	const unsigned char *buffer;
 	ssize_t avail;
-	int bits_checked;
 
 	(void)self; /* UNUSED */
 
@@ -240,27 +239,10 @@
 	/*
 	 * Verify Header Magic Bytes : FD 37 7A 58 5A 00
 	 */
-	bits_checked = 0;
-	if (buffer[0] != 0xFD)
+	if (memcmp(buffer, "\xFD\x37\x7A\x58\x5A\x00", 6) != 0)
 		return (0);
-	bits_checked += 8;
-	if (buffer[1] != 0x37)
-		return (0);
-	bits_checked += 8;
-	if (buffer[2] != 0x7A)
-		return (0);
-	bits_checked += 8;
-	if (buffer[3] != 0x58)
-		return (0);
-	bits_checked += 8;
-	if (buffer[4] != 0x5A)
-		return (0);
-	bits_checked += 8;
-	if (buffer[5] != 0x00)
-		return (0);
-	bits_checked += 8;
 
-	return (bits_checked);
+	return (48);
 }
 
 /*
@@ -398,18 +380,9 @@
 	 * Verify Header Magic Bytes : 4C 5A 49 50 (`LZIP')
 	 */
 	bits_checked = 0;
-	if (buffer[0] != 0x4C)
+	if (memcmp(buffer, "LZIP", 4) != 0)
 		return (0);
-	bits_checked += 8;
-	if (buffer[1] != 0x5A)
-		return (0);
-	bits_checked += 8;
-	if (buffer[2] != 0x49)
-		return (0);
-	bits_checked += 8;
-	if (buffer[3] != 0x50)
-		return (0);
-	bits_checked += 8;
+	bits_checked += 32;
 
 	/* A version number must be 0 or 1 */
 	if (buffer[4] != 0 && buffer[4] != 1)
Index: libarchive/archive_read_support_filter_bzip2.c
===================================================================
--- libarchive/archive_read_support_filter_bzip2.c	(revision 3662)
+++ libarchive/archive_read_support_filter_bzip2.c	(working copy)
@@ -136,7 +136,7 @@
 
 	/* First three bytes must be "BZh" */
 	bits_checked = 0;
-	if (buffer[0] != 'B' || buffer[1] != 'Z' || buffer[2] != 'h')
+	if (memcmp(buffer, "BZh", 3) != 0)
 		return (0);
 	bits_checked += 24;
 
Index: libarchive/archive_read_support_filter_compress.c
===================================================================
--- libarchive/archive_read_support_filter_compress.c	(revision 3662)
+++ libarchive/archive_read_support_filter_compress.c	(working copy)
@@ -190,14 +190,10 @@
 		return (0);
 
 	bits_checked = 0;
-	if (buffer[0] != 037)	/* Verify first ID byte. */
+	if (buffer[0] != 0x1F || buffer[1] != 0x9D)
 		return (0);
-	bits_checked += 8;
+	bits_checked += 16;
 
-	if (buffer[1] != 0235)	/* Verify second ID byte. */
-		return (0);
-	bits_checked += 8;
-
 	/*
 	 * TODO: Verify more.
 	 */
Index: libarchive/archive_read_support_filter_gzip.c
===================================================================
--- libarchive/archive_read_support_filter_gzip.c	(revision 3662)
+++ libarchive/archive_read_support_filter_gzip.c	(working copy)
@@ -135,15 +135,10 @@
 	p = __archive_read_filter_ahead(filter, len, &avail);
 	if (p == NULL || avail == 0)
 		return (0);
-	if (p[0] != 037)
+	/* We only support deflation- third byte must be 0x08. */
+	if (memcmp(p, "\x1F\x8B\x08", 3) != 0)
 		return (0);
-	bits += 8;
-	if (p[1] != 0213)
-		return (0);
-	bits += 8;
-	if (p[2] != 8) /* We only support deflation. */
-		return (0);
-	bits += 8;
+	bits += 24;
 	if ((p[3] & 0xE0)!= 0)	/* No reserved flags set. */
 		return (0);
 	bits += 3;
Index: libarchive/archive_read_support_filter_rpm.c
===================================================================
--- libarchive/archive_read_support_filter_rpm.c	(revision 3662)
+++ libarchive/archive_read_support_filter_rpm.c	(working copy)
@@ -108,20 +108,11 @@
 
 	bits_checked = 0;
 	/*
-	 * Verify Header Magic Bytes : 0xed 0xab 0xee 0xdb
+	 * Verify Header Magic Bytes : 0XED 0XAB 0XEE 0XDB
 	 */
-	if (b[0] != 0xed)
+	if (memcmp(b, "\xED\xAB\xEE\xDB", 4) != 0)
 		return (0);
-	bits_checked += 8;
-	if (b[1] != 0xab)
-		return (0);
-	bits_checked += 8;
-	if (b[2] != 0xee)
-		return (0);
-	bits_checked += 8;
-	if (b[3] != 0xdb)
-		return (0);
-	bits_checked += 8;
+	bits_checked += 32;
 	/*
 	 * Check major version.
 	 */
