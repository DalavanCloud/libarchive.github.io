Index: cpio/test/test.h
===================================================================
--- cpio/test/test.h	(revision 1550)
+++ cpio/test/test.h	(working copy)
@@ -101,6 +101,12 @@
 # define NLINKS_INACCURATE_FOR_DIRS
 #endif
 
+/* Haiku OS */
+#if defined(__HAIKU__)
+/* Haiku has typedefs in stdint.h (needed for int64_t) */
+#include <stdint.h>
+#endif
+
 /* FreeBSD */
 #ifdef __FreeBSD__
 #include <sys/cdefs.h>  /* For __FBSDID */
Index: libarchive/archive_windows.h
===================================================================
--- libarchive/archive_windows.h	(revision 1550)
+++ libarchive/archive_windows.h	(working copy)
@@ -89,11 +89,6 @@
 #endif
 #endif
 
-/* Replacement for major/minor/makedev. */
-#define	major(x) ((int)(0x00ff & ((x) >> 8)))
-#define	minor(x) ((int)(0xffff00ff & (x)))
-#define	makedev(maj,min) ((0xff00 & ((maj)<<8))|(0xffff00ff & (min)))
-
 /* Alias the Windows _function to the POSIX equivalent. */
 #define	access		_access
 #define	chdir		__la_chdir
Index: libarchive/test/main.c
===================================================================
--- libarchive/test/main.c	(revision 1550)
+++ libarchive/test/main.c	(working copy)
@@ -956,8 +956,11 @@
 #else
 	filet_nsec = nsec = 0;	/* Generic POSIX only has whole seconds. */
 	if (type == 'b') return (1); /* Generic POSIX doesn't have birthtime */
+#if defined(__HAIKU__)
+	if (type == 'a') return (1); /* Haiku doesn't have atime. */
 #endif
 #endif
+#endif
 	if (recent) {
 		/* Check that requested time is up-to-date. */
 		time_t now = time(NULL);
Index: libarchive/test/test_read_disk.c
===================================================================
--- libarchive/test/test_read_disk.c	(revision 1550)
+++ libarchive/test/test_read_disk.c	(working copy)
@@ -111,8 +111,10 @@
 	if (archive_read_disk_set_standard_lookup(a) != ARCHIVE_OK) {
 		skipping("standard uname/gname lookup");
 	} else {
-#if defined(__CYGWIN__)
-		skipping("standard uname/gname lookup; typically no user with uid=0 on cygwin platform");
+#if defined(__CYGWIN__) || defined(__HAIKU__)
+		/* Some platforms don't have predictable names for
+		 * uid=0, so we skip this part of the test. */
+		skipping("standard uname/gname lookup");
 		i = 0;
 		p = zero_groups[0]; /* avoid unused warnings */
 #else
Index: libarchive/test/test_write_disk_hardlink.c
===================================================================
--- libarchive/test/test_write_disk_hardlink.c	(revision 1550)
+++ libarchive/test/test_write_disk_hardlink.c	(working copy)
@@ -43,8 +43,8 @@
  */
 DEFINE_TEST(test_write_disk_hardlink)
 {
-#if ARCHIVE_VERSION_NUMBER < 1009000
-	skipping("archive_write_disk_hardlink tests");
+#if defined(__HAIKU__)
+	skipping("archive_write_disk_hardlink; hardlinks are not supported on bfs");
 #else
 	static const char data[]="abcdefghijklmnopqrstuvwxyz";
 	struct archive *ad;
@@ -178,11 +178,7 @@
 		assertEqualIntA(ad, 0, archive_write_finish_entry(ad));
 	}
 	archive_entry_free(ae);
-#if ARCHIVE_VERSION_NUMBER < 2000000
-	archive_write_finish(ad);
-#else
 	assertEqualInt(0, archive_write_finish(ad));
-#endif
 
 	/* Test the entries on disk. */
 
Index: libarchive/archive_entry.c
===================================================================
--- libarchive/archive_entry.c	(revision 1550)
+++ libarchive/archive_entry.c	(working copy)
@@ -32,13 +32,13 @@
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
-#ifdef MAJOR_IN_MKDEV
+#if MAJOR_IN_MKDEV
 #include <sys/mkdev.h>
-#else
-#ifdef MAJOR_IN_SYSMACROS
+#define HAVE_MAJOR
+#elif MAJOR_IN_SYSMACROS
 #include <sys/sysmacros.h>
+#define HAVE_MAJOR
 #endif
-#endif
 #ifdef HAVE_LIMITS_H
 #include <limits.h>
 #endif
@@ -75,6 +75,13 @@
 #undef max
 #define	max(a, b)	((a)>(b)?(a):(b))
 
+#if !defined(HAVE_MAJOR) && !defined(major)
+/* Replacement for major/minor/makedev. */
+#define	major(x) ((int)(0x00ff & ((x) >> 8)))
+#define	minor(x) ((int)(0xffff00ff & (x)))
+#define	makedev(maj,min) ((0xff00 & ((maj)<<8)) | (0xffff00ff & (min)))
+#endif
+
 /* Play games to come up with a suitable makedev() definition. */
 #ifdef __QNXNTO__
 /* QNX.  <sigh> */
Index: libarchive/archive_entry_xattr.c
===================================================================
--- libarchive/archive_entry_xattr.c	(revision 1550)
+++ libarchive/archive_entry_xattr.c	(working copy)
@@ -32,13 +32,6 @@
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
-#ifdef MAJOR_IN_MKDEV
-#include <sys/mkdev.h>
-#else
-#ifdef MAJOR_IN_SYSMACROS
-#include <sys/sysmacros.h>
-#endif
-#endif
 #ifdef HAVE_LIMITS_H
 #include <limits.h>
 #endif
