cmake_minimum_required(VERSION 2.8.2)
project(testhl)

IF (BUILD_SHARED_LIBS)
	ADD_DEFINITIONS(-DBUILD_SHARED_LIBS)
	ADD_DEFINITIONS(-DBOOST_ALL_DYN_LINK)
ENDIF (BUILD_SHARED_LIBS)
IF (MSVC)
	ADD_DEFINITIONS(-D_WIN32_WINNT=0x0500)
	IF (BUILD_SHARED_LIBS)
		SET(Boost_USE_STATIC_LIBS OFF)
		ADD_DEFINITIONS(-DWXUSINGDLL=1)
		IF (CMAKE_BUILD_TYPE MATCHES Debug)
			set(wxWidgets_CONFIGURATION "mswud")
		ELSE (CMAKE_BUILD_TYPE MATCHES Debug)
			set(wxWidgets_CONFIGURATION "mswu")
		ENDIF (CMAKE_BUILD_TYPE MATCHES Debug)
	ELSE (BUILD_SHARED_LIBS)
		SET(Boost_USE_STATIC_LIBS ON)
		SET(Boost_USE_STATIC_RUNTIME ON)
		IF (CMAKE_BUILD_TYPE MATCHES Debug)
			set(CMAKE_CXX_FLAGS_DEBUG "/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1")
			set(CMAKE_C_FLAGS_DEBUG "/D_DEBUG /MTd /Zi /Ob0 /Od /RTC1")
		ELSE (CMAKE_BUILD_TYPE MATCHES Debug)
			set(CMAKE_CXX_FLAGS_RELEASE "/MT /O2 /Ob2 /D NDEBUG")
			set(CMAKE_C_FLAGS_RELEASE "/MT /O2 /Ob2 /D NDEBUG")
		ENDIF (CMAKE_BUILD_TYPE MATCHES Debug)
		#ADD_DEFINITIONS(-DWXUSINGDLL=0)
		ADD_DEFINITIONS(-DwxWidgets_USE_STATIC)
	ENDIF (BUILD_SHARED_LIBS)
   ADD_DEFINITIONS(-DUNICODE)
ENDIF (MSVC)
ADD_DEFINITIONS(-DwxUSE_UNICODE=1)

IF (CMAKE_BUILD_TYPE MATCHES Debug)
	add_definitions(-D__WXDEBUG__)
ENDIF (CMAKE_BUILD_TYPE MATCHES Debug)
IF (UNIX)
	IF (CMAKE_BUILD_TYPE MATCHES Debug)
		set(wxWidgets_USE_DEBUG ON)
	ELSE (CMAKE_BUILD_TYPE MATCHES Debug)
		set(wxWidgets_USE_DEBUG OFF)
	ENDIF (CMAKE_BUILD_TYPE MATCHES Debug)
ENDIF (UNIX)

IF (NOT WIN32)
	set(FORCE_ANSI "-finput-charset=WINDOWS-1252")
ENDIF (NOT WIN32)

add_executable(test_hl test_hl.cpp)
set_target_properties(test_hl PROPERTIES COMPILE_FLAGS "${FORCE_ANSI}")
install(TARGETS test_hl RUNTIME DESTINATION bin LIBRARY DESTINATION lib)
