Only in libarchive-2.7.1/cpio/test: list.h
diff -rc libarchive-2.7.1/cpio/test/main.c libarchive-2.7.1-1/cpio/test/main.c
*** libarchive-2.7.1/cpio/test/main.c	2009-07-24 00:16:51.000000000 -0400
--- libarchive-2.7.1-1/cpio/test/main.c	2009-12-02 16:02:27.000000000 -0500
***************
*** 980,985 ****
--- 980,986 ----
  	const char *tmp, *opt_arg, *progname, *p;
  	char tmpdir[256];
  	char tmpdir_timestamp[256];
+ 	int c;
  
  	(void)argc; /* UNUSED */
  
***************
*** 1184,1190 ****
  
  	/* If the final tmpdir is empty, we can remove it. */
  	/* This should be the usual case when all tests succeed. */
! 	chdir("..");
  	rmdir(tmpdir);
  
  	return (tests_failed);
--- 1185,1191 ----
  
  	/* If the final tmpdir is empty, we can remove it. */
  	/* This should be the usual case when all tests succeed. */
! 	c = chdir("..");
  	rmdir(tmpdir);
  
  	return (tests_failed);
diff -rc libarchive-2.7.1/cpio/test/test_basic.c libarchive-2.7.1-1/cpio/test/test_basic.c
*** libarchive-2.7.1/cpio/test/test_basic.c	2009-04-08 03:09:28.000000000 -0400
--- libarchive-2.7.1-1/cpio/test/test_basic.c	2009-12-02 16:04:28.000000000 -0500
***************
*** 135,140 ****
--- 135,141 ----
      const char *se)
  {
  	int r;
+ 	int c;
  
  	if (!assertEqualInt(0, mkdir(target, 0775)))
  	    return;
***************
*** 145,151 ****
  	failure("Error invoking %s -o %s", testprog, pack_options);
  	assertEqualInt(r, 0);
  
! 	chdir(target);
  
  	/* Verify stderr. */
  	failure("Expected: %s, options=%s", se, pack_options);
--- 146,152 ----
  	failure("Error invoking %s -o %s", testprog, pack_options);
  	assertEqualInt(r, 0);
  
! 	c = chdir(target);
  
  	/* Verify stderr. */
  	failure("Expected: %s, options=%s", se, pack_options);
***************
*** 165,177 ****
  
  	verify_files(target);
  
! 	chdir("..");
  }
  
  static void
  passthrough(const char *target)
  {
  	int r;
  
  	if (!assertEqualInt(0, mkdir(target, 0775)))
  		return;
--- 166,179 ----
  
  	verify_files(target);
  
! 	c = chdir("..");
  }
  
  static void
  passthrough(const char *target)
  {
  	int r;
+ 	int c;
  
  	if (!assertEqualInt(0, mkdir(target, 0775)))
  		return;
***************
*** 184,190 ****
  	failure("Error invoking %s -p", testprog);
  	assertEqualInt(r, 0);
  
! 	chdir(target);
  
  	/* Verify stderr. */
  	failure("Error invoking %s -p in dir %s",
--- 186,192 ----
  	failure("Error invoking %s -p", testprog);
  	assertEqualInt(r, 0);
  
! 	c = chdir(target);
  
  	/* Verify stderr. */
  	failure("Error invoking %s -p in dir %s",
***************
*** 192,198 ****
  	assertTextFileContents("1 block\n", "stderr");
  
  	verify_files(target);
! 	chdir("..");
  }
  
  DEFINE_TEST(test_basic)
--- 194,200 ----
  	assertTextFileContents("1 block\n", "stderr");
  
  	verify_files(target);
! 	c = chdir("..");
  }
  
  DEFINE_TEST(test_basic)
***************
*** 200,205 ****
--- 202,208 ----
  	int fd;
  	int filelist;
  	int oldumask;
+ 	int c;
  
  	oldumask = umask(0);
  
***************
*** 213,238 ****
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	write(filelist, "file\n", 5);
  
  	/* hardlink to above file. */
  	assertEqualInt(0, link("file", "linkfile"));
! 	write(filelist, "linkfile\n", 9);
  
  	/* Symlink to above file. */
  	assertEqualInt(0, symlink("file", "symlink"));
! 	write(filelist, "symlink\n", 8);
  
  	/* Another file with different permissions. */
  	fd = open("file2", O_CREAT | O_WRONLY, 0777);
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	write(filelist, "file2\n", 6);
  
  	/* Directory. */
  	assertEqualInt(0, mkdir("dir", 0775));
! 	write(filelist, "dir\n", 4);
  	/* All done. */
  	close(filelist);
  
--- 216,241 ----
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	c = write(filelist, "file\n", 5);
  
  	/* hardlink to above file. */
  	assertEqualInt(0, link("file", "linkfile"));
! 	c = write(filelist, "linkfile\n", 9);
  
  	/* Symlink to above file. */
  	assertEqualInt(0, symlink("file", "symlink"));
! 	c = write(filelist, "symlink\n", 8);
  
  	/* Another file with different permissions. */
  	fd = open("file2", O_CREAT | O_WRONLY, 0777);
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	c = write(filelist, "file2\n", 6);
  
  	/* Directory. */
  	assertEqualInt(0, mkdir("dir", 0775));
! 	c = write(filelist, "dir\n", 4);
  	/* All done. */
  	close(filelist);
  
diff -rc libarchive-2.7.1/cpio/test/test_gcpio_compat.c libarchive-2.7.1-1/cpio/test/test_gcpio_compat.c
*** libarchive-2.7.1/cpio/test/test_gcpio_compat.c	2009-07-20 00:43:12.000000000 -0400
--- libarchive-2.7.1-1/cpio/test/test_gcpio_compat.c	2009-12-02 16:05:44.000000000 -0500
***************
*** 33,42 ****
  	char buff[128];
  #endif
  	int r;
  
  	/* Create a work dir named after the file we're unpacking. */
  	assertEqualInt(0, mkdir(from, 0775));
! 	chdir(from);
  
  	/*
  	 * Use cpio to unpack the sample archive
--- 33,43 ----
  	char buff[128];
  #endif
  	int r;
+ 	int c;
  
  	/* Create a work dir named after the file we're unpacking. */
  	assertEqualInt(0, mkdir(from, 0775));
! 	c = chdir(from);
  
  	/*
  	 * Use cpio to unpack the sample archive
***************
*** 124,130 ****
  #endif
  	}
  
! 	chdir("..");
  }
  
  DEFINE_TEST(test_gcpio_compat)
--- 125,131 ----
  #endif
  	}
  
! 	c = chdir("..");
  }
  
  DEFINE_TEST(test_gcpio_compat)
diff -rc libarchive-2.7.1/cpio/test/test_option_L_upper.c libarchive-2.7.1-1/cpio/test/test_option_L_upper.c
*** libarchive-2.7.1/cpio/test/test_option_L_upper.c	2009-04-08 03:09:28.000000000 -0400
--- libarchive-2.7.1-1/cpio/test/test_option_L_upper.c	2009-12-02 16:06:35.000000000 -0500
***************
*** 36,41 ****
--- 36,42 ----
  	struct stat st;
  	int fd, filelist;
  	int r;
+ 	int c;
  
  	filelist = open("filelist", O_CREAT | O_WRONLY, 0644);
  
***************
*** 44,54 ****
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	write(filelist, "file\n", 5);
  
  	/* Symlink to above file. */
  	assertEqualInt(0, symlink("file", "symlink"));
! 	write(filelist, "symlink\n", 8);
  
  	close(filelist);
  
--- 45,55 ----
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	c = write(filelist, "file\n", 5);
  
  	/* Symlink to above file. */
  	assertEqualInt(0, symlink("file", "symlink"));
! 	c = write(filelist, "symlink\n", 8);
  
  	close(filelist);
  
diff -rc libarchive-2.7.1/cpio/test/test_passthrough_dotdot.c libarchive-2.7.1-1/cpio/test/test_passthrough_dotdot.c
*** libarchive-2.7.1/cpio/test/test_passthrough_dotdot.c	2009-04-08 03:09:28.000000000 -0400
--- libarchive-2.7.1-1/cpio/test/test_passthrough_dotdot.c	2009-12-02 16:07:26.000000000 -0500
***************
*** 35,40 ****
--- 35,41 ----
  	int fd, r;
  	int filelist;
  	int oldumask;
+ 	int c;
  
  	oldumask = umask(0);
  
***************
*** 47,60 ****
  	assertEqualInt(0, mkdir("dir", 0755));
  	assertEqualInt(0, chdir("dir"));
  
! 	write(filelist, ".\n", 2);
  
  	/* File with 10 bytes content. */
  	fd = open("file", O_CREAT | O_WRONLY, 0642);
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	write(filelist, "file\n", 5);
  
  	/* All done. */
  	close(filelist);
--- 48,61 ----
  	assertEqualInt(0, mkdir("dir", 0755));
  	assertEqualInt(0, chdir("dir"));
  
! 	c = write(filelist, ".\n", 2);
  
  	/* File with 10 bytes content. */
  	fd = open("file", O_CREAT | O_WRONLY, 0642);
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	c = write(filelist, "file\n", 5);
  
  	/* All done. */
  	close(filelist);
diff -rc libarchive-2.7.1/cpio/test/test_passthrough_reverse.c libarchive-2.7.1-1/cpio/test/test_passthrough_reverse.c
*** libarchive-2.7.1/cpio/test/test_passthrough_reverse.c	2009-04-08 03:09:28.000000000 -0400
--- libarchive-2.7.1-1/cpio/test/test_passthrough_reverse.c	2009-12-02 16:09:53.000000000 -0500
***************
*** 40,45 ****
--- 40,46 ----
  	int fd, r;
  	int filelist;
  	int oldumask;
+ 	int c;
  
  	oldumask = umask(0);
  
***************
*** 56,65 ****
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	write(filelist, "dir/file\n", 9);
  
  	/* Write dir last. */
! 	write(filelist, "dir\n", 4);
  
  	/* All done. */
  	close(filelist);
--- 57,66 ----
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
  	close(fd);
! 	c = write(filelist, "dir/file\n", 9);
  
  	/* Write dir last. */
! 	c = write(filelist, "dir\n", 4);
  
  	/* All done. */
  	close(filelist);
diff -rc libarchive-2.7.1/libarchive/archive_check_magic.c libarchive-2.7.1-1/libarchive/archive_check_magic.c
*** libarchive-2.7.1/libarchive/archive_check_magic.c	2009-04-08 03:09:26.000000000 -0400
--- libarchive-2.7.1-1/libarchive/archive_check_magic.c	2009-12-02 15:43:26.000000000 -0500
***************
*** 50,56 ****
  static void
  errmsg(const char *m)
  {
! 	write(2, m, strlen(m));
  }
  
  static void
--- 50,57 ----
  static void
  errmsg(const char *m)
  {
! 	int c;
! 	c = write(2, m, strlen(m));
  }
  
  static void
diff -rc libarchive-2.7.1/libarchive/archive_util.c libarchive-2.7.1-1/libarchive/archive_util.c
*** libarchive-2.7.1/libarchive/archive_util.c	2009-04-08 03:09:26.000000000 -0400
--- libarchive-2.7.1-1/libarchive/archive_util.c	2009-12-02 15:45:10.000000000 -0500
***************
*** 181,190 ****
  void
  __archive_errx(int retvalue, const char *msg)
  {
  	static const char *msg1 = "Fatal Internal Error in libarchive: ";
! 	write(2, msg1, strlen(msg1));
! 	write(2, msg, strlen(msg));
! 	write(2, "\n", 1);
  	exit(retvalue);
  }
  
--- 181,191 ----
  void
  __archive_errx(int retvalue, const char *msg)
  {
+ 	int c;
  	static const char *msg1 = "Fatal Internal Error in libarchive: ";
! 	c = write(2, msg1, strlen(msg1));
! 	c = write(2, msg, strlen(msg));
! 	c = write(2, "\n", 1);
  	exit(retvalue);
  }
  
diff -rc libarchive-2.7.1/libarchive/archive_write_disk.c libarchive-2.7.1-1/libarchive/archive_write_disk.c
*** libarchive-2.7.1/libarchive/archive_write_disk.c	2009-04-10 01:43:09.000000000 -0400
--- libarchive-2.7.1-1/libarchive/archive_write_disk.c	2009-12-02 15:46:45.000000000 -0500
***************
*** 328,333 ****
--- 328,334 ----
  	struct archive_write_disk *a = (struct archive_write_disk *)_a;
  	struct fixup_entry *fe;
  	int ret, r;
+ 	int c;
  
  	__archive_check_magic(&a->archive, ARCHIVE_WRITE_DISK_MAGIC,
  	    ARCHIVE_STATE_HEADER | ARCHIVE_STATE_DATA,
***************
*** 455,461 ****
  #ifdef HAVE_FCHDIR
  	/* If we changed directory above, restore it here. */
  	if (a->restore_pwd >= 0) {
! 		fchdir(a->restore_pwd);
  		close(a->restore_pwd);
  		a->restore_pwd = -1;
  	}
--- 456,462 ----
  #ifdef HAVE_FCHDIR
  	/* If we changed directory above, restore it here. */
  	if (a->restore_pwd >= 0) {
! 		c = fchdir(a->restore_pwd);
  		close(a->restore_pwd);
  		a->restore_pwd = -1;
  	}
diff -rc libarchive-2.7.1/libarchive/archive_write_set_format_pax.c libarchive-2.7.1-1/libarchive/archive_write_set_format_pax.c
*** libarchive-2.7.1/libarchive/archive_write_set_format_pax.c	2009-04-08 03:09:26.000000000 -0400
--- libarchive-2.7.1-1/libarchive/archive_write_set_format_pax.c	2009-12-02 15:48:25.000000000 -0500
***************
*** 417,422 ****
--- 417,423 ----
  	char ustarbuff[512];
  	char ustar_entry_name[256];
  	char pax_entry_name[256];
+ 	int c;
  
  	ret = ARCHIVE_OK;
  	need_extension = 0;
***************
*** 943,949 ****
  		if (r != 0) {
  			const char *msg = "archive_write_pax_header: "
  			    "'x' header failed?!  This can't happen.\n";
! 			write(2, msg, strlen(msg));
  			exit(1);
  		}
  		r = (a->compressor.write)(a, paxbuff, 512);
--- 944,950 ----
  		if (r != 0) {
  			const char *msg = "archive_write_pax_header: "
  			    "'x' header failed?!  This can't happen.\n";
! 			c = write(2, msg, strlen(msg));
  			exit(1);
  		}
  		r = (a->compressor.write)(a, paxbuff, 512);
Only in libarchive-2.7.1/libarchive/test: list.h
diff -rc libarchive-2.7.1/libarchive/test/main.c libarchive-2.7.1-1/libarchive/test/main.c
*** libarchive-2.7.1/libarchive/test/main.c	2009-07-24 01:27:49.000000000 -0400
--- libarchive-2.7.1-1/libarchive/test/main.c	2009-12-02 15:53:23.000000000 -0500
***************
*** 1015,1020 ****
--- 1015,1021 ----
  	char tmpdir_timestamp[256];
  
  	(void)argc; /* UNUSED */
+ 	int c;
  
  #if defined(_WIN32) && !defined(__CYGWIN__)
  	/* To stop to run the default invalid parameter handler. */
***************
*** 1212,1218 ****
  
  	/* If the final tmpdir is empty, we can remove it. */
  	/* This should be the usual case when all tests succeed. */
! 	chdir("..");
  	rmdir(tmpdir);
  
  	return (tests_failed);
--- 1213,1219 ----
  
  	/* If the final tmpdir is empty, we can remove it. */
  	/* This should be the usual case when all tests succeed. */
! 	c = chdir("..");
  	rmdir(tmpdir);
  
  	return (tests_failed);
diff -rc libarchive-2.7.1/libarchive/test/test_read_large.c libarchive-2.7.1-1/libarchive/test/test_read_large.c
*** libarchive-2.7.1/libarchive/test/test_read_large.c	2009-04-08 03:09:24.000000000 -0400
--- libarchive-2.7.1-1/libarchive/test/test_read_large.c	2009-12-02 15:54:17.000000000 -0500
***************
*** 38,43 ****
--- 38,44 ----
  	size_t used;
  	struct archive *a;
  	struct archive_entry *entry;
+ 	int c;
  
  	for (i = 0; i < sizeof(testdata); i++)
  		testdata[i] = (unsigned char)(rand());
***************
*** 86,92 ****
  	assertA(0 == archive_read_finish(a));
  #endif
  	tmpfilefd = open(tmpfilename, O_RDONLY);
! 	read(tmpfilefd, testdatacopy, sizeof(testdatacopy));
  	close(tmpfilefd);
  	assert(0 == memcmp(testdata, testdatacopy, sizeof(testdata)));
  
--- 87,93 ----
  	assertA(0 == archive_read_finish(a));
  #endif
  	tmpfilefd = open(tmpfilename, O_RDONLY);
! 	c = read(tmpfilefd, testdatacopy, sizeof(testdatacopy));
  	close(tmpfilefd);
  	assert(0 == memcmp(testdata, testdatacopy, sizeof(testdata)));
  
Only in libarchive-2.7.1/tar/test: list.h
diff -rc libarchive-2.7.1/tar/test/main.c libarchive-2.7.1-1/tar/test/main.c
*** libarchive-2.7.1/tar/test/main.c	2009-07-24 00:16:42.000000000 -0400
--- libarchive-2.7.1-1/tar/test/main.c	2009-12-02 15:56:49.000000000 -0500
***************
*** 912,917 ****
--- 912,918 ----
  	char tmpdir_timestamp[256];
  
  	(void)argc; /* UNUSED */
+ 	int c;
  
  #if defined(_WIN32) && !defined(__CYGWIN__)
  	/* Make sure open() function will be used with a binary mode. */
***************
*** 1125,1131 ****
  
  	/* If the final tmpdir is empty, we can remove it. */
  	/* This should be the usual case when all tests succeed. */
! 	chdir("..");
  	rmdir(tmpdir);
  
  	return (tests_failed);
--- 1126,1132 ----
  
  	/* If the final tmpdir is empty, we can remove it. */
  	/* This should be the usual case when all tests succeed. */
! 	c = chdir("..");
  	rmdir(tmpdir);
  
  	return (tests_failed);
diff -rc libarchive-2.7.1/tar/test/test_basic.c libarchive-2.7.1-1/tar/test/test_basic.c
*** libarchive-2.7.1/tar/test/test_basic.c	2009-04-08 03:09:11.000000000 -0400
--- libarchive-2.7.1-1/tar/test/test_basic.c	2009-12-02 15:59:11.000000000 -0500
***************
*** 35,40 ****
--- 35,41 ----
  	char buff[128];
  #endif
  	int r;
+ 	int c;
  
  	assertEqualInt(0, mkdir(target, 0775));
  
***************
*** 47,53 ****
  	failure("Error invoking %s cf -", testprog, pack_options);
  	assertEqualInt(r, 0);
  
! 	chdir(target);
  
  	/* Verify that nothing went to stderr. */
  	assertEmptyFile("pack.err");
--- 48,54 ----
  	failure("Error invoking %s cf -", testprog, pack_options);
  	assertEqualInt(r, 0);
  
! 	c = chdir(target);
  
  	/* Verify that nothing went to stderr. */
  	assertEmptyFile("pack.err");
***************
*** 132,138 ****
  #endif
  	}
  
! 	chdir("..");
  }
  
  DEFINE_TEST(test_basic)
--- 133,139 ----
  #endif
  	}
  
! 	c = chdir("..");
  }
  
  DEFINE_TEST(test_basic)
***************
*** 141,146 ****
--- 142,148 ----
  	int filelist;
  	int oldumask;
  	const char *flist;
+ 	int c;
  
  	oldumask = umask(0);
  
***************
*** 153,174 ****
  	fd = open("file", O_CREAT | O_WRONLY, 0644);
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
! 	close(fd);
! 	write(filelist, "file\n", 5);
  
  	/* hardlink to above file. */
  	assertEqualInt(0, link("file", "linkfile"));
! 	write(filelist, "linkfile\n", 9);
  
  	/* Symlink to above file. */
  	assertEqualInt(0, symlink("file", "symlink"));
! 	write(filelist, "symlink\n", 8);
  
  	/* Directory. */
  	assertEqualInt(0, mkdir("dir", 0775));
! 	write(filelist, "dir\n", 4);
  	/* All done. */
! 	close(filelist);
  
  #if !defined(_WIN32) || defined(__CYGWIN__)
  	flist = "filelist";
--- 155,176 ----
  	fd = open("file", O_CREAT | O_WRONLY, 0644);
  	assert(fd >= 0);
  	assertEqualInt(10, write(fd, "123456789", 10));
! 	c = close(fd);
! 	c = write(filelist, "file\n", 5);
  
  	/* hardlink to above file. */
  	assertEqualInt(0, link("file", "linkfile"));
! 	c = write(filelist, "linkfile\n", 9);
  
  	/* Symlink to above file. */
  	assertEqualInt(0, symlink("file", "symlink"));
! 	c = write(filelist, "symlink\n", 8);
  
  	/* Directory. */
  	assertEqualInt(0, mkdir("dir", 0775));
! 	c = write(filelist, "dir\n", 4);
  	/* All done. */
! 	c = close(filelist);
  
  #if !defined(_WIN32) || defined(__CYGWIN__)
  	flist = "filelist";
diff -rc libarchive-2.7.1/tar/test/test_copy.c libarchive-2.7.1-1/tar/test/test_copy.c
*** libarchive-2.7.1/tar/test/test_copy.c	2009-07-20 00:43:12.000000000 -0400
--- libarchive-2.7.1-1/tar/test/test_copy.c	2009-12-02 16:00:22.000000000 -0500
***************
*** 101,109 ****
  	int i;
  	int fd;
  	int LOOP_MAX;
  
  	assertEqualInt(0, mkdir("original", 0775));
! 	chdir("original");
  	LOOP_MAX = compute_loop_max();
  
  	assertEqualInt(0, mkdir("f", 0775));
--- 101,110 ----
  	int i;
  	int fd;
  	int LOOP_MAX;
+ 	int c;
  
  	assertEqualInt(0, mkdir("original", 0775));
! 	c = chdir("original");
  	LOOP_MAX = compute_loop_max();
  
  	assertEqualInt(0, mkdir("f", 0775));
***************
*** 149,155 ****
  		assertEqualInt(0, mkdir(buff, 0775));
  	}
  
! 	chdir("..");
  }
  
  #define LIMIT_NONE 0
--- 150,156 ----
  		assertEqualInt(0, mkdir(buff, 0775));
  	}
  
! 	c = chdir("..");
  }
  
  #define LIMIT_NONE 0
***************
*** 363,368 ****
--- 364,370 ----
  {
  	const char *target = "ustar";
  	int r;
+ 	int c;
  
  	/* NOTE: for proper operation on cygwin-1.5 and windows, the
  	 * length of the name of the directory below, "ustar", must be
***************
*** 397,405 ****
  	assertEmptyFile("unpack.err");
  	assertEmptyFile("unpack.out");
  
! 	chdir("original");
  	verify_tree(LIMIT_USTAR);
! 	chdir("../..");
  }
  
  DEFINE_TEST(test_copy)
--- 399,407 ----
  	assertEmptyFile("unpack.err");
  	assertEmptyFile("unpack.out");
  
! 	c = chdir("original");
  	verify_tree(LIMIT_USTAR);
! 	c = chdir("../..");
  }
  
  DEFINE_TEST(test_copy)
diff -rc libarchive-2.7.1/tar/test/test_stdio.c libarchive-2.7.1-1/tar/test/test_stdio.c
*** libarchive-2.7.1/tar/test/test_stdio.c	2009-04-08 03:09:11.000000000 -0400
--- libarchive-2.7.1-1/tar/test/test_stdio.c	2009-12-02 16:01:31.000000000 -0500
***************
*** 31,36 ****
--- 31,37 ----
  	int filelist;
  	int oldumask;
  	int r;
+ 	int c;
  
  	oldumask = umask(0);
  
***************
*** 41,53 ****
  	/* File */
  	fd = open("f", O_CREAT | O_WRONLY, 0644);
  	assert(fd >= 0);
! 	write(fd, "f\n", 2);
! 	close(fd);
! 	write(filelist, "f\n", 2);
  	/* Link to above file. */
  	assertEqualInt(0, link("f", "l"));
! 	write(filelist, "l\n", 2);
! 	close(filelist);
  
  	/*
  	 * Archive/dearchive with a variety of options, verifying
--- 42,54 ----
  	/* File */
  	fd = open("f", O_CREAT | O_WRONLY, 0644);
  	assert(fd >= 0);
! 	c = write(fd, "f\n", 2);
! 	c = close(fd);
! 	c = write(filelist, "f\n", 2);
  	/* Link to above file. */
  	assertEqualInt(0, link("f", "l"));
! 	c = write(filelist, "l\n", 2);
! 	c = close(filelist);
  
  	/*
  	 * Archive/dearchive with a variety of options, verifying
diff -rc libarchive-2.7.1/tar/tree.c libarchive-2.7.1-1/tar/tree.c
*** libarchive-2.7.1/tar/tree.c	2009-04-08 03:09:13.000000000 -0400
--- libarchive-2.7.1-1/tar/tree.c	2009-12-02 15:49:51.000000000 -0500
***************
*** 308,320 ****
  {
  	struct dirent *de = NULL;
  	int r;
  
  	/* If we're called again after a fatal error, that's an API
  	 * violation.  Just crash now. */
  	if (t->visit_type == TREE_ERROR_FATAL) {
  		const char *msg = "Unable to continue traversing"
  		    " directory heirarchy after a fatal error.";
! 		write(2, msg, strlen(msg));
  		*(int *)0 = 1; /* Deliberate SEGV; NULL pointer dereference. */
  		exit(1); /* In case the SEGV didn't work. */
  	}
--- 308,321 ----
  {
  	struct dirent *de = NULL;
  	int r;
+ 	int c;
  
  	/* If we're called again after a fatal error, that's an API
  	 * violation.  Just crash now. */
  	if (t->visit_type == TREE_ERROR_FATAL) {
  		const char *msg = "Unable to continue traversing"
  		    " directory heirarchy after a fatal error.";
! 		c = write(2, msg, strlen(msg));
  		*(int *)0 = 1; /* Deliberate SEGV; NULL pointer dereference. */
  		exit(1); /* In case the SEGV didn't work. */
  	}
***************
*** 579,584 ****
--- 580,587 ----
  void
  tree_close(struct tree *t)
  {
+ 	int c;
+ 
  	/* Release anything remaining in the stack. */
  	while (t->stack != NULL)
  		tree_pop(t);
***************
*** 587,593 ****
  	/* chdir() back to where we started. */
  #ifdef HAVE_FCHDIR
  	if (t->initialDirFd >= 0) {
! 		fchdir(t->initialDirFd);
  		close(t->initialDirFd);
  		t->initialDirFd = -1;
  	}
--- 590,596 ----
  	/* chdir() back to where we started. */
  #ifdef HAVE_FCHDIR
  	if (t->initialDirFd >= 0) {
! 		c = fchdir(t->initialDirFd);
  		close(t->initialDirFd);
  		t->initialDirFd = -1;
  	}
diff -rc libarchive-2.7.1/tar/util.c libarchive-2.7.1-1/tar/util.c
*** libarchive-2.7.1/tar/util.c	2009-04-08 03:09:13.000000000 -0400
--- libarchive-2.7.1-1/tar/util.c	2009-12-02 15:51:14.000000000 -0500
***************
*** 91,96 ****
--- 91,97 ----
  	int length;
  	va_list ap;
  	const char *p;
+ 	int c;
  	unsigned i;
  	wchar_t wc;
  	char try_wc;
***************
*** 125,131 ****
  
  	/* Note: mbrtowc() has a cleaner API, but mbtowc() seems a bit
  	 * more portable, so we use that here instead. */
! 	mbtowc(NULL, NULL, 0); /* Reset the shift state. */
  
  	/* Write data, expanding unprintable characters. */
  	p = fmtbuff;
--- 126,132 ----
  
  	/* Note: mbrtowc() has a cleaner API, but mbtowc() seems a bit
  	 * more portable, so we use that here instead. */
! 	c = mbtowc(NULL, NULL, 0); /* Reset the shift state. */
  
  	/* Write data, expanding unprintable characters. */
  	p = fmtbuff;
diff -rc libarchive-2.7.1/tar/write.c libarchive-2.7.1-1/tar/write.c
*** libarchive-2.7.1/tar/write.c	2009-04-08 03:09:13.000000000 -0400
--- libarchive-2.7.1-1/tar/write.c	2009-12-02 15:52:08.000000000 -0500
***************
*** 326,331 ****
--- 326,332 ----
  	memset(&archive_dir, 0, sizeof(archive_dir));
  
  	format = ARCHIVE_FORMAT_TAR_PAX_RESTRICTED;
+ 	int c;
  
  	/* Sanity-test some arguments and the file. */
  	test_for_append(bsdtar);
***************
*** 383,389 ****
  	} else
  		archive_write_set_bytes_per_block(a, DEFAULT_BYTES_PER_BLOCK);
  	lseek(bsdtar->fd, end_offset, SEEK_SET);
! 	ftruncate(bsdtar->fd, end_offset);
  	if (ARCHIVE_OK != archive_write_set_options(a, bsdtar->option_options))
  		bsdtar_errc(bsdtar, 1, 0, archive_error_string(a));
  	if (ARCHIVE_OK != archive_write_open_fd(a, bsdtar->fd))
--- 384,390 ----
  	} else
  		archive_write_set_bytes_per_block(a, DEFAULT_BYTES_PER_BLOCK);
  	lseek(bsdtar->fd, end_offset, SEEK_SET);
! 	c = ftruncate(bsdtar->fd, end_offset);
  	if (ARCHIVE_OK != archive_write_set_options(a, bsdtar->option_options))
  		bsdtar_errc(bsdtar, 1, 0, archive_error_string(a));
  	if (ARCHIVE_OK != archive_write_open_fd(a, bsdtar->fd))
